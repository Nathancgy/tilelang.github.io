Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 113, 116, 117, 118, 125], "packag": [0, 116], "subpackag": 0, "autotun": [0, 1, 118, 124], "modul": [0, 116], "content": [0, 73, 86, 125], "cach": [0, 1, 2, 22, 47, 60, 97, 112, 113, 117, 121], "submodul": [0, 92], "carver": [0, 1], "common": [0, 1, 12, 14, 18, 23, 109, 124], "contrib": [0, 1], "engin": [0, 1, 96, 125], "intrins": [0, 1, 16, 73, 86, 113, 117], "jit": [0, 1, 2, 44, 96, 112, 113, 124], "languag": [0, 1, 92, 103, 109, 112, 113, 124], "layout": [0, 1, 13, 52, 86, 100, 101, 113, 117, 118], "math": [0, 1, 86], "primit": [0, 1, 80, 112, 113, 117, 118, 125], "profil": [0, 1, 2, 45, 56, 58, 60, 62, 67, 86, 103, 113, 125], "test": [0, 1, 2, 86, 109, 113, 116], "tool": [0, 1, 76, 78, 79, 112, 125], "transform": [0, 1, 13, 52, 71, 88, 89, 124, 125], "util": [0, 1, 3, 4, 5, 38, 40, 41, 45, 48, 54, 55, 56, 58, 60, 62, 69, 80, 96, 97, 109, 117], "env": [0, 1, 41, 54], "disable_cach": [0, 1, 47], "enable_cach": [0, 1, 47], "is_cache_en": [0, 1, 47], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "from_kernel": [1, 2, 124], "run": [1, 2, 76, 96, 97, 101, 113, 116, 117, 124, 125], "set_compile_arg": [1, 2, 124], "autotuneresult": [1, 2], "latenc": [1, 2, 112, 113, 117], "config": [1, 2, 112, 116, 124], "ref_lat": [1, 2], "libcod": [1, 2], "func": [1, 2, 3, 4, 6, 13, 16, 17, 18, 20, 27, 43, 44, 54, 55, 56, 67, 84, 96, 102, 113, 125], "kernel": [1, 2, 3, 4, 13, 28, 44, 45, 47, 54, 58, 60, 68, 71, 81, 96, 109, 112, 113, 117, 118, 124, 125], "jitcontext": [1, 2], "out_idx": [1, 2, 3, 4, 54, 67, 109, 112, 113, 124], "ref_prog": [1, 2, 112, 124], "supply_prog": [1, 2], "rtol": [1, 2, 96, 107, 113], "atol": [1, 2, 96, 107, 113], "max_mismatched_ratio": [1, 2, 96, 107], "skip_check": [1, 2, 112, 124], "cache_input_tensor": [1, 2], "target": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 17, 25, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 46, 54, 55, 57, 58, 59, 60, 63, 64, 65, 67, 86, 97, 101, 103, 109, 112, 113, 117, 124, 125], "check_tensor_list_compat": [1, 2], "kernel_cach": [1, 3], "kernelcach": [1, 3, 4], "clear_cach": [1, 3, 4], "arch": [1, 5, 18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 124], "roller": [1, 5, 30], "templat": [1, 5, 109, 124], "analysi": [1, 5, 13, 25, 101, 125], "blockinfo": [1, 5, 6, 12, 17], "iterinfo": [1, 5, 6], "check_func_with_dynam": [1, 5, 6], "collect_block_iter_vars_used_in_access_region": [1, 5, 6], "collect_vars_used_in_prim_expr": [1, 5, 6], "detect_dominant_read": [1, 5, 6], "find_var_from_func": [1, 5, 6], "get_coalesced_veclen": [1, 5, 6], "get_max_shared_memory_per_block": [1, 5, 6], "get_max_threads_per_block": [1, 5, 6], "get_reduction_block": [1, 5, 6], "get_root_block": [1, 5, 6], "is_broadcast_epilogu": [1, 5, 6], "normalize_prim_func": [1, 5, 6], "common_schedul": [1, 5], "get_block": [1, 5, 12], "get_output_block": [1, 5, 12], "try_inlin": [1, 5, 12], "try_inline_contiguous_spati": [1, 5, 12], "matmul_analysi": [1, 5], "iterkind": [1, 5, 13], "itertrait": [1, 5, 13], "auto_inline_consumer_chain": [1, 5, 13], "auto_inline_consum": [1, 5, 13], "auto_inline_produc": [1, 5, 13], "collect_vars_from_expr": [1, 5, 13], "detect_iter_trait": [1, 5, 13], "find_arg_idx_from_buffer_chain": [1, 5, 13], "find_first_similar_buff": [1, 5, 13], "find_first_similar_region": [1, 5, 13], "find_last_producer_from_buff": [1, 5, 13], "get_dequantize_block": [1, 5, 13], "get_in_out_dtyp": [1, 5, 13], "get_index_map": [1, 5, 13], "get_ladder_stage3_map": [1, 5, 13], "get_propagate_map": [1, 5, 13], "get_tensorized_func_and_tag": [1, 5, 13], "inline_transpose_block": [1, 5, 13], "is_identity_block": [1, 5, 13], "is_identity_or_transpose_block": [1, 5, 13], "is_transpose_block": [1, 5, 13], "layout_propagate_chain": [1, 5, 13], "make_iter_fusion_index_map": [1, 5, 13], "normalize_to_matmul": [1, 5, 13], "get_rasterization_cod": [1, 5, 34], "get_roller_hints_from_func": [1, 5, 34], "get_roller_hints_from_output_nod": [1, 5, 34], "retrieve_func_from_modul": [1, 5, 34, 103, 105], "transform_kind": [1, 35], "transformkind": [1, 35, 36, 52], "cc": [1, 37, 125], "create_execut": [1, 37, 38], "create_shar": [1, 37, 38], "create_staticlib": [1, 37, 38], "cross_compil": [1, 37, 38], "get_cc": [1, 37, 38], "get_cplus_compil": [1, 37, 38], "get_global_symbol_section_map": [1, 37, 38], "get_target_by_dump_machin": [1, 37, 38], "dlpack": [1, 3, 4, 37, 54, 55, 67], "convert_func": [1, 37, 39], "to_pytorch_func": [1, 37, 39], "hipcc": [1, 37], "compile_hip": [1, 37, 40], "nvcc": [1, 37, 125], "callback_libdevice_path": [1, 37, 41], "compile_cuda": [1, 37, 41], "find_cuda_path": [1, 37, 41], "get_cuda_vers": [1, 37, 41], "have_cudagraph": [1, 37, 41], "have_fp16": [1, 37, 41], "have_int8": [1, 37, 41], "have_tensorcor": [1, 37, 41], "parse_compute_vers": [1, 37, 41], "callback": [1, 42, 86], "register_cuda_postproc": [1, 42, 43], "register_cuda_postproc_callback": [1, 42, 43, 125], "register_hip_postproc": [1, 42, 43], "register_hip_postproc_callback": [1, 42, 43], "lower": [1, 42, 86, 88, 101, 113, 117, 125], "canon_target_host": [1, 42, 44], "device_codegen": [1, 42, 44], "device_codegen_without_compil": [1, 42, 44], "extrac_param": [1, 42, 44], "get_device_cal": [1, 42, 44], "get_host_cal": [1, 42, 44], "has_device_kernel_launch": [1, 42, 44], "host_codegen": [1, 42, 44], "is_cpu_device_backend": [1, 42, 44], "is_device_cal": [1, 42, 44, 125], "is_device_call_c_devic": [1, 42, 44], "param": [1, 4, 42, 54, 56, 58, 60, 62, 67, 86, 96, 121], "compiledartifact": [1, 42, 44, 45, 67], "kernelparam": [1, 42, 44, 45, 56, 60, 62, 67, 96], "phase": [1, 42, 112], "lowerandleg": [1, 42, 46], "optimizefortarget": [1, 42, 46], "mfma_layout": [1, 48], "make_mfma_swizzle_layout": [1, 48, 49], "shared_16x16_to_ldmatrix_64x4_layout": [1, 48, 49], "shared_16x16_to_local_64x4_layout_a": [1, 48, 49], "shared_16x16_to_local_64x4_layout_b": [1, 48, 49], "shared_16x16_to_local_64x4_layout_c": [1, 48, 49], "shared_16x32_to_local_64x8_layout_a": [1, 48, 49], "shared_16x32_to_local_64x8_layout_b": [1, 48, 49], "shared_16x4_to_local_64x1_layout_a": [1, 48, 49], "shared_4x16_to_local_64x1_layout_b": [1, 48, 49], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 48, 49], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 48, 49], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 48, 49], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 48, 49], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 48, 49], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 48, 49], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 48, 49], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 48, 49], "mfma_macro_gener": [1, 48], "matrixcoreintrinemitt": [1, 48, 50], "mma_layout": [1, 48], "get_swizzle_layout": [1, 48, 51], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 48, 51], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 48, 51], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 48, 51], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 48, 51], "ldmatrix_32x8_to_shared_16x16_layout": [1, 48, 51], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 48, 51], "make_mma_swizzle_layout": [1, 48, 51, 113], "mma_32x8_to_shared_16x16_layout": [1, 48, 51], "mma_store_32x8_to_shared_16x16_layout": [1, 48, 51], "shared_16x16_to_mma_32x8_layout": [1, 48, 51, 53], "shared_16x16_to_mma_32x8_layout_r": [1, 48, 51], "shared_16x16_to_mma_32x8_layout_sr": [1, 48, 51], "shared_16x16_to_mma_32x8_layout_tran": [1, 48, 51], "shared_16x16_to_mma_32x8_smoothlayout": [1, 48, 51], "shared_16x32_to_mma_32x16_layout": [1, 48, 51, 53], "shared_16x32_to_mma_32x16_smoothlayout": [1, 48, 51], "shared_32x16_to_mma_32x16_layout": [1, 48, 51, 53], "shared_32x16_to_mma_32x16_smoothlayout": [1, 48, 51], "mma_macro_gener": [1, 48], "int4tensorcoreintrinemitt": [1, 48, 52], "int4tensorcoreintrinemitterwithladdertransform": [1, 48, 52], "tensorcoreintrinemitt": [1, 48, 52, 95], "tensorcoreintrinemitterwithladdertransform": [1, 48, 52], "get_ldmatrix_offset": [1, 48, 53], "get_mma_micro_s": [1, 48, 53], "index_to_coordin": [1, 48, 53], "mfma_store_index_map": [1, 48, 53], "mma_store_index_map": [1, 48, 53], "adapt": [1, 54, 67, 96, 112], "jitkernel": [1, 3, 4, 54, 67], "compil": [1, 2, 3, 4, 38, 40, 41, 44, 45, 54, 58, 60, 67, 106, 112, 113, 118, 121, 125], "tir": [1, 6, 12, 13, 14, 23, 50, 52, 58, 60, 67, 68, 70, 71, 74, 75, 80, 81, 82, 94, 95, 125], "alloc": [1, 68, 70, 86, 109, 113, 121], "alloc_frag": [1, 68, 69, 109, 113, 117, 118], "alloc_loc": [1, 68, 69, 112], "alloc_shar": [1, 68, 69, 112, 113, 117, 118], "alloc_var": [1, 68, 69], "builtin": [1, 68], "createlistofmbarrierop": [1, 68, 70], "createtmadescriptorop": [1, 68, 70], "fenceproxyasyncop": [1, 68, 70], "getmbarrierop": [1, 68, 70], "mbarrierexpecttx": [1, 68, 70], "mbarrierwaitpar": [1, 68, 70], "nosetmaxnreg": [1, 68, 70], "setmaxnreg": [1, 68, 70], "tmaloadop": [1, 68, 70], "tmastorearr": [1, 68, 70], "tmastorewait": [1, 68, 70], "waitwgmma": [1, 68, 70], "copi": [1, 68, 86, 101, 109, 113, 116, 117, 118, 125], "buffer_load_to_tile_region": [1, 68, 71], "buffer_region_to_tile_region": [1, 68, 71], "buffer_to_tile_region": [1, 68, 71], "c2d_im2col": [1, 68, 71], "region": [1, 6, 13, 68, 71, 73, 121], "custom": [1, 68, 76, 107], "atomic_add": [1, 68, 72, 112], "atomic_addx2": [1, 68, 72], "clamp": [1, 68, 72], "dp4a": [1, 68, 72], "reshap": [1, 68, 72], "view": [1, 68, 72, 112], "fill": [1, 68, 86, 117, 118], "clear": [1, 3, 4, 68, 73, 75, 82, 97, 112, 113, 117, 118], "frame": [1, 68, 76, 78, 79, 85], "framestack": [1, 68, 74, 76], "letfram": [1, 68, 74], "get_let_valu": [1, 68, 74], "has_let_valu": [1, 68, 74], "gemm": [1, 6, 13, 68, 92, 112, 113, 117, 118, 124, 125], "kernellaunchfram": [1, 68, 76], "get_block_bind": [1, 68, 76], "get_thread_bind": [1, 68, 76, 112], "memscop": [1, 68], "parallel": [1, 20, 68, 83, 85, 86, 101, 109, 113, 117, 118, 124, 125], "pipelin": [1, 68, 113, 117, 118], "print": [1, 68, 74, 100, 113, 116], "proxi": [1, 68, 70], "basetensorproxi": [1, 68, 81], "bufferproxi": [1, 68, 81], "fragmentbufferproxi": [1, 68, 81], "localbufferproxi": [1, 68, 81], "sharedbufferproxi": [1, 68, 81], "tensorproxi": [1, 68, 81], "make_tensor": [1, 68, 81, 109], "ptr": [1, 68, 81, 86], "reduc": [1, 32, 68, 86, 88, 105, 109, 112, 117, 121], "reduce_abssum": [1, 68, 82], "reduce_max": [1, 68, 82, 118], "reduce_min": [1, 68, 82], "reduce_sum": [1, 68, 82, 118], "annotate_layout": [1, 68, 113], "import_sourc": [1, 68], "symbol": [1, 38, 68, 84, 86, 109], "use_swizzl": [1, 68, 113, 118], "fragment": [1, 52, 69, 81, 86, 87, 95, 101, 105, 113, 117, 121, 125], "make_swizzled_layout": [1, 87, 88, 90], "swizzl": [1, 87, 113], "cdiv": [1, 91], "next_power_of_2": [1, 91], "bench": [1, 96], "do_bench": [1, 96, 97, 113], "result_idx": [1, 56, 58, 60, 62, 96], "supply_typ": [1, 2, 96, 107, 112, 124], "assert_allclos": [1, 96], "assert_consist": [1, 96], "determine_profil": [1, 96], "run_onc": [1, 54, 67, 96], "with_default_adapt": [1, 96], "main": [1, 6, 81, 98, 109, 112, 113, 124, 125], "set_random_se": [1, 98], "plot_layout": [1, 99], "simplifi": [1, 13, 101, 112, 113, 116, 124, 125], "apply_simplifi": [1, 101, 102], "simplify_prim_func": [1, 101, 102], "annotatedeviceregion": [1, 101], "clusterplan": [1, 101], "frontendleg": [1, 101], "ifstmtbind": [1, 101], "injectfenceproxi": [1, 101], "injectptxasynccopi": [1, 101], "injectsoftwarepipelin": [1, 101], "layoutinfer": [1, 101], "legalizesafememoryaccess": [1, 101], "legalizevectorizedloop": [1, 101], "loopvectorizedynam": [1, 101], "lowerdevicestorageaccessinfo": [1, 101], "lowerhopperintrin": [1, 101], "lowertileop": [1, 101, 125], "makepackedapi": [1, 101], "mergeifstmt": [1, 101], "multiversionbuff": [1, 101], "pipelineplan": [1, 101], "rewritewgmmasync": [1, 101], "threadpartialsync": [1, 101], "threadsync": [1, 101], "vectorizeloop": [1, 101], "warpspeci": [1, 101], "warpspecializedpipelin": [1, 101], "deprec": [1, 103], "array_reduc": [1, 103, 105], "is_frag": [1, 103, 105], "is_glob": [1, 103, 105], "is_loc": [1, 103, 105], "is_shar": [1, 103, 105], "is_shared_dynam": [1, 103, 105], "check_cuda_avail": [1, 103, 106], "check_hip_avail": [1, 103, 106], "determine_target": [1, 103, 106], "tensor": [1, 2, 16, 19, 20, 21, 25, 29, 39, 45, 58, 60, 67, 70, 78, 81, 86, 95, 96, 97, 103, 109, 113, 125], "tensorsupplytyp": [1, 2, 67, 96, 103, 107, 112, 124], "adapt_torch2tvm": [1, 103, 107], "get_tensor_suppli": [1, 103, 107], "map_torch_typ": [1, 103, 107], "torch_assert_clos": [1, 103, 107], "class": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 45, 50, 52, 56, 58, 60, 61, 62, 63, 65, 67, 74, 76, 81, 88, 89, 94, 95, 96, 107, 117], "level": [1, 86, 109, 112, 113, 117, 118, 125], "0": [1, 2, 13, 16, 17, 36, 41, 50, 52, 65, 75, 76, 79, 80, 81, 86, 94, 95, 96, 97, 107, 109, 112, 113, 116, 121, 124, 125], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 45, 50, 52, 54, 55, 58, 60, 61, 62, 63, 65, 67, 74, 76, 81, 88, 89, 92, 93, 95, 96, 100, 107, 109, 113, 116, 118, 125], "handler": 1, "log": [1, 68, 83, 86], "direct": [1, 117], "output": [1, 2, 4, 12, 14, 17, 20, 21, 24, 27, 28, 33, 38, 40, 41, 54, 71, 75, 82, 86, 89, 96, 100, 112, 113, 116, 125], "tqdm": 1, "progress": [1, 117, 125], "bar": 1, "avoid": [1, 4], "interfer": 1, "record": 1, "messag": [1, 74, 80, 125], "ar": [1, 2, 6, 13, 20, 21, 28, 30, 33, 38, 52, 54, 74, 84, 86, 94, 96, 100, 107, 109, 112, 113, 117, 125], "written": [1, 109, 113], "ensur": [1, 109, 116], "isn": [1, 41], "t": [1, 4, 13, 41, 52, 69, 75, 84, 86, 100, 109, 112, 113, 116, 117, 118, 124], "corrupt": 1, "set": [1, 2, 6, 27, 28, 30, 31, 33, 38, 54, 69, 70, 73, 82, 86, 88, 89, 94, 109, 113, 116, 124], "": [1, 6, 13, 20, 26, 28, 29, 30, 31, 33, 69, 84, 86, 89, 109, 112, 113, 117, 121, 125], "logger": 1, "paramet": [1, 2, 4, 12, 13, 16, 20, 21, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 45, 52, 54, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 94, 95, 96, 97, 100, 101, 104, 105, 106, 109, 112], "str": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 43, 44, 45, 50, 51, 52, 54, 56, 58, 60, 63, 64, 65, 67, 68, 69, 71, 72, 76, 80, 81, 82, 85, 86, 95, 96, 100, 101, 104, 106, 107, 112], "int": [1, 2, 3, 4, 6, 11, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 45, 50, 52, 54, 56, 58, 60, 62, 64, 67, 68, 71, 75, 76, 78, 79, 82, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 105, 109, 112], "can": [1, 13, 38, 43, 54, 66, 67, 75, 76, 78, 80, 86, 109, 112, 113, 116, 117, 121, 124, 125], "string": [1, 38, 41, 54, 86, 106, 125], "name": [1, 5, 6, 11, 12, 17, 20, 21, 25, 68, 84, 86, 100, 104, 112, 125], "e": [1, 6, 13, 32, 41, 69, 86, 94, 96, 105, 109, 112, 113, 116, 117, 118, 121, 124, 125], "g": [1, 13, 32, 38, 41, 69, 94, 96, 105, 109, 112, 113, 116, 117, 118, 121, 124, 125], "info": [1, 66, 86], "actual": [1, 38, 109], "option": [1, 2, 3, 4, 6, 13, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 43, 44, 45, 50, 52, 54, 56, 58, 60, 63, 64, 65, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 93, 94, 95, 96, 97, 100, 107, 113, 116], "debug": [1, 80, 118], "warn": 1, "error": [1, 86, 125], "critic": [1, 112, 117], "The": [2, 3, 4, 6, 12, 13, 16, 20, 21, 27, 28, 29, 30, 31, 32, 33, 38, 40, 41, 43, 44, 45, 52, 54, 56, 58, 60, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 118, 121, 124, 125], "auto": [2, 3, 4, 13, 44, 54, 64, 67, 96, 103, 106, 107, 109, 112, 113, 118, 125], "tune": [2, 54, 112, 113, 117, 118, 125], "program": [2, 13, 44, 54, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 109, 112, 113, 118, 124], "thi": [2, 16, 20, 21, 27, 28, 30, 31, 33, 38, 52, 54, 58, 60, 66, 69, 74, 75, 78, 80, 81, 86, 88, 97, 101, 109, 112, 113, 116, 117, 121, 125], "provid": [2, 27, 39, 41, 54, 69, 74, 76, 80, 81, 86, 88, 89, 94, 95, 109, 113, 117, 124, 125], "function": [2, 4, 6, 13, 20, 21, 27, 29, 31, 38, 39, 41, 43, 52, 54, 58, 60, 67, 69, 74, 75, 80, 81, 84, 86, 95, 96, 97, 105, 107, 109, 113, 121, 125], "includ": [2, 4, 54, 80, 109, 113, 116, 117, 125], "perform": [2, 38, 70, 71, 72, 73, 75, 82, 86, 95, 97, 109, 112, 117, 118, 121, 125], "optim": [2, 20, 27, 28, 29, 30, 31, 33, 109, 112, 113, 117, 118, 121, 125], "through": [2, 113, 124, 125], "configur": [2, 16, 20, 21, 27, 28, 29, 30, 31, 32, 33, 70, 81, 109, 112, 113, 116], "search": [2, 112, 124], "fn": [2, 97], "callabl": [2, 38, 43, 44, 54, 56, 58, 60, 67, 84, 96, 97, 102], "object": [2, 4, 6, 8, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 38, 45, 50, 52, 54, 61, 63, 65, 67, 69, 74, 76, 80, 81, 86, 88, 89, 94, 95, 96, 100, 106, 117, 124], "tuner": [2, 113], "handl": [2, 58, 60, 70, 71, 72, 75, 76, 80, 81, 82, 86, 97, 109, 112, 113], "process": [2, 28, 43, 109, 112, 116, 117], "differ": [2, 69, 81, 86, 96, 109, 117, 124], "find": [2, 13, 25, 41, 116], "execut": [2, 38, 45, 54, 75, 80, 86, 96, 109, 117, 125], "list": [2, 3, 4, 6, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 44, 45, 54, 56, 58, 60, 62, 67, 70, 71, 72, 76, 79, 84, 86, 88, 89, 94, 96, 97, 105, 112, 124], "try": [2, 12, 60, 86, 101], "dure": [2, 86, 109, 112, 117, 125], "classmethod": [2, 16, 20, 45, 58, 60, 67, 74, 76, 94], "creat": [2, 38, 45, 52, 67, 70, 71, 78, 81, 86, 95, 113, 116], "an": [2, 27, 29, 36, 38, 45, 54, 67, 72, 73, 74, 76, 80, 84, 86, 88, 105, 107, 109, 112, 113, 117, 118, 125], "instanc": [2, 27, 45, 54, 67, 109, 125], "from": [2, 4, 12, 13, 20, 25, 38, 39, 41, 45, 54, 58, 60, 66, 67, 71, 74, 76, 81, 84, 86, 95, 105, 109, 112, 113, 117, 118, 121, 125], "return": [2, 4, 12, 13, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 45, 47, 52, 54, 58, 60, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 112, 113, 121, 124, 125], "A": [2, 13, 20, 21, 27, 28, 29, 30, 31, 32, 33, 38, 43, 52, 53, 54, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 86, 88, 89, 93, 94, 95, 96, 104, 109, 112, 113, 118, 121, 124, 125], "new": [2, 72, 81, 86, 88, 89, 104, 109, 116], "type": [2, 4, 12, 13, 20, 21, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 45, 52, 54, 60, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 94, 95, 96, 97, 100, 101, 102, 105, 106], "warmup": [2, 96, 97, 112, 124], "25": [2, 96, 97], "rep": [2, 96, 97, 112, 124], "100": [2, 96, 97], "timeout": [2, 63], "number": [2, 20, 21, 27, 28, 29, 30, 31, 32, 33, 41, 70, 75, 76, 79, 86, 88, 94, 96, 97, 107, 109, 112, 117, 121], "iter": [2, 5, 6, 13, 20, 78, 79, 85, 88, 89, 96, 97, 112], "repetit": [2, 96, 97], "time": [2, 84, 88, 96, 97, 112, 113, 116, 118], "maximum": [2, 20, 70, 72, 79, 85, 86, 96, 107, 117], "per": [2, 109, 112], "result": [2, 52, 75, 76, 82, 86, 95, 97, 101, 102, 109, 112, 113, 124, 125], "none": [2, 3, 4, 13, 15, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 43, 44, 45, 50, 52, 54, 56, 58, 60, 63, 64, 65, 67, 68, 71, 72, 74, 76, 78, 79, 81, 84, 85, 86, 88, 93, 94, 95, 96, 97, 98, 100, 112, 116, 124], "float": [2, 20, 41, 63, 86, 96, 97, 107, 109, 112, 113, 124, 125], "01": [2, 96, 107, 116], "bool": [2, 3, 4, 6, 9, 10, 11, 13, 16, 20, 21, 25, 27, 28, 30, 31, 33, 34, 43, 44, 45, 47, 50, 51, 52, 53, 54, 58, 60, 63, 64, 65, 67, 74, 75, 76, 81, 82, 84, 86, 88, 93, 94, 95, 97, 100, 101, 105, 106, 107], "fals": [2, 3, 4, 6, 13, 17, 20, 21, 27, 28, 30, 31, 33, 34, 40, 41, 43, 44, 45, 50, 51, 52, 53, 54, 58, 60, 67, 74, 75, 76, 81, 84, 86, 88, 93, 94, 95, 100, 105, 106, 107, 112, 124], "true": [2, 13, 17, 20, 21, 27, 31, 33, 43, 45, 50, 52, 63, 68, 74, 82, 84, 86, 88, 94, 97, 100, 101, 105, 106, 107, 112, 113, 124], "liter": [2, 3, 4, 6, 52, 53, 54, 64, 67, 86, 97, 106], "cuda": [2, 5, 7, 20, 41, 43, 58, 60, 86, 101, 106, 112, 113, 116, 117, 124, 125], "hip": [2, 40, 43, 65, 106, 113, 117], "argument": [2, 4, 54, 67, 70, 71, 84, 86, 88, 113], "indic": [2, 4, 6, 44, 52, 54, 58, 60, 76, 86, 88, 89, 96, 100, 104, 113, 125], "suppli": [2, 67, 96], "mechan": 2, "ignor": [2, 86], "i": [2, 6, 13, 16, 17, 20, 21, 22, 27, 29, 41, 44, 45, 49, 50, 51, 52, 53, 54, 66, 74, 76, 79, 80, 84, 86, 88, 94, 100, 104, 105, 106, 107, 109, 112, 113, 116, 117, 118, 121, 122, 124, 125], "refer": [2, 96, 109, 113, 117, 125], "valid": [2, 20, 21, 86, 96, 106, 113, 125], "input": [2, 14, 17, 28, 29, 30, 31, 33, 38, 43, 61, 67, 71, 72, 75, 80, 82, 86, 89, 95, 96, 113, 117], "rel": [2, 20, 86, 96, 107], "toler": [2, 96, 107], "absolut": [2, 82, 86, 96, 107], "allow": [2, 84, 86, 96, 107, 112, 113, 117, 118, 125], "mismatch": [2, 96, 107], "ratio": [2, 96, 107], "whether": [2, 6, 13, 27, 28, 33, 43, 44, 58, 60, 75, 76, 81, 82, 84, 86, 97, 106], "skip": [2, 76], "platform": [2, 4], "self": [2, 32], "method": [2, 20, 27, 28, 30, 31, 32, 33, 74, 76, 84, 94, 104, 109], "chain": 2, "dict": [2, 3, 4, 13, 16, 17, 20, 21, 24, 25, 28, 29, 30, 31, 33, 38, 54, 58, 60, 65, 67, 85], "best": [2, 117, 124], "achiev": [2, 112, 113], "produc": [2, 79, 86, 109, 112, 121, 125], "implement": [2, 20, 21, 27, 32, 44, 53, 74, 81, 96, 109, 117, 118, 121, 125], "gener": [2, 20, 21, 31, 43, 53, 75, 76, 80, 86, 95, 96, 109, 116, 117, 118], "librari": [2, 4, 38, 58, 60, 66, 67, 117, 118, 125], "code": [2, 4, 40, 41, 43, 45, 58, 60, 65, 67, 76, 86, 109, 112, 113, 116, 117, 124, 125], "context": [2, 20, 21, 113, 117], "just": [2, 109, 113, 118], "In": [2, 13, 109, 112, 113, 117, 118, 125], "correct": [2, 95, 113], "element": [2, 28, 29, 69, 72, 78, 86, 96, 107, 109, 112, 121], "check": [2, 6, 20, 21, 27, 44, 45, 74, 86, 94, 96, 105, 106, 109, 125], "each": [2, 20, 21, 22, 28, 38, 69, 109, 112, 113, 117, 121], "measur": [2, 38, 97, 113], "ani": [2, 17, 54, 58, 60, 65, 67, 68, 74, 80, 83, 85, 86, 94, 116], "decor": [2, 43, 54, 84, 104], "space": [2, 20, 28, 86, 88, 113, 117], "explor": [2, 109, 113, 124], "befor": [2, 33, 75, 76, 82, 109, 116, 125], "second": [2, 72, 75, 86, 107], "list1": 2, "torch": [2, 45, 56, 58, 60, 62, 96, 97, 103, 107, 112, 113, 125], "list2": 2, "two": [2, 20, 86, 107, 109, 125], "compat": [2, 67, 116], "1": [2, 13, 16, 20, 21, 29, 30, 36, 41, 50, 52, 53, 58, 60, 61, 75, 76, 86, 88, 93, 94, 95, 96, 107, 109, 112, 113, 117, 125], "have": [2, 44, 84, 86, 94, 95, 109, 112, 116, 117], "same": [2, 86, 95, 109, 117], "length": [2, 20, 121], "2": [2, 13, 20, 21, 36, 50, 52, 53, 58, 60, 76, 86, 94, 107, 109, 112, 113, 117, 121, 125], "correspond": [2, 76, 86, 89, 94, 109, 112, 117], "shape": [2, 11, 16, 17, 20, 21, 24, 25, 26, 29, 32, 42, 45, 53, 58, 60, 69, 72, 81, 86, 88, 89, 94, 101, 117, 121], "first": [2, 20, 21, 72, 75, 80, 82, 86, 88, 107, 109, 112, 117, 125], "databas": [3, 4, 67], "persist": [3, 4], "init": [3, 65, 86], "file": [3, 4, 38, 40, 41, 66, 67, 100, 116, 117, 125], "primfunc": [3, 4, 6, 13, 17, 20, 27, 34, 44, 54, 58, 60, 64, 67, 84, 86, 102, 105], "arg": [3, 4, 13, 25, 65, 70, 71, 84, 86, 107, 121], "union": [3, 4, 6, 7, 9, 11, 13, 32, 34, 38, 43, 44, 45, 51, 52, 54, 58, 60, 64, 67, 71, 72, 73, 75, 76, 84, 86, 97, 102, 106], "target_host": [3, 4, 44, 54, 64, 67], "execution_backend": [3, 4, 54, 67, 109], "ctype": [3, 4, 54, 55, 60, 67], "cython": [3, 4, 54, 55, 67, 109], "verbos": [3, 4, 40, 41, 54, 58, 60, 67, 100, 107], "pass_config": [3, 4, 54, 55, 57, 58, 59, 60, 65, 67], "reus": [3, 4], "kern": 3, "l": [3, 86], "us": [3, 4, 6, 12, 13, 16, 20, 21, 28, 29, 30, 31, 33, 38, 41, 43, 45, 52, 54, 58, 60, 66, 70, 74, 78, 79, 81, 84, 86, 88, 95, 96, 97, 100, 104, 109, 112, 113, 117, 121, 125], "entir": [3, 4, 71, 113, 117, 125], "cache_dir": 4, "home": 4, "leiwang": 4, "redund": [4, 20], "cu": 4, "sourc": [4, 25, 38, 39, 58, 60, 64, 65, 67, 68, 71, 86, 117, 118], "warpped_kernel": 4, "wrap": [4, 39, 55, 58, 60, 65, 67, 69, 87, 88, 89, 90, 101], "kernel_lib": 4, "so": [4, 109, 116], "pkl": 4, "prepar": [4, 113], "specifi": [4, 27, 32, 41, 54, 70, 71, 72, 73, 82, 84, 86, 94, 96, 106, 107, 109, 112, 113, 116], "which": [4, 20, 21, 28, 50, 52, 54, 70, 82, 86, 88, 95, 96, 109, 112, 113, 116, 117, 124, 125], "host": [4, 44, 45, 64, 67, 116], "pass": [4, 38, 41, 67, 70, 97, 101, 102, 113, 117, 125], "either": [4, 41, 73, 80, 121], "freshli": 4, "both": [4, 45, 80, 95, 109, 113], "memori": [4, 20, 21, 69, 70, 71, 81, 86, 95, 101, 105, 109, 112, 113, 118, 121, 125], "disk": 4, "arch_bas": [5, 7], "tiledevic": [5, 7, 8, 9, 10, 11, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34], "cdna": [5, 7, 27], "is_cdna_arch": [5, 7, 9, 26, 27], "cpu": [5, 7, 76, 113, 118, 124, 125], "is_cpu_arch": [5, 7, 10], "tensorinstruct": [5, 7, 11], "check_sm_vers": [5, 7, 11], "has_mma_support": [5, 7, 11], "is_ada_arch": [5, 7, 11], "is_ampere_arch": [5, 7, 11, 26, 27], "is_cuda_arch": [5, 7, 11], "is_hopper_arch": [5, 7, 11], "is_tensorcore_supported_precis": [5, 7, 11], "is_volta_arch": [5, 7, 11, 26, 27], "auto_infer_current_arch": [5, 7], "get_arch": [5, 7], "polici": [5, 14, 75, 93, 94, 95, 121], "shape_infer": [5, 14], "bestfit": [5, 14], "block": [5, 6, 12, 13, 14, 15, 17, 20, 25, 68, 76, 94, 95, 109, 112, 113, 117, 124], "hint": [5, 14, 20, 27, 28, 29, 30, 31, 32, 33, 34, 109, 113, 124], "intrininfo": [5, 14, 16], "stride": [5, 14, 16, 20, 21, 53, 71, 86], "tensorcoreextraconfig": [5, 14, 16], "tiledict": [5, 14, 16, 20, 21], "node": [5, 14, 16, 18, 20, 21, 25, 27, 30, 86, 89], "blockanalyz": [5, 14, 17], "edg": [5, 14, 17], "outputnod": [5, 14, 17, 20, 27, 30, 34], "placeholdernod": [5, 14, 17], "primfuncnod": [5, 14, 16, 17, 20, 21], "find_topo_sort": [5, 14, 17], "find_topo_sort_prior": [5, 14, 17], "pre_order_travers": [5, 14, 17], "topo_ord": [5, 14, 17], "raster": [5, 14, 20, 21, 113], "noraster": [5, 14, 22, 124], "rasterization2dcolumn": [5, 14, 22], "rasterization2drow": [5, 14, 22], "basetempl": [5, 26, 27, 28, 29, 30, 31, 32, 33], "conv": [5, 26], "convtempl": [5, 26, 28], "elementwis": [5, 6, 26, 118, 124], "elementwisetempl": [5, 26, 29], "flashattent": [5, 26, 118], "flashattentiontempl": [5, 26, 30], "gemv": [5, 6, 26, 118], "gemvtempl": [5, 26, 31], "general_reduc": [5, 26], "generalreductiontempl": [5, 26, 32], "matmul": [5, 13, 26, 113, 117, 124, 125], "matmultempl": [5, 26, 33, 124], "block_rv": [5, 6], "dom": [5, 6, 20, 21], "dom_kind": [5, 6], "is_elementwis": [5, 6], "is_gemm": [5, 6], "is_gemv": [5, 6], "is_inject": [5, 6], "is_reduct": [5, 6], "kind": [5, 6, 13], "loop_rv": [5, 6], "var": [5, 6, 45, 58, 60, 69, 73, 74, 75, 76, 81, 86], "kiter_i": [5, 13], "kiter_j": [5, 13], "kiter_k": [5, 13], "kiter_": [5, 13], "kiter_t": [5, 13], "extent": [5, 13, 20, 21, 71, 76, 78, 85, 86, 88], "infra": 5, "loop": [6, 78, 79, 85, 95, 101, 109, 113, 117, 121, 124], "blockrv": [6, 12, 13, 17, 25], "reduction_block": 6, "inform": [6, 16, 17, 45, 66, 100, 101], "about": [6, 86, 100, 117], "primexpr": [6, 13, 25, 50, 52, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 95], "domain": [6, 20, 21, 113, 118], "exampl": [6, 38, 84, 86, 94, 109, 112, 117, 121], "ssss": 6, "sssr": 6, "sch": [6, 12, 13, 17], "schedul": [6, 12, 13, 15, 16, 20, 21, 113, 124], "trivial": [6, 13], "map": [6, 13, 20, 21, 28, 38, 52, 74, 88, 89, 100, 109, 113, 117, 121, 124], "between": [6, 28, 71, 72, 79, 86, 97, 101, 109, 117, 121], "read": [6, 13, 71, 86, 101, 117, 118], "write": [6, 13, 71, 86, 101, 109, 112, 113, 117, 118, 121, 125], "workload": [6, 94], "inject": [6, 76], "all": [6, 13, 20, 21, 45, 64, 68, 76, 81, 83, 84, 86, 94, 101, 109, 112, 116, 121, 122], "its": [6, 20, 80, 84, 109], "reduct": [6, 13, 20, 21, 82, 86, 95, 121, 124], "r": [6, 71, 86], "o": 6, "looprv": 6, "properti": [6, 16, 17, 22, 27, 28, 29, 30, 31, 32, 33, 58, 60, 65, 67, 76, 88, 89, 94, 95, 96], "rang": [6, 72, 88, 113], "collect": [6, 122], "variabl": [6, 20, 21, 38, 45, 69, 70, 73, 74, 80, 81, 85, 86, 88, 89, 116, 121, 125], "access": [6, 70, 71, 86, 101, 109, 116, 117], "buffer": [6, 13, 17, 45, 52, 69, 71, 72, 73, 75, 79, 80, 81, 82, 86, 88, 90, 93, 94, 95, 100, 101, 105, 112, 113, 117, 121, 124, 125], "expr": [6, 13, 25, 81, 86], "detect": [6, 13, 52, 96, 106, 121], "domin": 6, "block_stmt": [6, 13], "target_bit": 6, "128": [6, 84, 109, 112, 113, 124, 125], "func_nam": [6, 86], "epilogu": 6, "broadcast": 6, "pattern": [6, 13, 86, 113, 117, 125], "normal": [6, 103, 107], "form": [6, 28, 30, 31, 33, 50, 52], "get_avaliable_tensorintrin_shap": [7, 8, 11], "repres": [8, 13, 20, 45, 50, 52, 76, 81, 88, 89, 94, 95, 117, 121], "architectur": [8, 20, 27, 28, 29, 30, 31, 32, 33, 40, 41, 113, 117], "comput": [8, 13, 16, 20, 21, 25, 28, 29, 30, 31, 32, 33, 41, 75, 81, 86, 88, 89, 94, 97, 109, 112, 113, 117, 118, 125], "devic": [8, 44, 45, 60, 64, 86, 101, 113, 117, 122], "captur": [8, 117], "variou": [8, 16, 20, 66, 75, 109, 113, 117], "hardwar": [8, 27, 28, 29, 30, 31, 32, 33, 113, 125], "specif": [8, 27, 81, 86, 96, 109, 113, 116, 117, 118, 125], "in_dtyp": [11, 16, 26, 28, 30, 31, 33, 93, 95, 109, 124], "accum_dtyp": [11, 26, 28, 30, 31, 33, 50, 52, 93, 95, 112, 113, 124, 125], "strategi": [12, 112, 124, 125], "get": [12, 13, 20, 38, 41, 60, 66, 74, 86, 88, 89, 112, 116, 125], "target_block": 12, "analyz": [12, 13, 23, 25, 109, 125], "output_block": 12, "inlin": [12, 113], "mani": [12, 112, 113], "possibl": [12, 20, 21], "remain": [12, 109], "cannot": [12, 71, 86], "block_info": 12, "contigu": 12, "spatial": [12, 13, 28, 32, 71], "rule": [13, 86], "gpu": [13, 40, 41, 76, 81, 116, 117, 118, 124, 125], "oper": [13, 29, 39, 45, 58, 60, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 86, 88, 105, 112, 113, 116, 117, 121, 124, 125], "valu": [13, 17, 28, 30, 31, 33, 36, 45, 72, 73, 74, 76, 79, 80, 81, 84, 85, 86, 94, 107, 109, 125], "enum": [13, 107], "like": [13, 68, 74, 76, 83, 84, 86, 109, 112, 113, 117, 125], "we": [13, 44, 76, 86, 109, 112, 113, 116, 117, 121, 125], "c": [13, 26, 28, 33, 38, 58, 60, 65, 72, 75, 76, 86, 93, 94, 95, 109, 112, 113, 116, 117, 121, 124, 125], "j": [13, 49, 51, 53, 109, 113, 116], "k": [13, 17, 26, 28, 30, 31, 33, 75, 86, 113, 124, 125], "b": [13, 29, 33, 52, 53, 72, 75, 84, 86, 91, 93, 94, 95, 109, 112, 113, 117, 121, 124], "where": [13, 29, 72, 75, 86, 88, 100, 109, 113, 125], "fundament": 13, "ax": [13, 14, 16, 20, 21, 32], "other": [13, 15, 20, 21, 39, 109, 112, 117, 121, 124, 125], "batch": [13, 28, 71], "3": [13, 36, 53, 58, 60, 76, 107, 112, 113, 121], "4": [13, 22, 53, 72, 94, 107, 112, 113, 116, 124, 125], "tvm": [13, 28, 29, 30, 31, 32, 33, 38, 39, 41, 45, 54, 58, 60, 64, 67, 69, 71, 73, 81, 84, 86, 94, 95, 96, 101, 102, 105, 113, 118, 125], "ir": [13, 58, 60, 64, 68, 81, 83, 95, 117, 125], "skip_block": 13, "prim_expr": 13, "tupl": [13, 16, 17, 20, 21, 25, 50, 52, 58, 60, 64, 69, 76, 81, 86, 94], "trait": 13, "doe": [13, 20, 21, 86, 109, 113], "match": [13, 75, 84, 113], "main_block": 13, "travers": [13, 109, 124], "index": [13, 53, 54, 86, 87, 88, 89, 117, 125], "bufferregion": [13, 71, 73, 121], "out": [13, 38, 52, 60, 82, 86, 112, 113, 121], "data": [13, 28, 29, 31, 33, 69, 71, 74, 81, 86, 88, 95, 109, 112, 113, 117, 118, 121, 122, 125], "given": [13, 16, 20, 21, 29, 54, 76, 81, 88, 89, 94, 96, 124], "indexmap": [13, 52], "n": [13, 19, 20, 26, 28, 30, 31, 33, 50, 52, 65, 86, 94, 109, 112, 113, 124, 125], "infer": [13, 20, 21, 23, 24, 25, 54, 94, 95, 101, 112, 113, 117, 121], "last": [13, 86, 112], "axi": [13, 16, 20, 21, 86, 112, 121], "index_map": 13, "dtype": [13, 17, 26, 29, 32, 42, 45, 51, 53, 58, 60, 68, 69, 72, 81, 86, 95, 107, 109, 112, 113, 121, 124, 125], "float16": [13, 28, 29, 30, 31, 32, 33, 50, 52, 53, 112, 113, 124, 125], "index_dtyp": 13, "int32": [13, 50, 52, 68, 69], "tran": [13, 86], "matrix_nam": 13, "skip_norm": 13, "allow_gemv": [13, 34], "necessari": [13, 45, 95, 112, 116, 117, 118], "conv2d": 13, "im2col": [13, 71], "start_block": 13, "start_buff": 13, "end_block": 13, "kind_ord": 13, "coalesced_factor": [14, 18, 19], "coalesced_tensor_shap": [14, 18, 19], "factor": [14, 18, 19, 20, 21, 81, 88, 94], "get_all_factor": [14, 18, 19], "default": [14, 18, 27, 29, 32, 38, 41, 43, 44, 67, 69, 71, 72, 75, 81, 82, 86, 100, 107, 113], "defaultpolici": [14, 18, 20, 21], "tensorcor": [14, 16, 18, 41], "tensorcorepolici": [14, 18, 21], "inputshapeinfer": [14, 23, 24, 25], "statement": [14, 23, 24, 25, 80, 85, 86, 121, 125], "dependencyanalysi": [14, 23, 25], "tensordepnod": [14, 23, 25], "get_analyzer_by_tir": [14, 23, 25], "region_exist_in_list": [14, 23, 25], "walk_indic": [14, 23, 25], "free": [14, 15, 86], "malloc": [14, 15], "merg": [14, 15], "size": [14, 15, 20, 21, 28, 71, 86, 88, 109, 113, 121], "complete_config": [14, 16], "from_dict": [14, 16], "raxis_ord": [14, 16], "step": [14, 16, 20, 21, 28, 71, 95, 112, 116], "tensorcore_leg": [14, 16], "to_dict": [14, 16], "inter_transform_a": [14, 16], "inter_transform_b": [14, 16], "is_input_8bit": [14, 16], "smooth_a": [14, 16], "smooth_b": [14, 16], "compute_elements_from_shap": [14, 16], "compute_strides_from_shap": [14, 16], "is_valid": [14, 16], "get_rstep": [14, 16], "get_til": [14, 16], "get_block_info": [14, 17], "get_block_nam": [14, 17], "get_buff": [14, 17], "get_consumer_block": [14, 17], "get_input_buff": [14, 17], "get_output_buff": [14, 17], "get_producer_block": [14, 17], "get_reduce_axi": [14, 17], "get_spatial_axi": [14, 17], "dst_id": [14, 17], "dst_node": [14, 17], "src_id": [14, 17], "src_node": [14, 17], "add_tag": [14, 17], "get_dtyp": [14, 17], "get_ir": [14, 17], "get_shap": [14, 17], "get_tag": [14, 17], "is_output": [14, 17], "is_placehold": [14, 17], "num_output": [14, 17], "set_dtyp": [14, 17], "set_input": [14, 17], "set_output": [14, 17], "set_shap": [14, 17], "set_tag": [14, 17], "update_tag": [14, 17], "extent_wrapp": [14, 17], "footprint": [14, 17], "get_buffer_dtyp": [14, 17], "get_opt_shap": [14, 17], "get_reduce_inputs_dtyp": [14, 17], "get_space_dim": [14, 17], "infer_tensorcore_axi": [14, 17], "propag": [14, 17], "propagate_input": [14, 17], "propagate_inputs_on_reduct": [14, 17], "propagate_output": [14, 17], "propagate_reduction_input": [14, 17], "get_cod": [14, 22], "panel_width": [14, 22], "panel_width_": [14, 22], "get_device_funct": [14, 22], "benefit": 15, "For": [15, 20, 21, 22, 25, 85, 86, 109, 113, 116, 117, 125], "align": [15, 81, 109], "32": [15, 52, 86, 109, 112, 113, 121, 124, 125], "start": [15, 25, 79, 85, 86, 112, 121], "end": [15, 86, 109], "is_fre": 15, "definit": [16, 32, 84], "central": 16, "manag": [16, 58, 60, 74, 76, 113, 117], "task": [16, 109], "dic": 16, "out_dtyp": [16, 26, 28, 30, 31, 33, 109, 124], "trans_b": [16, 26, 31, 33], "input_transform_kind": 16, "weight_transform_kind": 16, "relat": [16, 20], "as_shap": 16, "bs_shape": 16, "af_shap": 16, "bf_shape": 16, "tc_axi": 16, "store": [16, 27, 32, 45, 52, 70, 82, 86, 112, 121], "extra": [16, 20, 21, 86], "output_til": [16, 20], "tile": [16, 17, 20, 21, 69, 71, 92, 109, 112, 116, 124], "wrapper": [17, 54, 55, 67, 76], "analaysi": 17, "itervar": [17, 88, 89], "tag": [17, 18, 20, 21], "v": [17, 125], "id": [17, 86], "datatyp": [17, 51, 112], "overwrit": 17, "prim_func": [17, 55, 57, 58, 59, 60, 65, 68, 83, 84, 109, 112, 113, 124, 125], "rstep": [17, 24, 25, 124], "stride_map": 17, "output_node_list": 17, "block_analyz": [17, 25], "list_of_nod": 17, "assign_block_s": [18, 20], "check_tile_shape_isvalid": [18, 20, 21], "compute_node_stride_map": [18, 20, 21], "compute_tile_dict": [18, 20], "compute_workload_per_item": [18, 20], "dfs_smem_til": [18, 20], "emit_config": [18, 20], "from_output_nod": [18, 20], "from_prim_func": [18, 20], "get_base_til": [18, 20], "get_block_s": [18, 20], "get_node_reduce_step_candid": [18, 20, 21], "infer_node_smem_usag": [18, 20, 21], "plan_raster": [18, 20, 21], "recommend_block_s": [18, 20], "score_block_s": [18, 20], "block_reduction_depth": [18, 21], "pipeline_stag": [18, 21, 124], "use_async_copi": [18, 21], "wmma_k": [18, 21], "subtensor": 19, "transaction_s": 19, "core": [20, 81, 86, 95, 117], "fastdlight": 20, "heurist": 20, "plan": [20, 21, 22], "tri": 20, "minim": [20, 109, 117], "traffic": 20, "maxim": 20, "bitbla": [20, 113], "td": [20, 21], "topk": [20, 27, 28, 29, 30, 31, 32, 33, 34, 124], "assign": [20, 109, 112, 113, 117], "recommend": [20, 27, 32, 109, 116, 124], "top": [20, 27, 28, 29, 30, 31, 32, 33, 68, 74, 76, 118, 121, 124], "consid": [20, 28, 29, 30, 31, 33, 113, 121, 125], "yield": [20, 125], "primari": [20, 58, 60], "contain": [20, 21, 28, 29, 30, 31, 33, 45, 67, 73, 74, 105, 116, 117, 124], "otherwis": [20, 21, 27, 45, 50, 52, 54, 74, 94, 105, 106], "dictionari": [20, 21, 28, 29, 30, 31, 33], "rstep_map": 20, "share": [20, 21, 38, 67, 69, 81, 86, 95, 101, 105, 113, 117, 121], "cost": [20, 109], "grid": [20, 68, 83, 85, 109, 113, 121], "init_til": 20, "minimum": [20, 72, 79, 85, 86], "satisfi": [20, 86], "equal": 20, "dimens": [20, 28, 45, 71, 75, 76, 82, 86, 88, 94, 95, 109, 113, 121, 125], "determin": [20, 28, 41, 94, 96, 106, 117], "constraint": [20, 86, 121], "score": 20, "chosen": 20, "constrain": 20, "1024": [20, 109, 112, 113, 125], "calcul": [20, 21, 86, 97, 125], "candid": [20, 21], "idea": [20, 21, 113], "sinc": [20, 21, 109, 113, 121], "requir": [20, 21, 94, 109, 112, 113, 116, 125], "boundari": [20, 21, 121], "larg": [20, 21, 112], "prime": [20, 21, 94], "rare": [20, 21], "case": [20, 21, 109, 112, 121, 125], "power": [20, 21, 68, 83, 86, 112], "It": [20, 21, 27, 32, 54, 69, 74, 80, 81, 86, 112, 113, 121, 124], "raxi": [20, 21], "usag": [20, 21, 58, 60, 109, 113, 117], "estim": [20, 21], "amount": [20, 21], "yet": [20, 21, 113, 116, 117], "rais": [20, 21, 27, 28, 30, 33, 45, 52, 54, 71, 73, 74, 75, 80, 94, 95, 105, 106], "rasterrationplan": [20, 21], "sort": 20, "effici": [20, 109, 113, 117, 124], "fit": [20, 109], "warp": [20, 70, 75, 86, 94, 117], "sm": 20, "partit": [20, 94, 95, 121], "respect": [20, 86, 109, 125], "16": [21, 50, 52, 112, 116, 125], "l2": [22, 97, 121], "local": [22, 52, 69, 81, 86, 105, 113, 117], "column": [22, 33, 71, 86, 94], "line": [22, 113, 125], "width": [22, 28, 71, 72, 78, 86], "_": [22, 125], "row": [22, 33, 68, 86, 94], "_________": 22, "__________": 22, "get_input_expr": [23, 24, 25], "find_path_from_sourc": [23, 25], "get_or_create_nod": [23, 25], "print_depend": [23, 25], "traverse_depend": [23, 25], "construct_dependency_target": [23, 25], "make_revers": [23, 25], "add_next": [23, 25], "add_prev": [23, 25], "dedupl": [23, 25], "dep": [24, 25], "output_expr": [24, 25], "dependent_region": 24, "var_map": 24, "ordereddict": 24, "range_map": 24, "start_nam": 25, "target_nam": 25, "path": [25, 38, 41, 58, 60, 67, 106, 116], "exist": [25, 43, 76, 88, 116, 124, 125], "constintbound": 25, "input_nam": 25, "input_it": 25, "depend": [25, 113, 116, 117], "lst": 25, "equivalent_funct": [26, 27], "get_hardware_aware_config": [26, 27, 28, 29, 30, 31, 32, 33], "has_arch": [26, 27], "initialize_funct": [26, 27, 28, 29, 30, 31, 32, 33], "output_nod": [26, 27, 34], "recommend_hint": [26, 27, 124], "set_funct": [26, 27], "set_output_nod": [26, 27], "with_arch": [26, 27, 124], "h": [26, 28, 125], "w": [26, 28, 71, 86, 109], "f": [26, 28, 86, 113, 116, 125], "d": [26, 28], "p": [26, 28, 109], "with_bia": [26, 28, 31, 33], "class_attribut": [26, 28, 29, 30, 31, 32, 33, 93, 94], "params_as_dict": [26, 28, 29, 30, 31, 32, 33, 93, 94], "batch_siz": [26, 30], "head_dim": [26, 30], "is_caus": [26, 30], "num_head": [26, 30], "seq_kv_length": [26, 30], "seq_length": [26, 30], "structur": [26, 27, 32, 74, 86], "m": [26, 30, 33, 50, 52, 86, 94, 109, 112, 113, 124, 125], "trans_a": [26, 33], "abc": [27, 56, 65], "awar": [27, 28, 29, 30, 31, 32, 33, 113, 117], "serv": [27, 81, 109], "abstract": [27, 32, 65, 113, 117], "defin": [27, 28, 29, 30, 31, 33, 38, 70, 71, 89, 96, 109, 113, 117, 124, 125], "subclass": [27, 32], "current": [27, 38, 47, 54, 60, 68, 74, 76, 86, 89, 116, 121], "associ": [27, 74, 89, 109], "10": [27, 28, 29, 30, 31, 32, 33, 34, 86, 96, 113, 116, 124], "must": [27, 32, 54, 94, 109, 121], "should": [27, 32, 84, 86, 97, 105, 112, 121], "placehold": [27, 28, 30, 31, 33, 86], "respons": [27, 95, 109], "initi": [27, 28, 29, 30, 31, 33, 82, 86, 109, 113, 117], "notimplementederror": 27, "If": [27, 28, 30, 33, 41, 45, 52, 54, 71, 73, 74, 75, 80, 82, 86, 88, 94, 95, 100, 105, 106, 107, 112, 116, 121], "amper": 27, "volta": 27, "itself": 27, "updat": [27, 74, 116, 121], "convolut": [28, 71, 118], "matrix": [28, 30, 31, 33, 52, 53, 70, 75, 86, 95, 105, 117, 118], "transposit": [28, 31, 33, 95], "bia": [28, 30, 31, 33], "addit": [28, 31, 33, 38, 40, 41, 67, 72, 86, 88, 100, 109, 117, 124], "sampl": 28, "simultan": 28, "featur": [28, 112, 116], "height": 28, "filter": [28, 125], "appli": [28, 30, 31, 33, 54, 102, 109], "depth": [28, 113, 117], "slide": 28, "across": [28, 88, 96, 112, 113], "control": [28, 88, 112, 113, 117], "recept": 28, "field": [28, 86], "expans": 28, "pixel": 28, "ad": [28, 72, 125], "border": 28, "matric": [28, 30, 31, 33, 75, 86, 117], "accumul": [28, 33, 70, 72, 75, 86, 95, 112, 113, 117], "add": [28, 33, 121], "term": [28, 33], "attribut": [28, 29, 30, 31, 33, 44, 84], "retriev": [28, 29, 30, 31, 33, 70, 74, 89, 105, 109], "acceler": [28, 30, 31, 33, 109, 117, 124], "up": [28, 30, 31, 33, 74, 86, 113, 118], "api": [28, 30, 31, 33], "cast": [28, 30, 31, 33, 81, 86, 112], "assertionerror": [28, 30, 33, 52, 54, 75, 94, 95, 105, 106, 107], "posit": [28, 30, 33, 86], "integ": [28, 30, 33, 45, 76, 86, 103, 105, 107, 112, 124], "wise": [29, 78, 86], "represent": [29, 117, 125], "simpl": [29, 76, 112, 125], "graph": [29, 41], "built": [29, 39, 113, 116, 124, 125], "express": [29, 71, 78, 80, 81, 86, 88, 89, 95, 113], "_output_nod": 30, "multipl": [30, 31, 33, 75, 86, 96, 97, 105, 117, 118, 121], "vector": [31, 68, 83, 85, 86, 101, 109, 118, 121, 125], "pars": [32, 41, 84], "ssr": [32, 95], "build": [32, 54, 86, 118], "appropri": [32, 54, 69, 106, 113], "_func": 32, "transpos": [33, 53, 75], "pannel_width": 34, "8": [34, 49, 50, 52, 109, 112, 116, 125], "func_or_modul": 34, "irmodul": [34, 44, 45, 46, 58, 60, 64, 65, 86, 102, 105, 117], "tensorcore_onli": 34, "extra_tag": 34, "ir_modul": [34, 57, 58, 59, 60, 105], "interwarptransform": [35, 36], "intrawarptransform": [35, 36], "ldmatrixtransform": [35, 36], "nontransform": [35, 36], "is_inter_warp_transform": [35, 36], "is_intra_warp_transform": [35, 36], "is_ld_matrix_transform": [35, 36], "is_non_transform": [35, 36], "intenum": [36, 94], "enumer": [36, 94, 107], "invok": [38, 40, 41, 67, 93, 95, 113], "system": [38, 40, 41, 106, 116, 117], "cwd": 38, "ccache_env": 38, "binari": [38, 86], "command": [38, 116], "urrent": 38, "work": [38, 109, 117], "directori": [38, 60, 100, 116], "environ": [38, 116], "ccach": 38, "disabl": [38, 47, 70], "static": [38, 74, 94], "tarbal": 38, "compile_func": 38, "output_format": 38, "get_target_tripl": 38, "add_fil": 38, "cross": 38, "special": [38, 69, 112, 117, 121, 125], "construct": [38, 76, 78, 79, 81, 117], "autotvm": 38, "export_librari": [38, 54, 67], "format": [38, 40, 41, 86], "tripl": 38, "accord": [38, 86], "dumpmachin": 38, "part": [38, 113], "fcompil": 38, "import": [38, 76, 84, 109, 113, 116, 124, 125], "ndk": 38, "export": [38, 67, 116], "arm": 38, "gcc": [38, 116], "mod": [38, 46, 56, 62, 125], "build_runtime_modul": 38, "path_dso": 38, "linux": [38, 116], "gnueabihf": 38, "specialized_ndk": 38, "sysroot": 38, "fpic": 38, "lm": 38, "wa": [38, 60, 88, 109, 125], "found": [38, 60, 74, 112], "nm": 38, "global": [38, 47, 74, 81, 84, 86, 101, 105, 113, 117, 121], "via": [38, 86, 92, 112, 116, 117], "symbol_section_map": 38, "section": [38, 86, 109, 117], "functor": 38, "bridg": 39, "framework": [39, 116, 124], "support": [39, 41, 45, 54, 75, 88, 109, 113, 117, 121], "tvm_func": 39, "tensor_typ": 39, "to_dlpack_func": 39, "convert": [39, 45, 56, 58, 60, 62, 71, 96, 97, 103, 121], "one": [39, 54, 105, 109, 121, 125], "accept": [39, 86], "anoth": [39, 86], "arrai": [39, 86, 105], "pytorch": [39, 45, 58, 60, 67, 97, 113, 116], "wrapped_func": 39, "target_format": [40, 41], "hsaco": 40, "path_target": [40, 41], "amd": [40, 86, 113, 117], "bytearrai": [40, 41], "ptx": [41, 86, 113], "cubin": 41, "root": [41, 86, 125], "cuda_path": 41, "version": [41, 60, 86, 109, 112, 118, 125], "compute_vers": 41, "fp16": [41, 50, 52, 113, 121], "capabl": [41, 113], "6": [41, 107, 113], "int8": [41, 50, 52, 53], "7": [41, 107, 113, 116], "divid": [41, 86], "major": [41, 86], "minor": 41, "device_mod": [42, 44, 45, 55, 58, 60, 65, 125], "host_mod": [42, 44, 45, 55, 58, 60, 65], "kernel_sourc": [42, 45, 54, 67, 125], "rt_mod": [42, 45], "from_buff": [42, 45], "from_var": [42, 45], "is_boolean": [42, 45], "is_float8": [42, 45], "is_scalar": [42, 45], "is_unsign": [42, 45], "overrid": [43, 74, 97], "regist": [43, 70, 86, 109, 113, 117, 121, 125], "post": 43, "take": [43, 69, 86, 113, 116, 125], "without": [43, 54, 74, 76, 81, 84, 113, 117, 118], "parenthes": 43, "def": [43, 84, 109, 112, 113, 124, 125], "boolean": [43, 45, 68, 86], "flag": [43, 95, 116], "tl": [44, 54, 65, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 112, 124], "is_device_c": 44, "attr": [44, 112], "launch": [44, 76, 109, 121], "func_or_mod": [44, 58, 60, 64], "runtime_onli": 44, "enable_host_codegen": 44, "enable_device_compil": 44, "enabl": [44, 47, 68, 79, 109, 113, 116, 117], "codegen": [44, 125], "our": [44, 112, 117], "own": [44, 117], "artifact": [45, 54, 67], "compon": 45, "runtim": [45, 67, 86, 97, 113, 116, 117], "describ": [45, 52, 100], "scalar": [45, 86, 125], "interop": 45, "valueerror": [45, 73, 80, 94, 105, 106, 125], "intimm": [45, 86], "empti": [45, 74, 76], "float8": 45, "ha": [45, 74, 84, 112, 113, 121, 124], "unsign": 45, "state": [47, 118], "m_dim": [48, 50, 52], "n_dim": [48, 50, 52], "warp_siz": [48, 50, 52, 86], "dtype_abbrv": [48, 50, 52], "extract_thread_bind": [48, 50, 52], "get_ldmatrix_index_map": [48, 50], "is_m_first": [48, 50, 52], "k_pack": [48, 50, 75, 93, 94, 95], "ldmatrix_a": [48, 50, 52], "ldmatrix_b": [48, 50, 52], "mfma": [48, 50, 86], "stmatrix": [48, 50, 52], "mma": [48, 52, 86, 95, 113], "get_store_index_map": [48, 52], "make_mma_load_layout": [48, 52], "make_mma_store_layout": [48, 52], "shared_buf": [49, 51], "vecsiz": 49, "ind": 49, "thread_id": [49, 50, 51, 52, 53], "local_id": [49, 51, 53], "a_dtyp": [50, 52, 86], "b_dtype": [50, 52, 86], "a_transpos": [50, 52], "b_transpos": [50, 52], "block_row_warp": [50, 52, 93, 94, 95], "block_col_warp": [50, 52, 93, 94, 95], "warp_row_til": [50, 52, 93, 94, 95], "warp_col_til": [50, 52, 93, 94, 95], "chunk": [50, 52, 93, 94, 95, 117], "reduce_k": [50, 52], "num_elems_per_byt": [50, 52, 53], "To": [50, 52, 109, 112, 116], "elimin": [50, 52], "python": [50, 52, 58, 60, 86, 113, 116, 117, 118, 125], "syntax": [50, 52, 117, 118], "within": [50, 52, 109, 112, 117, 121, 125], "macro": [50, 52, 68, 80, 83, 84, 95], "64": [50, 86, 112, 124], "bfloat16": [50, 52, 109], "bf16": [50, 52], "e4m3_float8": [50, 52], "e4m3": [50, 52], "e5m2_float8": [50, 52], "e5m2": [50, 52], "float32": [50, 52, 69, 81], "fp32": [50, 52], "thread": [50, 52, 68, 69, 76, 80, 85, 86, 87, 88, 94, 109, 112, 113, 117, 118, 121, 125], "bind": [50, 52, 74, 76, 84, 85], "tx": [50, 52, 80, 86], "warp_n": [50, 52], "warp_m": [50, 52], "split": [50, 52, 86], "is_b": 50, "a_local_buf": [50, 52], "a_shared_buf": [50, 52], "ki": [50, 52], "rk": [50, 52], "b_local_buf": [50, 52], "b_shared_buf": [50, 52], "c_local_buf": [50, 52], "c_buf": [50, 52], "pid_m": [50, 52], "pid_n": [50, 52], "row_idx": [51, 53], "col_idx": [51, 53], "row_siz": 51, "is_smooth": 51, "transform_kind_a": 52, "transform_kind_b": 52, "invers": [52, 87, 89], "local_buf": 52, "conjunct": 52, "inverse_mma_store_layout": 52, "how": [52, 97, 100, 112, 113, 117, 125], "laid": 52, "k_inner": 52, "With": [52, 112, 113, 117], "ladder": 52, "plugin": 52, "vjj": 53, "micro_size_k": 53, "coordin": 53, "vii": 53, "micro_size_i": 53, "vj": 53, "block_k": [53, 112, 113, 117, 124, 125], "vi": 53, "block_n": [53, 109, 112, 113, 117, 124, 125], "basekerneladapt": [54, 55, 56, 58, 60, 62, 67, 96], "torchdlpackkerneladapt": [54, 55, 62], "libgen": [54, 55], "librarygener": [54, 55, 63], "get_annotated_mod": [54, 55, 64], "is_cpu_target": [54, 55, 64], "is_cuda_target": [54, 55, 64], "is_hip_target": [54, 55, 64], "match_declare_kernel": [54, 55, 64], "match_declare_kernel_cpu": [54, 55, 64], "match_global_kernel": [54, 55, 64], "basewrapp": [54, 55, 65], "tlcpusourcewrapp": [54, 55, 65], "tlcudasourcewrapp": [54, 55, 65], "tlhipsourcewrapp": [54, 55, 65], "tlwrapper": [54, 55, 65], "torch_funct": [54, 67], "from_databas": [54, 57, 58, 59, 60, 67], "from_tilelang_funct": [54, 67], "get_host_sourc": [54, 67], "get_kernel_sourc": [54, 55, 56, 57, 58, 59, 60, 67, 109, 113, 125], "get_profil": [54, 67, 113], "host_sourc": [54, 67], "infrastructur": [54, 118], "runnabl": 54, "pass_config_kwarg": 54, "factori": 54, "call": [54, 65, 70, 71, 73, 75, 82, 86, 109, 113, 117, 125], "directli": [54, 67, 80, 106, 109, 116, 117, 124, 125], "expect": [54, 70, 86, 125], "onli": [54, 80, 86, 109, 112, 121], "automat": [54, 94, 96, 97, 106, 109, 112, 113, 117], "avaliable_target": 54, "encapsul": [54, 88, 117], "invalid": [54, 73, 94, 106], "present": [54, 86, 109], "ctypeskerneladapt": [55, 57, 58], "cythonkerneladapt": [55, 59, 60], "get_cache_dir": [55, 59, 60], "get_cached_lib": [55, 59, 60], "get_cython_compil": [55, 59, 60], "cython_wrapp": [55, 59], "cythonkernelwrapp": [55, 59, 61], "compile_lib": [55, 63], "get_lib_path": [55, 63], "get_source_path": [55, 63], "lib_cod": [55, 57, 58, 59, 60, 63], "libpath": [55, 57, 58, 59, 60, 63], "load_lib": [55, 63], "remove_lib": [55, 63], "set_lib_path": [55, 63], "set_src_path": [55, 63], "srcpath": [55, 57, 58, 59, 60, 63], "update_lib_cod": [55, 63, 65], "call_prefix": [55, 65], "init_func": [55, 65], "backend": [55, 65, 86, 96, 113, 116, 117, 124], "create_call_func": [55, 65], "get_cpu_init_func": [55, 65], "get_dynamic_symbolic_set": [55, 65], "parse_source_inform": [55, 65], "create_dispatch_func": [55, 65], "generate_tma_descriptor_arg": [55, 65], "get_cuda_init_func": [55, 65], "is_tma_descriptor_arg": [55, 65], "get_hip_init_func": [55, 65], "get_stream_typ": [55, 65], "assign_device_modul": [55, 65], "assign_host_modul": [55, 65], "assign_optimized_modul": [55, 65], "assign_pass_config": [55, 65], "lib": [55, 57, 58, 59, 60, 65], "dynamic_symbolic_map": [57, 58, 59, 60, 61], "is_dynam": [57, 58, 59, 60], "kernel_global_sourc": [57, 58, 59, 60, 67], "param_dtyp": [57, 58], "param_shap": [57, 58], "wrapped_sourc": [57, 58, 59, 60], "tensortyp": [58, 60], "dynam": [58, 60, 81, 101, 105, 121], "kernel_lib_path": [58, 60, 67], "kernel_onli": [58, 60], "cdll": [58, 60], "buffer_device_map": [59, 60, 61], "buffer_dtype_map": [59, 60, 61], "ptr_map": [59, 60, 61], "static_shape_map": [59, 60, 61], "forward": [59, 61, 89], "set_buffer_device_map": [59, 61], "set_buffer_dtype_map": [59, 61], "set_dynamic_symbolic_map": [59, 61], "set_ptr_map": [59, 61], "set_static_shape_map": [59, 61], "source_cod": 60, "load": [60, 70, 71, 86, 95, 109, 112, 113, 117, 121], "stream": 61, "with_tl": 63, "lib_path": 63, "model_typ": 64, "annot": [64, 85, 86, 113, 118], "__global__": [64, 109, 112], "int32_t": 64, "kwarg": [65, 67], "scheduled_ir_modul": 65, "ifdef": 65, "__cplusplu": 65, "nextern": 65, "endif": 65, "nint32_t": 65, "function_inform": 65, "desc_name_map": 65, "arg_nam": 65, "function_arg": 65, "c_sourc": 65, "standalon": 66, "modifi": [66, 72, 125], "flashinf": 66, "kernel_fil": 67, "altern": [67, 116], "constructor": 67, "torchfunct": 67, "tilelang_func": 67, "keyword": 67, "tensor_supply_typ": 67, "benchmark": [67, 96, 97, 113], "entri": [68, 76, 83, 95], "serial": [68, 83, 85, 112], "thread_bind": [68, 83, 85], "unrol": [68, 83, 85, 109], "op": [68, 83], "tvmbackendallocworkspac": [68, 83, 86], "tvmbackendfreeworkspac": [68, 83, 86], "ab": [68, 83, 86], "aco": [68, 83, 86], "acosh": [68, 83, 86], "address_of": [68, 83, 86], "anylist_getitem": [68, 83, 86], "anylist_resetitem": [68, 83, 86], "anylist_setitem_call_cpack": [68, 83, 86], "anylist_setitem_call_pack": [68, 83, 86], "asin": [68, 83, 86], "asinh": [68, 83, 86], "assum": [68, 83, 86, 95, 112], "atan": [68, 83, 86], "atan2": [68, 83, 86], "atanh": [68, 83, 86], "bitwise_and": [68, 83, 86], "bitwise_not": [68, 83, 86], "bitwise_or": [68, 83, 86], "bitwise_xor": [68, 83, 86], "call_cpack": [68, 83, 86], "call_cpacked_low": [68, 83, 86], "call_extern": [68, 83, 86], "call_intrin": [68, 83, 86], "call_llvm_intrin": [68, 83, 86], "call_llvm_pure_intrin": [68, 83, 86], "call_pack": [68, 83, 86], "call_packed_low": [68, 83, 86], "call_pure_extern": [68, 83, 86], "call_tir": [68, 83, 86], "ceil": [68, 83, 86], "ceildiv": [68, 83, 86, 109, 112, 113], "clz": [68, 83, 86], "comm_reduc": [68, 83, 86, 112], "copysign": [68, 83, 86], "co": [68, 83, 86], "cosh": [68, 83, 86], "create_barri": [68, 83, 86], "div": [68, 83, 86], "end_profile_intrins": [68, 83, 86], "erf": [68, 83, 86], "exp": [68, 83, 86], "exp10": [68, 83, 86], "exp2": [68, 83, 86], "floor": [68, 83, 86], "floordiv": [68, 83, 86], "floormod": [68, 83, 86], "fmod": [68, 83, 86], "hypot": [68, 83, 86], "if_then_els": [68, 83, 86], "indexdiv": [68, 83, 86], "indexmod": [68, 83, 86], "infin": [68, 83, 86], "isfinit": [68, 83, 86], "isinf": [68, 83, 86], "isnan": [68, 83, 86], "isnullptr": [68, 83, 86], "ldexp": [68, 83, 86], "log10": [68, 83, 86], "log1p": [68, 83, 86], "log2": [68, 83, 86], "lookup_param": [68, 83, 86], "max_valu": [68, 83, 86], "min_valu": [68, 83, 86], "mma_fil": [68, 83, 86], "mma_stor": [68, 83, 86], "nearbyint": [68, 83, 86], "nextaft": [68, 83, 86], "popcount": [68, 83, 86], "pow": [68, 83, 86], "ptx_arrive_barri": [68, 83, 86], "ptx_arrive_barrier_expect_tx": [68, 83, 86], "ptx_commit_group": [68, 83, 86], "ptx_cp_async": [68, 83, 86], "ptx_cp_async_barri": [68, 83, 86], "ptx_cp_async_bulk": [68, 83, 86], "ptx_init_barrier_thread_count": [68, 83, 86], "ptx_ldmatrix": [68, 83, 86], "ptx_mma": [68, 83, 86], "ptx_mma_sp": [68, 83, 86], "ptx_wait_barri": [68, 83, 86], "ptx_wait_group": [68, 83, 86], "q_multiply_shift": [68, 83, 86], "q_multiply_shift_per_axi": [68, 83, 86], "reinterpret": [68, 83, 86, 112], "ret": [68, 83, 86], "round": [68, 83, 86], "rsqrt": [68, 83, 86], "shift_left": [68, 83, 86], "shift_right": [68, 83, 86], "sigmoid": [68, 83, 86], "sin": [68, 83, 86], "sinh": [68, 83, 86], "sqrt": [68, 83, 86], "start_profile_intrins": [68, 83, 86], "tan": [68, 83, 86], "tanh": [68, 83, 86], "trace": [68, 83, 86], "trunc": [68, 83, 86], "truncdiv": [68, 83, 86], "truncmod": [68, 83, 86], "tvm_access_ptr": [68, 83, 86], "tvm_bmma_sync": [68, 83, 86], "tvm_check_return": [68, 83, 86], "tvm_fill_frag": [68, 83, 86], "tvm_load_matrix_sync": [68, 83, 86], "tvm_mfma": [68, 83, 86], "tvm_mfma_stor": [68, 83, 86], "tvm_mma_sync": [68, 83, 86], "tvm_rdna_wmma": [68, 83, 86], "tvm_rdna_wmma_stor": [68, 83, 86], "tvm_stack_alloca": [68, 83, 86], "tvm_stack_make_arrai": [68, 83, 86], "tvm_stack_make_shap": [68, 83, 86], "tvm_storage_sync": [68, 83, 86], "tvm_store_matrix_sync": [68, 83, 86], "tvm_struct_get": [68, 83, 86], "tvm_struct_set": [68, 83, 86], "tvm_thread_allreduc": [68, 83, 86, 118], "tvm_thread_invari": [68, 83, 86], "tvm_throw_last_error": [68, 83, 86], "tvm_tupl": [68, 83, 86], "tvm_warp_activemask": [68, 83, 86], "tvm_warp_shuffl": [68, 83, 86], "tvm_warp_shuffle_down": [68, 83, 86], "tvm_warp_shuffle_up": [68, 83, 86], "type_annot": [68, 83, 86], "undef": [68, 83, 86], "vectorcombin": [68, 83, 86], "vectorhigh": [68, 83, 86], "vectorlow": [68, 83, 86], "vscale": [68, 83, 86], "get_valu": [68, 74], "has_valu": [68, 74], "pop": [68, 74, 76], "push": [68, 74, 76], "get_block_ext": [68, 76], "get_num_thread": [68, 76], "get_thread_ext": [68, 76], "num_thread": [68, 76, 121], "default_align": [68, 81], "default_offset_factor": [68, 81], "default_scop": [68, 81], "from_ptr": [68, 81], "interfac": [68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 96, 118], "layout_map": 68, "panel_s": [68, 113], "order": [68, 79], "ai": [69, 116], "conveni": [69, 76], "scope": [69, 74, 76, 81, 86, 101, 105, 109, 121], "avail": [69, 94, 106, 113, 116], "inter": 69, "commun": [69, 86, 125], "privat": [69, 84], "storag": [69, 81, 86, 101, 117, 121], "singl": [69, 75, 95, 105, 109, 112, 113, 121], "dyn": [69, 81], "barrier": [70, 86], "creation": 70, "tma": 70, "descriptor": [70, 71], "fenc": 70, "asynchron": [70, 101, 113], "request": [70, 86], "transact": [70, 86], "count": [70, 75, 86, 97], "wait": [70, 75, 86], "pariti": 70, "condit": [70, 86, 109, 125], "limit": [70, 117, 125], "signal": 70, "arriv": [70, 86], "complet": [70, 86, 124, 125], "wgmma": 70, "group": [70, 75, 79, 86, 109], "multipli": [70, 95, 113], "bufferload": [71, 86, 121], "access_typ": 71, "rw": 71, "area": 71, "buffer_region": 71, "cover": [71, 109, 125], "img": 71, "col": [71, 86], "nhw_step": 71, "c_step": 71, "dilat": 71, "pad": [71, 121], "2d": 71, "imag": [71, 100], "channel": 71, "rate": 71, "src": [71, 72, 121, 125], "dst": [71, 72, 121], "coalesced_width": [71, 78], "destin": [71, 72, 86], "coalesc": [71, 78, 109, 117], "typeerror": 71, "deduc": 71, "atom": 72, "doubl": [72, 121], "operand": [72, 86], "min_val": 72, "max_val": 72, "dot": [72, 112], "product": [72, 112, 118, 124], "zero": [73, 86, 96, 103, 107, 121], "when": [74, 86, 109, 112, 113, 117, 121, 125], "enter": 74, "stack": [74, 76, 86], "dequ": [74, 76], "maintain": 74, "lookup": 74, "look": [74, 112, 118], "remov": [74, 76], "item": [74, 76, 86], "indexerror": 74, "onto": [74, 76], "applic": 74, "tirfram": [74, 76], "let": [74, 109, 113, 117], "track": [74, 86], "extend": [74, 109, 117], "activ": [74, 86, 109], "topmost": [74, 76], "bound": [74, 86], "transpose_a": [75, 93, 94, 95, 121], "transpose_b": [75, 93, 94, 95, 121], "gemmwarppolici": [75, 92, 93, 94, 95], "squar": [75, 86, 93, 94, 95], "clear_accum": 75, "wg_wait": 75, "mode": [75, 86, 97, 113, 116], "pack": [75, 86], "don": 75, "around": [76, 112], "is_cpu": 76, "prelud": 76, "quickli": [76, 125], "griddim": 76, "x": [76, 86, 91, 109, 112, 113, 121], "y": [76, 86, 109, 112, 116, 121], "z": [76, 86, 109], "blockdim": [76, 109], "Or": 76, "threadidx": [76, 109, 112, 125], "thu": [76, 113], "blockidx": [76, 109, 112, 121, 125], "re": [76, 78, 79, 81, 84, 85, 86, 116], "launchthreadfram": 76, "exit": 76, "dim": [76, 82, 121], "three": [76, 113, 116, 117, 124, 125], "total": [76, 94, 107], "nest": 78, "forfram": [78, 79, 85], "stop": [79, 85, 121], "num_stag": [79, 113, 121, 124], "stage": [79, 113, 125], "sync": [79, 101], "max": [79, 82, 97], "consum": [79, 112, 121], "condition": 80, "obj": 80, "msg": [80, 125], "ty": 80, "tz": 80, "unsupport": [80, 125], "foundat": 81, "customiz": 81, "offset": [81, 86, 109], "pointer_var": 81, "pointer": [81, 86], "0x7f907e5579a0": 81, "typic": [81, 109], "temporari": 81, "commonli": 81, "inherit": [81, 95], "modif": 81, "storage_scop": [81, 86, 101], "is_size_var": 81, "sizevar": 81, "instead": [81, 86, 104, 118, 125], "reduce_typ": 82, "along": [82, 112, 113], "min": [82, 97], "sum": [82, 112, 117], "abssum": 82, "inf": 82, "hygien": 84, "bodi": 84, "resolv": [84, 125], "locat": [84, 86, 106], "non": [84, 86], "script": 84, "x_valu": 84, "static_captur": 84, "dynamic_captur": 84, "check_well_form": 84, "prim": [84, 121], "treat": 84, "device_typ": 86, "device_id": 86, "nbyte": 86, "dtype_code_hint": 86, "dtype_bits_hint": 86, "tempor": 86, "workspac": [86, 116], "certain": [86, 116], "opengl": 86, "bit": [86, 112], "span": 86, "buffer_load": 86, "address": [86, 125], "intersect": 86, "list_handl": 86, "anylist": 86, "reset": 86, "cond": 86, "simplif": 86, "x1": 86, "x2": 86, "arctan2": 86, "bitwis": 86, "left": 86, "right": [86, 125], "xor": 86, "extern": [86, 109, 112], "except": [86, 109], "resourc": 86, "te": 86, "overload": 86, "translat": [86, 125], "llvm": [86, 116, 117, 125], "pure": [86, 113, 117], "pod": 86, "packedfunc": 86, "receiv": 86, "tvmarrayhandl": 86, "whose": [86, 97], "period": 86, "ndarrai": 86, "global_var": 86, "globalvar": 86, "lh": 86, "rh": 86, "lead": [86, 109], "undefin": 86, "fcombin": 86, "fident": 86, "commut": 86, "const": [86, 109, 125], "over": [86, 88, 113], "There": [86, 121], "wai": [86, 112, 116, 121], "simpli": [86, 109], "mysum": 86, "lambda": [86, 112], "reduce_axi": 86, "chang": [86, 116], "sign": 86, "barrier_count": 86, "semant": [86, 109], "hand": [86, 113, 117], "known": [86, 124], "neg": 86, "gauss": 86, "exponenti": 86, "primexprwithop": 86, "remaind": 86, "equival": [86, 117], "select": [86, 106], "unlik": [86, 109], "branch": 86, "you": [86, 109, 112, 113, 116, 121, 124, 125], "guard": 86, "against": [86, 96, 113], "some": [86, 113, 116, 121, 125], "lane": [86, 125], "mai": [86, 88, 109, 112, 113, 116, 117, 125], "advantag": 86, "finit": 86, "infinit": 86, "nan": 86, "nullptr": 86, "mark": [86, 113], "param_nam": 86, "local_s": 86, "local_ptr": 86, "dst_ptr": 86, "src_ptr": 86, "src_offset": 86, "dst_stride": 86, "nearest": 86, "faster": [86, 97, 112, 117], "notabl": 86, "wherea": [86, 117], "see": [86, 113, 124, 125], "http": [86, 109, 116], "en": 86, "cpprefer": 86, "com": [86, 109, 116], "cpp": 86, "numer": 86, "next": [86, 109], "point": [86, 95, 121], "after": [86, 101, 109, 112, 113, 116, 117, 121, 125], "toward": 86, "expon": 86, "barrier_id": 86, "mbarrier": 86, "doc": 86, "nvidia": [86, 113, 116, 117, 125], "html": 86, "synchron": [86, 112, 117, 125], "instruct": [86, 95, 113, 116], "byte_count": 86, "expect_tx": 86, "increas": [86, 112], "async": [86, 121], "commit": 86, "movement": [86, 109, 117, 118], "convers": 86, "cp": [86, 116], "shared_ptr": 86, "shared_offset": 86, "global_ptr": 86, "global_offset": 86, "byte": 86, "bulk": 86, "thread_count": 86, "num": [86, 94], "local_offset": 86, "smem_ptr": 86, "smem_offset": 86, "ldmatrix": [86, 95], "b16": 86, "memort": 86, "a_layout": 86, "b_layout": 86, "c_dtype": 86, "multiplicand_a": 86, "a_index": 86, "multiplicand_b": 86, "b_index": 86, "c_index": 86, "satur": 86, "multiplicand": [86, 121], "metadata": 86, "meta_index": 86, "sparse_selector": 86, "spars": 86, "selector": 86, "try_wait": 86, "most": [86, 116], "recent": [86, 116], "uncommit": 86, "pend": 86, "q": [86, 125], "follow": [86, 95, 109, 116, 117, 124], "shift": 86, "mathemat": 86, "more": [86, 105, 109, 113, 117, 118, 125], "here": [86, 112, 117, 125], "wikipedia": 86, "org": 86, "wiki": 86, "q_": 86, "number_format": 86, "half": 86, "5": [86, 107, 113, 124], "fraction": 86, "need": [86, 88, 113, 116, 117, 121, 125], "is_lshift_requir": 86, "is_rshift_requir": 86, "do": [86, 95, 113, 125], "val": 86, "void": [86, 109, 112], "reciproc": 86, "quick": 86, "hyperbol": 86, "trace_act": 86, "default_trace_act": 86, "come": [86, 109], "action": 86, "truncat": 86, "closer": 86, "than": [86, 105, 112, 113, 116, 117, 125], "divis": [86, 94], "behavior": [86, 109, 113, 117, 125], "ptype": 86, "rw_mask": 86, "head": 86, "mask": [86, 112], "fragment_d": 86, "index_d": 86, "fragment_a": 86, "index_a": 86, "fragment_b": 86, "index_b": 86, "fragment_c": 86, "index_c": 86, "bmma_sync": 86, "bwmma": 86, "return_unexpect": 86, "nested_cal": 86, "unexpect": 86, "fill_frag": 86, "wmma": [86, 113], "uintimm": 86, "buffer_ptr": 86, "row_major": 86, "column_major": 86, "mma_sync": 86, "dtype_str": 86, "ndim": 86, "arr_dtyp": 86, "elem_offset": 86, "dltensor": 86, "elem_offs": 86, "arr": 86, "struct": 86, "date": 86, "structtyp": 86, "freduce_arg": 86, "allreduc": 86, "insid": [86, 109, 117, 121, 125], "threadblock": 86, "invari": 86, "throw": 86, "tvmgetlasterror": 86, "attrstmt": 86, "warp_id": 86, "exchang": 86, "fetch": [86, 116], "sub": 86, "shuffl": 86, "higher": 86, "caller": 86, "src_lane_idx": 86, "dst_lane_idx": 86, "arbitrari": [86, 121], "vec1": 86, "vec2": 86, "concat": 86, "vec": 86, "high": [86, 109, 112, 113, 117, 118], "low": [86, 112, 113, 117, 118], "langref": 86, "rtype": [86, 95, 106], "condense_rep_var": [87, 88], "get_thread_s": [87, 88], "map_forward_thread": [87, 88], "repeat": [87, 88, 96, 97], "replic": [87, 88], "get_forward_var": [87, 89], "get_input_shap": [87, 89], "get_output_shap": [87, 89], "map_forward_index": [87, 89], "forward_fn": [88, 89], "forward_thread_fn": 88, "forward_index_fn": 88, "forward_var": 88, "forward_thread": 88, "forward_index": 88, "thread_repl": 88, "fine": [88, 112, 113, 117], "grain": [88, 112, 113, 117], "multi": [88, 117], "dimension": [88, 109], "condens": 88, "fold": 88, "longer": [88, 113], "separ": [88, 113], "reflect": 88, "repeat_on_thread": 88, "lower_dim_first": 88, "happen": [88, 109], "gemmbaseparam": [92, 93, 94, 95], "gemm_mma": [92, 93], "gemmprimitivemma": [92, 93, 95], "bootstrap": 92, "get_warp_s": [93, 94], "infer_block_partit": [93, 94], "fullcol": [93, 94], "fullrow": [93, 94], "compute_warp_partit": [93, 94], "from_warp_partit": [93, 94], "is_full_col": [93, 94], "is_full_row": [93, 94], "is_squar": [93, 94], "to_prime_factor": [93, 94], "gemm_rrr": [93, 95], "gemm_rsr": [93, 95], "gemm_srr": [93, 95], "gemm_ssr": [93, 95], "alreadi": [94, 116], "attempt": 94, "them": [94, 95, 109, 125], "miss": 94, "inconsist": 94, "num_warp": 94, "m_warp": 94, "n_warp": 94, "fail": [94, 125], "from_block_row_col": 94, "balanc": [94, 113], "distribut": [94, 121], "full": [94, 113], "basic": [95, 112, 117], "mma_emitt": 95, "helper": 95, "etc": [95, 96, 113, 125], "final": [95, 109, 112, 117, 125], "random": 96, "reference_program": 96, "input_tensor": 96, "compar": [96, 107, 109, 112, 113], "pre": [96, 116, 124], "comparison": [96, 107], "consist": [96, 97], "explicitli": [96, 109, 113, 117], "n_warmup": 96, "n_repeat": 96, "millisecond": [96, 97], "averag": 96, "_n_warmup": 97, "_n_repeat": 97, "grad_to_non": 97, "quantil": 97, "fast_flush": 97, "return_mod": 97, "mean": 97, "median": 97, "flush": 97, "gradient": 97, "backward": 97, "percentil": 97, "aggreg": 97, "seed": 98, "42": 98, "save_directori": 100, "tmp": 100, "colormap": 100, "rdpu": 100, "plot": 100, "save": 100, "visual": 100, "fpass": [101, 102], "rewrit": 101, "legalizeloopvector": 101, "attach": 101, "finish": [101, 112, 125], "insert": [101, 112], "partial": [101, 112, 113, 117], "enable_vector": 101, "stmt": 102, "One": [103, 107, 112], "randn": [103, 107, 113], "uniform": [103, 107], "method_nam": 104, "new_method_nam": 104, "allow_dynam": 105, "extract": 105, "exactli": 105, "rocm": [106, 116], "return_object": 106, "manual": [106, 113, 117, 124], "user": [106, 112, 113, 116, 117, 122, 124, 125], "intyp": 107, "tensor_a": 107, "tensor_b": 107, "001": 107, "equal_nan": 107, "check_devic": 107, "check_dtyp": 107, "check_layout": 107, "check_strid": 107, "assert": 107, "close": [107, 109, 112], "enough": [107, 113], "percentag": 107, "1e": [107, 113], "exce": 107, "author": [109, 113, 124, 125], "chenghua": 109, "wang": [109, 113, 125], "document": [109, 112, 113, 125], "still": [109, 112, 113], "experiment": [109, 112, 113], "incomplet": [109, 112, 113], "suggest": [109, 112, 113], "improv": [109, 112, 113, 116, 117], "highli": [109, 112, 113, 117], "encourag": [109, 112, 113], "pleas": [109, 112, 113, 116], "submit": [109, 112, 113], "pr": [109, 112, 113], "wide": 109, "deep": [109, 112], "learn": [109, 112], "often": [109, 125], "encount": [109, 125], "those": [109, 125], "begin": 109, "tutori": [109, 112, 113, 125], "sever": [109, 125], "By": [109, 112, 113, 117, 118, 125], "similar": [109, 113], "note": [109, 116, 117, 121], "delv": 109, "deepli": 109, "design": [109, 112, 113, 117, 118], "principl": 109, "broader": 109, "understand": [109, 112, 117], "consult": 109, "overview": [109, 113, 117], "elementwise_add": 109, "256": [109, 112, 124], "b_x": 109, "logic": [109, 113, 117, 125], "bx": [109, 113, 117], "familiar": 109, "might": [109, 112, 117, 125], "wonder": 109, "your": [109, 112, 113], "focu": [109, 117, 118], "sole": 109, "further": [109, 112, 117, 125], "carefulli": [109, 125], "handcraft": 109, "demonstr": [109, 112, 113, 117, 124, 125], "concret": 109, "while": [109, 113, 124], "also": [109, 113, 117, 124], "subsequ": [109, 117], "discuss": [109, 117], "straightforward": [109, 112], "practic": 109, "below": [109, 112, 113, 117, 125], "reader": 109, "block_m": [109, 113, 117, 124, 125], "start_x": 109, "start_i": 109, "local_i": 109, "local_x": 109, "abov": 109, "fix": 109, "howev": [109, 112, 113], "want": [109, 113, 116], "replac": 109, "make": [109, 112, 116, 117], "illustr": [109, 117, 125], "bfloat16_t": 109, "__restrict__": [109, 112], "incorpor": [109, 117], "These": [109, 113, 117], "prevent": 109, "advanc": [109, 113, 125], "introduc": [109, 112, 113, 125], "involv": [109, 124], "review": 109, "paragraph": 109, "clearer": 109, "2047": 109, "num_per_thread": 109, "__launch_bounds__": [109, 112], "main_kernel": [109, 112], "pragma": 109, "observ": 109, "did": 109, "fact": 109, "tail": 109, "could": 109, "simplic": 109, "breviti": 109, "style": 109, "idx": 109, "evid": 109, "ineffici": 109, "techniqu": [109, 118], "beginn": [109, 117], "addition": [109, 117], "transpar": 109, "uint4": [109, 112], "__1": 109, "v_": 109, "v__1": 109, "nv_bfloat162": 109, "aforement": 109, "sometim": [109, 125], "appear": 109, "counterintuit": [109, 117], "effect": [109, 112], "interestingli": 109, "retain": [109, 113], "origin": [109, 117], "scenario": 109, "help": [109, 117, 124, 125], "guid": [109, 118], "intend": [109, 117, 125], "aha": 109, "convent": 109, "intuit": 109, "But": 109, "what": 109, "previou": 109, "num_ele_per_thread": 109, "a_regist": 109, "b_regist": 109, "c_regist": 109, "s_start": 109, "s_end": 109, "ldg": 109, "tid": 109, "stg": 109, "individu": 109, "reson": 109, "develop": [109, 116, 117, 118], "u": 109, "now": [109, 112], "8192": 109, "2048": [109, 112], "emerg": [109, 113], "reassign": 109, "evalu": [109, 112], "complex": [109, 113], "nv_bfloat16": 109, "namespac": 109, "t_c": 109, "make_gmem_ptr": 109, "make_shap": 109, "t_a": 109, "t_b": 109, "t_c_tile": 109, "local_til": 109, "make_coord": 109, "t_a_til": 109, "t_b_tile": 109, "reg_buffer_a": 109, "make_tensor_lik": 109, "reg_buffer_b": 109, "reg_buffer_c": 109, "reg_c_vector": 109, "recast": 109, "reg_a_vector": 109, "reg_b_vector": 109, "vec_idx": 109, "reg_c_flat": 109, "showcas": [109, 117], "approach": [109, 112, 113, 117, 125], "significantli": [109, 117, 125], "nevertheless": 109, "demand": [109, 113, 117], "care": 109, "attent": [109, 113, 118], "detail": [109, 113, 117], "essenti": [109, 116, 125], "thoroughli": 109, "examin": [109, 113, 125], "draw": 109, "inspir": 109, "blog": 109, "zhuanlan": 109, "zhihu": 109, "690703999": 109, "contributor": 112, "botbw": 112, "example_gemv": 112, "py": [112, 124, 125], "plai": 112, "role": 112, "especi": 112, "model": [112, 113, 118], "perspect": 112, "_gemv_naiv": 112, "x_ptr": 112, "a_ptr": 112, "y_ptr": 112, "block_size_k": 112, "constexpr": 112, "program_id": 112, "offs_k": 112, "arang": 112, "a_val": 112, "x_val": 112, "expos": [112, 117], "natur": 112, "think": 112, "naive_gemv": 112, "bn": 112, "tn": 112, "a_shar": [112, 113], "b_share": [112, 113], "c_reg": 112, "bk": 112, "tk": 112, "astyp": 112, "And": 112, "half_t": 112, "__shared__": 112, "__align__": 112, "uchar": 112, "buf_dyn_shmem": 112, "uint64_t": 112, "_mbarrier": 112, "mbarrier_init": 112, "__syncthread": 112, "warpgroup_reg_dealloc": 112, "24": 112, "mbarrier_wait": 112, "16256": 112, "131072": 112, "fence_proxy_async": 112, "mbarrier_cp_async_arr": 112, "mbarrier_arr": 112, "els": 112, "warpgroup_reg_alloc": 112, "240": 112, "000000e": 112, "00f": 112, "bk_1": 112, "tk_1": 112, "act": 112, "1d": [112, 125], "At": [112, 117], "gain": 112, "veri": [112, 113], "littl": 112, "17": 112, "cubla": [112, 113], "008": 112, "20x": 112, "slower": 112, "exploit": 112, "finer": [112, 113], "combin": 112, "naive_splitk_gemv": 112, "a_loc": 112, "b_local": 112, "c_accum": 112, "c_share": 112, "024": 112, "par": [112, 113], "reduce_thread": 112, "splitk_gemv": 112, "tile_k": 112, "less": [112, 116], "intens": 112, "throuput": 112, "bottleneck": 112, "float2": 112, "float4": 112, "splitk_gemv_vector": 112, "max_transaction_size_in_bit": 112, "0084": 112, "outperfrom": 112, "plain": 112, "smem": 112, "atomidadd": 112, "splitk_gemv_vectorized_tvm": 112, "c_reduc": 112, "reduce_scop": 112, "uint64": 112, "uint32": 112, "0069": 112, "hyperparamet": 112, "get_best_config": 112, "get_config": [112, 124], "_config": [112, 124], "itertool": [112, 124], "kei": 112, "20": [112, 116, 124], "ref_program": [112, 124], "0067": 112, "red_buf0": 112, "00784": 112, "00773": 112, "16607": 112, "02419": 112, "00809": 112, "00675": 112, "0077344514429569244": 112, "lei": [113, 125], "knowledg": 113, "concern": 113, "conceptu": 113, "behind": 113, "necessarili": [113, 125], "drop": 113, "down": 113, "lowest": 113, "explicit": 113, "somewhat": 113, "triton": [113, 118], "almost": 113, "expert": [113, 117], "who": [113, 116, 117], "everi": 113, "assembli": 113, "figur": [113, 117], "flow": [113, 118], "walk": 113, "show": [113, 125], "flexibl": [113, 117], "divers": 113, "comfort": 113, "incur": 113, "fusion": 113, "flash": [113, 118], "easili": 113, "give": 113, "effort": 113, "raw": 113, "strike": 113, "portabl": 113, "reason": [113, 117], "concis": [113, 117, 118], "snippet": [113, 117, 125], "softwar": 113, "c_local": 113, "comment": 113, "ko": 113, "jit_kernel": 113, "ref_c": 113, "assert_clos": 113, "inspect": [113, 125], "cuda_sourc": 113, "though": 113, "slice": 113, "arrang": 113, "overlap": 113, "arithmet": 113, "under": 113, "hood": 113, "cutlass": 113, "cute": 113, "On": 113, "compos": [113, 117], "back": 113, "mix": [113, 117, 118], "keep": [113, 117], "rest": 113, "better": 113, "vendor": [113, 125], "intern": 113, "4090": 113, "a100": 113, "h100": 113, "mi300x": 113, "shown": 113, "1x": 113, "speedup": 113, "rtx": 113, "97x": 113, "0x": 113, "04x": 113, "08x": 113, "25x": 113, "vari": 113, "few": 113, "dispatch": 113, "verifi": [113, 116], "abil": [113, 117], "friendli": [113, 117], "tunabl": 113, "experi": 113, "scale": 113, "meanwhil": 113, "github": [113, 116, 118], "pycuda": 113, "prerequisit": 116, "wheel": 116, "pypi": 116, "ubuntu": 116, "04": 116, "later": [116, 121], "11": 116, "easiest": 116, "lang": [116, 118], "latest": 116, "termin": 116, "choos": [116, 117], "prebuilt": 116, "releas": 116, "page": 116, "dev0": 116, "cu120": 116, "py3": 116, "whl": 116, "repositori": 116, "git": 116, "__version__": 116, "docker": 116, "rm": 116, "ipc": 116, "nvcr": 116, "io": 116, "23": 116, "requisit": 116, "apach": 116, "debian": 116, "sudo": 116, "apt": 116, "python3": 116, "dev": 116, "setuptool": 116, "libtinfo": 116, "zlib1g": 116, "cmake": 116, "libedit": 116, "libxml2": 116, "clone": 116, "recurs": 116, "cd": 116, "patient": 116, "mkdir": 116, "dtvm_prebuild_path": 116, "pythonpath": 116, "tvm_import_python_path": 116, "3rd": 116, "parti": 116, "prefer": 116, "desir": [116, 117, 125], "3rdparti": 116, "echo": 116, "use_llvm": 116, "ON": 116, "use_cuda": 116, "use_rocm": 116, "libtilelang": 116, "libtvm": 116, "libtvm_runtim": 116, "bash": 116, "install_cuda": 116, "sh": 116, "install_amd": 116, "offici": 116, "cu121": 116, "link": 116, "stabl": 116, "thei": [116, 117, 121], "ideal": [116, 117], "bugfix": 116, "hasn": 116, "been": [116, 124], "depict": 117, "descript": 117, "resid": 117, "whichev": 117, "suit": 117, "unawar": 117, "independ": 117, "goal": 117, "worri": 117, "hierarchi": 117, "fulli": 117, "consider": 117, "predefin": 117, "leverag": [117, 125], "readi": 117, "made": 117, "dive": [117, 125], "experienc": 117, "characterist": 117, "offer": 117, "grant": 117, "tailor": 117, "expertis": 117, "expand": [117, 125], "intermedi": [117, 125], "emploi": [117, 118], "placement": 117, "particular": 117, "bandwidth": [117, 125], "overal": 117, "heart": 117, "notion": 117, "portion": 117, "manipul": 117, "unit": 117, "easier": 117, "hallmark": 117, "place": 117, "rather": 117, "leav": 117, "opaqu": 117, "face": 117, "physic": 117, "fast": 117, "chip": 117, "seem": 117, "abund": 117, "becaus": 117, "deriv": 117, "transfer": 117, "furthermor": 117, "streamlin": 118, "dequant": 118, "linearattent": 118, "underli": [118, 125], "sacrif": 118, "art": 118, "instal": 118, "pip": 118, "nightli": 118, "brief": 118, "introduct": 118, "naiv": 118, "concurr": [118, 125], "atomicadd": 118, "conclus": 118, "linear": 118, "tmac": 118, "tabl": 118, "precis": 118, "ast": 118, "tilelibrari": 118, "sequenti": 121, "whole": 121, "know": 121, "reorder": 121, "noth": 121, "serpentin": 121, "stai": 122, "app": 122, "yyttt6": 124, "identifi": 124, "readabl": 124, "example_gemm": 124, "thread_num": 124, "enable_raster": 124, "combinatori": 124, "with_rol": 124, "out_c": 124, "lightweight": 124, "rank": 124, "scheme": 124, "orient": 124, "carve_templ": 124, "roller_hint": 124, "block_row": 124, "block_col": 124, "rasterization_plan": 124, "hereaft": 125, "undergo": 125, "roughli": 125, "categori": 125, "incorrect": 125, "theoret": 125, "focus": 125, "problem": 125, "nsight": 125, "rocprof": 125, "futur": 125, "materi": 125, "again": 125, "eventu": 125, "occur": 125, "jump": 125, "caus": 125, "35": 125, "shape_q": 125, "codegen_cuda": 125, "1257": 125, "ramp": 125, "somewher": 125, "rt_mod_cuda": 125, "std": 125, "cg": 125, "registri": 125, "tilelang_callback_cuda_postproc": 125, "henc": 125, "intercept": 125, "cuda_runtim": 125, "Be": 125, "mind": 125, "debug_print_buff": 125, "debug_print_buffer_condit": 125, "debug_print_value_condit": 125, "debug_print_register_fil": 125, "prefix": 125, "debug_print_msg": 125, "someth": 125, "hello": 125, "world": 125, "diagnos": 125, "deviat": 125, "prong": 125, "suffici": 125, "occup": 125, "aspect": 125}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [3, 0, 0, "-", "cache"], [5, 0, 0, "-", "carver"], [35, 0, 0, "-", "common"], [37, 0, 0, "-", "contrib"], [42, 0, 0, "-", "engine"], [47, 0, 0, "-", "env"], [48, 0, 0, "-", "intrinsics"], [54, 0, 0, "-", "jit"], [68, 0, 0, "-", "language"], [87, 0, 0, "-", "layout"], [91, 0, 0, "-", "math"], [92, 0, 0, "-", "primitives"], [96, 0, 0, "-", "profiler"], [1, 4, 1, "", "set_log_level"], [98, 0, 0, "-", "testing"], [99, 0, 0, "-", "tools"], [101, 0, 0, "-", "transform"], [103, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[2, 1, 1, "", "AutoTuner"], [2, 1, 1, "", "AutotuneResult"], [2, 1, 1, "", "JITContext"], [2, 4, 1, "", "autotune"], [2, 4, 1, "", "check_tensor_list_compatibility"], [2, 4, 1, "", "jit"]], "tilelang.autotuner.AutoTuner": [[2, 2, 1, "", "from_kernel"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_compile_args"]], "tilelang.autotuner.AutotuneResult": [[2, 3, 1, "id0", "config"], [2, 3, 1, "id1", "func"], [2, 3, 1, "id2", "kernel"], [2, 3, 1, "id3", "latency"], [2, 3, 1, "id4", "libcode"], [2, 3, 1, "id5", "ref_latency"]], "tilelang.autotuner.JITContext": [[2, 3, 1, "id6", "atol"], [2, 3, 1, "id7", "cache_input_tensors"], [2, 3, 1, "id8", "max_mismatched_ratio"], [2, 3, 1, "id9", "out_idx"], [2, 3, 1, "id10", "profiler"], [2, 3, 1, "id11", "ref_prog"], [2, 3, 1, "id12", "rtol"], [2, 3, 1, "id13", "skip_check"], [2, 3, 1, "id14", "supply_prog"], [2, 3, 1, "id15", "target"]], "tilelang.cache": [[3, 4, 1, "", "cached"], [3, 4, 1, "", "clear_cache"], [4, 0, 0, "-", "kernel_cache"]], "tilelang.cache.kernel_cache": [[4, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[4, 2, 1, "", "cached"], [4, 2, 1, "", "clear_cache"]], "tilelang.carver": [[6, 0, 0, "-", "analysis"], [7, 0, 0, "-", "arch"], [12, 0, 0, "-", "common_schedules"], [13, 0, 0, "-", "matmul_analysis"], [14, 0, 0, "-", "roller"], [26, 0, 0, "-", "template"], [34, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[6, 1, 1, "", "BlockInfo"], [6, 1, 1, "", "IterInfo"], [6, 4, 1, "", "check_func_with_dynamic"], [6, 4, 1, "", "collect_block_iter_vars_used_in_access_region"], [6, 4, 1, "", "collect_vars_used_in_prim_expr"], [6, 4, 1, "", "detect_dominant_read"], [6, 4, 1, "", "find_var_from_func"], [6, 4, 1, "", "get_coalesced_veclen"], [6, 4, 1, "", "get_max_shared_memory_per_block"], [6, 4, 1, "", "get_max_threads_per_block"], [6, 4, 1, "", "get_reduction_blocks"], [6, 4, 1, "", "get_root_block"], [6, 4, 1, "", "is_broadcast_epilogue"], [6, 4, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[6, 3, 1, "", "block_rv"], [6, 2, 1, "", "dom"], [6, 2, 1, "", "dom_kind"], [6, 2, 1, "", "is_elementwise"], [6, 2, 1, "", "is_gemm"], [6, 2, 1, "", "is_gemv"], [6, 2, 1, "", "is_injective"], [6, 2, 1, "", "is_reduction"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[6, 5, 1, "", "dom"], [6, 3, 1, "", "kind"], [6, 3, 1, "", "loop_rv"], [6, 3, 1, "", "var"]], "tilelang.carver.arch": [[8, 0, 0, "-", "arch_base"], [7, 4, 1, "", "auto_infer_current_arch"], [9, 0, 0, "-", "cdna"], [10, 0, 0, "-", "cpu"], [11, 0, 0, "-", "cuda"], [7, 4, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[8, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[8, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[9, 1, 1, "", "CDNA"], [9, 4, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[10, 1, 1, "", "CPU"], [10, 4, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[11, 1, 1, "", "CUDA"], [11, 1, 1, "", "TensorInstruction"], [11, 4, 1, "", "check_sm_version"], [11, 4, 1, "", "has_mma_support"], [11, 4, 1, "", "is_ada_arch"], [11, 4, 1, "", "is_ampere_arch"], [11, 4, 1, "", "is_cuda_arch"], [11, 4, 1, "", "is_hopper_arch"], [11, 4, 1, "", "is_tensorcore_supported_precision"], [11, 4, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[11, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.common_schedules": [[12, 4, 1, "", "get_block"], [12, 4, 1, "", "get_output_blocks"], [12, 4, 1, "", "try_inline"], [12, 4, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[13, 1, 1, "", "IterKind"], [13, 1, 1, "", "IterTrait"], [13, 4, 1, "", "auto_inline_consumer_chain"], [13, 4, 1, "", "auto_inline_consumers"], [13, 4, 1, "", "auto_inline_producers"], [13, 4, 1, "", "collect_vars_from_expr"], [13, 4, 1, "", "detect_iter_traits"], [13, 4, 1, "", "find_arg_idx_from_buffer_chain"], [13, 4, 1, "", "find_first_similar_buffer"], [13, 4, 1, "", "find_first_similar_region"], [13, 4, 1, "", "find_last_producer_from_buffer"], [13, 4, 1, "", "get_dequantize_block"], [13, 4, 1, "", "get_in_out_dtypes"], [13, 4, 1, "", "get_index_map"], [13, 4, 1, "", "get_ladder_stage3_map"], [13, 4, 1, "", "get_propagate_map"], [13, 4, 1, "", "get_tensorized_func_and_tags"], [13, 4, 1, "", "inline_transpose_block"], [13, 4, 1, "", "is_identity_block"], [13, 4, 1, "", "is_identity_or_transpose_block"], [13, 4, 1, "", "is_transpose_block"], [13, 4, 1, "", "layout_propagate_chain"], [13, 4, 1, "", "make_iter_fusion_index_map"], [13, 4, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[13, 3, 1, "", "kIter_I"], [13, 3, 1, "", "kIter_J"], [13, 3, 1, "", "kIter_K"], [13, 3, 1, "", "kIter_S"], [13, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[13, 3, 1, "", "extent"], [13, 3, 1, "", "kind"]], "tilelang.carver.roller": [[15, 0, 0, "-", "bestfit"], [16, 0, 0, "-", "hint"], [17, 0, 0, "-", "node"], [18, 0, 0, "-", "policy"], [22, 0, 0, "-", "rasterization"], [23, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[15, 1, 1, "", "BestFit"], [15, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[15, 2, 1, "", "free"], [15, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[15, 2, 1, "", "merge"], [15, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[16, 1, 1, "", "Hint"], [16, 1, 1, "", "IntrinInfo"], [16, 1, 1, "", "Stride"], [16, 1, 1, "", "TensorCoreExtraConfig"], [16, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[16, 2, 1, "", "complete_config"], [16, 2, 1, "", "from_dict"], [16, 5, 1, "", "raxis_order"], [16, 5, 1, "", "step"], [16, 2, 1, "", "tensorcore_legalization"], [16, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[16, 5, 1, "", "inter_transform_a"], [16, 5, 1, "", "inter_transform_b"], [16, 2, 1, "", "is_input_8bit"], [16, 5, 1, "", "smooth_a"], [16, 5, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[16, 5, 1, "", "ax"], [16, 2, 1, "", "compute_elements_from_shape"], [16, 2, 1, "", "compute_strides_from_shape"], [16, 2, 1, "", "is_valid"], [16, 5, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[16, 2, 1, "", "get_rstep"], [16, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[17, 1, 1, "", "BlockAnalyzer"], [17, 1, 1, "", "Edge"], [17, 1, 1, "", "Node"], [17, 1, 1, "", "OutputNode"], [17, 1, 1, "", "PlaceHolderNode"], [17, 1, 1, "", "PrimFuncNode"], [17, 4, 1, "", "find_topo_sort"], [17, 4, 1, "", "find_topo_sort_priority"], [17, 4, 1, "", "pre_order_traverse"], [17, 4, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[17, 2, 1, "", "get_block_info"], [17, 2, 1, "", "get_block_name"], [17, 2, 1, "", "get_buffers"], [17, 2, 1, "", "get_consumer_blocks"], [17, 2, 1, "", "get_input_buffers"], [17, 2, 1, "", "get_output_buffers"], [17, 2, 1, "", "get_producer_blocks"], [17, 2, 1, "", "get_reduce_axis"], [17, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[17, 3, 1, "", "dst_id"], [17, 3, 1, "", "dst_node"], [17, 3, 1, "", "src_id"], [17, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[17, 2, 1, "", "add_tag"], [17, 2, 1, "", "get_dtype"], [17, 2, 1, "", "get_ir"], [17, 2, 1, "", "get_shape"], [17, 2, 1, "", "get_tag"], [17, 5, 1, "", "inputs"], [17, 2, 1, "", "is_output"], [17, 2, 1, "", "is_placeholder"], [17, 2, 1, "", "num_outputs"], [17, 5, 1, "", "outputs"], [17, 2, 1, "", "set_dtype"], [17, 2, 1, "", "set_inputs"], [17, 2, 1, "", "set_outputs"], [17, 2, 1, "", "set_shape"], [17, 2, 1, "", "set_tag"], [17, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[17, 2, 1, "", "get_ir"], [17, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[17, 2, 1, "", "get_ir"], [17, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[17, 2, 1, "", "extent_wrapper"], [17, 2, 1, "", "footprint"], [17, 2, 1, "", "get_buffer_dtype"], [17, 2, 1, "", "get_input_buffers"], [17, 2, 1, "", "get_opt_shape"], [17, 2, 1, "", "get_reduce_inputs_dtype"], [17, 2, 1, "", "get_space_dim"], [17, 2, 1, "", "infer_tensorcore_axis"], [17, 2, 1, "", "propagate"], [17, 2, 1, "", "propagate_inputs"], [17, 2, 1, "", "propagate_inputs_on_reduction"], [17, 2, 1, "", "propagate_outputs"], [17, 2, 1, "", "propagate_reduction_inputs"], [17, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[19, 0, 0, "-", "common"], [20, 0, 0, "-", "default"], [21, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[19, 4, 1, "", "coalesced_factor"], [19, 4, 1, "", "coalesced_tensor_shape"], [19, 4, 1, "", "factorize"], [19, 4, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[20, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[20, 3, 1, "", "arch"], [20, 2, 1, "", "assign_block_size"], [20, 2, 1, "", "check_tile_shape_isvalid"], [20, 2, 1, "", "compute_node_stride_map"], [20, 2, 1, "", "compute_tile_dict"], [20, 2, 1, "", "compute_workload_per_item"], [20, 2, 1, "", "dfs_smem_tile"], [20, 2, 1, "", "emit_config"], [20, 2, 1, "", "from_output_nodes"], [20, 2, 1, "", "from_prim_func"], [20, 3, 1, "", "func"], [20, 2, 1, "", "get_base_tile"], [20, 2, 1, "", "get_block_size"], [20, 2, 1, "", "get_node_reduce_step_candidates"], [20, 2, 1, "", "infer_node_smem_usage"], [20, 3, 1, "", "nodes"], [20, 2, 1, "", "plan_rasterization"], [20, 2, 1, "", "recommend_block_size"], [20, 2, 1, "", "score_block_size"], [20, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[21, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[21, 3, 1, "", "block_reduction_depth"], [21, 2, 1, "", "check_tile_shape_isvalid"], [21, 2, 1, "", "compute_node_stride_map"], [21, 2, 1, "", "get_node_reduce_step_candidates"], [21, 2, 1, "", "infer_node_smem_usage"], [21, 3, 1, "", "pipeline_stage"], [21, 2, 1, "", "plan_rasterization"], [21, 3, 1, "", "use_async_copy"], [21, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[22, 1, 1, "", "NoRasterization"], [22, 1, 1, "", "Rasterization"], [22, 1, 1, "", "Rasterization2DColumn"], [22, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[22, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[22, 2, 1, "", "get_code"], [22, 5, 1, "", "panel_width"], [22, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[22, 2, 1, "", "get_code"], [22, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[22, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[24, 0, 0, "-", "common"], [25, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[24, 1, 1, "", "InputShapeInference"], [24, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[24, 2, 1, "", "get_input_exprs"], [24, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[25, 1, 1, "", "DependencyAnalysis"], [25, 1, 1, "", "InputShapeInference"], [25, 1, 1, "", "Statement"], [25, 1, 1, "", "TensorDepNode"], [25, 4, 1, "", "get_analyzer_by_tir"], [25, 4, 1, "", "region_exist_in_list"], [25, 4, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[25, 2, 1, "", "analyze"], [25, 2, 1, "", "find_path_from_source"], [25, 2, 1, "", "get_or_create_node"], [25, 2, 1, "", "print_dependencies"], [25, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[25, 2, 1, "", "construct_dependency_target"], [25, 2, 1, "", "get_input_exprs"], [25, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[25, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[25, 2, 1, "", "add_next"], [25, 2, 1, "", "add_prev"], [25, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[27, 0, 0, "-", "base"], [28, 0, 0, "-", "conv"], [29, 0, 0, "-", "elementwise"], [30, 0, 0, "-", "flashattention"], [31, 0, 0, "-", "gemv"], [32, 0, 0, "-", "general_reduce"], [33, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[27, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[27, 5, 1, "", "arch"], [27, 2, 1, "", "equivalent_function"], [27, 2, 1, "", "get_hardware_aware_configs"], [27, 2, 1, "", "has_arch"], [27, 2, 1, "", "initialize_function"], [27, 2, 1, "", "is_ampere_arch"], [27, 2, 1, "", "is_cdna_arch"], [27, 2, 1, "", "is_volta_arch"], [27, 5, 1, "", "output_nodes"], [27, 2, 1, "", "recommend_hints"], [27, 2, 1, "", "set_function"], [27, 2, 1, "", "set_output_nodes"], [27, 2, 1, "", "with_arch"]], "tilelang.carver.template.conv": [[28, 1, 1, "", "ConvTemplate"]], "tilelang.carver.template.conv.ConvTemplate": [[28, 3, 1, "id0", "C"], [28, 3, 1, "id1", "D"], [28, 3, 1, "id2", "F"], [28, 3, 1, "id3", "H"], [28, 3, 1, "id4", "K"], [28, 3, 1, "id5", "N"], [28, 3, 1, "id6", "P"], [28, 3, 1, "id7", "S"], [28, 3, 1, "id8", "W"], [28, 3, 1, "id9", "accum_dtype"], [28, 5, 1, "", "class_attributes"], [28, 2, 1, "", "get_hardware_aware_configs"], [28, 3, 1, "id10", "in_dtype"], [28, 2, 1, "", "initialize_function"], [28, 3, 1, "id11", "out_dtype"], [28, 2, 1, "", "params_as_dict"], [28, 3, 1, "id12", "with_bias"]], "tilelang.carver.template.elementwise": [[29, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[29, 5, 1, "", "class_attributes"], [29, 3, 1, "id0", "dtype"], [29, 2, 1, "", "get_hardware_aware_configs"], [29, 2, 1, "", "initialize_function"], [29, 2, 1, "", "params_as_dict"], [29, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[30, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[30, 3, 1, "", "accum_dtype"], [30, 3, 1, "", "batch_size"], [30, 5, 1, "", "class_attributes"], [30, 2, 1, "", "get_hardware_aware_configs"], [30, 3, 1, "", "head_dim"], [30, 3, 1, "", "in_dtype"], [30, 2, 1, "", "initialize_function"], [30, 3, 1, "", "is_causal"], [30, 3, 1, "", "num_heads"], [30, 3, 1, "", "out_dtype"], [30, 2, 1, "", "params_as_dict"], [30, 3, 1, "", "seq_kv_length"], [30, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[31, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[31, 3, 1, "", "K"], [31, 3, 1, "", "N"], [31, 3, 1, "", "accum_dtype"], [31, 5, 1, "", "class_attributes"], [31, 2, 1, "", "get_hardware_aware_configs"], [31, 3, 1, "", "in_dtype"], [31, 2, 1, "", "initialize_function"], [31, 3, 1, "", "out_dtype"], [31, 2, 1, "", "params_as_dict"], [31, 3, 1, "", "trans_B"], [31, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[32, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[32, 5, 1, "", "class_attributes"], [32, 3, 1, "", "dtype"], [32, 2, 1, "", "get_hardware_aware_configs"], [32, 2, 1, "", "initialize_function"], [32, 2, 1, "", "params_as_dict"], [32, 3, 1, "", "shape"], [32, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[33, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[33, 3, 1, "id0", "K"], [33, 3, 1, "id1", "M"], [33, 3, 1, "id2", "N"], [33, 3, 1, "id3", "accum_dtype"], [33, 5, 1, "", "class_attributes"], [33, 2, 1, "", "get_hardware_aware_configs"], [33, 3, 1, "id4", "in_dtype"], [33, 2, 1, "", "initialize_function"], [33, 3, 1, "id5", "out_dtype"], [33, 2, 1, "", "params_as_dict"], [33, 3, 1, "id6", "trans_A"], [33, 3, 1, "id7", "trans_B"], [33, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[34, 4, 1, "", "get_rasterization_code"], [34, 4, 1, "", "get_roller_hints_from_func"], [34, 4, 1, "", "get_roller_hints_from_output_nodes"], [34, 4, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[36, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[36, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[36, 3, 1, "", "InterWarpTransform"], [36, 3, 1, "", "IntraWarpTransform"], [36, 3, 1, "", "LDMatrixTransform"], [36, 3, 1, "", "NonTransform"], [36, 2, 1, "", "is_inter_warp_transform"], [36, 2, 1, "", "is_intra_warp_transform"], [36, 2, 1, "", "is_ld_matrix_transform"], [36, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[38, 0, 0, "-", "cc"], [39, 0, 0, "-", "dlpack"], [40, 0, 0, "-", "hipcc"], [41, 0, 0, "-", "nvcc"]], "tilelang.contrib.cc": [[38, 4, 1, "", "create_executable"], [38, 4, 1, "", "create_shared"], [38, 4, 1, "", "create_staticlib"], [38, 4, 1, "", "cross_compiler"], [38, 4, 1, "", "get_cc"], [38, 4, 1, "", "get_cplus_compiler"], [38, 4, 1, "", "get_global_symbol_section_map"], [38, 4, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[39, 4, 1, "", "convert_func"], [39, 4, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[40, 4, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[41, 4, 1, "", "callback_libdevice_path"], [41, 4, 1, "", "compile_cuda"], [41, 4, 1, "", "find_cuda_path"], [41, 4, 1, "", "get_cuda_version"], [41, 4, 1, "", "have_cudagraph"], [41, 4, 1, "", "have_fp16"], [41, 4, 1, "", "have_int8"], [41, 4, 1, "", "have_tensorcore"], [41, 4, 1, "", "parse_compute_version"]], "tilelang.engine": [[43, 0, 0, "-", "callback"], [44, 0, 0, "-", "lower"], [45, 0, 0, "-", "param"], [46, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[43, 4, 1, "", "register_cuda_postproc"], [43, 4, 1, "", "register_cuda_postproc_callback"], [43, 4, 1, "", "register_hip_postproc"], [43, 4, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[44, 4, 1, "", "canon_target_host"], [44, 4, 1, "", "device_codegen"], [44, 4, 1, "", "device_codegen_without_compile"], [44, 4, 1, "", "extrac_params"], [44, 4, 1, "", "get_device_call"], [44, 4, 1, "", "get_host_call"], [44, 4, 1, "", "has_device_kernel_launch"], [44, 4, 1, "", "host_codegen"], [44, 4, 1, "", "is_cpu_device_backend"], [44, 4, 1, "", "is_device_call"], [44, 4, 1, "", "is_device_call_c_device"], [44, 4, 1, "", "lower"]], "tilelang.engine.param": [[45, 1, 1, "", "CompiledArtifact"], [45, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[45, 3, 1, "", "device_mod"], [45, 3, 1, "", "host_mod"], [45, 3, 1, "", "kernel_source"], [45, 3, 1, "", "params"], [45, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[45, 3, 1, "", "dtype"], [45, 2, 1, "", "from_buffer"], [45, 2, 1, "", "from_var"], [45, 2, 1, "", "is_boolean"], [45, 2, 1, "", "is_float8"], [45, 2, 1, "", "is_scalar"], [45, 2, 1, "", "is_unsigned"], [45, 3, 1, "", "shape"]], "tilelang.engine.phase": [[46, 4, 1, "", "LowerAndLegalize"], [46, 4, 1, "", "OptimizeForTarget"]], "tilelang.env": [[47, 4, 1, "", "disable_cache"], [47, 4, 1, "", "enable_cache"], [47, 4, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[49, 0, 0, "-", "mfma_layout"], [50, 0, 0, "-", "mfma_macro_generator"], [51, 0, 0, "-", "mma_layout"], [52, 0, 0, "-", "mma_macro_generator"], [53, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[49, 4, 1, "", "make_mfma_swizzle_layout"], [49, 4, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [49, 4, 1, "", "shared_16x16_to_local_64x4_layout_A"], [49, 4, 1, "", "shared_16x16_to_local_64x4_layout_B"], [49, 4, 1, "", "shared_16x16_to_local_64x4_layout_C"], [49, 4, 1, "", "shared_16x32_to_local_64x8_layout_A"], [49, 4, 1, "", "shared_16x32_to_local_64x8_layout_B"], [49, 4, 1, "", "shared_16x4_to_local_64x1_layout_A"], [49, 4, 1, "", "shared_4x16_to_local_64x1_layout_B"], [49, 4, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [49, 4, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [49, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [49, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [49, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [49, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [49, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [49, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[50, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[50, 3, 1, "", "M_DIM"], [50, 3, 1, "", "N_DIM"], [50, 3, 1, "", "WARP_SIZE"], [50, 3, 1, "", "dtype_abbrv"], [50, 2, 1, "", "extract_thread_binding"], [50, 2, 1, "", "get_ldmatrix_index_map"], [50, 3, 1, "", "is_m_first"], [50, 3, 1, "", "k_pack"], [50, 2, 1, "", "ldmatrix_a"], [50, 2, 1, "", "ldmatrix_b"], [50, 2, 1, "", "mfma"], [50, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[51, 4, 1, "", "get_swizzle_layout"], [51, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [51, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [51, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [51, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [51, 4, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [51, 4, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [51, 4, 1, "", "make_mma_swizzle_layout"], [51, 4, 1, "", "mma_32x8_to_shared_16x16_layout"], [51, 4, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [51, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [51, 4, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [51, 4, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [51, 4, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [51, 4, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [51, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [51, 4, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [51, 4, 1, "", "shared_32x16_to_mma_32x16_layout"], [51, 4, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[52, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [52, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [52, 1, 1, "", "TensorCoreIntrinEmitter"], [52, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[52, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[52, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[52, 3, 1, "", "M_DIM"], [52, 3, 1, "", "N_DIM"], [52, 3, 1, "", "WARP_SIZE"], [52, 3, 1, "", "dtype_abbrv"], [52, 2, 1, "", "extract_thread_binding"], [52, 2, 1, "", "get_store_index_map"], [52, 3, 1, "", "is_m_first"], [52, 2, 1, "", "ldmatrix_a"], [52, 2, 1, "", "ldmatrix_b"], [52, 2, 1, "", "make_mma_load_layout"], [52, 2, 1, "", "make_mma_store_layout"], [52, 2, 1, "", "mma"], [52, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[52, 2, 1, "", "ldmatrix_a"], [52, 2, 1, "", "ldmatrix_b"], [52, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[53, 4, 1, "", "get_ldmatrix_offset"], [53, 4, 1, "", "get_mma_micro_size"], [53, 4, 1, "", "index_to_coordinates"], [53, 4, 1, "", "mfma_store_index_map"], [53, 4, 1, "", "mma_store_index_map"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [53, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [53, 4, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[55, 0, 0, "-", "adapter"], [54, 4, 1, "", "compile"], [66, 0, 0, "-", "env"], [54, 4, 1, "", "jit"], [67, 0, 0, "-", "kernel"]], "tilelang.jit.adapter": [[56, 0, 0, "-", "base"], [57, 0, 0, "-", "ctypes"], [59, 0, 0, "-", "cython"], [62, 0, 0, "-", "dlpack"], [63, 0, 0, "-", "libgen"], [64, 0, 0, "-", "utils"], [65, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[56, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[56, 3, 1, "", "func"], [56, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[58, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[58, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[58, 3, 1, "", "dynamic_symbolic_map"], [58, 2, 1, "", "from_database"], [58, 2, 1, "", "get_kernel_source"], [58, 3, 1, "", "ir_module"], [58, 5, 1, "", "is_dynamic"], [58, 3, 1, "", "kernel_global_source"], [58, 3, 1, "", "lib"], [58, 5, 1, "", "lib_code"], [58, 5, 1, "", "libpath"], [58, 3, 1, "", "param_dtypes"], [58, 3, 1, "", "param_shapes"], [58, 3, 1, "", "pass_configs"], [58, 5, 1, "", "prim_func"], [58, 5, 1, "", "srcpath"], [58, 3, 1, "", "target"], [58, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[60, 0, 0, "-", "adapter"], [61, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[60, 1, 1, "", "CythonKernelAdapter"], [60, 4, 1, "", "get_cache_dir"], [60, 4, 1, "", "get_cached_lib"], [60, 4, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[60, 3, 1, "", "buffer_device_map"], [60, 3, 1, "", "buffer_dtype_map"], [60, 3, 1, "", "dynamic_symbolic_map"], [60, 2, 1, "", "from_database"], [60, 2, 1, "", "get_kernel_source"], [60, 3, 1, "", "ir_module"], [60, 5, 1, "", "is_dynamic"], [60, 3, 1, "", "kernel_global_source"], [60, 3, 1, "", "lib"], [60, 5, 1, "", "lib_code"], [60, 5, 1, "", "libpath"], [60, 3, 1, "", "pass_configs"], [60, 5, 1, "", "prim_func"], [60, 3, 1, "", "ptr_map"], [60, 5, 1, "", "srcpath"], [60, 3, 1, "", "static_shape_map"], [60, 3, 1, "", "target"], [60, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[61, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[61, 2, 1, "", "forward"], [61, 2, 1, "", "set_buffer_device_map"], [61, 2, 1, "", "set_buffer_dtype_map"], [61, 2, 1, "", "set_dynamic_symbolic_map"], [61, 2, 1, "", "set_ptr_map"], [61, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[62, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[63, 1, 1, "", "LibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[63, 2, 1, "", "compile_lib"], [63, 2, 1, "", "get_lib_path"], [63, 2, 1, "", "get_source_path"], [63, 3, 1, "", "lib_code"], [63, 3, 1, "", "libpath"], [63, 2, 1, "", "load_lib"], [63, 2, 1, "", "remove_lib"], [63, 2, 1, "", "set_lib_path"], [63, 2, 1, "", "set_src_path"], [63, 3, 1, "", "srcpath"], [63, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.utils": [[64, 4, 1, "", "get_annotated_mod"], [64, 4, 1, "", "is_cpu_target"], [64, 4, 1, "", "is_cuda_target"], [64, 4, 1, "", "is_hip_target"], [64, 4, 1, "", "match_declare_kernel"], [64, 4, 1, "", "match_declare_kernel_cpu"], [64, 4, 1, "", "match_global_kernel"]], "tilelang.jit.adapter.wrapper": [[65, 1, 1, "", "BaseWrapper"], [65, 1, 1, "", "TLCPUSourceWrapper"], [65, 1, 1, "", "TLCUDASourceWrapper"], [65, 1, 1, "", "TLHIPSourceWrapper"], [65, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[65, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[65, 3, 1, "", "CALL_PREFIX"], [65, 3, 1, "", "INIT_FUNC"], [65, 3, 1, "", "backend"], [65, 2, 1, "", "create_call_func"], [65, 3, 1, "", "device_mod"], [65, 2, 1, "", "get_cpu_init_func"], [65, 2, 1, "", "get_dynamic_symbolic_set"], [65, 3, 1, "", "host_mod"], [65, 2, 1, "", "parse_source_information"], [65, 3, 1, "", "pass_configs"], [65, 5, 1, "", "prim_func"], [65, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[65, 3, 1, "", "backend"], [65, 2, 1, "", "create_dispatch_func"], [65, 3, 1, "", "device_mod"], [65, 2, 1, "", "generate_tma_descriptor_args"], [65, 2, 1, "", "get_cuda_init_func"], [65, 2, 1, "", "get_dynamic_symbolic_set"], [65, 3, 1, "", "host_mod"], [65, 2, 1, "", "is_tma_descriptor_arg"], [65, 2, 1, "", "parse_source_information"], [65, 3, 1, "", "pass_configs"], [65, 5, 1, "", "prim_func"], [65, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[65, 2, 1, "", "get_hip_init_func"], [65, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[65, 2, 1, "", "assign_device_module"], [65, 2, 1, "", "assign_host_module"], [65, 2, 1, "", "assign_optimized_module"], [65, 2, 1, "", "assign_pass_configs"], [65, 3, 1, "", "device_mod"], [65, 3, 1, "", "host_mod"], [65, 3, 1, "", "lib"], [65, 3, 1, "", "pass_configs"], [65, 3, 1, "", "target"], [65, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[67, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[67, 3, 1, "id0", "adapter"], [67, 3, 1, "id1", "artifact"], [67, 2, 1, "", "export_library"], [67, 2, 1, "", "from_database"], [67, 2, 1, "", "from_tilelang_function"], [67, 2, 1, "", "get_host_source"], [67, 2, 1, "", "get_kernel_source"], [67, 2, 1, "", "get_profiler"], [67, 5, 1, "", "host_source"], [67, 5, 1, "", "kernel_source"], [67, 5, 1, "", "out_idx"], [67, 5, 1, "", "params"], [67, 2, 1, "", "run_once"], [67, 3, 1, "id2", "torch_function"]], "tilelang.language": [[69, 0, 0, "-", "allocate"], [68, 4, 1, "", "annotate_layout"], [70, 0, 0, "-", "builtin"], [71, 0, 0, "-", "copy"], [72, 0, 0, "-", "customize"], [73, 0, 0, "-", "fill"], [74, 0, 0, "-", "frame"], [75, 0, 0, "-", "gemm"], [68, 4, 1, "", "import_source"], [76, 0, 0, "-", "kernel"], [77, 0, 0, "-", "memscope"], [78, 0, 0, "-", "parallel"], [79, 0, 0, "-", "pipeline"], [80, 0, 0, "-", "print"], [81, 0, 0, "-", "proxy"], [82, 0, 0, "-", "reduce"], [68, 4, 1, "", "symbolic"], [83, 0, 0, "-", "tir"], [68, 4, 1, "", "use_swizzle"]], "tilelang.language.allocate": [[69, 4, 1, "", "alloc_fragment"], [69, 4, 1, "", "alloc_local"], [69, 4, 1, "", "alloc_shared"], [69, 4, 1, "", "alloc_var"]], "tilelang.language.builtin": [[70, 4, 1, "", "CreateListofMBarrierOp"], [70, 4, 1, "", "CreateTMADescriptorOp"], [70, 4, 1, "", "FenceProxyAsyncOp"], [70, 4, 1, "", "GetMBarrierOp"], [70, 4, 1, "", "MBarrierExpectTX"], [70, 4, 1, "", "MBarrierWaitParity"], [70, 4, 1, "", "NoSetMaxNReg"], [70, 4, 1, "", "SetMaxNReg"], [70, 4, 1, "", "TMALoadOp"], [70, 4, 1, "", "TMAStoreArrive"], [70, 4, 1, "", "TMAStoreWait"], [70, 4, 1, "", "WaitWgmma"]], "tilelang.language.copy": [[71, 4, 1, "", "buffer_load_to_tile_region"], [71, 4, 1, "", "buffer_region_to_tile_region"], [71, 4, 1, "", "buffer_to_tile_region"], [71, 4, 1, "", "c2d_im2col"], [71, 4, 1, "", "copy"], [71, 4, 1, "", "region"]], "tilelang.language.customize": [[72, 4, 1, "", "atomic_add"], [72, 4, 1, "", "atomic_addx2"], [72, 4, 1, "", "clamp"], [72, 4, 1, "", "dp4a"], [72, 4, 1, "", "reshape"], [72, 4, 1, "", "view"]], "tilelang.language.fill": [[73, 4, 1, "", "clear"], [73, 4, 1, "", "fill"]], "tilelang.language.frame": [[74, 1, 1, "", "FrameStack"], [74, 1, 1, "", "LetFrame"], [74, 4, 1, "", "get_let_value"], [74, 4, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[74, 2, 1, "", "get_value"], [74, 2, 1, "", "has_value"], [74, 2, 1, "", "pop"], [74, 2, 1, "", "push"], [74, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[74, 2, 1, "", "Current"], [74, 2, 1, "", "get_value"], [74, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[75, 4, 1, "", "gemm"]], "tilelang.language.kernel": [[76, 1, 1, "", "FrameStack"], [76, 4, 1, "", "Kernel"], [76, 1, 1, "", "KernelLaunchFrame"], [76, 4, 1, "", "get_block_binding"], [76, 4, 1, "", "get_block_bindings"], [76, 4, 1, "", "get_thread_binding"], [76, 4, 1, "", "get_thread_bindings"]], "tilelang.language.kernel.FrameStack": [[76, 2, 1, "", "pop"], [76, 2, 1, "", "push"], [76, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[76, 2, 1, "", "Current"], [76, 5, 1, "", "blocks"], [76, 2, 1, "", "get_block_binding"], [76, 2, 1, "", "get_block_bindings"], [76, 2, 1, "", "get_block_extent"], [76, 2, 1, "", "get_num_threads"], [76, 2, 1, "", "get_thread_binding"], [76, 2, 1, "", "get_thread_bindings"], [76, 2, 1, "", "get_thread_extent"], [76, 5, 1, "", "num_threads"], [76, 5, 1, "", "threads"]], "tilelang.language.parallel": [[78, 4, 1, "", "Parallel"]], "tilelang.language.pipeline": [[79, 4, 1, "", "Pipelined"]], "tilelang.language.print": [[80, 4, 1, "", "print"]], "tilelang.language.proxy": [[81, 1, 1, "", "BaseTensorProxy"], [81, 1, 1, "", "BufferProxy"], [81, 1, 1, "", "FragmentBufferProxy"], [81, 1, 1, "", "LocalBufferProxy"], [81, 1, 1, "", "SharedBufferProxy"], [81, 1, 1, "", "TensorProxy"], [81, 4, 1, "", "make_tensor"], [81, 4, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[81, 3, 1, "", "default_align"], [81, 3, 1, "", "default_offset_factor"], [81, 3, 1, "", "default_scope"], [81, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[81, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[81, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[81, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[81, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[82, 4, 1, "", "reduce"], [82, 4, 1, "", "reduce_abssum"], [82, 4, 1, "", "reduce_max"], [82, 4, 1, "", "reduce_min"], [82, 4, 1, "", "reduce_sum"]], "tilelang.language.tir": [[84, 0, 0, "-", "entry"], [85, 0, 0, "-", "ir"], [86, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[84, 4, 1, "", "macro"], [84, 4, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[85, 4, 1, "", "grid"], [85, 4, 1, "", "parallel"], [85, 4, 1, "", "serial"], [85, 4, 1, "", "thread_binding"], [85, 4, 1, "", "unroll"], [85, 4, 1, "", "vectorized"]], "tilelang.language.tir.op": [[86, 4, 1, "", "TVMBackendAllocWorkspace"], [86, 4, 1, "", "TVMBackendFreeWorkspace"], [86, 4, 1, "", "abs"], [86, 4, 1, "", "acos"], [86, 4, 1, "", "acosh"], [86, 4, 1, "", "address_of"], [86, 4, 1, "", "all"], [86, 4, 1, "", "any"], [86, 4, 1, "", "anylist_getitem"], [86, 4, 1, "", "anylist_resetitem"], [86, 4, 1, "", "anylist_setitem_call_cpacked"], [86, 4, 1, "", "anylist_setitem_call_packed"], [86, 4, 1, "", "asin"], [86, 4, 1, "", "asinh"], [86, 4, 1, "", "assume"], [86, 4, 1, "", "atan"], [86, 4, 1, "", "atan2"], [86, 4, 1, "", "atanh"], [86, 4, 1, "", "bitwise_and"], [86, 4, 1, "", "bitwise_not"], [86, 4, 1, "", "bitwise_or"], [86, 4, 1, "", "bitwise_xor"], [86, 4, 1, "", "call_cpacked"], [86, 4, 1, "", "call_cpacked_lowered"], [86, 4, 1, "", "call_extern"], [86, 4, 1, "", "call_intrin"], [86, 4, 1, "", "call_llvm_intrin"], [86, 4, 1, "", "call_llvm_pure_intrin"], [86, 4, 1, "", "call_packed"], [86, 4, 1, "", "call_packed_lowered"], [86, 4, 1, "", "call_pure_extern"], [86, 4, 1, "", "call_tir"], [86, 4, 1, "", "ceil"], [86, 4, 1, "", "ceildiv"], [86, 4, 1, "", "clz"], [86, 4, 1, "", "comm_reducer"], [86, 4, 1, "", "copysign"], [86, 4, 1, "", "cos"], [86, 4, 1, "", "cosh"], [86, 4, 1, "", "create_barriers"], [86, 4, 1, "", "div"], [86, 4, 1, "", "end_profile_intrinsic"], [86, 4, 1, "", "erf"], [86, 4, 1, "", "exp"], [86, 4, 1, "", "exp10"], [86, 4, 1, "", "exp2"], [86, 4, 1, "", "floor"], [86, 4, 1, "", "floordiv"], [86, 4, 1, "", "floormod"], [86, 4, 1, "", "fmod"], [86, 4, 1, "", "hypot"], [86, 4, 1, "", "if_then_else"], [86, 4, 1, "", "indexdiv"], [86, 4, 1, "", "indexmod"], [86, 4, 1, "", "infinity"], [86, 4, 1, "", "isfinite"], [86, 4, 1, "", "isinf"], [86, 4, 1, "", "isnan"], [86, 4, 1, "", "isnullptr"], [86, 4, 1, "", "ldexp"], [86, 4, 1, "", "likely"], [86, 4, 1, "", "log"], [86, 4, 1, "", "log10"], [86, 4, 1, "", "log1p"], [86, 4, 1, "", "log2"], [86, 4, 1, "", "lookup_param"], [86, 4, 1, "", "max_value"], [86, 4, 1, "", "min_value"], [86, 4, 1, "", "mma_fill"], [86, 4, 1, "", "mma_store"], [86, 4, 1, "", "nearbyint"], [86, 4, 1, "", "nextafter"], [86, 4, 1, "", "popcount"], [86, 4, 1, "", "pow"], [86, 4, 1, "", "power"], [86, 4, 1, "", "ptx_arrive_barrier"], [86, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [86, 4, 1, "", "ptx_commit_group"], [86, 4, 1, "", "ptx_cp_async"], [86, 4, 1, "", "ptx_cp_async_barrier"], [86, 4, 1, "", "ptx_cp_async_bulk"], [86, 4, 1, "", "ptx_init_barrier_thread_count"], [86, 4, 1, "", "ptx_ldmatrix"], [86, 4, 1, "", "ptx_mma"], [86, 4, 1, "", "ptx_mma_sp"], [86, 4, 1, "", "ptx_wait_barrier"], [86, 4, 1, "", "ptx_wait_group"], [86, 4, 1, "", "q_multiply_shift"], [86, 4, 1, "", "q_multiply_shift_per_axis"], [86, 4, 1, "", "reinterpret"], [86, 4, 1, "", "ret"], [86, 4, 1, "", "round"], [86, 4, 1, "", "rsqrt"], [86, 4, 1, "", "shift_left"], [86, 4, 1, "", "shift_right"], [86, 4, 1, "", "sigmoid"], [86, 4, 1, "", "sin"], [86, 4, 1, "", "sinh"], [86, 4, 1, "", "sqrt"], [86, 4, 1, "", "start_profile_intrinsic"], [86, 4, 1, "", "tan"], [86, 4, 1, "", "tanh"], [86, 4, 1, "", "trace"], [86, 4, 1, "", "trunc"], [86, 4, 1, "", "truncdiv"], [86, 4, 1, "", "truncmod"], [86, 4, 1, "", "tvm_access_ptr"], [86, 4, 1, "", "tvm_bmma_sync"], [86, 4, 1, "", "tvm_check_return"], [86, 4, 1, "", "tvm_fill_fragment"], [86, 4, 1, "", "tvm_load_matrix_sync"], [86, 4, 1, "", "tvm_mfma"], [86, 4, 1, "", "tvm_mfma_store"], [86, 4, 1, "", "tvm_mma_sync"], [86, 4, 1, "", "tvm_rdna_wmma"], [86, 4, 1, "", "tvm_rdna_wmma_store"], [86, 4, 1, "", "tvm_stack_alloca"], [86, 4, 1, "", "tvm_stack_make_array"], [86, 4, 1, "", "tvm_stack_make_shape"], [86, 4, 1, "", "tvm_storage_sync"], [86, 4, 1, "", "tvm_store_matrix_sync"], [86, 4, 1, "", "tvm_struct_get"], [86, 4, 1, "", "tvm_struct_set"], [86, 4, 1, "", "tvm_thread_allreduce"], [86, 4, 1, "", "tvm_thread_invariant"], [86, 4, 1, "", "tvm_throw_last_error"], [86, 4, 1, "", "tvm_tuple"], [86, 4, 1, "", "tvm_warp_activemask"], [86, 4, 1, "", "tvm_warp_shuffle"], [86, 4, 1, "", "tvm_warp_shuffle_down"], [86, 4, 1, "", "tvm_warp_shuffle_up"], [86, 4, 1, "", "type_annotation"], [86, 4, 1, "", "undef"], [86, 4, 1, "", "vectorcombine"], [86, 4, 1, "", "vectorhigh"], [86, 4, 1, "", "vectorlow"], [86, 4, 1, "", "vscale"]], "tilelang.layout": [[88, 0, 0, "-", "fragment"], [89, 0, 0, "-", "layout"], [90, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[88, 1, 1, "", "Fragment"], [88, 4, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[88, 2, 1, "", "condense_rep_var"], [88, 2, 1, "", "get_thread_size"], [88, 2, 1, "", "map_forward_thread"], [88, 2, 1, "", "repeat"], [88, 2, 1, "", "replicate"], [88, 5, 1, "", "thread"]], "tilelang.layout.layout": [[89, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[89, 2, 1, "", "get_forward_vars"], [89, 2, 1, "", "get_input_shape"], [89, 2, 1, "", "get_output_shape"], [89, 5, 1, "", "index"], [89, 2, 1, "", "inverse"], [89, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[90, 4, 1, "", "make_swizzled_layout"]], "tilelang.math": [[91, 4, 1, "", "cdiv"], [91, 4, 1, "", "next_power_of_2"]], "tilelang.primitives": [[93, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[94, 0, 0, "-", "base"], [93, 4, 1, "", "gemm"], [95, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[94, 1, 1, "", "GemmBaseParams"], [94, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[94, 3, 1, "", "A"], [94, 3, 1, "", "B"], [94, 3, 1, "", "C"], [94, 3, 1, "", "block_col_warps"], [94, 3, 1, "", "block_row_warps"], [94, 3, 1, "", "chunk"], [94, 5, 1, "", "class_attributes"], [94, 2, 1, "", "get_warp_size"], [94, 2, 1, "", "infer_block_partition"], [94, 3, 1, "", "k_pack"], [94, 2, 1, "", "params_as_dict"], [94, 3, 1, "", "policy"], [94, 3, 1, "", "transpose_A"], [94, 3, 1, "", "transpose_B"], [94, 3, 1, "", "warp_col_tiles"], [94, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[94, 3, 1, "", "FullCol"], [94, 3, 1, "", "FullRow"], [94, 3, 1, "", "Square"], [94, 2, 1, "", "compute_warp_partition"], [94, 2, 1, "", "from_warp_partition"], [94, 2, 1, "", "is_full_col"], [94, 2, 1, "", "is_full_row"], [94, 2, 1, "", "is_square"], [94, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[95, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[95, 5, 1, "", "accum_dtype"], [95, 2, 1, "", "gemm_rrr"], [95, 2, 1, "", "gemm_rsr"], [95, 2, 1, "", "gemm_srr"], [95, 2, 1, "", "gemm_ssr"], [95, 5, 1, "", "in_dtype"], [95, 2, 1, "", "invoke"]], "tilelang.profiler": [[96, 1, 1, "", "Profiler"], [97, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[96, 3, 1, "id0", "adapter"], [96, 2, 1, "", "assert_allclose"], [96, 2, 1, "", "assert_consistent"], [96, 2, 1, "", "determine_profiler"], [96, 2, 1, "", "do_bench"], [96, 5, 1, "", "func"], [96, 3, 1, "id1", "params"], [96, 3, 1, "id2", "result_idx"], [96, 2, 1, "", "run_once"], [96, 3, 1, "id3", "supply_type"], [96, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[97, 4, 1, "", "do_bench"]], "tilelang.testing": [[98, 4, 1, "", "main"], [98, 4, 1, "", "set_random_seed"]], "tilelang.tools": [[100, 0, 0, "-", "plot_layout"]], "tilelang.tools.plot_layout": [[100, 4, 1, "", "plot_layout"]], "tilelang.transform": [[101, 4, 1, "", "AnnotateDeviceRegions"], [101, 4, 1, "", "ClusterPlanning"], [101, 4, 1, "", "FrontendLegalize"], [101, 4, 1, "", "IfStmtBinding"], [101, 4, 1, "", "InjectFenceProxy"], [101, 4, 1, "", "InjectPTXAsyncCopy"], [101, 4, 1, "", "InjectSoftwarePipeline"], [101, 4, 1, "", "LayoutInference"], [101, 4, 1, "", "LegalizeSafeMemoryAccess"], [101, 4, 1, "", "LegalizeVectorizedLoop"], [101, 4, 1, "", "LoopVectorizeDynamic"], [101, 4, 1, "", "LowerDeviceStorageAccessInfo"], [101, 4, 1, "", "LowerHopperIntrin"], [101, 4, 1, "", "LowerTileOp"], [101, 4, 1, "", "MakePackedAPI"], [101, 4, 1, "", "MergeIfStmt"], [101, 4, 1, "", "MultiVersionBuffer"], [101, 4, 1, "", "PipelinePlanning"], [101, 4, 1, "", "RewriteWgmmaSync"], [101, 4, 1, "", "ThreadPartialSync"], [101, 4, 1, "", "ThreadSync"], [101, 4, 1, "", "VectorizeLoop"], [101, 4, 1, "", "WarpSpecialized"], [101, 4, 1, "", "WarpSpecializedPipeline"], [102, 0, 0, "-", "simplify"]], "tilelang.transform.simplify": [[102, 4, 1, "", "Simplify"], [102, 4, 1, "", "apply_simplify"], [102, 4, 1, "", "simplify_prim_func"]], "tilelang.utils": [[104, 0, 0, "-", "deprecated"], [105, 0, 0, "-", "language"], [106, 0, 0, "-", "target"], [107, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[104, 4, 1, "", "deprecated"]], "tilelang.utils.language": [[105, 4, 1, "", "array_reduce"], [105, 4, 1, "", "is_fragment"], [105, 4, 1, "", "is_global"], [105, 4, 1, "", "is_local"], [105, 4, 1, "", "is_shared"], [105, 4, 1, "", "is_shared_dynamic"], [105, 4, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[106, 4, 1, "", "check_cuda_availability"], [106, 4, 1, "", "check_hip_availability"], [106, 4, 1, "", "determine_target"]], "tilelang.utils.tensor": [[107, 1, 1, "", "TensorSupplyType"], [107, 4, 1, "", "adapt_torch2tvm"], [107, 4, 1, "", "get_tensor_supply"], [107, 4, 1, "", "map_torch_type"], [107, 4, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[107, 3, 1, "", "Auto"], [107, 3, 1, "", "Integer"], [107, 3, 1, "", "Normal"], [107, 3, 1, "", "One"], [107, 3, 1, "", "Randn"], [107, 3, 1, "", "Uniform"], [107, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 118], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112], "packag": [1, 2, 3, 5, 7, 14, 18, 23, 26, 35, 37, 42, 48, 54, 55, 57, 59, 68, 83, 87, 91, 92, 93, 96, 98, 99, 101, 103], "subpackag": [1, 5, 14, 54, 55, 68, 92], "submodul": [1, 3, 5, 7, 14, 18, 23, 26, 35, 37, 42, 48, 54, 55, 57, 59, 68, 83, 87, 93, 96, 99, 101, 103, 116], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "content": [1, 2, 3, 5, 7, 14, 18, 23, 26, 35, 37, 42, 48, 54, 55, 57, 59, 68, 83, 87, 91, 92, 93, 96, 98, 99, 101, 103], "autotun": [2, 112], "cach": [3, 4], "kernel_cach": 4, "carver": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 124], "analysi": 6, "arch": [7, 8, 9, 10, 11], "arch_bas": 8, "cdna": 9, "cpu": 10, "cuda": [11, 109], "common_schedul": 12, "matmul_analysi": 13, "roller": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "bestfit": 15, "hint": 16, "node": 17, "polici": [18, 19, 20, 21], "common": [19, 24, 35, 36], "default": 20, "tensorcor": 21, "raster": 22, "shape_infer": [23, 24, 25], "tir": [25, 83, 84, 85, 86], "templat": [26, 27, 28, 29, 30, 31, 32, 33], "base": [27, 56, 94, 115, 117], "conv": 28, "elementwis": [29, 109], "flashattent": 30, "gemv": [31, 112], "general_reduc": 32, "matmul": 33, "util": [34, 53, 64, 103, 104, 105, 106, 107], "transform_kind": 36, "contrib": [37, 38, 39, 40, 41], "cc": 38, "dlpack": [39, 62], "hipcc": 40, "nvcc": 41, "engin": [42, 43, 44, 45, 46], "callback": [43, 125], "lower": 44, "param": 45, "phase": 46, "env": [47, 66], "intrins": [48, 49, 50, 51, 52, 53], "mfma_layout": 49, "mfma_macro_gener": 50, "mma_layout": 51, "mma_macro_gener": 52, "jit": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "adapt": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "ctype": [57, 58], "cython": [59, 60, 61], "cython_wrapp": 61, "libgen": 63, "wrapper": 65, "kernel": [67, 76, 121, 128, 129], "languag": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 105, 117, 118, 119, 120, 121, 125], "alloc": [69, 117], "builtin": 70, "copi": [71, 121], "custom": [72, 112], "fill": [73, 121], "frame": 74, "gemm": [75, 93, 94, 95, 121], "memscop": 77, "parallel": [78, 112, 121], "pipelin": [79, 121, 127], "print": [80, 125], "proxi": 81, "reduc": 82, "entri": 84, "ir": 85, "op": 86, "layout": [87, 88, 89, 90, 123], "fragment": 88, "swizzl": 90, "math": 91, "primit": [92, 93, 94, 95, 120, 128], "gemm_mma": 95, "profil": [96, 97], "bench": 97, "test": 98, "tool": [99, 100], "plot_layout": 100, "transform": [101, 102], "simplifi": 102, "deprec": 104, "target": 106, "tensor": 107, "convolut": 108, "oper": [109, 118], "add": 109, "how": 109, "compil": [109, 117, 124, 126], "dynam": 109, "shape": 109, "address": 109, "boundari": 109, "relat": 109, "issu": [109, 125], "comparison": [109, 113], "cute": 109, "conclus": [109, 112, 113, 125], "flash": [110, 111], "attent": [110, 111], "linear": 111, "gener": [112, 113, 114, 124, 125], "matrix": [112, 113, 114, 124, 125], "vector": 112, "multipl": [112, 113, 114, 124, 125], "triton": 112, "implement": [112, 124], "naiv": 112, "more": 112, "concurr": 112, "k": 112, "dimens": 112, "read": 112, "tvm_thread_allreduc": 112, "instead": 112, "atomicadd": 112, "benchmark": [112, 124], "tabl": [112, 115], "hopper": 112, "gpu": [112, 113], "tile": [113, 117, 118, 119, 120, 121, 125, 129], "librari": [113, 129], "why": 113, "anoth": 113, "dsl": 113, "exampl": [113, 124, 125], "basic": 113, "structur": 113, "kei": 113, "concept": 113, "other": 113, "perform": [113, 124, 128, 129], "differ": 113, "platform": 113, "further": 113, "resourc": 113, "dequant": 114, "tmac": 115, "look": 115, "up": 115, "mix": 115, "precis": 115, "comput": [115, 127], "instal": 116, "guid": 116, "pip": 116, "build": 116, "from": 116, "sourc": [116, 125], "method": 116, "1": [116, 124], "us": [116, 124], "your": 116, "own": 116, "tvm": 116, "2": [116, 124], "bundl": 116, "3": [116, 124], "provid": 116, "script": 116, "nightli": 116, "version": 116, "The": 117, "A": 117, "brief": 117, "introduct": 117, "program": [117, 125], "interfac": 117, "flow": 117, "model": 117, "declar": 117, "explicit": 117, "hardwar": 117, "memori": [117, 123], "welcom": 118, "get": 118, "start": 118, "tutori": 118, "deep": 118, "learn": 118, "refer": 118, "privaci": [118, 122], "ast": 119, "tilelibrari": 121, "t": [121, 125], "alloc_shar": 121, "alloc_frag": 121, "reduce_max": 121, "reduce_sum": 121, "clear": 121, "use_swizzl": 121, "annot": 123, "auto": 124, "tune": 124, "techniqu": 124, "optim": 124, "overview": [124, 125], "step": 124, "reserv": 124, "paramet": 124, "candid": 124, "configur": 124, "debug": 125, "correct": 125, "post": 125, "process": 125, "runtim": 125, "just": 126, "In": 126, "time": 126, "data": 127, "movement": 127, "write": [128, 129], "high": [128, 129], "thread": 128}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [5, "subpackages"], [14, "subpackages"], [54, "subpackages"], [55, "subpackages"], [68, "subpackages"], [92, "subpackages"]], "Submodules": [[1, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [14, "submodules"], [18, "submodules"], [23, "submodules"], [26, "submodules"], [35, "submodules"], [37, "submodules"], [42, "submodules"], [48, "submodules"], [54, "submodules"], [55, "submodules"], [57, "submodules"], [59, "submodules"], [68, "submodules"], [83, "submodules"], [87, "submodules"], [93, "submodules"], [96, "submodules"], [99, "submodules"], [101, "submodules"], [103, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [5, "module-tilelang.carver"], [7, "module-tilelang.carver.arch"], [14, "module-tilelang.carver.roller"], [18, "module-tilelang.carver.roller.policy"], [23, "module-tilelang.carver.roller.shape_inference"], [26, "module-tilelang.carver.template"], [35, "module-tilelang.common"], [37, "module-tilelang.contrib"], [42, "module-tilelang.engine"], [48, "module-tilelang.intrinsics"], [54, "module-tilelang.jit"], [55, "module-tilelang.jit.adapter"], [57, "module-tilelang.jit.adapter.ctypes"], [59, "module-tilelang.jit.adapter.cython"], [68, "module-tilelang.language"], [83, "module-tilelang.language.tir"], [87, "module-tilelang.layout"], [91, "module-tilelang.math"], [92, "module-tilelang.primitives"], [93, "module-tilelang.primitives.gemm"], [96, "module-tilelang.profiler"], [98, "module-tilelang.testing"], [99, "module-tilelang.tools"], [101, "module-tilelang.transform"], [103, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.cache package": [[3, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver package": [[5, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[6, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[7, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[8, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[9, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[10, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.common_schedules module": [[12, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[13, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[14, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[15, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[16, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[17, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[18, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[19, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[20, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[21, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[22, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[23, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[24, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[25, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[26, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[27, "module-tilelang.carver.template.base"]], "tilelang.carver.template.conv module": [[28, "module-tilelang.carver.template.conv"]], "tilelang.carver.template.elementwise module": [[29, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[30, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[31, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[32, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[33, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[34, "module-tilelang.carver.utils"]], "tilelang.common package": [[35, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[36, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[37, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[38, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[39, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[40, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[41, "module-tilelang.contrib.nvcc"]], "tilelang.engine package": [[42, "tilelang-engine-package"]], "tilelang.engine.callback module": [[43, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[44, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[45, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[46, "module-tilelang.engine.phase"]], "tilelang.env module": [[47, "module-tilelang.env"]], "tilelang.intrinsics package": [[48, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[49, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[50, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[51, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[52, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[53, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[54, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[55, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[56, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[57, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[58, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[59, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[60, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[61, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[62, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[63, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.utils module": [[64, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[65, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[66, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[67, "module-tilelang.jit.kernel"]], "tilelang.language package": [[68, "tilelang-language-package"]], "tilelang.language.allocate module": [[69, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[70, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[71, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[72, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[73, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[74, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[75, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[76, "module-tilelang.language.kernel"]], "tilelang.language.memscope module": [[77, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[78, "module-tilelang.language.parallel"]], "tilelang.language.pipeline module": [[79, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[80, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[81, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[82, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[83, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[84, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[85, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[86, "module-tilelang.language.tir.op"]], "tilelang.layout package": [[87, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[88, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[89, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[90, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[91, "tilelang-math-package"]], "tilelang.primitives package": [[92, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[93, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[94, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[95, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[96, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[97, "module-tilelang.profiler.bench"]], "tilelang.testing package": [[98, "tilelang-testing-package"]], "tilelang.tools package": [[99, "tilelang-tools-package"]], "tilelang.tools.plot_layout module": [[100, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[101, "tilelang-transform-package"]], "tilelang.transform.simplify module": [[102, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[103, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[104, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[105, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[106, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[107, "module-tilelang.utils.tensor"]], "Convolution": [[108, "convolution"]], "ElementWise Operators": [[109, "elementwise-operators"]], "Elementwise add in TileLang": [[109, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[109, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[109, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[109, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[109, "conclusion"], [112, "conclusion"], [113, "conclusion"], [125, "conclusion"]], "Flash Attention": [[110, "flash-attention"]], "Flash Linear Attention": [[111, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[112, "general-matrix-vector-multiplication-gemv"]], "Triton implementation": [[112, "triton-implementation"]], "Naive Implementation in TileLang": [[112, "naive-implementation-in-tilelang"]], "More concurrency": [[112, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[112, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[112, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[112, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[112, "autotune"]], "Benchmark Table on Hopper GPU": [[112, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[113, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[113, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[113, "matrix-multiplication-example"], [124, "matrix-multiplication-example"], [125, "matrix-multiplication-example"]], "Basic Structure": [[113, "basic-structure"]], "Key Concepts": [[113, "key-concepts"]], "Comparison with Other DSLs": [[113, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[113, "performance-on-different-platforms"]], "Further Resources": [[113, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[114, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[115, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[116, "installation-guide"]], "Installing with pip": [[116, "installing-with-pip"]], "Building from Source": [[116, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[116, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[116, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[116, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[116, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[117, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[117, "programming-interface"]], "Programming Interfaces": [[117, "programming-interfaces"]], "Compilation Flow": [[117, "compilation-flow"]], "Tile-based Programming Model": [[117, "tile-based-programming-model"]], "Tile declarations": [[117, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[117, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[118, "welcome-to-tile-language"]], "GET STARTED": [[118, null]], "TUTORIALS": [[118, null]], "DEEP LEARNING OPERATORS": [[118, null]], "LANGUAGE REFERENCE": [[118, null]], "API Reference": [[118, null]], "Privacy": [[118, null], [122, "privacy"]], "Tile Language AST": [[119, "tile-language-ast"]], "Tile Language: Primitives": [[120, "tile-language-primitives"]], "Tile Language: TileLibrary": [[121, "tile-language-tilelibrary"]], "T.Kernel": [[121, "t-kernel"]], "T.alloc_shared": [[121, "t-alloc-shared"]], "T.alloc_fragment": [[121, "t-alloc-fragment"]], "T.copy": [[121, "t-copy"]], "T.gemm": [[121, "t-gemm"]], "T.reduce_max T.reduce_sum": [[121, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[121, "t-parallel"]], "T.Pipelined": [[121, "t-pipelined"]], "T.clear T.fill": [[121, "t-clear-t-fill"]], "T.use_swizzle": [[121, "t-use-swizzle"]], "Annotate Memory Layout": [[123, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[124, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[124, "overview"], [125, "overview"]], "Step 1: Implement with Reserved Parameters": [[124, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[124, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[124, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[124, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[125, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[125, "debugging-generation-issues"]], "Debugging Correctness Issues": [[125, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[125, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[125, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[126, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[127, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[128, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[129, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [4, "module-tilelang.cache.kernel_cache"], [5, "module-tilelang.carver"], [6, "module-tilelang.carver.analysis"], [7, "module-tilelang.carver.arch"], [8, "module-tilelang.carver.arch.arch_base"], [9, "module-tilelang.carver.arch.cdna"], [10, "module-tilelang.carver.arch.cpu"], [11, "module-tilelang.carver.arch.cuda"], [12, "module-tilelang.carver.common_schedules"], [13, "module-tilelang.carver.matmul_analysis"], [14, "module-tilelang.carver.roller"], [15, "module-tilelang.carver.roller.bestfit"], [16, "module-tilelang.carver.roller.hint"], [17, "module-tilelang.carver.roller.node"], [18, "module-tilelang.carver.roller.policy"], [19, "module-tilelang.carver.roller.policy.common"], [20, "module-tilelang.carver.roller.policy.default"], [21, "module-tilelang.carver.roller.policy.tensorcore"], [22, "module-tilelang.carver.roller.rasterization"], [23, "module-tilelang.carver.roller.shape_inference"], [24, "module-tilelang.carver.roller.shape_inference.common"], [25, "module-tilelang.carver.roller.shape_inference.tir"], [26, "module-tilelang.carver.template"], [27, "module-tilelang.carver.template.base"], [28, "module-tilelang.carver.template.conv"], [29, "module-tilelang.carver.template.elementwise"], [30, "module-tilelang.carver.template.flashattention"], [31, "module-tilelang.carver.template.gemv"], [32, "module-tilelang.carver.template.general_reduce"], [33, "module-tilelang.carver.template.matmul"], [34, "module-tilelang.carver.utils"], [35, "module-tilelang.common"], [36, "module-tilelang.common.transform_kind"], [37, "module-tilelang.contrib"], [38, "module-tilelang.contrib.cc"], [39, "module-tilelang.contrib.dlpack"], [40, "module-tilelang.contrib.hipcc"], [41, "module-tilelang.contrib.nvcc"], [42, "module-tilelang.engine"], [43, "module-tilelang.engine.callback"], [44, "module-tilelang.engine.lower"], [45, "module-tilelang.engine.param"], [46, "module-tilelang.engine.phase"], [47, "module-tilelang.env"], [48, "module-tilelang.intrinsics"], [49, "module-tilelang.intrinsics.mfma_layout"], [50, "module-tilelang.intrinsics.mfma_macro_generator"], [51, "module-tilelang.intrinsics.mma_layout"], [52, "module-tilelang.intrinsics.mma_macro_generator"], [53, "module-tilelang.intrinsics.utils"], [54, "module-tilelang.jit"], [55, "module-tilelang.jit.adapter"], [56, "module-tilelang.jit.adapter.base"], [57, "module-tilelang.jit.adapter.ctypes"], [58, "module-tilelang.jit.adapter.ctypes.adapter"], [59, "module-tilelang.jit.adapter.cython"], [60, "module-tilelang.jit.adapter.cython.adapter"], [61, "module-tilelang.jit.adapter.cython.cython_wrapper"], [62, "module-tilelang.jit.adapter.dlpack"], [63, "module-tilelang.jit.adapter.libgen"], [64, "module-tilelang.jit.adapter.utils"], [65, "module-tilelang.jit.adapter.wrapper"], [66, "module-tilelang.jit.env"], [67, "module-tilelang.jit.kernel"], [68, "module-tilelang.language"], [69, "module-tilelang.language.allocate"], [70, "module-tilelang.language.builtin"], [71, "module-tilelang.language.copy"], [72, "module-tilelang.language.customize"], [73, "module-tilelang.language.fill"], [74, "module-tilelang.language.frame"], [75, "module-tilelang.language.gemm"], [76, "module-tilelang.language.kernel"], [77, "module-tilelang.language.memscope"], [78, "module-tilelang.language.parallel"], [79, "module-tilelang.language.pipeline"], [80, "module-tilelang.language.print"], [81, "module-tilelang.language.proxy"], [82, "module-tilelang.language.reduce"], [83, "module-tilelang.language.tir"], [84, "module-tilelang.language.tir.entry"], [85, "module-tilelang.language.tir.ir"], [86, "module-tilelang.language.tir.op"], [87, "module-tilelang.layout"], [88, "module-tilelang.layout.fragment"], [89, "module-tilelang.layout.layout"], [90, "module-tilelang.layout.swizzle"], [91, "module-tilelang.math"], [92, "module-tilelang.primitives"], [93, "module-tilelang.primitives.gemm"], [94, "module-tilelang.primitives.gemm.base"], [95, "module-tilelang.primitives.gemm.gemm_mma"], [96, "module-tilelang.profiler"], [97, "module-tilelang.profiler.bench"], [98, "module-tilelang.testing"], [99, "module-tilelang.tools"], [100, "module-tilelang.tools.plot_layout"], [101, "module-tilelang.transform"], [102, "module-tilelang.transform.simplify"], [103, "module-tilelang.utils"], [104, "module-tilelang.utils.deprecated"], [105, "module-tilelang.utils.language"], [106, "module-tilelang.utils.target"], [107, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "autotuner (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutoTuner"]], "autotuneresult (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutotuneResult"]], "jitcontext (class in tilelang.autotuner)": [[2, "tilelang.autotuner.JITContext"]], "atol (tilelang.autotuner.jitcontext attribute)": [[2, "id6"], [2, "tilelang.autotuner.JITContext.atol"]], "autotune() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.autotune"]], "cache_input_tensors (tilelang.autotuner.jitcontext attribute)": [[2, "id7"], [2, "tilelang.autotuner.JITContext.cache_input_tensors"]], "check_tensor_list_compatibility() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.check_tensor_list_compatibility"]], "config (tilelang.autotuner.autotuneresult attribute)": [[2, "id0"], [2, "tilelang.autotuner.AutotuneResult.config"]], "from_kernel() (tilelang.autotuner.autotuner class method)": [[2, "tilelang.autotuner.AutoTuner.from_kernel"]], "func (tilelang.autotuner.autotuneresult attribute)": [[2, "id1"], [2, "tilelang.autotuner.AutotuneResult.func"]], "jit() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.jit"]], "kernel (tilelang.autotuner.autotuneresult attribute)": [[2, "id2"], [2, "tilelang.autotuner.AutotuneResult.kernel"]], "latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id3"], [2, "tilelang.autotuner.AutotuneResult.latency"]], "libcode (tilelang.autotuner.autotuneresult attribute)": [[2, "id4"], [2, "tilelang.autotuner.AutotuneResult.libcode"]], "max_mismatched_ratio (tilelang.autotuner.jitcontext attribute)": [[2, "id8"], [2, "tilelang.autotuner.JITContext.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.jitcontext attribute)": [[2, "id9"], [2, "tilelang.autotuner.JITContext.out_idx"]], "profiler (tilelang.autotuner.jitcontext attribute)": [[2, "id10"], [2, "tilelang.autotuner.JITContext.profiler"]], "ref_latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id5"], [2, "tilelang.autotuner.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id11"], [2, "tilelang.autotuner.JITContext.ref_prog"]], "rtol (tilelang.autotuner.jitcontext attribute)": [[2, "id12"], [2, "tilelang.autotuner.JITContext.rtol"]], "run() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.run"]], "set_compile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_compile_args"]], "skip_check (tilelang.autotuner.jitcontext attribute)": [[2, "id13"], [2, "tilelang.autotuner.JITContext.skip_check"]], "supply_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id14"], [2, "tilelang.autotuner.JITContext.supply_prog"]], "target (tilelang.autotuner.jitcontext attribute)": [[2, "id15"], [2, "tilelang.autotuner.JITContext.target"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "cached() (in module tilelang.cache)": [[3, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[3, "tilelang.cache.clear_cache"]], "tilelang.cache": [[3, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[4, "tilelang.cache.kernel_cache.KernelCache"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "tilelang.cache.kernel_cache": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver": [[5, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[6, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[6, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[7, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[8, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[8, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[8, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[9, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[10, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[11, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[11, "module-tilelang.carver.arch.cuda"]], "get_block() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[12, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[13, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[13, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[13, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[14, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[15, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[15, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[15, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[15, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[15, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[15, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[15, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[16, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[16, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[16, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[16, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[16, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[16, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[16, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[16, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[16, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[17, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[17, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[17, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[17, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[17, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[17, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[17, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[18, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[19, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[20, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[21, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[22, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[22, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[22, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[22, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[22, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[23, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[24, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[24, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[25, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[25, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[26, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[27, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[27, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[27, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[27, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "c (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id0"], [28, "tilelang.carver.template.conv.ConvTemplate.C"]], "convtemplate (class in tilelang.carver.template.conv)": [[28, "tilelang.carver.template.conv.ConvTemplate"]], "d (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id1"], [28, "tilelang.carver.template.conv.ConvTemplate.D"]], "f (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id2"], [28, "tilelang.carver.template.conv.ConvTemplate.F"]], "h (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id3"], [28, "tilelang.carver.template.conv.ConvTemplate.H"]], "k (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id4"], [28, "tilelang.carver.template.conv.ConvTemplate.K"]], "n (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id5"], [28, "tilelang.carver.template.conv.ConvTemplate.N"]], "p (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id6"], [28, "tilelang.carver.template.conv.ConvTemplate.P"]], "s (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id7"], [28, "tilelang.carver.template.conv.ConvTemplate.S"]], "w (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id8"], [28, "tilelang.carver.template.conv.ConvTemplate.W"]], "accum_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id9"], [28, "tilelang.carver.template.conv.ConvTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.conv.convtemplate property)": [[28, "tilelang.carver.template.conv.ConvTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.conv.convtemplate method)": [[28, "tilelang.carver.template.conv.ConvTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id10"], [28, "tilelang.carver.template.conv.ConvTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.conv.convtemplate method)": [[28, "tilelang.carver.template.conv.ConvTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id11"], [28, "tilelang.carver.template.conv.ConvTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.conv.convtemplate method)": [[28, "tilelang.carver.template.conv.ConvTemplate.params_as_dict"]], "tilelang.carver.template.conv": [[28, "module-tilelang.carver.template.conv"]], "with_bias (tilelang.carver.template.conv.convtemplate attribute)": [[28, "id12"], [28, "tilelang.carver.template.conv.ConvTemplate.with_bias"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[29, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[29, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[29, "id0"], [29, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[29, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[29, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[29, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[29, "id1"], [29, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[29, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[30, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[30, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[31, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[31, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[31, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[32, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[32, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id0"], [33, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id1"], [33, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[33, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id2"], [33, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id3"], [33, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[33, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[33, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id4"], [33, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[33, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id5"], [33, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[33, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[33, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id6"], [33, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id7"], [33, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[33, "id8"], [33, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[34, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[34, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[34, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[34, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[34, "module-tilelang.carver.utils"]], "tilelang.common": [[35, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[36, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[36, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[36, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[36, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[36, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[36, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[36, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[36, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[36, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[36, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[37, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[38, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[38, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[39, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[39, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[39, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[40, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[40, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.get_cuda_version"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[41, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[41, "module-tilelang.contrib.nvcc"]], "tilelang.engine": [[42, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[43, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[43, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[43, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[43, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[43, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[44, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[44, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[45, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[45, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[45, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[45, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[45, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[45, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[45, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[45, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[45, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[45, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[45, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[45, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[45, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[45, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[45, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[45, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[46, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[46, "tilelang.engine.phase.OptimizeForTarget"]], "tilelang.engine.phase": [[46, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[47, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[47, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[47, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[47, "module-tilelang.env"]], "tilelang.intrinsics": [[48, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[49, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[49, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[50, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[50, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[51, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[51, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[52, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[52, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[52, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[52, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[52, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[53, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[53, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[54, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[54, "tilelang.jit.jit"]], "tilelang.jit": [[54, "module-tilelang.jit"]], "tilelang.jit.adapter": [[55, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[56, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[56, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[56, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[56, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[57, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[58, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[58, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[59, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[60, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[60, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[60, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[60, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[60, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[61, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[61, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[62, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[62, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[63, "module-tilelang.jit.adapter.libgen"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[63, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[64, "tilelang.jit.adapter.utils.match_global_kernel"]], "tilelang.jit.adapter.utils": [[64, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[65, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[65, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_cuda_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_cuda_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_hip_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_hip_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[65, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[65, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[65, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[66, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[67, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[67, "id0"], [67, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[67, "id1"], [67, "tilelang.jit.kernel.JITKernel.artifact"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[67, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[67, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[67, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[67, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[67, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[67, "tilelang.jit.kernel.JITKernel.get_profiler"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[67, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[67, "tilelang.jit.kernel.JITKernel.kernel_source"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[67, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[67, "tilelang.jit.kernel.JITKernel.params"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[67, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[67, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[67, "id2"], [67, "tilelang.jit.kernel.JITKernel.torch_function"]], "annotate_layout() (in module tilelang.language)": [[68, "tilelang.language.annotate_layout"]], "import_source() (in module tilelang.language)": [[68, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[68, "tilelang.language.symbolic"]], "tilelang.language": [[68, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[68, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[69, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[69, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[69, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[69, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[69, "module-tilelang.language.allocate"]], "createlistofmbarrierop() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.CreateListofMBarrierOp"]], "createtmadescriptorop() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.CreateTMADescriptorOp"]], "fenceproxyasyncop() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.FenceProxyAsyncOp"]], "getmbarrierop() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.GetMBarrierOp"]], "mbarrierexpecttx() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.MBarrierExpectTX"]], "mbarrierwaitparity() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.MBarrierWaitParity"]], "nosetmaxnreg() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.NoSetMaxNReg"]], "setmaxnreg() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.SetMaxNReg"]], "tmaloadop() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.TMALoadOp"]], "tmastorearrive() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.TMAStoreArrive"]], "tmastorewait() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.TMAStoreWait"]], "waitwgmma() (in module tilelang.language.builtin)": [[70, "tilelang.language.builtin.WaitWgmma"]], "tilelang.language.builtin": [[70, "module-tilelang.language.builtin"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[71, "tilelang.language.copy.region"]], "tilelang.language.copy": [[71, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.atomic_addx2"]], "clamp() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[72, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[72, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[73, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[73, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[73, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[74, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[74, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[74, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[74, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[74, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[74, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[74, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[74, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[74, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[74, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[74, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[74, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[74, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[75, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[75, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[76, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[76, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[76, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[76, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[76, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[76, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[76, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[76, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[76, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[76, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[76, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[76, "tilelang.language.kernel.FrameStack.push"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[76, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[76, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[76, "tilelang.language.kernel.FrameStack.top"]], "tilelang.language.memscope": [[77, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[78, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[78, "module-tilelang.language.parallel"]], "pipelined() (in module tilelang.language.pipeline)": [[79, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[79, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[80, "tilelang.language.print.print"]], "tilelang.language.print": [[80, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[81, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[81, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[81, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[81, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[81, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[81, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[81, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[81, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[81, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[81, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[81, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[81, "module-tilelang.language.proxy"]], "reduce() (in module tilelang.language.reduce)": [[82, "tilelang.language.reduce.reduce"]], "reduce_abssum() (in module tilelang.language.reduce)": [[82, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[82, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[82, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[82, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[82, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[83, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[84, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[84, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[84, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[85, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[85, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.pow"]], "power() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[86, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[86, "tilelang.language.tir.op.vscale"]], "tilelang.layout": [[87, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[88, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[88, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[88, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[88, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[88, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[88, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[88, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[88, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[88, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[89, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[89, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[89, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[89, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[89, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[89, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[89, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[89, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[90, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[90, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[91, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[91, "tilelang.math.next_power_of_2"]], "tilelang.math": [[91, "module-tilelang.math"]], "tilelang.primitives": [[92, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[93, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[93, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[94, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[94, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[94, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[95, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[95, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[96, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[96, "id0"], [96, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[96, "tilelang.profiler.Profiler.func"]], "params (tilelang.profiler.profiler attribute)": [[96, "id1"], [96, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[96, "id2"], [96, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[96, "id3"], [96, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[96, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[96, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[97, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[97, "module-tilelang.profiler.bench"]], "main() (in module tilelang.testing)": [[98, "tilelang.testing.main"]], "set_random_seed() (in module tilelang.testing)": [[98, "tilelang.testing.set_random_seed"]], "tilelang.testing": [[98, "module-tilelang.testing"]], "tilelang.tools": [[99, "module-tilelang.tools"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[100, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[100, "module-tilelang.tools.plot_layout"]], "annotatedeviceregions() (in module tilelang.transform)": [[101, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[101, "tilelang.transform.ClusterPlanning"]], "frontendlegalize() (in module tilelang.transform)": [[101, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[101, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[101, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[101, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[101, "tilelang.transform.InjectSoftwarePipeline"]], "layoutinference() (in module tilelang.transform)": [[101, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[101, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[101, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[101, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[101, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[101, "tilelang.transform.LowerHopperIntrin"]], "lowertileop() (in module tilelang.transform)": [[101, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[101, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[101, "tilelang.transform.MergeIfStmt"]], "multiversionbuffer() (in module tilelang.transform)": [[101, "tilelang.transform.MultiVersionBuffer"]], "pipelineplanning() (in module tilelang.transform)": [[101, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[101, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[101, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[101, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[101, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[101, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[101, "tilelang.transform.WarpSpecializedPipeline"]], "tilelang.transform": [[101, "module-tilelang.transform"]], "simplify() (in module tilelang.transform.simplify)": [[102, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[102, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[102, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[102, "module-tilelang.transform.simplify"]], "tilelang.utils": [[103, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[104, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[104, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.array_reduce"]], "is_fragment() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[105, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[105, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[106, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[106, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[106, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[106, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[107, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[107, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[107, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[107, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[107, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[107, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[107, "tilelang.utils.tensor.torch_assert_close"]]}})