Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.autotuner.param", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.cache.tuner_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.arch.driver", "api/tilelang.carver.arch.driver.cuda_driver", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.contrib.nvrtc", "api/tilelang.contrib.rocm", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.nvrtc", "api/tilelang.jit.adapter.nvrtc.adapter", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.jit.param", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.logical", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.language.warpgroup", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.quantize", "api/tilelang.quantize.lop3", "api/tilelang.quantize.quantization", "api/tilelang.quantize.utils", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.Analyzer", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.pass_config", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/deepseek_mla", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.autotuner.param.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.cache.tuner_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.arch.driver.rst", "api/tilelang.carver.arch.driver.cuda_driver.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.contrib.nvrtc.rst", "api/tilelang.contrib.rocm.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.nvrtc.rst", "api/tilelang.jit.adapter.nvrtc.adapter.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.jit.param.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.logical.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.language.warpgroup.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.quantize.rst", "api/tilelang.quantize.lop3.rst", "api/tilelang.quantize.quantization.rst", "api/tilelang.quantize.utils.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.Analyzer.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.pass_config.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/deepseek_mla.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.autotuner.param module", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.cache.tuner_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.arch.driver package", "tilelang.carver.arch.driver.cuda_driver module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.contrib.nvrtc module", "tilelang.contrib.rocm module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.nvrtc package", "tilelang.jit.adapter.nvrtc.adapter module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.jit.param module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.logical module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.language.warpgroup module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.quantize package", "tilelang.quantize.lop3 module", "tilelang.quantize.quantization module", "tilelang.quantize.utils module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.Analyzer module", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.pass_config module", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 131, 134, 135, 136, 143], "packag": [0, 134], "subpackag": 0, "autotun": [0, 1, 142], "submodul": [0, 103], "modul": [0, 134], "content": [0, 82, 96, 143], "cach": [0, 1, 2, 26, 53, 66, 108, 126, 130, 131, 135, 139], "carver": [0, 1], "common": [0, 1, 16, 18, 22, 27, 79, 118, 126, 127, 142], "contrib": [0, 1], "engin": [0, 1, 107, 143], "intrins": [0, 1, 20, 82, 86, 96, 110, 131, 135], "jit": [0, 1, 2, 3, 50, 107, 130, 131, 142], "languag": [0, 1, 103, 120, 126, 127, 130, 131, 142], "layout": [0, 1, 17, 58, 77, 96, 116, 117, 131, 135, 136], "math": [0, 1, 96], "primit": [0, 1, 90, 126, 130, 131, 135, 136, 143], "profil": [0, 1, 2, 3, 51, 62, 64, 66, 68, 75, 96, 120, 131, 143], "quantiz": [0, 1], "test": [0, 1, 2, 96, 126, 127, 131, 134], "tool": [0, 1, 85, 88, 89, 97, 130, 143], "transform": [0, 1, 17, 58, 80, 99, 100, 115, 126, 142, 143], "util": [0, 1, 3, 4, 5, 6, 7, 42, 44, 45, 47, 51, 54, 60, 61, 62, 64, 66, 68, 78, 90, 107, 108, 109, 111, 126, 127, 135], "env": [0, 1, 45, 60], "disable_cach": [0, 1, 53], "enable_cach": [0, 1, 53], "is_cache_en": [0, 1, 53], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "param": [1, 2, 5, 6, 48, 60, 62, 64, 66, 68, 71, 75, 96, 107, 115, 139], "autotuneresult": [1, 2, 3], "compilearg": [1, 2, 3], "profilearg": [1, 2, 3], "cache_dir": [1, 2, 4, 5, 6], "compile_arg": [1, 2, 3], "from_kernel": [1, 2, 142], "generate_cache_kei": [1, 2], "profile_arg": [1, 2], "run": [1, 2, 85, 107, 108, 117, 131, 134, 135, 142, 143], "set_compile_arg": [1, 2, 142], "set_kernel_paramet": [1, 2], "set_profile_arg": [1, 2], "timeoutexcept": [1, 2], "get_available_cpu_count": [1, 2], "run_with_timeout": [1, 2], "timeout_handl": [1, 2], "kernel_cach": [1, 4], "kernelcach": [1, 4, 5, 6], "tuner_cach": [1, 4], "autotunercach": [1, 4, 6], "clear_cach": [1, 4, 5, 6], "get_cache_dir": [1, 4, 5, 6, 61, 65, 66], "set_cache_dir": [1, 4, 5, 6], "arch": [1, 7, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 142], "roller": [1, 7, 34], "templat": [1, 7, 126, 127, 142], "analysi": [1, 7, 17, 29, 114, 115, 117, 126, 143], "blockinfo": [1, 7, 8, 16, 21], "iterinfo": [1, 7, 8], "check_func_with_dynam": [1, 7, 8], "collect_block_iter_vars_used_in_access_region": [1, 7, 8], "collect_vars_used_in_prim_expr": [1, 7, 8], "detect_dominant_read": [1, 7, 8], "find_var_from_func": [1, 7, 8], "get_coalesced_veclen": [1, 7, 8], "get_max_shared_memory_per_block": [1, 7, 8], "get_max_threads_per_block": [1, 7, 8], "get_reduction_block": [1, 7, 8], "get_root_block": [1, 7, 8], "is_broadcast_epilogu": [1, 7, 8], "normalize_prim_func": [1, 7, 8], "common_schedul": [1, 7], "get_block": [1, 7, 16], "get_output_block": [1, 7, 16], "try_inlin": [1, 7, 16], "try_inline_contiguous_spati": [1, 7, 16], "matmul_analysi": [1, 7], "iterkind": [1, 7, 17], "itertrait": [1, 7, 17], "auto_inline_consumer_chain": [1, 7, 17], "auto_inline_consum": [1, 7, 17], "auto_inline_produc": [1, 7, 17], "collect_vars_from_expr": [1, 7, 17], "detect_iter_trait": [1, 7, 17], "find_arg_idx_from_buffer_chain": [1, 7, 17], "find_first_similar_buff": [1, 7, 17], "find_first_similar_region": [1, 7, 17], "find_last_producer_from_buff": [1, 7, 17], "get_dequantize_block": [1, 7, 17], "get_in_out_dtyp": [1, 7, 17], "get_index_map": [1, 7, 17], "get_ladder_stage3_map": [1, 7, 17], "get_propagate_map": [1, 7, 17], "get_tensorized_func_and_tag": [1, 7, 17], "inline_transpose_block": [1, 7, 17], "is_identity_block": [1, 7, 17], "is_identity_or_transpose_block": [1, 7, 17], "is_transpose_block": [1, 7, 17], "layout_propagate_chain": [1, 7, 17], "make_iter_fusion_index_map": [1, 7, 17], "normalize_to_matmul": [1, 7, 17], "get_rasterization_cod": [1, 7, 38], "get_roller_hints_from_func": [1, 7, 38], "get_roller_hints_from_output_nod": [1, 7, 38], "retrieve_func_from_modul": [1, 7, 38, 120, 122], "transform_kind": [1, 39], "transformkind": [1, 39, 40, 58], "cc": [1, 41, 143], "create_execut": [1, 41, 42], "create_shar": [1, 41, 42], "create_staticlib": [1, 41, 42], "cross_compil": [1, 41, 42], "get_cc": [1, 41, 42], "get_cplus_compil": [1, 41, 42], "get_global_symbol_section_map": [1, 41, 42], "get_target_by_dump_machin": [1, 41, 42], "dlpack": [1, 2, 3, 4, 5, 6, 41, 60, 61, 75], "convert_func": [1, 41, 43], "to_pytorch_func": [1, 41, 43], "hipcc": [1, 41], "compile_hip": [1, 41, 44], "nvcc": [1, 41, 143], "callback_libdevice_path": [1, 41, 45], "compile_cuda": [1, 41, 45], "find_cuda_path": [1, 41, 45], "get_cuda_vers": [1, 41, 45], "get_nvcc_compil": [1, 41, 45], "have_cudagraph": [1, 41, 45], "have_fp16": [1, 41, 45], "have_int8": [1, 41, 45], "have_tensorcor": [1, 41, 45], "parse_compute_vers": [1, 41, 45, 47], "nvrtc": [1, 4, 5, 41, 60, 61, 73, 75], "rocm": [1, 41, 123, 134], "find_lld": [1, 41, 47], "find_rocm_path": [1, 41, 47], "have_matrixcor": [1, 41, 47], "rocm_link": [1, 41, 47], "callback": [1, 48, 96], "register_cuda_postproc": [1, 48, 49], "register_cuda_postproc_callback": [1, 48, 49, 143], "register_hip_postproc": [1, 48, 49], "register_hip_postproc_callback": [1, 48, 49], "lower": [1, 48, 96, 99, 117, 118, 126, 131, 135, 143], "canon_target_host": [1, 48, 50], "device_codegen": [1, 48, 50], "device_codegen_without_compil": [1, 48, 50], "extrac_param": [1, 48, 50], "get_device_cal": [1, 48, 50], "get_host_cal": [1, 48, 50], "has_device_kernel_launch": [1, 48, 50], "host_codegen": [1, 48, 50], "is_cpu_device_backend": [1, 48, 50], "is_device_cal": [1, 48, 50, 143], "is_device_call_c_devic": [1, 48, 50], "compiledartifact": [1, 48, 50, 51, 75], "kernelparam": [1, 48, 50, 51, 62, 66, 68, 71, 75, 107], "phase": [1, 48, 130], "lowerandleg": [1, 48, 52], "optimizefortarget": [1, 48, 52], "allow_fence_proxi": [1, 48, 52], "allow_global_thread_synchron": [1, 48, 52], "allow_tma_and_warp_speci": [1, 48, 52], "allow_vector": [1, 48, 52], "allow_warp_speci": [1, 48, 52], "mfma_layout": [1, 54], "make_mfma_swizzle_layout": [1, 54, 55], "shared_16x16_to_ldmatrix_64x4_layout": [1, 54, 55], "shared_16x16_to_local_64x4_layout_a": [1, 54, 55], "shared_16x16_to_local_64x4_layout_b": [1, 54, 55], "shared_16x16_to_local_64x4_layout_c": [1, 54, 55], "shared_16x16_to_local_64x4_layout_k_n": [1, 54, 55], "shared_16x16_to_local_64x4_layout_m_n": [1, 54, 55], "shared_16x16_to_local_64x4_layout_n_k": [1, 54, 55], "shared_16x16_to_local_64x4_layout_n_m": [1, 54, 55], "shared_16x32_to_local_64x8_layout_a": [1, 54, 55], "shared_16x32_to_local_64x8_layout_b": [1, 54, 55], "shared_16x4_to_local_64x1_layout_a": [1, 54, 55], "shared_16x64_to_local_64x16_layout_a": [1, 54, 55], "shared_16x64_to_local_64x16_layout_b": [1, 54, 55], "shared_4x16_to_local_64x1_layout_b": [1, 54, 55], "thread_id_shared_access_64x16_to_16x64_layout_a": [1, 54, 55], "thread_id_shared_access_64x16_to_16x64_layout_b": [1, 54, 55], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 54, 55], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 54, 55], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 54, 55], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 54, 55], "mfma_macro_gener": [1, 54], "matrixcoreintrinemitt": [1, 54, 56], "mma_layout": [1, 54], "get_swizzle_layout": [1, 54, 57], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 54, 57], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 54, 57], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 54, 57], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 54, 57], "ldmatrix_32x8_to_shared_16x16_layout": [1, 54, 57], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 54, 57], "make_mma_swizzle_layout": [1, 54, 57, 131], "mma_32x8_to_shared_16x16_layout": [1, 54, 57], "mma_store_32x8_to_shared_16x16_layout": [1, 54, 57], "shared_16x16_to_mma_32x8_layout": [1, 54, 57, 59], "shared_16x16_to_mma_32x8_layout_r": [1, 54, 57], "shared_16x16_to_mma_32x8_layout_sr": [1, 54, 57], "shared_16x16_to_mma_32x8_layout_tran": [1, 54, 57], "shared_16x16_to_mma_32x8_smoothlayout": [1, 54, 57], "shared_16x32_to_mma_32x16_layout": [1, 54, 57, 59], "shared_16x32_to_mma_32x16_smoothlayout": [1, 54, 57], "shared_32x16_to_mma_32x16_layout": [1, 54, 57, 59], "shared_32x16_to_mma_32x16_smoothlayout": [1, 54, 57], "mma_macro_gener": [1, 54], "int4tensorcoreintrinemitt": [1, 54, 58], "int4tensorcoreintrinemitterwithladdertransform": [1, 54, 58], "tensorcoreintrinemitt": [1, 54, 58, 106], "tensorcoreintrinemitterwithladdertransform": [1, 54, 58], "get_ldmatrix_offset": [1, 54, 59], "get_mma_micro_s": [1, 54, 59], "index_to_coordin": [1, 54, 59], "mfma_store_index_map": [1, 54, 59], "mma_store_index_map": [1, 54, 59], "adapt": [1, 60, 75, 107, 130], "kernel": [1, 2, 3, 4, 5, 6, 17, 32, 50, 51, 53, 60, 64, 66, 70, 71, 76, 77, 79, 80, 91, 97, 107, 118, 126, 127, 130, 131, 135, 136, 142, 143], "jitkernel": [1, 4, 5, 6, 60, 75], "program": [1, 2, 3, 17, 50, 60, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 97, 126, 127, 130, 131, 136, 142], "compil": [1, 2, 3, 4, 5, 6, 42, 44, 45, 47, 50, 51, 60, 64, 66, 75, 76, 118, 123, 126, 130, 131, 136, 139, 143], "tir": [1, 3, 8, 16, 17, 18, 27, 56, 58, 60, 64, 66, 71, 75, 77, 79, 80, 83, 84, 86, 90, 91, 92, 105, 106, 111, 118, 143], "alloc": [1, 77, 79, 96, 118, 126, 127, 131, 139], "alloc_frag": [1, 77, 78, 126, 127, 131, 135, 136], "alloc_loc": [1, 77, 78, 130], "alloc_shar": [1, 77, 78, 126, 130, 131, 135, 136], "alloc_var": [1, 77, 78], "builtin": [1, 77], "barrier_arr": [1, 77, 79], "barrier_wait": [1, 77, 79], "create_list_of_mbarri": [1, 77, 79], "create_tma_descriptor": [1, 77, 79], "dec_max_nreg": [1, 77, 79], "fence_proxy_async": [1, 77, 79, 130], "get_mbarri": [1, 77, 79], "inc_max_nreg": [1, 77, 79], "mbarrier_arr": [1, 77, 79, 130], "mbarrier_expect_tx": [1, 77, 79], "mbarrier_wait_par": [1, 77, 79], "no_set_max_nreg": [1, 77, 79], "set_max_nreg": [1, 77, 79], "shfl_down": [1, 77, 79], "shfl_up": [1, 77, 79], "shfl_xor": [1, 77, 79], "sync_glob": [1, 77, 79], "sync_thread_parti": [1, 77, 79], "sync_thread": [1, 77, 79], "tma_load": [1, 77, 79], "tma_store_arr": [1, 77, 79], "tma_store_wait": [1, 77, 79], "wait_wgmma": [1, 77, 79], "copi": [1, 77, 79, 92, 96, 117, 118, 126, 127, 131, 134, 135, 136, 143], "buffer_load_to_tile_region": [1, 77, 80], "buffer_region_to_tile_region": [1, 77, 80], "buffer_to_tile_region": [1, 77, 80], "c2d_im2col": [1, 77, 80], "region": [1, 8, 17, 77, 80, 82, 86, 126, 139], "custom": [1, 77, 85, 97, 124, 126], "atomic_add": [1, 77, 81, 130], "atomic_addx2": [1, 77, 81], "atomic_addx4": [1, 77, 81], "clamp": [1, 77, 81], "dp4a": [1, 77, 81], "reshap": [1, 77, 81], "view": [1, 77, 81, 130], "fill": [1, 77, 96, 135, 136], "clear": [1, 4, 5, 6, 77, 82, 84, 92, 108, 130, 131, 135, 136], "frame": [1, 2, 77, 85, 88, 89, 95, 97], "framestack": [1, 77, 83, 85], "letfram": [1, 77, 83], "get_let_valu": [1, 77, 83], "has_let_valu": [1, 77, 83], "gemm": [1, 8, 17, 77, 79, 103, 126, 130, 131, 135, 136, 142, 143], "kernellaunchfram": [1, 77, 85], "get_block_bind": [1, 77, 85], "get_block_ext": [1, 77, 85], "get_thread_bind": [1, 77, 85, 130], "get_thread_ext": [1, 77, 85], "logic": [1, 77, 110, 126, 127, 131, 135, 143], "all_of": [1, 77, 86], "any_of": [1, 77, 86], "memscop": [1, 77], "parallel": [1, 24, 77, 79, 93, 95, 96, 117, 126, 127, 131, 135, 136, 142, 143], "pipelin": [1, 77, 79, 131, 135, 136], "print": [1, 77, 83, 116, 131, 134], "proxi": [1, 77, 79, 86], "basetensorproxi": [1, 77, 91], "bufferproxi": [1, 77, 91], "fragmentbufferproxi": [1, 77, 91], "localbufferproxi": [1, 77, 91], "sharedbufferproxi": [1, 77, 91], "tensorproxi": [1, 77, 86, 91], "make_tensor": [1, 77, 91, 127], "ptr": [1, 77, 91, 96], "reduc": [1, 36, 77, 96, 99, 122, 126, 127, 130, 135, 139], "cumsum": [1, 77, 92], "reduce_absmax": [1, 77, 92], "reduce_abssum": [1, 77, 92], "reduce_max": [1, 77, 92, 136], "reduce_min": [1, 77, 92], "reduce_sum": [1, 77, 92, 136], "warpgroup": [1, 77, 126], "warpspeci": [1, 77, 97, 117], "warpspecializefram": [1, 77, 97], "w": [1, 30, 32, 77, 80, 96, 97, 127], "annotate_l2_hit_ratio": [1, 77], "annotate_layout": [1, 77, 126, 131], "annotate_pad": [1, 77], "import_sourc": [1, 77], "symbol": [1, 42, 77, 94, 96, 127], "use_swizzl": [1, 77, 126, 131, 136], "fragment": [1, 58, 78, 91, 96, 98, 106, 117, 122, 131, 135, 139, 143], "make_swizzled_layout": [1, 98, 99, 101, 126], "swizzl": [1, 98, 131], "cdiv": [1, 102], "next_power_of_2": [1, 102], "bench": [1, 107], "do_bench": [1, 107, 108, 131], "result_idx": [1, 62, 64, 66, 68, 71, 107], "supply_typ": [1, 2, 3, 107, 124, 130, 142], "assert_allclos": [1, 107], "assert_consist": [1, 107], "determine_profil": [1, 107], "func": [1, 2, 3, 4, 5, 6, 8, 17, 20, 21, 22, 24, 31, 49, 50, 60, 61, 62, 75, 94, 107, 119, 131, 143], "manual_assert_clos": [1, 107], "run_onc": [1, 60, 75, 107], "with_default_adapt": [1, 107], "lop3": [1, 109], "get_lop3_intrin_group": [1, 109, 110], "gen_quant4": [1, 109, 112], "general_compress": [1, 109, 112], "interleave_weight": [1, 109, 112], "analyz": [1, 16, 17, 27, 29, 114, 127, 143], "analysisresult": [1, 114, 115], "plot_layout": [1, 114], "pass_config": [1, 2, 3, 4, 5, 6, 60, 61, 63, 64, 65, 66, 71, 73, 75, 117], "passconfigkei": [1, 117, 118], "simplifi": [1, 17, 117, 118, 130, 131, 134, 142, 143], "apply_simplifi": [1, 117, 119], "simplify_prim_func": [1, 117, 119], "annotatedeviceregion": [1, 117], "clusterplan": [1, 117], "configindexbitwidth": [1, 117], "eliminatestoragesyncformbarri": [1, 117], "flattenbuff": [1, 117], "frontendleg": [1, 117], "ifstmtbind": [1, 117], "injectfenceproxi": [1, 117], "injectptxasynccopi": [1, 117], "injectsoftwarepipelin": [1, 117], "injecttmabarri": [1, 117], "layoutinfer": [1, 117], "legalizesafememoryaccess": [1, 117], "legalizevectorizedloop": [1, 117], "loopvectorizedynam": [1, 117], "lowerdevicestorageaccessinfo": [1, 117], "lowerhopperintrin": [1, 117], "lowerl2persist": [1, 117], "lowertileop": [1, 117, 143], "makepackedapi": [1, 117], "mergeifstmt": [1, 117], "mergesharedmemoryalloc": [1, 117], "multiversionbuff": [1, 117], "pipelineplan": [1, 117], "rewritewgmmasync": [1, 117], "threadpartialsync": [1, 117], "threadsync": [1, 117], "vectorizeloop": [1, 117], "warpspecializedpipelin": [1, 117], "get_pass_context": [1, 117], "deprec": [1, 120], "array_reduc": [1, 120, 122], "get_buffer_elem": [1, 120, 122], "is_frag": [1, 120, 122], "is_glob": [1, 120, 122], "is_loc": [1, 120, 122], "is_shar": [1, 120, 122], "is_shared_dynam": [1, 120, 122], "target": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16, 17, 21, 29, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 52, 60, 61, 63, 64, 65, 66, 69, 71, 72, 73, 75, 96, 108, 112, 115, 117, 120, 127, 130, 131, 135, 142, 143], "check_cuda_avail": [1, 120, 123], "check_hip_avail": [1, 120, 123], "determine_target": [1, 120, 123], "tensor": [1, 2, 3, 20, 23, 24, 25, 29, 33, 43, 51, 60, 64, 66, 75, 77, 79, 88, 91, 96, 106, 107, 108, 118, 120, 126, 127, 131, 143], "tensorsupplytyp": [1, 2, 3, 75, 107, 120, 124, 130, 142], "adapt_torch2tvm": [1, 120, 124], "get_tensor_suppli": [1, 120, 124], "map_torch_typ": [1, 120, 124], "torch_assert_clos": [1, 120, 124], "class": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 51, 56, 58, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 83, 85, 91, 97, 99, 100, 105, 106, 107, 115, 118, 124, 135], "level": [1, 96, 127, 130, 131, 135, 136, 143], "0": [1, 2, 3, 15, 17, 20, 21, 40, 45, 47, 56, 58, 73, 77, 79, 84, 85, 89, 90, 91, 92, 96, 97, 105, 106, 107, 108, 112, 124, 127, 130, 131, 134, 139, 142, 143], "base": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 51, 56, 58, 60, 61, 64, 66, 67, 68, 69, 71, 73, 75, 76, 83, 85, 91, 96, 97, 99, 100, 103, 104, 106, 107, 115, 116, 118, 124, 126, 127, 131, 134, 136, 143], "handler": 1, "log": [1, 2, 60, 77, 93, 96], "direct": [1, 126, 135], "output": [1, 2, 3, 5, 6, 16, 18, 21, 24, 25, 28, 31, 32, 37, 42, 44, 45, 47, 60, 80, 84, 92, 96, 100, 107, 110, 116, 118, 126, 130, 131, 134, 143], "tqdm": 1, "progress": [1, 135, 143], "bar": 1, "avoid": [1, 5, 6, 110], "interfer": 1, "record": 1, "messag": [1, 83, 90, 143], "ar": [1, 8, 17, 24, 25, 32, 34, 37, 42, 58, 83, 86, 94, 96, 105, 107, 116, 124, 126, 127, 130, 131, 134, 135, 143], "written": [1, 127, 131], "ensur": [1, 126, 127, 134], "isn": [1, 45], "t": [1, 2, 5, 6, 17, 45, 58, 77, 78, 79, 84, 94, 96, 97, 116, 126, 127, 130, 131, 134, 135, 136, 142], "corrupt": 1, "set": [1, 2, 4, 5, 6, 8, 31, 32, 34, 35, 37, 42, 60, 78, 79, 82, 92, 96, 99, 100, 105, 110, 126, 127, 131, 134, 142], "": [1, 2, 8, 17, 24, 30, 32, 33, 34, 35, 37, 60, 78, 94, 96, 100, 115, 126, 127, 130, 131, 135, 139, 143], "logger": 1, "paramet": [1, 2, 3, 5, 6, 15, 16, 17, 20, 24, 25, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 51, 58, 60, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 110, 112, 116, 117, 121, 122, 123, 126, 127, 130], "str": [1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 49, 50, 51, 56, 57, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 85, 90, 91, 92, 95, 96, 106, 107, 110, 112, 116, 117, 118, 121, 123, 124, 126, 130], "int": [1, 2, 3, 4, 5, 6, 8, 13, 15, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 45, 47, 51, 56, 58, 60, 62, 64, 66, 68, 71, 72, 75, 77, 79, 80, 84, 85, 88, 89, 92, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 110, 112, 115, 122, 126, 127, 130], "can": [1, 2, 3, 17, 42, 49, 60, 74, 75, 84, 85, 88, 90, 96, 110, 126, 127, 130, 131, 134, 135, 139, 142, 143], "string": [1, 3, 42, 45, 47, 60, 96, 118, 123, 143], "name": [1, 7, 8, 13, 14, 15, 16, 21, 24, 25, 29, 47, 77, 94, 96, 110, 116, 121, 130, 143], "e": [1, 2, 8, 17, 36, 45, 47, 60, 78, 96, 105, 107, 122, 126, 127, 130, 131, 134, 135, 136, 139, 142, 143], "g": [1, 2, 17, 36, 42, 45, 47, 60, 78, 105, 107, 122, 126, 127, 130, 131, 134, 135, 136, 139, 142, 143], "info": [1, 74, 96], "actual": [1, 42, 127], "option": [1, 2, 3, 4, 5, 6, 8, 15, 17, 21, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 49, 50, 51, 52, 56, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 99, 104, 105, 106, 107, 108, 110, 112, 116, 124, 126, 131, 134], "debug": [1, 2, 60, 90, 118, 136], "warn": 1, "error": [1, 47, 96, 143], "critic": [1, 130, 135], "latenc": [2, 3, 60, 75, 126, 130, 131, 135], "config": [2, 3, 60, 75, 117, 130, 134, 142], "ref_lat": [2, 3, 60, 75], "libcod": [2, 3], "load_from_disk": [2, 3], "save_to_disk": [2, 3], "execution_backend": [2, 3, 4, 5, 6, 60, 75, 127], "target_host": [2, 3, 4, 5, 6, 50, 60, 72, 75], "verbos": [2, 3, 4, 5, 6, 44, 45, 60, 64, 66, 71, 75, 116, 124], "compile_program": [2, 3], "out_idx": [2, 3, 4, 5, 6, 60, 75, 76, 127, 130, 131, 142], "warmup": [2, 3, 107, 108, 130, 142], "rep": [2, 3, 107, 108, 130, 142], "timeout": [2, 3, 69], "ref_prog": [2, 3, 130, 142], "supply_prog": [2, 3], "rtol": [2, 3, 107, 124, 131], "atol": [2, 3, 107, 124, 131], "max_mismatched_ratio": [2, 3, 107, 124], "skip_check": [2, 3, 130, 142], "manual_check_prog": [2, 3, 107], "cache_input_tensor": [2, 3], "The": [2, 3, 4, 5, 6, 8, 15, 16, 17, 20, 24, 25, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 47, 49, 50, 51, 58, 60, 62, 64, 66, 68, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 110, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 131, 134, 136, 139, 142, 143], "auto": [2, 3, 4, 5, 6, 17, 50, 60, 72, 75, 107, 120, 123, 124, 127, 130, 131, 136, 143], "tune": [2, 3, 60, 75, 130, 131, 135, 136, 143], "thi": [2, 20, 24, 25, 31, 32, 34, 35, 37, 42, 47, 58, 60, 64, 66, 74, 75, 78, 83, 84, 88, 90, 91, 92, 96, 99, 108, 110, 117, 126, 127, 130, 131, 134, 135, 139, 143], "provid": [2, 31, 43, 45, 47, 60, 78, 83, 85, 90, 91, 96, 99, 100, 105, 106, 126, 127, 131, 135, 142, 143], "function": [2, 3, 5, 6, 8, 17, 24, 25, 31, 33, 35, 42, 43, 45, 47, 49, 58, 60, 64, 66, 71, 75, 76, 78, 83, 84, 90, 91, 94, 96, 106, 107, 108, 110, 122, 124, 127, 131, 139, 143], "includ": [2, 5, 6, 60, 90, 126, 127, 131, 134, 135, 143], "perform": [2, 42, 79, 80, 81, 82, 84, 86, 92, 96, 106, 108, 110, 115, 127, 130, 135, 136, 139, 143], "optim": [2, 3, 24, 31, 32, 33, 34, 35, 37, 118, 127, 130, 131, 135, 136, 139, 143], "through": [2, 126, 131, 142, 143], "configur": [2, 3, 20, 24, 25, 31, 32, 33, 34, 35, 36, 37, 60, 75, 79, 91, 118, 126, 127, 130, 131, 134], "search": [2, 47, 130, 142], "fn": [2, 108, 115], "callabl": [2, 3, 42, 49, 50, 60, 62, 64, 66, 75, 94, 107, 108, 119], "object": [2, 3, 5, 6, 8, 10, 13, 17, 19, 20, 21, 24, 25, 26, 28, 29, 42, 47, 51, 56, 58, 60, 67, 69, 73, 75, 76, 78, 83, 85, 86, 90, 91, 96, 99, 100, 105, 106, 107, 115, 116, 123, 126, 135, 142], "tuner": [2, 3, 131], "handl": [2, 64, 66, 79, 80, 81, 84, 85, 90, 91, 92, 96, 97, 108, 126, 127, 130, 131], "process": [2, 3, 32, 49, 126, 127, 130, 134, 135], "differ": [2, 78, 91, 96, 107, 126, 127, 135, 142], "find": [2, 17, 29, 45, 47, 134], "execut": [2, 3, 42, 51, 60, 79, 84, 90, 96, 107, 115, 126, 127, 135, 143], "list": [2, 3, 4, 5, 6, 8, 13, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 50, 51, 60, 62, 64, 66, 68, 71, 75, 79, 80, 81, 85, 89, 94, 96, 97, 99, 100, 105, 107, 108, 122, 130, 142], "try": [2, 16, 47, 66, 96, 117], "dure": [2, 60, 92, 96, 126, 127, 130, 135, 143], "path": [2, 3, 4, 5, 6, 29, 42, 45, 47, 64, 66, 75, 123, 134], "posixpath": [2, 4, 5, 6], "home": [2, 5, 6], "leiwang": [2, 5, 6], "none": [2, 3, 4, 5, 6, 17, 19, 21, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 49, 50, 51, 52, 56, 57, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 77, 79, 80, 81, 83, 85, 88, 89, 91, 92, 94, 95, 96, 99, 104, 105, 106, 107, 108, 112, 116, 118, 130, 134, 142], "cython": [2, 3, 4, 5, 6, 60, 61, 75, 127], "fals": [2, 3, 4, 5, 6, 8, 17, 21, 24, 25, 31, 32, 34, 35, 37, 38, 44, 45, 47, 49, 50, 51, 56, 57, 58, 59, 60, 64, 66, 67, 71, 75, 83, 84, 85, 91, 92, 94, 96, 99, 104, 105, 106, 110, 116, 118, 122, 123, 124, 130, 142], "classmethod": [2, 3, 20, 24, 51, 64, 66, 71, 75, 83, 85, 105, 115], "creat": [2, 42, 51, 58, 75, 79, 80, 88, 91, 92, 96, 106, 131, 134], "an": [2, 31, 33, 40, 42, 51, 60, 75, 81, 82, 83, 85, 90, 94, 96, 99, 122, 124, 126, 127, 130, 131, 135, 136, 143], "instanc": [2, 31, 51, 60, 75, 115, 126, 127, 143], "from": [2, 3, 5, 6, 16, 17, 24, 29, 42, 43, 45, 51, 64, 66, 71, 74, 75, 80, 83, 85, 91, 94, 96, 106, 115, 122, 126, 127, 130, 131, 135, 136, 139, 143], "return": [2, 5, 6, 15, 16, 17, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 51, 53, 58, 60, 64, 66, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 105, 106, 107, 108, 110, 112, 115, 116, 117, 119, 122, 123, 127, 130, 131, 139, 142, 143], "A": [2, 17, 24, 25, 31, 32, 33, 34, 35, 36, 37, 42, 49, 58, 59, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 94, 96, 97, 99, 100, 104, 105, 106, 107, 110, 115, 121, 126, 127, 130, 131, 136, 139, 142, 143], "new": [2, 81, 91, 96, 99, 100, 121, 127, 134], "type": [2, 3, 5, 6, 15, 16, 17, 24, 25, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 51, 58, 60, 66, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 119, 122, 123, 126], "dict": [2, 3, 4, 5, 6, 17, 20, 21, 24, 25, 28, 29, 32, 33, 34, 35, 37, 42, 60, 64, 66, 71, 73, 75, 77, 95, 110], "ani": [2, 3, 21, 60, 64, 66, 71, 73, 75, 76, 77, 79, 83, 86, 90, 93, 95, 96, 105, 126, 134], "gener": [2, 3, 24, 25, 35, 49, 59, 84, 85, 90, 96, 106, 107, 118, 126, 127, 134, 135, 136], "kei": [2, 118, 126, 130], "25": [2, 3, 107, 108], "100": [2, 3, 107, 108], "30": [2, 3], "7": [2, 3, 45, 47, 124, 131, 134], "01": [2, 3, 107, 124, 134], "true": [2, 3, 17, 21, 24, 25, 31, 35, 37, 47, 49, 51, 56, 58, 77, 83, 86, 92, 94, 96, 99, 105, 108, 116, 117, 118, 122, 123, 124, 126, 130, 131, 142], "number": [2, 3, 15, 24, 25, 31, 32, 33, 34, 35, 36, 37, 45, 47, 79, 84, 85, 89, 92, 96, 99, 105, 107, 108, 110, 122, 124, 126, 127, 130, 135, 139], "iter": [2, 3, 7, 8, 17, 24, 79, 88, 89, 95, 99, 100, 107, 108, 126, 130], "repetit": [2, 3, 107, 108], "time": [2, 3, 60, 92, 94, 99, 107, 108, 115, 130, 131, 134, 136], "maximum": [2, 3, 15, 24, 79, 81, 89, 95, 96, 107, 124, 135], "per": [2, 3, 115, 126, 127, 130], "result": [2, 3, 58, 75, 84, 85, 92, 96, 97, 106, 108, 115, 117, 119, 127, 130, 131, 142, 143], "union": [2, 3, 4, 5, 6, 8, 9, 11, 13, 15, 17, 36, 38, 42, 49, 50, 51, 57, 58, 60, 64, 66, 71, 72, 75, 79, 80, 81, 82, 84, 85, 86, 94, 96, 108, 119, 123], "liter": [2, 3, 4, 5, 6, 8, 58, 59, 60, 72, 75, 96, 108, 110, 123], "cuda": [2, 3, 7, 9, 15, 24, 45, 49, 60, 64, 66, 77, 79, 96, 112, 117, 118, 123, 126, 130, 131, 134, 135, 142, 143], "hip": [2, 3, 44, 49, 73, 123, 131, 135], "ctype": [2, 3, 4, 5, 6, 60, 61, 66, 75], "bool": [2, 3, 4, 5, 6, 8, 11, 12, 13, 17, 20, 24, 25, 29, 31, 32, 34, 35, 37, 38, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 64, 66, 71, 72, 73, 75, 83, 84, 85, 91, 92, 94, 96, 99, 104, 105, 106, 108, 110, 116, 117, 122, 123, 124], "argument": [2, 3, 5, 6, 60, 75, 79, 80, 94, 96, 99, 131], "indic": [2, 3, 5, 6, 8, 50, 58, 64, 66, 85, 96, 97, 99, 100, 107, 110, 116, 118, 121, 126, 131, 143], "platform": [2, 5, 6, 126], "backend": [2, 3, 47, 60, 61, 73, 96, 107, 131, 134, 135, 142], "us": [2, 3, 4, 5, 6, 8, 16, 17, 20, 24, 25, 32, 33, 34, 35, 37, 42, 45, 47, 49, 51, 58, 60, 64, 66, 74, 75, 79, 83, 88, 89, 91, 94, 96, 99, 106, 107, 108, 110, 116, 121, 126, 127, 130, 131, 135, 139, 143], "host": [2, 3, 5, 6, 50, 51, 60, 72, 75, 134], "cross": [2, 3, 42, 60], "whether": [2, 3, 8, 17, 31, 32, 37, 47, 49, 50, 60, 64, 66, 79, 84, 85, 91, 92, 94, 96, 108, 110, 123], "enabl": [2, 3, 50, 53, 60, 77, 89, 118, 126, 127, 131, 134, 135], "addit": [2, 3, 32, 35, 37, 42, 44, 45, 60, 75, 81, 96, 99, 116, 118, 127, 135, 142], "keyword": [2, 3, 60, 75], "pass": [2, 3, 5, 6, 42, 45, 60, 75, 108, 117, 118, 119, 131, 135, 143], "passcontext": [2, 3, 52, 60], "self": [2, 36, 115], "method": [2, 24, 31, 32, 34, 35, 36, 37, 83, 85, 94, 105, 121, 126, 127], "chain": 2, "tupl": [2, 17, 20, 21, 24, 25, 29, 56, 58, 64, 66, 72, 78, 85, 91, 96, 97, 105], "float": [2, 3, 24, 45, 69, 75, 96, 107, 108, 115, 124, 127, 130, 131, 142, 143], "suppli": [2, 3, 75, 107], "mechan": [2, 3, 126], "ignor": [2, 96], "i": [2, 8, 17, 20, 21, 24, 25, 26, 31, 33, 45, 47, 50, 51, 55, 56, 57, 58, 59, 60, 74, 77, 79, 83, 85, 86, 89, 90, 92, 94, 96, 97, 99, 105, 110, 116, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 139, 140, 142, 143], "refer": [2, 3, 75, 77, 107, 110, 127, 131, 135, 143], "valid": [2, 3, 24, 25, 96, 107, 123, 131, 143], "input": [2, 3, 18, 21, 32, 33, 34, 35, 37, 42, 47, 49, 60, 67, 75, 79, 80, 81, 84, 90, 92, 96, 100, 106, 107, 110, 126, 131, 135], "rel": [2, 24, 96, 107, 124], "toler": [2, 107, 124], "absolut": [2, 92, 96, 107, 124], "allow": [2, 94, 96, 107, 124, 126, 130, 131, 135, 136, 143], "mismatch": [2, 107, 124], "ratio": [2, 77, 107, 124, 126], "skip": [2, 85, 97], "manual": [2, 123, 126, 131, 135, 142], "check": [2, 8, 24, 25, 31, 50, 51, 83, 86, 96, 105, 107, 122, 123, 127, 143], "except": [2, 96, 126, 127], "_p": [2, 60], "_rprog": [2, 60], "primfunc": [2, 3, 4, 5, 6, 8, 17, 21, 24, 31, 38, 50, 60, 64, 66, 71, 72, 75, 94, 96, 115, 119, 122], "just": [2, 60, 126, 127, 131, 136], "In": [2, 17, 60, 126, 127, 130, 131, 135, 136, 143], "decor": [2, 49, 60, 76, 94, 121], "without": [2, 49, 60, 83, 85, 91, 94, 131, 135, 136], "appli": [2, 32, 34, 35, 37, 60, 110, 118, 119, 127], "default": [2, 3, 15, 18, 22, 31, 33, 36, 42, 45, 49, 50, 60, 75, 78, 80, 81, 84, 91, 92, 96, 110, 112, 116, 118, 124, 131], "func_or_out_idx": [2, 60], "If": [2, 15, 31, 32, 34, 37, 45, 51, 58, 60, 79, 80, 82, 83, 84, 90, 92, 96, 99, 105, 106, 116, 122, 123, 124, 130, 134, 139], "directli": [2, 60, 75, 79, 90, 92, 123, 127, 134, 135, 142, 143], "implicitli": [2, 60], "tvm": [2, 3, 17, 32, 33, 34, 35, 36, 37, 42, 43, 45, 47, 51, 60, 64, 66, 72, 75, 78, 79, 80, 82, 86, 91, 94, 96, 105, 106, 107, 115, 117, 119, 122, 131, 136, 143], "llvm": [2, 47, 60, 96, 134, 135, 143], "context": [2, 24, 25, 60, 77, 117, 131, 135], "debug_root_path": [2, 60], "directori": [2, 4, 5, 6, 42, 60, 66, 116, 118, 134], "save": [2, 60, 116], "sourc": [2, 5, 6, 29, 42, 43, 60, 64, 66, 72, 73, 75, 76, 77, 80, 96, 126, 135, 136], "either": [2, 3, 5, 6, 45, 47, 60, 79, 82, 86, 90, 110, 126, 139], "wrapper": [2, 21, 60, 61, 75, 85], "around": [2, 60, 85, 126, 130], "get": [2, 4, 5, 6, 15, 16, 17, 24, 42, 45, 66, 74, 75, 83, 96, 99, 100, 110, 117, 122, 130, 134, 143], "cpu": [2, 7, 9, 85, 131, 136, 142, 143], "core": [2, 24, 91, 96, 106, 126, 135], "avail": [2, 3, 60, 78, 105, 123, 131, 134], "current": [2, 31, 42, 53, 66, 77, 79, 83, 85, 96, 100, 117, 126, 134, 139], "arg": [2, 4, 5, 6, 17, 29, 73, 79, 80, 94, 96, 124, 139], "kwarg": [2, 73, 75], "signum": 2, "best": [3, 135, 142], "achiev": [3, 115, 126, 130, 131], "produc": [3, 79, 89, 96, 126, 127, 130, 139, 143], "implement": [3, 24, 25, 31, 36, 50, 59, 79, 83, 91, 92, 107, 110, 127, 135, 139, 143], "librari": [3, 5, 6, 42, 64, 66, 74, 75, 126, 135, 136, 143], "code": [3, 5, 6, 44, 45, 49, 51, 64, 66, 73, 75, 85, 96, 118, 126, 127, 130, 131, 134, 135, 142, 143], "detail": [3, 77, 79, 126, 127, 131, 135], "descript": [3, 135], "found": [3, 42, 66, 83, 130], "attribut": [3, 32, 33, 34, 35, 37, 50, 77, 94, 115], "disable_vector": [3, 60, 118], "tl": [3, 50, 60, 73, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 97, 118, 130, 142], "disable_tma_low": [3, 60, 118], "disable_warp_speci": [3, 60, 118], "config_index_bitwidth": [3, 60, 118], "disable_dynamic_tail_split": [3, 60, 118], "dynamic_vectorize_size_bit": [3, 60], "128": [3, 8, 60, 77, 79, 94, 97, 126, 127, 130, 131, 142, 143], "disable_safe_memory_leg": [3, 60, 118], "correct": [3, 106, 131], "1": [3, 17, 20, 24, 25, 33, 34, 40, 45, 56, 58, 59, 64, 66, 67, 79, 84, 85, 92, 96, 97, 99, 104, 105, 106, 107, 112, 124, 126, 127, 130, 131, 135, 143], "1e": [3, 124, 131], "2": [3, 17, 24, 25, 40, 56, 58, 59, 64, 66, 85, 96, 105, 124, 126, 127, 130, 131, 135, 139, 143], "databas": [4, 5, 6, 75], "persist": [4, 5, 6, 77], "init": [4, 73, 96], "file": [4, 5, 6, 42, 44, 45, 47, 74, 75, 116, 134, 135, 143], "reus": [4, 5, 6], "entir": [4, 5, 6, 80, 131, 135, 143], "rubric": 4, "exampl": [4, 8, 42, 77, 79, 94, 96, 97, 105, 112, 126, 127, 130, 135, 139], "user": [4, 123, 126, 130, 131, 134, 135, 140, 142, 143], "usernam": 4, "redund": [5, 6, 24], "cu": [5, 6], "wrapped_kernel": [5, 6], "wrap": [5, 6, 43, 60, 61, 64, 66, 73, 75, 78, 98, 99, 100, 101, 117], "kernel_lib": [5, 6], "so": [5, 6, 126, 127, 134], "pkl": [5, 6], "prepar": [5, 6, 131], "specifi": [5, 6, 31, 36, 45, 47, 79, 80, 81, 82, 92, 94, 96, 105, 107, 123, 124, 126, 127, 130, 131, 134], "which": [5, 6, 24, 25, 32, 56, 58, 79, 92, 96, 99, 106, 107, 126, 127, 130, 131, 134, 135, 142, 143], "freshli": [5, 6], "both": [5, 6, 51, 90, 106, 126, 127, 131], "memori": [5, 6, 15, 24, 25, 78, 79, 80, 91, 96, 106, 115, 117, 118, 122, 127, 130, 131, 136, 139, 143], "disk": [5, 6], "driver": [7, 9], "arch_bas": [7, 9], "tiledevic": [7, 9, 10, 11, 12, 13, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38], "cdna": [7, 9, 31], "is_cdna_arch": [7, 9, 11, 30, 31], "is_cpu_arch": [7, 9, 12], "tensorinstruct": [7, 9, 13], "check_sm_vers": [7, 9, 13], "has_mma_support": [7, 9, 13], "is_ada_arch": [7, 9, 13], "is_ampere_arch": [7, 9, 13, 30, 31], "is_cuda_arch": [7, 9, 13], "is_hopper_arch": [7, 9, 13], "is_tensorcore_supported_precis": [7, 9, 13], "is_volta_arch": [7, 9, 13, 30, 31], "auto_infer_current_arch": [7, 9], "get_arch": [7, 9], "polici": [7, 18, 77, 84, 104, 105, 106, 126, 139], "shape_infer": [7, 18], "bestfit": [7, 18], "block": [7, 8, 16, 17, 18, 19, 21, 24, 29, 77, 79, 85, 105, 106, 127, 130, 131, 135, 142], "hint": [7, 18, 24, 31, 32, 33, 34, 35, 36, 37, 38, 127, 131, 142], "intrininfo": [7, 18, 20], "stride": [7, 18, 20, 24, 25, 59, 80, 96], "tensorcoreextraconfig": [7, 18, 20], "tiledict": [7, 18, 20, 24, 25], "node": [7, 18, 20, 22, 24, 25, 29, 31, 34, 96, 100], "blockanalyz": [7, 18, 21], "edg": [7, 18, 21], "outputnod": [7, 18, 21, 24, 31, 34, 38], "placeholdernod": [7, 18, 21], "primfuncnod": [7, 18, 20, 21, 24, 25], "find_topo_sort": [7, 18, 21], "find_topo_sort_prior": [7, 18, 21], "pre_order_travers": [7, 18, 21], "topo_ord": [7, 18, 21], "raster": [7, 18, 24, 25, 131], "noraster": [7, 18, 26, 142], "rasterization2dcolumn": [7, 18, 26], "rasterization2drow": [7, 18, 26], "basetempl": [7, 30, 31, 32, 33, 34, 35, 36, 37], "conv": [7, 30], "convtempl": [7, 30, 32], "elementwis": [7, 8, 30, 136, 142], "elementwisetempl": [7, 30, 33], "flashattent": [7, 30, 126, 136], "flashattentiontempl": [7, 30, 34], "gemv": [7, 8, 30, 136], "gemvtempl": [7, 30, 35], "general_reduc": [7, 30], "generalreductiontempl": [7, 30, 36], "matmul": [7, 17, 30, 131, 135, 142, 143], "matmultempl": [7, 30, 37, 142], "block_rv": [7, 8], "dom": [7, 8, 24, 25], "dom_kind": [7, 8], "is_elementwis": [7, 8], "is_gemm": [7, 8], "is_gemv": [7, 8], "is_inject": [7, 8], "is_reduct": [7, 8], "kind": [7, 8, 17], "loop_rv": [7, 8], "var": [7, 8, 51, 64, 66, 78, 79, 82, 83, 84, 85, 91, 96], "kiter_i": [7, 17], "kiter_j": [7, 17], "kiter_k": [7, 17], "kiter_": [7, 17], "kiter_t": [7, 17], "extent": [7, 17, 24, 25, 80, 85, 88, 95, 96, 99], "infra": 7, "loop": [8, 88, 89, 95, 106, 117, 127, 131, 135, 139, 142], "blockrv": [8, 16, 17, 21, 29], "reduction_block": 8, "inform": [8, 20, 21, 51, 74, 115, 116, 117, 118], "about": [8, 96, 116, 135], "primexpr": [8, 17, 29, 56, 58, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 95, 96, 99, 100, 106], "domain": [8, 24, 25, 131, 136], "ssss": 8, "sssr": 8, "sch": [8, 16, 17, 21], "schedul": [8, 16, 17, 19, 20, 24, 25, 126, 131, 142], "trivial": [8, 17], "map": [8, 17, 24, 25, 32, 42, 58, 83, 99, 100, 110, 116, 126, 127, 131, 135, 139, 142], "between": [8, 32, 80, 81, 89, 96, 108, 117, 126, 127, 135, 139], "read": [8, 17, 80, 96, 117, 135], "write": [8, 17, 80, 96, 117, 127, 130, 131, 135, 136, 139, 143], "workload": [8, 105], "inject": [8, 85], "all": [8, 17, 24, 25, 51, 72, 77, 79, 85, 86, 91, 93, 94, 96, 105, 117, 126, 127, 130, 134, 139, 140], "its": [8, 24, 90, 94, 126, 127], "reduct": [8, 17, 24, 25, 92, 96, 106, 139, 142], "r": [8, 80, 96], "o": 8, "looprv": 8, "properti": [8, 15, 20, 21, 26, 31, 32, 33, 34, 35, 36, 37, 64, 66, 71, 73, 75, 85, 99, 100, 105, 106, 107], "rang": [8, 79, 81, 99, 126, 131], "collect": [8, 126, 140], "variabl": [8, 24, 25, 42, 51, 78, 79, 82, 83, 90, 91, 95, 96, 99, 100, 134, 139, 143], "access": [8, 77, 79, 80, 96, 117, 118, 126, 127, 134, 135], "buffer": [8, 17, 21, 51, 58, 77, 78, 80, 81, 82, 84, 86, 89, 90, 91, 92, 96, 99, 101, 104, 105, 106, 116, 117, 122, 126, 130, 131, 135, 139, 142, 143], "expr": [8, 17, 29, 91, 96], "detect": [8, 17, 58, 107, 123, 139], "domin": 8, "block_stmt": [8, 17], "target_bit": 8, "func_nam": [8, 96], "main": [8, 77, 91, 127, 130, 131, 142, 143], "epilogu": 8, "broadcast": 8, "pattern": [8, 17, 96, 126, 131, 135, 143], "normal": [8, 120, 124], "form": [8, 32, 34, 35, 37, 56, 58, 126], "cuda_driv": [9, 14], "cudadeviceprop": [9, 14, 15], "get_cuda_device_properti": [9, 14, 15], "get_device_attribut": [9, 14, 15], "get_device_nam": [9, 14, 15], "get_max_dynamic_shared_size_byt": [9, 14, 15], "get_num_sm": [9, 14, 15], "get_persisting_l2_cache_max_s": [9, 14, 15], "get_shared_memory_per_block": [9, 14, 15], "get_avaliable_tensorintrin_shap": [9, 10, 13], "repres": [10, 17, 24, 51, 56, 58, 85, 91, 97, 99, 100, 105, 106, 126, 135, 139], "architectur": [10, 24, 31, 32, 33, 34, 35, 36, 37, 44, 45, 131, 135], "comput": [10, 17, 20, 24, 25, 29, 32, 33, 34, 35, 36, 37, 45, 47, 79, 84, 91, 92, 96, 99, 100, 105, 108, 111, 126, 127, 130, 131, 135, 136, 143], "devic": [10, 15, 50, 51, 66, 72, 96, 115, 117, 131, 135, 140], "captur": [10, 135], "variou": [10, 20, 24, 74, 84, 127, 131, 135], "hardwar": [10, 31, 32, 33, 34, 35, 36, 37, 126, 131, 143], "specif": [10, 31, 91, 96, 107, 126, 127, 131, 134, 135, 136, 143], "shape": [13, 20, 21, 24, 25, 28, 29, 30, 33, 36, 48, 51, 59, 64, 66, 78, 81, 91, 92, 96, 99, 100, 105, 117, 118, 126, 135, 139], "in_dtyp": [13, 20, 30, 32, 34, 35, 37, 104, 106, 110, 127, 142], "accum_dtyp": [13, 30, 32, 34, 35, 37, 56, 58, 104, 106, 130, 131, 142, 143], "eccen": [14, 15], "asyncenginecount": [14, 15], "canmaphostmemori": [14, 15], "clockrat": [14, 15], "computemod": [14, 15], "concurrentkernel": [14, 15], "deviceoverlap": [14, 15], "globall1cachesupport": [14, 15], "integr": [14, 15], "ismultigpuboard": [14, 15], "kernelexectimeouten": [14, 15], "l2caches": [14, 15], "locall1cachesupport": [14, 15], "luid": [14, 15], "luiddevicenodemask": [14, 15], "major": [14, 15, 45, 47, 96, 126], "managedmemori": [14, 15], "maxgrids": [14, 15], "maxsurface1d": [14, 15], "maxsurface1dlay": [14, 15], "maxsurface2d": [14, 15], "maxsurface2dlay": [14, 15], "maxsurface3d": [14, 15], "maxsurfacecubemap": [14, 15], "maxsurfacecubemaplay": [14, 15], "maxtexture1d": [14, 15], "maxtexture1dlay": [14, 15], "maxtexture1dlinear": [14, 15], "maxtexture1dmipmap": [14, 15], "maxtexture2d": [14, 15], "maxtexture2dgath": [14, 15], "maxtexture2dlay": [14, 15], "maxtexture2dlinear": [14, 15], "maxtexture2dmipmap": [14, 15], "maxtexture3d": [14, 15], "maxtexture3dalt": [14, 15], "maxtexturecubemap": [14, 15], "maxtexturecubemaplay": [14, 15], "maxthreadsdim": [14, 15], "maxthreadsperblock": [14, 15], "maxthreadspermultiprocessor": [14, 15], "mempitch": [14, 15], "memorybuswidth": [14, 15], "memoryclockr": [14, 15], "minor": [14, 15, 45, 47], "multigpuboardgroupid": [14, 15], "multiprocessorcount": [14, 15], "pcibusid": [14, 15], "pcideviceid": [14, 15], "pcidomainid": [14, 15], "persistingl2cachemaxs": [14, 15], "regsperblock": [14, 15], "regspermultiprocessor": [14, 15], "reserv": [14, 15], "reserved1": [14, 15], "reserved2": [14, 15], "sharedmemperblock": [14, 15], "sharedmempermultiprocessor": [14, 15], "streamprioritiessupport": [14, 15], "surfacealign": [14, 15], "tccdriver": [14, 15], "texturealign": [14, 15], "texturepitchalign": [14, 15], "totalconstmem": [14, 15], "totalglobalmem": [14, 15], "unifiedaddress": [14, 15], "uuid": [14, 15], "warpsiz": [14, 15], "structur": [15, 30, 31, 36, 83, 96], "member": 15, "device_id": [15, 96], "attr": [15, 50, 130], "format": [15, 42, 44, 45, 96], "byte": [15, 96, 115], "dynam": [15, 64, 66, 91, 117, 118, 122, 139], "share": [15, 24, 25, 42, 47, 75, 78, 91, 96, 106, 117, 118, 122, 131, 135, 139], "size": [15, 18, 19, 24, 25, 32, 77, 80, 85, 96, 99, 126, 127, 131, 139], "kilobyt": 15, "megabyt": 15, "stream": [15, 67, 126], "multiprocessor": [15, 126], "sm": [15, 24, 126], "id": [15, 21, 96], "rais": [15, 24, 25, 31, 32, 34, 37, 47, 51, 58, 79, 80, 82, 83, 84, 90, 105, 106, 122, 123, 126], "runtimeerror": 15, "unabl": 15, "strategi": [16, 130, 142, 143], "target_block": 16, "output_block": 16, "inlin": [16, 131], "mani": [16, 130, 131], "possibl": [16, 24, 25, 47], "remain": [16, 126, 127], "cannot": [16, 80, 96, 126], "block_info": 16, "contigu": [16, 126], "spatial": [16, 17, 32, 36, 80], "rule": [17, 96, 126], "gpu": [17, 44, 45, 47, 85, 91, 126, 134, 135, 136, 142, 143], "oper": [17, 33, 43, 51, 64, 66, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 96, 99, 110, 115, 118, 122, 126, 130, 131, 134, 135, 139, 142, 143], "valu": [17, 21, 32, 34, 35, 37, 40, 51, 77, 79, 81, 82, 83, 85, 89, 90, 91, 92, 94, 95, 96, 97, 105, 118, 124, 126, 127, 143], "enum": [17, 118, 124], "like": [17, 77, 83, 85, 93, 94, 96, 126, 127, 130, 131, 135, 143], "we": [17, 47, 50, 79, 85, 96, 97, 126, 127, 130, 131, 134, 135, 139, 143], "c": [17, 30, 32, 37, 42, 64, 66, 73, 77, 81, 84, 85, 96, 104, 105, 106, 127, 130, 131, 134, 135, 139, 142, 143], "j": [17, 55, 57, 59, 77, 127, 131, 134], "k": [17, 21, 30, 32, 34, 35, 37, 84, 96, 112, 126, 131, 142, 143], "b": [17, 33, 37, 58, 59, 77, 81, 84, 94, 96, 102, 104, 105, 106, 126, 127, 130, 131, 135, 139, 142], "where": [17, 33, 81, 84, 96, 99, 116, 126, 127, 131, 143], "fundament": 17, "ax": [17, 18, 20, 24, 25, 36], "other": [17, 19, 24, 25, 43, 126, 127, 130, 135, 139, 142, 143], "batch": [17, 32, 80, 126], "3": [17, 40, 59, 64, 66, 85, 124, 126, 130, 131, 139], "4": [17, 26, 59, 81, 105, 110, 112, 124, 126, 130, 131, 134, 142, 143], "ir": [17, 64, 66, 71, 72, 77, 91, 93, 106, 115, 135, 143], "skip_block": 17, "prim_expr": 17, "trait": 17, "doe": [17, 24, 25, 96, 127, 131], "match": [17, 47, 84, 94, 131], "main_block": 17, "travers": [17, 115, 127, 142], "index": [17, 59, 60, 96, 97, 98, 99, 100, 117, 135, 143], "bufferregion": [17, 80, 82, 86, 139], "out": [17, 42, 58, 66, 92, 96, 130, 131, 139], "data": [17, 32, 33, 35, 37, 76, 78, 79, 80, 83, 91, 96, 99, 106, 110, 112, 115, 126, 127, 130, 131, 135, 136, 139, 140, 143], "given": [17, 20, 24, 25, 33, 60, 85, 91, 99, 100, 105, 107, 115, 142], "indexmap": [17, 58], "n": [17, 23, 24, 30, 32, 34, 35, 37, 56, 58, 73, 77, 96, 105, 112, 127, 130, 131, 142, 143], "infer": [17, 24, 25, 27, 28, 29, 105, 106, 117, 130, 131, 135, 139], "last": [17, 96, 130], "axi": [17, 20, 24, 25, 96, 130, 139], "index_map": 17, "dtype": [17, 21, 30, 33, 36, 48, 51, 57, 59, 64, 66, 77, 78, 81, 91, 92, 96, 106, 112, 124, 126, 127, 130, 131, 139, 142, 143], "float16": [17, 32, 33, 34, 35, 36, 37, 56, 58, 59, 110, 112, 126, 130, 131, 142, 143], "index_dtyp": 17, "int32": [17, 56, 58, 77, 78, 110], "tran": [17, 96], "matrix_nam": 17, "skip_norm": 17, "allow_gemv": [17, 38], "necessari": [17, 51, 106, 130, 134, 135, 136], "conv2d": 17, "im2col": [17, 80], "start_block": 17, "start_buff": 17, "end_block": 17, "kind_ord": 17, "coalesced_factor": [18, 22, 23], "coalesced_tensor_shap": [18, 22, 23], "factor": [18, 22, 23, 24, 25, 91, 99, 105], "get_all_factor": [18, 22, 23], "defaultpolici": [18, 22, 24, 25], "tensorcor": [18, 20, 22, 45], "tensorcorepolici": [18, 22, 25], "inputshapeinfer": [18, 27, 28, 29], "statement": [18, 27, 28, 29, 90, 95, 96, 139, 143], "dependencyanalysi": [18, 27, 29], "tensordepnod": [18, 27, 29], "get_analyzer_by_tir": [18, 27, 29], "region_exist_in_list": [18, 27, 29], "walk_indic": [18, 27, 29], "free": [18, 19, 96], "malloc": [18, 19], "merg": [18, 19, 118, 126], "complete_config": [18, 20], "from_dict": [18, 20], "raxis_ord": [18, 20], "step": [18, 20, 24, 25, 32, 80, 92, 106, 130, 134], "tensorcore_leg": [18, 20], "to_dict": [18, 20], "inter_transform_a": [18, 20], "inter_transform_b": [18, 20], "is_input_8bit": [18, 20], "smooth_a": [18, 20], "smooth_b": [18, 20], "compute_elements_from_shap": [18, 20], "compute_strides_from_shap": [18, 20], "is_valid": [18, 20], "get_rstep": [18, 20], "get_til": [18, 20], "get_block_info": [18, 21], "get_block_nam": [18, 21], "get_buff": [18, 21], "get_consumer_block": [18, 21], "get_input_buff": [18, 21], "get_output_buff": [18, 21], "get_producer_block": [18, 21], "get_reduce_axi": [18, 21], "get_spatial_axi": [18, 21], "dst_id": [18, 21], "dst_node": [18, 21], "src_id": [18, 21], "src_node": [18, 21], "add_tag": [18, 21], "get_dtyp": [18, 21], "get_ir": [18, 21], "get_shap": [18, 21], "get_tag": [18, 21], "is_output": [18, 21], "is_placehold": [18, 21], "num_output": [18, 21], "set_dtyp": [18, 21], "set_input": [18, 21], "set_output": [18, 21], "set_shap": [18, 21], "set_tag": [18, 21], "update_tag": [18, 21], "extent_wrapp": [18, 21], "footprint": [18, 21], "get_buffer_dtyp": [18, 21], "get_opt_shap": [18, 21], "get_reduce_inputs_dtyp": [18, 21], "get_space_dim": [18, 21], "infer_tensorcore_axi": [18, 21], "propag": [18, 21], "propagate_input": [18, 21], "propagate_inputs_on_reduct": [18, 21], "propagate_output": [18, 21], "propagate_reduction_input": [18, 21], "get_cod": [18, 26], "panel_width": [18, 26], "panel_width_": [18, 26], "get_device_funct": [18, 26], "benefit": 19, "For": [19, 24, 25, 26, 29, 95, 96, 126, 127, 131, 134, 135, 143], "align": [19, 91, 118, 127], "32": [19, 58, 96, 118, 127, 130, 131, 139, 142, 143], "start": [19, 29, 89, 95, 96, 130, 139], "end": [19, 96, 127], "is_fre": 19, "definit": [20, 36, 94], "central": 20, "manag": [20, 64, 66, 83, 85, 97, 126, 131, 135], "task": [20, 126, 127], "dic": 20, "out_dtyp": [20, 30, 32, 34, 35, 37, 110, 127, 142], "trans_b": [20, 30, 35, 37], "input_transform_kind": 20, "weight_transform_kind": 20, "relat": [20, 24, 115], "as_shap": 20, "bs_shape": 20, "af_shap": 20, "bf_shape": 20, "tc_axi": 20, "store": [20, 31, 36, 51, 58, 79, 92, 96, 115, 126, 130, 139], "extra": [20, 24, 25, 96], "output_til": [20, 24], "tile": [20, 21, 24, 25, 78, 80, 103, 126, 127, 130, 134, 142], "analaysi": 21, "itervar": [21, 99, 100], "tag": [21, 22, 24, 25], "v": [21, 126, 143], "datatyp": [21, 57, 130], "overwrit": 21, "prim_func": [21, 60, 61, 63, 64, 65, 66, 70, 71, 73, 75, 77, 93, 94, 127, 130, 131, 142, 143], "rstep": [21, 28, 29, 142], "stride_map": 21, "output_node_list": 21, "block_analyz": [21, 29], "list_of_nod": 21, "assign_block_s": [22, 24], "check_tile_shape_isvalid": [22, 24, 25], "compute_node_stride_map": [22, 24, 25], "compute_tile_dict": [22, 24], "compute_workload_per_item": [22, 24], "dfs_smem_til": [22, 24], "emit_config": [22, 24], "from_output_nod": [22, 24], "from_prim_func": [22, 24], "get_base_til": [22, 24], "get_block_s": [22, 24], "get_node_reduce_step_candid": [22, 24, 25], "infer_node_smem_usag": [22, 24, 25], "plan_raster": [22, 24, 25], "recommend_block_s": [22, 24], "score_block_s": [22, 24], "block_reduction_depth": [22, 25], "pipeline_stag": [22, 25, 142], "use_async_copi": [22, 25, 118], "wmma_k": [22, 25], "subtensor": 23, "transaction_s": 23, "fastdlight": 24, "heurist": 24, "plan": [24, 25, 26, 126], "tri": 24, "minim": [24, 127, 135], "traffic": 24, "maxim": 24, "bitbla": [24, 131], "td": [24, 25], "topk": [24, 31, 32, 33, 34, 35, 36, 37, 38, 142], "assign": [24, 126, 127, 130, 131, 135], "recommend": [24, 31, 36, 127, 134, 142], "top": [24, 31, 32, 33, 34, 35, 36, 37, 77, 83, 85, 136, 139, 142], "consid": [24, 32, 33, 34, 35, 37, 131, 139, 143], "yield": [24, 143], "primari": [24, 64, 66, 71], "contain": [24, 25, 32, 33, 34, 35, 37, 51, 75, 82, 83, 122, 134, 135, 142], "otherwis": [24, 25, 31, 47, 51, 56, 58, 83, 105, 122, 123], "dictionari": [24, 25, 32, 33, 34, 35, 37, 75, 77, 110], "rstep_map": 24, "cost": [24, 127], "grid": [24, 77, 93, 95, 126, 127, 131, 139], "init_til": 24, "minimum": [24, 81, 89, 95, 96, 126], "satisfi": [24, 96], "equal": 24, "length": [24, 139], "space": [24, 32, 96, 99, 131, 135], "dimens": [24, 32, 51, 80, 84, 85, 92, 96, 99, 105, 106, 126, 127, 131, 139, 143], "determin": [24, 32, 45, 105, 107, 123, 126, 135], "constraint": [24, 96, 126, 139], "score": 24, "chosen": 24, "constrain": 24, "1024": [24, 127, 130, 131, 143], "calcul": [24, 25, 96, 108, 114, 115, 126, 143], "candid": [24, 25], "each": [24, 25, 26, 32, 42, 78, 126, 127, 130, 131, 135, 139], "idea": [24, 25, 131], "first": [24, 25, 47, 81, 84, 90, 92, 96, 99, 124, 126, 127, 130, 135, 143], "sinc": [24, 25, 126, 127, 131, 139], "requir": [24, 25, 47, 105, 118, 126, 127, 130, 131, 134, 143], "boundari": [24, 25, 139], "larg": [24, 25, 126, 130], "prime": [24, 25, 105], "rare": [24, 25], "case": [24, 25, 126, 127, 130, 139, 143], "power": [24, 25, 77, 93, 96, 126, 130], "It": [24, 25, 31, 36, 60, 78, 83, 90, 91, 96, 110, 115, 126, 130, 131, 139, 142], "raxi": [24, 25], "usag": [24, 25, 64, 66, 79, 127, 131, 135], "estim": [24, 25, 115], "amount": [24, 25], "yet": [24, 25, 131, 134, 135], "rasterrationplan": [24, 25], "sort": 24, "effici": [24, 126, 127, 131, 135, 142], "fit": [24, 127], "warp": [24, 79, 84, 92, 96, 97, 105, 110, 118, 135], "partit": [24, 105, 106, 126, 139], "two": [24, 96, 124, 126, 127, 143], "respect": [24, 96, 126, 127, 143], "16": [25, 56, 58, 118, 130, 134, 143], "l2": [26, 77, 108, 126, 139], "local": [26, 58, 78, 91, 96, 110, 122, 131, 135], "column": [26, 37, 80, 96, 105, 126], "line": [26, 126, 131, 143], "width": [26, 32, 80, 81, 88, 96, 126], "_": [26, 143], "row": [26, 37, 77, 96, 105, 126], "_________": 26, "__________": 26, "get_input_expr": [27, 28, 29], "find_path_from_sourc": [27, 29], "get_or_create_nod": [27, 29], "print_depend": [27, 29], "traverse_depend": [27, 29], "construct_dependency_target": [27, 29], "make_revers": [27, 29], "add_next": [27, 29], "add_prev": [27, 29], "dedupl": [27, 29], "dep": [28, 29], "output_expr": [28, 29], "dependent_region": 28, "var_map": 28, "ordereddict": 28, "range_map": 28, "start_nam": 29, "target_nam": 29, "exist": [29, 49, 85, 92, 99, 134, 142, 143], "constintbound": 29, "input_nam": 29, "input_it": 29, "depend": [29, 131, 134, 135], "lst": 29, "equivalent_funct": [30, 31], "get_hardware_aware_config": [30, 31, 32, 33, 34, 35, 36, 37], "has_arch": [30, 31], "initialize_funct": [30, 31, 32, 33, 34, 35, 36, 37], "output_nod": [30, 31, 38], "recommend_hint": [30, 31, 142], "set_funct": [30, 31], "set_output_nod": [30, 31], "with_arch": [30, 31, 142], "h": [30, 32, 143], "f": [30, 32, 96, 131, 134, 143], "d": [30, 32], "p": [30, 32, 127], "with_bia": [30, 32, 35, 37], "class_attribut": [30, 32, 33, 34, 35, 36, 37, 104, 105], "params_as_dict": [30, 32, 33, 34, 35, 36, 37, 104, 105], "batch_siz": [30, 34], "head_dim": [30, 34], "is_caus": [30, 34], "num_head": [30, 34], "seq_kv_length": [30, 34], "seq_length": [30, 34], "m": [30, 34, 37, 56, 58, 77, 96, 105, 126, 127, 130, 131, 142, 143], "trans_a": [30, 37], "abc": [31, 62, 73], "awar": [31, 32, 33, 34, 35, 36, 37, 131, 135], "serv": [31, 91, 126, 127], "abstract": [31, 36, 73, 131, 135], "defin": [31, 32, 33, 34, 35, 37, 42, 79, 80, 100, 107, 127, 131, 135, 142, 143], "subclass": [31, 36], "associ": [31, 83, 100, 127], "10": [31, 32, 33, 34, 35, 36, 37, 38, 77, 96, 107, 112, 131, 134, 142], "must": [31, 36, 105, 127, 139], "should": [31, 36, 94, 96, 108, 110, 122, 126, 130, 139], "placehold": [31, 32, 34, 35, 37, 76, 96], "respons": [31, 106, 127], "initi": [31, 32, 33, 34, 35, 37, 77, 92, 96, 127, 131, 135], "notimplementederror": 31, "amper": 31, "volta": 31, "itself": 31, "updat": [31, 75, 83, 134, 139], "convolut": [32, 80, 126, 136], "matrix": [32, 34, 35, 37, 58, 59, 79, 84, 96, 106, 122, 126, 135, 136], "transposit": [32, 35, 37, 106, 126], "bia": [32, 34, 35, 37], "sampl": 32, "simultan": [32, 126], "featur": [32, 130, 134], "height": 32, "filter": [32, 143], "depth": [32, 131, 135], "slide": 32, "across": [32, 99, 107, 126, 130, 131], "element": [32, 33, 78, 81, 86, 88, 96, 107, 122, 124, 126, 127, 130, 139], "control": [32, 99, 126, 130, 131, 135], "recept": 32, "field": [32, 96], "expans": 32, "pixel": 32, "ad": [32, 81, 143], "border": 32, "matric": [32, 34, 35, 37, 84, 96, 126, 135], "accumul": [32, 37, 79, 81, 84, 92, 96, 106, 130, 131, 135], "add": [32, 37, 92, 126, 139], "term": [32, 37, 118], "retriev": [32, 33, 34, 35, 37, 79, 83, 100, 110, 122, 127], "acceler": [32, 34, 35, 37, 127, 135, 142], "up": [32, 34, 35, 37, 79, 83, 96, 131, 136], "api": [32, 34, 35, 37], "cast": [32, 34, 35, 37, 91, 96, 130], "assertionerror": [32, 34, 37, 58, 84, 105, 106, 122, 123, 124], "posit": [32, 34, 37, 96], "integ": [32, 34, 37, 51, 85, 96, 97, 120, 122, 124, 130, 142], "wise": [33, 88, 96, 126], "represent": [33, 135, 143], "simpl": [33, 85, 130, 143], "graph": [33, 45], "built": [33, 43, 47, 131, 134, 142, 143], "express": [33, 80, 88, 90, 91, 96, 99, 100, 106, 131], "_output_nod": 34, "multipl": [34, 35, 37, 79, 84, 92, 96, 107, 108, 122, 126, 135, 136, 139], "vector": [35, 77, 93, 95, 96, 117, 118, 127, 136, 139, 143], "pars": [36, 45, 47, 94], "ssr": [36, 106], "build": [36, 60, 96, 126, 136], "appropri": [36, 78, 123, 131], "_func": 36, "transpos": [37, 59, 84], "befor": [37, 84, 85, 92, 127, 134, 143], "pannel_width": 38, "8": [38, 55, 56, 58, 127, 130, 134, 143], "func_or_modul": 38, "irmodul": [38, 50, 51, 52, 64, 66, 71, 72, 73, 96, 115, 119, 122, 135], "tensorcore_onli": 38, "extra_tag": 38, "ir_modul": [38, 63, 64, 65, 66, 122], "interwarptransform": [39, 40], "intrawarptransform": [39, 40], "ldmatrixtransform": [39, 40], "nontransform": [39, 40], "is_inter_warp_transform": [39, 40], "is_intra_warp_transform": [39, 40], "is_ld_matrix_transform": [39, 40], "is_non_transform": [39, 40], "intenum": [40, 105], "enumer": [40, 105, 124], "invok": [42, 44, 45, 75, 104, 106, 131], "system": [42, 44, 45, 47, 123, 134, 135], "cwd": 42, "ccache_env": 42, "binari": [42, 96], "command": [42, 134], "urrent": 42, "work": [42, 126, 127, 135], "environ": [42, 134], "ccach": 42, "disabl": [42, 53, 79, 118], "static": [42, 69, 83, 105, 118], "tarbal": 42, "compile_func": 42, "output_format": 42, "get_target_tripl": 42, "add_fil": 42, "special": [42, 78, 118, 130, 135, 139, 143], "construct": [42, 85, 88, 89, 91, 97, 135], "autotvm": 42, "measur": [42, 75, 108, 131], "export_librari": [42, 60, 75], "tripl": 42, "accord": [42, 96], "dumpmachin": 42, "part": [42, 126, 131], "fcompil": 42, "import": [42, 85, 94, 127, 131, 134, 142, 143], "ndk": 42, "export": [42, 75, 134], "arm": 42, "gcc": [42, 134], "mod": [42, 52, 62, 68, 143], "build_runtime_modul": 42, "path_dso": 42, "linux": [42, 134], "gnueabihf": 42, "specialized_ndk": 42, "sysroot": 42, "fpic": 42, "lm": 42, "wa": [42, 66, 99, 126, 127, 143], "nm": 42, "global": [42, 53, 83, 91, 94, 96, 115, 117, 122, 131, 135, 139], "via": [42, 96, 103, 130, 134, 135], "symbol_section_map": 42, "section": [42, 96, 127, 135], "functor": 42, "bridg": 43, "framework": [43, 126, 134, 142], "support": [43, 45, 47, 51, 79, 84, 99, 126, 127, 131, 135, 139], "tvm_func": 43, "tensor_typ": 43, "to_dlpack_func": 43, "convert": [43, 51, 62, 64, 66, 68, 80, 107, 108, 120, 139], "one": [43, 122, 126, 127, 139, 143], "accept": [43, 96], "anoth": [43, 96, 126], "arrai": [43, 96, 122], "pytorch": [43, 51, 64, 66, 75, 108, 126, 131, 134], "wrapped_func": 43, "target_format": [44, 45], "hsaco": 44, "path_target": [44, 45], "amd": [44, 96, 131, 135], "bytearrai": [44, 45], "ptx": [45, 96, 131], "cubin": 45, "root": [45, 47, 96, 143], "cuda_path": 45, "version": [45, 47, 66, 96, 127, 130, 136, 143], "compute_vers": [45, 47], "fp16": [45, 56, 58, 131, 139], "capabl": [45, 47, 126, 131], "6": [45, 47, 124, 131], "int8": [45, 56, 58, 59, 110, 112], "divid": [45, 47, 96, 126], "ld": 47, "lld": 47, "runtim": [47, 51, 75, 96, 108, 131, 134, 135], "valid_list": 47, "matrixcor": 47, "in_fil": 47, "out_fil": 47, "link": [47, 134], "relocat": 47, "elf": 47, "linker": 47, "guess": 47, "clang": 47, "device_mod": [48, 50, 51, 61, 64, 66, 71, 73, 143], "host_mod": [48, 50, 51, 61, 64, 66, 71, 73], "kernel_sourc": [48, 51, 60, 75, 143], "rt_mod": [48, 51], "from_buff": [48, 51], "from_var": [48, 51], "is_boolean": [48, 51], "is_float8": [48, 51], "is_scalar": [48, 51], "is_unsign": [48, 51], "overrid": [49, 83, 108], "regist": [49, 79, 96, 126, 127, 131, 135, 139, 143], "post": 49, "take": [49, 78, 96, 110, 131, 134, 143], "parenthes": 49, "def": [49, 77, 94, 127, 130, 131, 142, 143], "boolean": [49, 51, 77, 96, 110], "flag": [49, 106, 134], "is_device_c": 50, "launch": [50, 85, 97, 127, 139], "func_or_mod": [50, 64, 66, 71, 72], "runtime_onli": 50, "enable_host_codegen": 50, "enable_device_compil": 50, "codegen": [50, 143], "have": [50, 94, 96, 105, 106, 126, 127, 130, 134, 135], "our": [50, 126, 130, 135], "own": [50, 126, 135], "torch": [51, 62, 64, 66, 68, 107, 108, 112, 120, 124, 126, 130, 131, 143], "artifact": [51, 60, 75], "compon": 51, "describ": [51, 58, 116], "scalar": [51, 96, 143], "interop": 51, "valueerror": [51, 82, 90, 105, 122, 123, 143], "intimm": [51, 96], "empti": [51, 83, 85, 118], "float8": 51, "ha": [51, 83, 94, 126, 130, 131, 139, 142], "unsign": 51, "pass_ctx": 52, "state": [53, 136], "m_dim": [54, 56, 58], "n_dim": [54, 56, 58], "warp_siz": [54, 56, 58, 96], "dtype_abbrv": [54, 56, 58], "extract_thread_bind": [54, 56, 58], "get_ldmatrix_index_map": [54, 56], "is_m_first": [54, 56, 58], "k_pack": [54, 56, 84, 104, 105, 106], "ldmatrix_a": [54, 56, 58], "ldmatrix_b": [54, 56, 58], "mfma": [54, 56, 96], "stmatrix": [54, 56, 58], "mma": [54, 58, 96, 106, 126, 131], "get_store_index_map": [54, 58], "make_mma_load_layout": [54, 58], "make_mma_store_layout": [54, 58], "shared_buf": [55, 57], "vecsiz": 55, "ind": 55, "thread_id": [55, 56, 57, 58, 59], "local_id": [55, 57, 59], "a_dtyp": [56, 58, 96], "b_dtype": [56, 58, 96], "a_transpos": [56, 58], "b_transpos": [56, 58], "block_row_warp": [56, 58, 104, 105, 106], "block_col_warp": [56, 58, 104, 105, 106], "warp_row_til": [56, 58, 104, 105, 106], "warp_col_til": [56, 58, 104, 105, 106], "chunk": [56, 58, 104, 105, 106, 135], "reduce_k": [56, 58], "num_elems_per_byt": [56, 58, 59], "To": [56, 58, 127, 130, 134], "elimin": [56, 58, 118, 126], "python": [56, 58, 64, 66, 96, 126, 131, 134, 135, 136, 143], "syntax": [56, 58, 79, 135, 136], "within": [56, 58, 79, 127, 130, 135, 139, 143], "macro": [56, 58, 77, 90, 93, 94, 106], "64": [56, 96, 126, 130, 142], "bfloat16": [56, 58, 127], "bf16": [56, 58], "e4m3_float8": [56, 58], "e4m3": [56, 58], "e5m2_float8": [56, 58], "e5m2": [56, 58], "float32": [56, 58, 78, 91], "fp32": [56, 58], "float8_e4m3fnuz": 56, "e4m3fnuz": 56, "thread": [56, 58, 77, 78, 79, 85, 90, 92, 95, 96, 98, 99, 105, 126, 127, 130, 131, 135, 136, 139, 143], "bind": [56, 58, 83, 85, 94, 95, 97], "tx": [56, 58, 90, 96, 97], "warp_n": [56, 58], "warp_m": [56, 58], "split": [56, 58, 96, 118], "is_b": 56, "a_local_buf": [56, 58], "a_shared_buf": [56, 58], "ki": [56, 58], "rk": [56, 58], "b_local_buf": [56, 58], "b_shared_buf": [56, 58], "c_local_buf": [56, 58], "c_buf": [56, 58], "pid_m": [56, 58], "pid_n": [56, 58], "row_idx": [57, 59], "col_idx": [57, 59], "row_siz": 57, "swizzle_byt": 57, "is_smooth": 57, "transform_kind_a": 58, "transform_kind_b": 58, "invers": [58, 98, 100], "local_buf": 58, "conjunct": 58, "inverse_mma_store_layout": 58, "how": [58, 108, 116, 126, 130, 131, 135, 143], "laid": 58, "k_inner": 58, "With": [58, 126, 130, 131, 135], "ladder": 58, "plugin": 58, "vjj": 59, "micro_size_k": 59, "coordin": 59, "vii": 59, "micro_size_i": 59, "vj": 59, "block_k": [59, 130, 131, 135, 142, 143], "vi": 59, "block_n": [59, 77, 126, 127, 130, 131, 135, 142, 143], "basekerneladapt": [60, 61, 62, 64, 66, 68, 71, 75, 107], "torchdlpackkerneladapt": [60, 61, 68], "libgen": [60, 61], "librarygener": [60, 61, 69], "pylibrarygener": [60, 61, 69], "get_annotated_mod": [60, 61, 72], "is_cpu_target": [60, 61, 72], "is_cuda_target": [60, 61, 72], "is_hip_target": [60, 61, 72], "match_declare_kernel": [60, 61, 72], "match_declare_kernel_cpu": [60, 61, 72], "match_global_kernel": [60, 61, 72], "basewrapp": [60, 61, 73], "tlcpusourcewrapp": [60, 61, 73], "tlcudasourcewrapp": [60, 61, 73], "tlhipsourcewrapp": [60, 61, 73], "tlnvrtcsourcewrapp": [60, 61, 73], "tlpywrapp": [60, 61, 73], "tlwrapper": [60, 61, 73], "torch_funct": [60, 75], "from_databas": [60, 63, 64, 65, 66, 70, 71, 75], "from_tilelang_funct": [60, 75], "get_host_sourc": [60, 75], "get_kernel_sourc": [60, 61, 62, 63, 64, 65, 66, 70, 71, 75, 76, 127, 131, 143], "get_profil": [60, 75, 131], "get_tuner_result": [60, 75], "host_sourc": [60, 75], "update_tuner_result": [60, 75], "infrastructur": [60, 136], "runnabl": 60, "ctypeskerneladapt": [61, 63, 64], "cythonkerneladapt": [61, 65, 66], "get_cached_lib": [61, 65, 66], "get_cython_compil": [61, 65, 66], "cython_wrapp": [61, 65], "cythonkernelwrapp": [61, 65, 67], "nvrtckerneladapt": [61, 70, 71], "compile_lib": [61, 69], "get_lib_path": [61, 69], "get_source_path": [61, 69], "lib_cod": [61, 63, 64, 65, 66, 69], "libpath": [61, 63, 64, 65, 66, 69], "load_lib": [61, 69], "remove_lib": [61, 69], "set_lib_path": [61, 69], "set_src_path": [61, 69], "srcpath": [61, 63, 64, 65, 66, 69], "update_lib_cod": [61, 69, 73], "culib": [61, 69], "host_func": [61, 69], "import_from_fil": [61, 69], "pymodul": [61, 69, 70, 71], "update_host_func": [61, 69], "call_prefix": [61, 73], "init_func": [61, 73], "create_call_func": [61, 73], "get_cpu_init_func": [61, 73], "get_dynamic_symbolic_set": [61, 73], "parse_source_inform": [61, 73], "create_dispatch_func": [61, 73], "generate_l2_persistent_map": [61, 73], "generate_tma_descriptor_arg": [61, 73], "get_init_func": [61, 73], "get_stream_typ": [61, 73], "is_tma_descriptor_arg": [61, 73], "assign_device_modul": [61, 73], "assign_host_modul": [61, 73], "assign_optimized_modul": [61, 73], "assign_pass_config": [61, 73], "lib": [61, 63, 64, 65, 66, 73], "dynamic_symbolic_map": [63, 64, 65, 66, 67], "is_dynam": [63, 64, 65, 66], "kernel_global_sourc": [63, 64, 65, 66, 71, 75], "param_dtyp": [63, 64], "param_shap": [63, 64], "wrapped_sourc": [63, 64, 65, 66], "tensortyp": [64, 66], "kernel_lib_path": [64, 66, 71, 75], "kernel_onli": [64, 66], "cdll": [64, 66], "buffer_device_map": [65, 66, 67], "buffer_dtype_map": [65, 66, 67], "ptr_map": [65, 66, 67], "static_shape_map": [65, 66, 67], "forward": [65, 67, 100, 126], "set_buffer_device_map": [65, 67], "set_buffer_dtype_map": [65, 67], "set_dynamic_symbolic_map": [65, 67], "set_ptr_map": [65, 67], "set_static_shape_map": [65, 67], "source_cod": 66, "load": [66, 79, 80, 96, 106, 127, 130, 131, 135, 139], "skip_tensor_valid": 67, "lib_path": 69, "module_nam": 69, "file_path": 69, "model_typ": 72, "annot": [72, 77, 95, 96, 126, 131, 136], "__global__": [72, 127, 130], "int32_t": 72, "scheduled_ir_modul": 73, "ifdef": 73, "__cplusplu": 73, "nextern": 73, "endif": 73, "nint32_t": 73, "call": [73, 79, 80, 82, 84, 86, 92, 96, 127, 131, 135, 143], "function_inform": 73, "function_nam": 73, "desc_name_map": 73, "arg_nam": 73, "c_sourc": 73, "standalon": 74, "modifi": [74, 81, 143], "flashinf": [74, 126], "compat": [75, 134], "kernel_fil": 75, "altern": [75, 126, 134], "constructor": 75, "torchfunct": 75, "tilelang_func": 75, "tensor_supply_typ": 75, "benchmark": [75, 107, 108, 131], "comparison": [75, 107, 124, 126], "compar": [75, 107, 124, 126, 127, 130, 131], "against": [75, 96, 107, 131], "origin": [76, 110, 126, 127, 135], "entri": [77, 85, 93, 97, 106], "serial": [77, 93, 95, 126, 130], "thread_bind": [77, 93, 95], "unrol": [77, 93, 95, 127], "op": [77, 93], "tvmbackendallocworkspac": [77, 93, 96], "tvmbackendfreeworkspac": [77, 93, 96], "ab": [77, 93, 96], "aco": [77, 93, 96], "acosh": [77, 93, 96], "address_of": [77, 93, 96], "anylist_getitem": [77, 93, 96], "anylist_resetitem": [77, 93, 96], "anylist_setitem_call_cpack": [77, 93, 96], "anylist_setitem_call_pack": [77, 93, 96], "asin": [77, 93, 96], "asinh": [77, 93, 96], "assum": [77, 93, 96, 106, 130], "atan": [77, 93, 96], "atan2": [77, 93, 96], "atanh": [77, 93, 96], "bitwise_and": [77, 93, 96], "bitwise_not": [77, 93, 96], "bitwise_or": [77, 93, 96], "bitwise_xor": [77, 93, 96], "call_cpack": [77, 93, 96], "call_cpacked_low": [77, 93, 96], "call_extern": [77, 93, 96], "call_intrin": [77, 93, 96], "call_llvm_intrin": [77, 93, 96], "call_llvm_pure_intrin": [77, 93, 96], "call_pack": [77, 93, 96], "call_packed_low": [77, 93, 96], "call_pure_extern": [77, 93, 96], "call_tir": [77, 93, 96], "ceil": [77, 93, 96], "ceildiv": [77, 93, 96, 127, 130, 131], "clz": [77, 93, 96], "comm_reduc": [77, 93, 96, 130], "copysign": [77, 93, 96], "co": [77, 93, 96], "cosh": [77, 93, 96], "create_barri": [77, 93, 96], "div": [77, 93, 96], "end_profile_intrins": [77, 93, 96], "erf": [77, 93, 96], "exp": [77, 93, 96, 126], "exp10": [77, 93, 96], "exp2": [77, 93, 96], "floor": [77, 93, 96], "floordiv": [77, 93, 96], "floormod": [77, 93, 96], "fmod": [77, 93, 96], "hypot": [77, 93, 96], "if_then_els": [77, 93, 96], "indexdiv": [77, 93, 96], "indexmod": [77, 93, 96], "infin": [77, 93, 96], "isfinit": [77, 93, 96], "isinf": [77, 93, 96], "isnan": [77, 93, 96], "isnullptr": [77, 93, 96], "ldexp": [77, 93, 96], "log10": [77, 93, 96], "log1p": [77, 93, 96], "log2": [77, 93, 96], "lookup_param": [77, 93, 96], "max_valu": [77, 93, 96], "min_valu": [77, 93, 96], "mma_fil": [77, 93, 96], "mma_stor": [77, 93, 96], "nearbyint": [77, 93, 96], "nextaft": [77, 93, 96], "popcount": [77, 93, 96], "pow": [77, 93, 96], "pow_of_int": [77, 93, 96], "ptx_arrive_barri": [77, 93, 96], "ptx_arrive_barrier_expect_tx": [77, 93, 96], "ptx_commit_group": [77, 93, 96], "ptx_cp_async": [77, 93, 96], "ptx_cp_async_barri": [77, 93, 96], "ptx_cp_async_bulk": [77, 93, 96], "ptx_init_barrier_thread_count": [77, 93, 96], "ptx_ldmatrix": [77, 93, 96], "ptx_mma": [77, 93, 96], "ptx_mma_sp": [77, 93, 96], "ptx_wait_barri": [77, 93, 96], "ptx_wait_group": [77, 93, 96], "q_multiply_shift": [77, 93, 96], "q_multiply_shift_per_axi": [77, 93, 96], "reinterpret": [77, 93, 96, 130], "ret": [77, 93, 96], "round": [77, 93, 96], "rsqrt": [77, 93, 96], "shift_left": [77, 93, 96], "shift_right": [77, 93, 96], "sigmoid": [77, 93, 96], "sin": [77, 93, 96], "sinh": [77, 93, 96], "sqrt": [77, 93, 96], "start_profile_intrins": [77, 93, 96], "tan": [77, 93, 96], "tanh": [77, 93, 96], "trace": [77, 93, 96], "trunc": [77, 93, 96], "truncdiv": [77, 93, 96], "truncmod": [77, 93, 96], "tvm_access_ptr": [77, 93, 96], "tvm_bmma_sync": [77, 93, 96], "tvm_check_return": [77, 93, 96], "tvm_fill_frag": [77, 93, 96], "tvm_load_matrix_sync": [77, 93, 96], "tvm_mfma": [77, 93, 96], "tvm_mfma_stor": [77, 93, 96], "tvm_mma_sync": [77, 93, 96], "tvm_rdna_wmma": [77, 93, 96], "tvm_rdna_wmma_stor": [77, 93, 96], "tvm_stack_alloca": [77, 93, 96], "tvm_stack_make_arrai": [77, 93, 96], "tvm_stack_make_shap": [77, 93, 96], "tvm_storage_sync": [77, 93, 96], "tvm_store_matrix_sync": [77, 93, 96], "tvm_struct_get": [77, 93, 96], "tvm_struct_set": [77, 93, 96], "tvm_thread_allreduc": [77, 93, 96], "tvm_thread_invari": [77, 93, 96], "tvm_throw_last_error": [77, 93, 96], "tvm_tupl": [77, 93, 96], "tvm_warp_activemask": [77, 93, 96], "tvm_warp_shuffl": [77, 93, 96], "tvm_warp_shuffle_down": [77, 93, 96], "tvm_warp_shuffle_up": [77, 93, 96], "type_annot": [77, 93, 96], "undef": [77, 93, 96], "vectorcombin": [77, 93, 96], "vectorhigh": [77, 93, 96], "vectorlow": [77, 93, 96], "vscale": [77, 93, 96], "get_valu": [77, 83], "has_valu": [77, 83], "pop": [77, 83, 85], "push": [77, 83, 85], "get_num_thread": [77, 85], "num_thread": [77, 85, 139], "default_align": [77, 91], "default_offset_factor": [77, 91], "default_scop": [77, 91], "from_ptr": [77, 91], "interfac": [77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 91, 92, 97, 107, 136], "l2_hit_ratio_map": 77, "hit": [77, 126], "explan": 77, "pleas": [77, 127, 130, 131, 134], "http": [77, 79, 96, 127, 134], "doc": [77, 79, 96], "nvidia": [77, 79, 96, 126, 131, 134, 135, 143], "com": [77, 79, 96, 127, 134], "guid": [77, 127, 136], "5": [77, 96, 124, 131, 142], "layout_map": 77, "block_attr": 77, "block_m": [77, 126, 127, 131, 135, 142, 143], "bx": [77, 127, 131, 135], "a_shar": [77, 79, 130, 131], "padding_map": 77, "pad": [77, 80, 139], "pad_valu": 77, "panel_s": [77, 126, 131], "order": [77, 89, 126], "ai": [78, 126, 134], "conveni": [78, 85, 126], "scope": [78, 83, 85, 91, 96, 97, 110, 117, 122, 127, 139], "inter": 78, "commun": [78, 96, 143], "privat": [78, 94], "storag": [78, 91, 96, 110, 117, 118, 135, 139], "singl": [78, 79, 84, 106, 122, 126, 127, 130, 131, 139], "dyn": [78, 91], "barrier_id": [79, 96], "arriv": [79, 96], "barrier": [79, 96, 126], "pariti": [79, 126], "wait": [79, 84, 96], "complet": [79, 96, 126, 142, 143], "sugar": 79, "onli": [79, 90, 96, 126, 127, 130, 139], "typeerror": [79, 80], "variad": 79, "tma": [79, 118, 126], "descriptor": [79, 80], "reg_count": 79, "decrement": 79, "fenc": 79, "asynchron": [79, 117, 118, 131], "request": [79, 96, 126], "increment": 79, "mbarrier": [79, 96, 126], "expect": [79, 96, 143], "transact": [79, 96], "count": [79, 84, 96, 108], "condit": [79, 96, 127, 143], "ko": [79, 131], "num_stag": [79, 89, 131, 139, 142], "consum": [79, 89, 126, 130, 139], "finish": [79, 117, 130, 143], "previou": [79, 126, 127], "a_glob": 79, "signal": 79, "readi": [79, 135], "b_share": [79, 130, 131], "c_local": [79, 131], "limit": [79, 135, 143], "is_inc": 79, "document": [79, 127, 130, 131, 143], "miscellan": 79, "instruct": [79, 96, 106, 126, 131, 134], "setmaxnreg": 79, "offset": [79, 91, 96, 127], "shuffl": [79, 96], "down": [79, 131], "xor": [79, 96, 126], "synchron": [79, 96, 126, 130, 135, 143], "wgmma": [79, 126], "group": [79, 84, 89, 96, 97, 110, 126, 127], "multipli": [79, 106, 131], "bufferload": [80, 96, 139], "access_typ": 80, "rw": 80, "area": 80, "buffer_region": 80, "cover": [80, 127, 143], "img": 80, "col": [80, 96, 126], "nhw_step": 80, "c_step": 80, "dilat": 80, "2d": 80, "imag": [80, 116], "channel": 80, "rate": [80, 126], "src": [80, 81, 92, 139, 143], "dst": [80, 81, 92, 139], "coalesced_width": [80, 88], "destin": [80, 81, 96], "coalesc": [80, 88, 127, 135], "deduc": [80, 126], "atom": 81, "doubl": [81, 139], "operand": [81, 96], "min_val": 81, "max_val": 81, "dot": [81, 130], "product": [81, 130, 136, 142], "second": [81, 84, 96, 115, 124], "zero": [82, 96, 107, 110, 120, 124, 139], "invalid": [82, 105, 123], "when": [83, 92, 96, 126, 127, 130, 131, 135, 139, 143], "enter": 83, "stack": [83, 85, 96], "dequ": [83, 85], "maintain": 83, "lookup": 83, "look": [83, 130, 136], "remov": [83, 85, 126], "item": [83, 85, 96], "indexerror": 83, "onto": [83, 85], "applic": 83, "tirfram": [83, 85, 97], "let": [83, 126, 127, 131, 135], "track": [83, 96], "extend": [83, 127, 135], "activ": [83, 96, 127], "topmost": [83, 85], "bound": [83, 96], "transpose_a": [84, 104, 105, 106, 139], "transpose_b": [84, 104, 105, 106, 126, 139], "gemmwarppolici": [84, 103, 104, 105, 106], "squar": [84, 96, 104, 105, 106], "clear_accum": 84, "wg_wait": 84, "mode": [84, 96, 108, 110, 131, 134], "pack": [84, 96], "don": [84, 126], "is_cpu": 85, "prelud": 85, "quickli": [85, 126, 143], "griddim": 85, "x": [85, 96, 97, 102, 127, 130, 131, 139], "y": [85, 96, 97, 127, 130, 134, 139], "z": [85, 96, 97, 127], "blockdim": [85, 97, 127], "Or": [85, 97], "threadidx": [85, 97, 127, 130, 143], "thu": [85, 131], "blockidx": [85, 127, 130, 139, 143], "re": [85, 88, 89, 91, 94, 95, 96, 97, 134], "launchthreadfram": [85, 97], "exit": [85, 97], "dim": [85, 92, 126, 139], "correspond": [85, 96, 100, 105, 110, 126, 127, 130, 135], "three": [85, 110, 131, 134, 135, 142, 143], "total": [85, 105, 115, 124], "0x7fe52f9733d0": 86, "stmt": [86, 119], "nest": 88, "forfram": [88, 89, 95], "stop": [89, 95, 139], "stage": [89, 126, 131, 143], "sync": [89, 117], "max": [89, 92, 108, 126], "condition": 90, "obj": 90, "msg": [90, 143], "ty": 90, "tz": 90, "unsupport": [90, 143], "foundat": 91, "customiz": 91, "pointer_var": 91, "pointer": [91, 96, 118], "0x7fe52f9733a0": 91, "typic": [91, 126, 127], "temporari": 91, "commonli": [91, 126], "inherit": [91, 106], "modif": 91, "storage_scop": [91, 96, 110, 117], "is_size_var": 91, "sizevar": 91, "instead": [91, 96, 121, 126, 143], "revers": 92, "cumul": 92, "sum": [92, 130, 135], "reduce_typ": 92, "along": [92, 126, 130, 131], "min": [92, 108], "abssum": 92, "inf": 92, "note": [92, 126, 127, 134, 135, 139], "becaus": [92, 135], "same": [92, 96, 106, 126, 127, 135], "would": [92, 126], "therefor": [92, 126], "follow": [92, 96, 106, 126, 127, 134, 135, 142], "temp": 92, "hygien": 94, "bodi": 94, "resolv": [94, 143], "locat": [94, 96, 123], "non": [94, 96, 118, 126], "script": [94, 126], "x_valu": 94, "static_captur": 94, "dynamic_captur": 94, "check_well_form": 94, "prim": [94, 139], "treat": 94, "device_typ": 96, "nbyte": 96, "dtype_code_hint": 96, "dtype_bits_hint": 96, "tempor": 96, "workspac": [96, 134], "certain": [96, 126, 134], "opengl": 96, "bit": [96, 110, 126, 130], "span": 96, "buffer_load": 96, "address": [96, 126, 143], "intersect": 96, "list_handl": 96, "anylist": 96, "reset": 96, "cond": 96, "simplif": [96, 118], "x1": 96, "x2": 96, "arctan2": 96, "bitwis": 96, "left": [96, 126], "right": [96, 126, 143], "extern": [96, 127, 130], "resourc": [96, 126], "te": 96, "overload": 96, "translat": [96, 143], "pure": [96, 131, 135], "pod": 96, "present": [96, 126, 127], "packedfunc": 96, "receiv": 96, "tvmarrayhandl": 96, "whose": [96, 108], "period": 96, "ndarrai": 96, "global_var": 96, "globalvar": 96, "lh": [96, 124], "rh": [96, 124], "lead": [96, 126, 127], "undefin": 96, "fcombin": 96, "fident": 96, "commut": 96, "const": [96, 127, 143], "over": [96, 99, 131], "There": [96, 139], "wai": [96, 130, 134, 139], "simpli": [96, 127], "mysum": 96, "lambda": [96, 130], "reduce_axi": 96, "chang": [96, 134], "sign": 96, "barrier_count": 96, "semant": [96, 127], "hand": [96, 126, 131, 135], "known": [96, 126, 142], "neg": 96, "gauss": 96, "exponenti": 96, "primexprwithop": 96, "remaind": 96, "equival": [96, 118, 135], "select": [96, 123, 126], "unlik": [96, 127], "branch": 96, "you": [96, 126, 127, 130, 131, 134, 139, 142, 143], "guard": 96, "some": [96, 131, 134, 139, 143], "lane": [96, 143], "mai": [96, 99, 126, 127, 130, 131, 134, 135, 143], "advantag": [96, 126], "finit": 96, "infinit": 96, "nan": 96, "nullptr": 96, "mark": [96, 131], "param_nam": 96, "local_s": 96, "local_ptr": 96, "dst_ptr": 96, "src_ptr": 96, "src_offset": 96, "dst_stride": 96, "nearest": 96, "faster": [96, 108, 130, 135], "notabl": [96, 126], "wherea": [96, 135], "see": [96, 126, 131, 142, 143], "en": 96, "cpprefer": 96, "cpp": 96, "numer": 96, "next": [96, 127], "point": [96, 106, 115, 126, 139], "after": [96, 117, 127, 130, 131, 134, 135, 139, 143], "toward": 96, "expon": 96, "fast": [96, 110, 135], "than": [96, 122, 130, 131, 134, 135, 143], "html": 96, "byte_count": 96, "expect_tx": 96, "increas": [96, 130], "async": [96, 139], "commit": 96, "movement": [96, 126, 127, 135, 136], "convers": 96, "cp": [96, 134], "shared_ptr": 96, "shared_offset": 96, "global_ptr": 96, "global_offset": 96, "bulk": 96, "thread_count": 96, "num": [96, 105], "local_offset": 96, "smem_ptr": 96, "smem_offset": 96, "ldmatrix": [96, 106], "b16": 96, "memort": 96, "a_layout": 96, "b_layout": 96, "c_dtype": 96, "multiplicand_a": 96, "a_index": 96, "multiplicand_b": 96, "b_index": 96, "c_index": 96, "satur": 96, "multiplicand": [96, 139], "metadata": 96, "meta_index": 96, "sparse_selector": 96, "spars": 96, "selector": 96, "try_wait": 96, "most": [96, 126, 134], "recent": [96, 134], "uncommit": 96, "pend": 96, "q": [96, 126, 143], "shift": 96, "mathemat": [96, 126], "more": [96, 122, 126, 127, 131, 135, 143], "here": [96, 126, 130, 135, 143], "wikipedia": 96, "org": 96, "wiki": 96, "q_": 96, "number_format": 96, "half": [96, 126], "fraction": 96, "need": [96, 99, 126, 131, 134, 135, 139, 143], "l": 96, "is_lshift_requir": 96, "is_rshift_requir": 96, "do": [96, 106, 131, 143], "val": 96, "void": [96, 127, 130], "reciproc": 96, "quick": 96, "hyperbol": 96, "trace_act": 96, "default_trace_act": 96, "come": [96, 127], "action": 96, "truncat": 96, "closer": 96, "divis": [96, 105], "behavior": [96, 127, 131, 135, 143], "ptype": 96, "rw_mask": 96, "head": [96, 126], "mask": [96, 130], "fragment_d": 96, "index_d": 96, "fragment_a": 96, "index_a": 96, "fragment_b": 96, "index_b": 96, "fragment_c": 96, "index_c": 96, "bmma_sync": 96, "bwmma": 96, "return_unexpect": 96, "nested_cal": 96, "unexpect": 96, "fill_frag": 96, "wmma": [96, 131], "uintimm": 96, "buffer_ptr": 96, "row_major": 96, "column_major": 96, "mma_sync": 96, "dtype_str": 96, "ndim": 96, "arr_dtyp": 96, "elem_offset": 96, "dltensor": 96, "elem_offs": 96, "arr": 96, "struct": 96, "date": 96, "structtyp": 96, "freduce_arg": 96, "allreduc": 96, "insid": [96, 127, 135, 139, 143], "threadblock": 96, "invari": 96, "throw": 96, "tvmgetlasterror": 96, "attrstmt": 96, "warp_id": 96, "exchang": 96, "fetch": [96, 134], "sub": 96, "higher": [96, 126], "caller": 96, "src_lane_idx": 96, "dst_lane_idx": 96, "arbitrari": [96, 139], "vec1": 96, "vec2": 96, "concat": 96, "vec": 96, "high": [96, 127, 130, 131, 135, 136], "low": [96, 126, 130, 131, 135, 136], "langref": 96, "rtype": [96, 106, 115, 123], "warp_group_idx": 97, "256": [97, 127, 130, 142], "condense_rep_var": [98, 99], "get_thread_s": [98, 99], "map_forward_thread": [98, 99], "repeat": [98, 99, 107, 108], "replic": [98, 99], "get_forward_var": [98, 100], "get_input_shap": [98, 100], "get_output_shap": [98, 100], "map_forward_index": [98, 100], "forward_fn": [99, 100], "forward_thread_fn": 99, "forward_index_fn": 99, "encapsul": [99, 135], "forward_var": 99, "forward_thread": 99, "forward_index": 99, "thread_repl": 99, "fine": [99, 130, 131, 135], "grain": [99, 130, 131, 135], "multi": [99, 126, 135], "dimension": [99, 127], "condens": 99, "fold": 99, "longer": [99, 131], "separ": [99, 131], "reflect": 99, "repeat_on_thread": 99, "lower_dim_first": 99, "happen": [99, 127], "gemmbaseparam": [103, 104, 105, 106], "gemm_mma": [103, 104], "gemmprimitivemma": [103, 104, 106], "bootstrap": 103, "get_warp_s": [104, 105], "infer_block_partit": [104, 105], "fullcol": [104, 105, 126], "fullrow": [104, 105], "compute_warp_partit": [104, 105], "from_warp_partit": [104, 105], "is_full_col": [104, 105], "is_full_row": [104, 105], "is_squar": [104, 105], "to_prime_factor": [104, 105], "gemm_rrr": [104, 106], "gemm_rsr": [104, 106], "gemm_srr": [104, 106], "gemm_ssr": [104, 106], "alreadi": [105, 134], "attempt": 105, "them": [105, 106, 127, 143], "automat": [105, 107, 108, 123, 126, 127, 130, 131, 135], "miss": 105, "inconsist": 105, "num_warp": 105, "m_warp": 105, "n_warp": 105, "fail": [105, 143], "from_block_row_col": 105, "balanc": [105, 131], "distribut": [105, 126, 139], "full": [105, 115, 131], "basic": [106, 130, 135], "mma_emitt": 106, "helper": 106, "etc": [106, 107, 126, 131, 143], "final": [106, 127, 130, 135, 143], "random": 107, "reference_program": 107, "input_tensor": 107, "pre": [107, 134, 142], "consist": [107, 108, 126], "explicitli": [107, 127, 131, 135], "n_warmup": 107, "n_repeat": 107, "millisecond": [107, 108], "averag": 107, "_n_warmup": 108, "_n_repeat": 108, "grad_to_non": 108, "quantil": 108, "fast_flush": 108, "return_mod": 108, "mean": [108, 126], "median": 108, "flush": 108, "gradient": 108, "backward": 108, "percentil": 108, "aggreg": 108, "int4": 110, "source_format": 110, "uint": 110, "source_bit": [110, 112], "storage_dtyp": [110, 112], "with_scal": 110, "with_zero": 110, "zeros_mod": 110, "rescal": 110, "overhead": 110, "decod": 110, "storage_nbit": 110, "By": [110, 127, 130, 131, 135, 136, 143], "scale": [110, 131], "groupsiz": 112, "lowprecision_weight": 112, "qweight": 112, "nbit": 112, "target_dtyp": 112, "interleav": [112, 126], "weight": 112, "_type_": 112, "_description_": 112, "randint": 112, "127": 112, "total_global_byt": [114, 115], "estimated_tim": [114, 115], "tflop": [114, 115], "bandwidth_gbp": [114, 115], "expected_bandwidth_gbp": [114, 115], "expected_tflop": [114, 115], "total_flop": [114, 115], "ir_pass": [114, 115], "transfer": [115, 135], "trillion": 115, "flop": 115, "bandwidth": [115, 135, 143], "gb": 115, "metric": 115, "extract": [115, 122], "save_directori": 116, "tmp": 116, "colormap": 116, "rdpu": 116, "plot": 116, "visual": 116, "cuda_kernels_output_dir": [117, 118], "tir_add_lower_pass": [117, 118], "tir_disable_cs": [117, 118], "tir_disable_storage_rewrit": [117, 118], "tir_disable_vector": [117, 118], "tir_enable_debug": [117, 118], "tir_enable_equiv_terms_in_cs": [117, 118], "tir_merge_static_smem": [117, 118], "tir_noalia": [117, 118], "tir_simplifi": [117, 118], "tir_use_async_copi": [117, 118], "tl_config_index_bitwidth": [117, 118], "tl_debug_merge_shared_memory_alloc": [117, 118], "tl_disable_dynamic_tail_split": [117, 118], "tl_disable_safe_memory_access": [117, 118], "tl_disable_tma_low": [117, 118], "tl_disable_warp_speci": [117, 118], "tl_dynamic_align": [117, 118], "tl_simplifi": [117, 118], "fpass": [117, 119], "bitwidth": [117, 118], "rewrit": [117, 118], "legalizeloopvector": 117, "attach": 117, "insert": [117, 130], "partial": [117, 130, 131, 135], "enable_vector": 117, "kernels_output_dir": 118, "add_lower_pass": 118, "disable_cse_tir": 118, "subexpress": 118, "disable_storage_rewrit": 118, "enable_debug": 118, "enable_equiv_terms_in_cse_tir": 118, "merge_static_smem": 118, "noalia": 118, "alias": 118, "assumpt": 118, "debug_merge_shared_memory_alloc": 118, "tail": [118, 127], "safe": 118, "dynamic_align": 118, "One": [120, 124, 126, 130], "randn": [120, 124, 131], "uniform": [120, 124], "method_nam": 121, "new_method_nam": 121, "allow_dynam": 122, "exactli": 122, "return_object": 123, "intyp": 124, "tensor_a": 124, "tensor_b": 124, "001": 124, "equal_nan": 124, "check_devic": 124, "check_dtyp": 124, "check_layout": 124, "check_strid": 124, "base_nam": 124, "ref_nam": 124, "assert": 124, "close": [124, 127, 130], "enough": [124, 131], "percentag": 124, "exce": 124, "author": [126, 127, 131, 142, 143], "yu": 126, "cheng": 126, "lei": [126, 131, 143], "wang": [126, 127, 131, 143], "friendli": [126, 131, 135], "significantli": [126, 127, 135, 143], "help": [126, 127, 135, 142, 143], "howev": [126, 127, 130, 131], "still": [126, 127, 130, 131], "master": 126, "techniqu": [126, 127, 136], "better": [126, 131], "leverag": [126, 135, 143], "ll": 126, "demonstr": [126, 127, 130, 131, 135, 142, 143], "deepseek": 126, "latent": 126, "attent": [126, 127, 131, 136], "novel": 126, "signific": 126, "improv": [126, 127, 130, 131, 134, 135], "model": [126, 130, 131, 136], "speed": 126, "sever": [126, 127, 143], "deep": [126, 127, 130], "learn": [126, 127, 130], "triton": [126, 131], "develop": [126, 127, 134, 135, 136], "februari": 126, "2025": 126, "open": 126, "github": [126, 131, 134, 136], "cutlass": [126, 131], "incorpor": [126, 127, 135], "impress": 126, "under": [126, 131], "shown": [126, 131], "figur": [126, 131, 135], "below": [126, 127, 130, 131, 135, 143], "As": 126, "outperform": 126, "accomplish": 126, "80": 126, "eas": 126, "dive": [126, 135, 143], "review": [126, 127], "tradit": 126, "acc_": 126, "scores_max": 126, "scores_scal": 126, "acc_o": 126, "loop_rang": 126, "scores_max_prev": 126, "while": [126, 127, 131, 142], "mha": 126, "gqa": 126, "queri": 126, "challeng": 126, "576": 126, "512": 126, "issu": 126, "becom": 126, "too": 126, "insuffici": 126, "spill": 126, "occur": [126, 143], "impact": 126, "question": 126, "mma_async": 126, "organ": 126, "introduc": [126, 127, 130, 131, 143], "solut": 126, "obtain": 126, "abov": [126, 127], "seem": [126, 135], "complex": [126, 127, 131], "worri": [126, 135], "intricaci": 126, "illustr": [126, 127, 135, 143], "frontend": 126, "vertic": 126, "concret": [126, 127], "acc_s_0": 126, "blockm": 126, "blockn": 126, "consequ": 126, "continu": 126, "s_share": 126, "worth": 126, "approach": [126, 127, 130, 131, 135, 143], "scheme": [126, 142], "nevertheless": [126, 127], "among": 126, "remap": 126, "therebi": 126, "natur": [126, 130], "adjac": 126, "ineffici": [126, 127], "emploi": [126, 135, 136], "diagon": 126, "adjust": 126, "consecut": 126, "overlap": [126, 131], "bank": 126, "servic": 126, "clock": 126, "cycl": 126, "conflict": 126, "forc": 126, "degrad": 126, "rearrang": 126, "fall": 126, "manipul": [126, 135], "alter": 126, "evenli": 126, "particularli": 126, "crucial": 126, "overal": [126, 135], "similarli": 126, "also": [126, 127, 131, 135, 142], "desir": [126, 134, 135, 143], "design": [126, 127, 130, 131, 135, 136], "shield": 126, "intens": [126, 130], "similar": [126, 127, 131], "flashdecod": 126, "small": 126, "fulli": [126, 135], "due": 126, "kv_ctx": 126, "combin": [126, 130], "num_split": 126, "examin": [126, 127, 131, 143], "variat": 126, "explicit": [126, 131], "ident": 126, "manifest": 126, "64kb": 126, "228kb": 126, "care": [126, 127], "softwar": [126, 131], "q_share": 126, "block_h": 126, "q_pe_shar": 126, "pe_dim": 126, "q_local": 126, "q_pe_loc": 126, "flexibl": [126, 131, 135], "absenc": 126, "permit": 126, "visibl": 126, "conduct": 126, "precis": [126, 136], "experiment": [126, 127, 130, 131], "throughput": [126, 130], "assembli": [126, 131], "aiter": 126, "asm": 126, "98": 126, "76": 126, "concis": [126, 131, 135, 136], "programm": 126, "mitig": 126, "primarili": 126, "nt": 126, "further": [126, 127, 130, 135, 143], "investig": 126, "research": 126, "propos": 126, "pressur": 126, "enhanc": 126, "chenghua": 127, "incomplet": [127, 130, 131], "suggest": [127, 130, 131], "highli": [127, 130, 131, 135], "encourag": [127, 130, 131], "submit": [127, 130, 131], "pr": [127, 130, 131], "wide": 127, "often": [127, 143], "encount": [127, 143], "those": [127, 143], "begin": 127, "explor": [127, 131, 142], "tutori": [127, 130, 131, 143], "delv": 127, "deepli": 127, "principl": 127, "broader": 127, "understand": [127, 130, 135], "consult": 127, "overview": [127, 131, 135], "elementwise_add": 127, "b_x": 127, "familiar": 127, "might": [127, 130, 135, 143], "wonder": 127, "your": [127, 130, 131], "focu": [127, 135, 136], "sole": 127, "carefulli": [127, 143], "handcraft": 127, "subsequ": [127, 135], "discuss": [127, 135], "straightforward": [127, 130], "practic": 127, "reader": 127, "start_x": 127, "start_i": 127, "local_i": 127, "local_x": 127, "fix": 127, "want": [127, 131, 134], "replac": 127, "make": [127, 130, 134, 135], "bfloat16_t": 127, "__restrict__": [127, 130], "These": [127, 131, 135], "prevent": 127, "advanc": [127, 131, 143], "involv": [127, 142], "paragraph": 127, "clearer": 127, "2047": 127, "num_per_thread": 127, "__launch_bounds__": [127, 130], "main_kernel": [127, 130], "pragma": 127, "observ": 127, "did": 127, "fact": 127, "could": 127, "simplic": 127, "breviti": 127, "style": 127, "idx": 127, "evid": 127, "beginn": [127, 135], "addition": [127, 135], "transpar": 127, "uint4": [127, 130], "__1": 127, "v_": 127, "v__1": 127, "nv_bfloat162": 127, "aforement": 127, "sometim": [127, 143], "appear": 127, "counterintuit": [127, 135], "effect": [127, 130], "interestingli": 127, "retain": [127, 131], "scenario": 127, "intend": [127, 135, 143], "aha": 127, "convent": 127, "intuit": 127, "But": 127, "what": 127, "num_ele_per_thread": 127, "a_regist": 127, "b_regist": 127, "c_regist": 127, "s_start": 127, "s_end": 127, "ldg": 127, "tid": 127, "stg": 127, "individu": 127, "reson": 127, "u": 127, "now": [127, 130], "8192": 127, "2048": [127, 130], "emerg": [127, 131], "reassign": 127, "evalu": [127, 130], "nv_bfloat16": 127, "namespac": 127, "t_c": 127, "make_gmem_ptr": 127, "make_shap": 127, "t_a": 127, "t_b": 127, "t_c_tile": 127, "local_til": 127, "make_coord": 127, "t_a_til": 127, "t_b_tile": 127, "reg_buffer_a": 127, "make_tensor_lik": 127, "reg_buffer_b": 127, "reg_buffer_c": 127, "reg_c_vector": 127, "recast": 127, "reg_a_vector": 127, "reg_b_vector": 127, "vec_idx": 127, "reg_c_flat": 127, "showcas": [127, 135], "demand": [127, 131, 135], "essenti": [127, 134, 143], "thoroughli": 127, "draw": 127, "inspir": 127, "blog": 127, "zhuanlan": 127, "zhihu": 127, "690703999": 127, "contributor": 130, "botbw": 130, "example_gemv": 130, "py": [130, 142, 143], "plai": 130, "role": 130, "especi": 130, "perspect": 130, "_gemv_naiv": 130, "x_ptr": 130, "a_ptr": 130, "y_ptr": 130, "block_size_k": 130, "constexpr": 130, "program_id": 130, "offs_k": 130, "arang": 130, "a_val": 130, "x_val": 130, "expos": [130, 135], "think": 130, "naive_gemv": 130, "bn": 130, "tn": 130, "c_reg": 130, "bk": 130, "tk": 130, "astyp": 130, "And": 130, "half_t": 130, "__shared__": 130, "__align__": 130, "uchar": 130, "buf_dyn_shmem": 130, "uint64_t": 130, "_mbarrier": 130, "mbarrier_init": 130, "__syncthread": 130, "warpgroup_reg_dealloc": 130, "24": 130, "mbarrier_wait": 130, "16256": 130, "131072": 130, "mbarrier_cp_async_arr": 130, "els": 130, "warpgroup_reg_alloc": 130, "240": 130, "000000e": 130, "00f": 130, "bk_1": 130, "tk_1": 130, "act": 130, "1d": [130, 143], "At": [130, 135], "gain": 130, "veri": [130, 131], "littl": 130, "17": 130, "cubla": [130, 131], "008": 130, "20x": 130, "slower": 130, "exploit": 130, "finer": [130, 131], "naive_splitk_gemv": 130, "a_loc": 130, "b_local": 130, "c_accum": 130, "c_share": 130, "024": 130, "par": [130, 131], "reduce_thread": 130, "splitk_gemv": 130, "tile_k": 130, "less": [130, 134], "bottleneck": 130, "float2": 130, "float4": 130, "splitk_gemv_vector": 130, "max_transaction_size_in_bit": 130, "0084": 130, "outperfrom": 130, "plain": 130, "smem": 130, "atomidadd": 130, "splitk_gemv_vectorized_tvm": 130, "c_reduc": 130, "reduce_scop": 130, "uint64": 130, "uint32": 130, "0069": 130, "hyperparamet": 130, "get_best_config": 130, "get_config": [130, 142], "_config": [130, 142], "itertool": [130, 142], "20": [130, 134, 142], "ref_program": [130, 142], "0067": 130, "red_buf0": 130, "00784": 130, "00773": 130, "16607": 130, "02419": 130, "00809": 130, "00675": 130, "0077344514429569244": 130, "knowledg": 131, "concern": 131, "conceptu": 131, "behind": 131, "necessarili": [131, 143], "drop": 131, "lowest": 131, "somewhat": 131, "almost": 131, "expert": [131, 135], "who": [131, 134, 135], "everi": 131, "flow": [131, 136], "walk": 131, "show": [131, 143], "divers": 131, "comfort": 131, "incur": 131, "fusion": 131, "flash": [131, 136], "easili": 131, "give": 131, "effort": 131, "raw": 131, "strike": 131, "portabl": 131, "reason": [131, 135], "snippet": [131, 135, 143], "comment": 131, "jit_kernel": 131, "ref_c": 131, "assert_clos": 131, "inspect": [131, 143], "cuda_sourc": 131, "though": 131, "slice": 131, "arrang": 131, "arithmet": 131, "hood": 131, "cute": 131, "On": 131, "compos": [131, 135], "back": 131, "mix": [131, 135, 136], "keep": [131, 135], "rest": 131, "vendor": [131, 143], "intern": 131, "4090": 131, "a100": 131, "h100": 131, "mi300x": 131, "1x": 131, "speedup": 131, "rtx": 131, "97x": 131, "0x": 131, "04x": 131, "08x": 131, "25x": 131, "vari": 131, "few": 131, "dispatch": 131, "verifi": [131, 134], "abil": [131, 135], "tunabl": 131, "experi": 131, "meanwhil": 131, "pycuda": 131, "prerequisit": 134, "wheel": 134, "pypi": 134, "ubuntu": 134, "04": 134, "later": [134, 139], "11": 134, "easiest": 134, "lang": [134, 136], "latest": 134, "termin": 134, "choos": [134, 135], "prebuilt": 134, "releas": 134, "page": 134, "dev0": 134, "cu120": 134, "py3": 134, "whl": 134, "repositori": 134, "git": 134, "__version__": 134, "docker": 134, "rm": 134, "ipc": 134, "nvcr": 134, "io": 134, "23": 134, "requisit": 134, "apach": 134, "debian": 134, "apt": 134, "python3": 134, "dev": 134, "setuptool": 134, "zlib1g": 134, "cmake": 134, "libedit": 134, "clone": 134, "recurs": 134, "cd": 134, "patient": 134, "mkdir": 134, "dtvm_prebuild_path": 134, "pythonpath": 134, "tvm_import_python_path": 134, "3rd": 134, "parti": 134, "prefer": 134, "3rdparti": 134, "echo": 134, "use_llvm": 134, "ON": 134, "use_cuda": 134, "use_rocm": 134, "libtilelang": 134, "libtvm": 134, "libtvm_runtim": 134, "bash": 134, "install_cuda": 134, "sh": 134, "install_amd": 134, "offici": 134, "cu121": 134, "stabl": 134, "thei": [134, 135, 139], "ideal": [134, 135], "bugfix": 134, "hasn": 134, "been": [134, 142], "depict": 135, "resid": 135, "whichev": 135, "suit": 135, "unawar": 135, "independ": 135, "goal": 135, "hierarchi": 135, "consider": 135, "predefin": 135, "made": 135, "experienc": 135, "characterist": 135, "offer": 135, "grant": 135, "tailor": 135, "expertis": 135, "expand": [135, 143], "intermedi": [135, 143], "placement": 135, "particular": 135, "heart": 135, "notion": 135, "portion": 135, "unit": 135, "easier": 135, "hallmark": 135, "place": 135, "rather": 135, "leav": 135, "opaqu": 135, "face": 135, "physic": 135, "chip": 135, "abund": 135, "deriv": 135, "furthermor": 135, "streamlin": 136, "dequant": 136, "linearattent": 136, "underli": [136, 143], "sacrif": 136, "art": 136, "instal": 136, "pip": 136, "nightli": 136, "brief": 136, "introduct": 136, "linear": 136, "flashmla": 136, "hopper": 136, "tmac": 136, "tabl": 136, "ast": 136, "tilelibrari": 136, "sequenti": 139, "whole": 139, "know": 139, "reorder": 139, "noth": 139, "serpentin": 139, "stai": 140, "app": 140, "yyttt6": 142, "identifi": 142, "readabl": 142, "example_gemm": 142, "thread_num": 142, "enable_raster": 142, "combinatori": 142, "with_rol": 142, "out_c": 142, "lightweight": 142, "rank": 142, "orient": 142, "carve_templ": 142, "roller_hint": 142, "block_row": 142, "block_col": 142, "rasterization_plan": 142, "hereaft": 143, "undergo": 143, "roughli": 143, "categori": 143, "incorrect": 143, "theoret": 143, "focus": 143, "problem": 143, "nsight": 143, "rocprof": 143, "futur": 143, "materi": 143, "again": 143, "eventu": 143, "jump": 143, "caus": 143, "35": 143, "shape_q": 143, "codegen_cuda": 143, "1257": 143, "ramp": 143, "somewher": 143, "rt_mod_cuda": 143, "std": 143, "cg": 143, "registri": 143, "tilelang_callback_cuda_postproc": 143, "henc": 143, "intercept": 143, "cuda_runtim": 143, "Be": 143, "mind": 143, "concurr": 143, "debug_print_buff": 143, "debug_print_buffer_condit": 143, "debug_print_value_condit": 143, "debug_print_register_fil": 143, "prefix": 143, "debug_print_msg": 143, "someth": 143, "hello": 143, "world": 143, "diagnos": 143, "deviat": 143, "prong": 143, "suffici": 143, "occup": 143, "aspect": 143}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [4, 0, 0, "-", "cache"], [7, 0, 0, "-", "carver"], [39, 0, 0, "-", "common"], [41, 0, 0, "-", "contrib"], [48, 0, 0, "-", "engine"], [53, 0, 0, "-", "env"], [54, 0, 0, "-", "intrinsics"], [60, 0, 0, "-", "jit"], [77, 0, 0, "-", "language"], [98, 0, 0, "-", "layout"], [102, 0, 0, "-", "math"], [103, 0, 0, "-", "primitives"], [107, 0, 0, "-", "profiler"], [109, 0, 0, "-", "quantize"], [1, 5, 1, "", "set_log_level"], [114, 0, 0, "-", "tools"], [117, 0, 0, "-", "transform"], [120, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[2, 1, 1, "", "AutoTuner"], [2, 4, 1, "", "TimeoutException"], [2, 5, 1, "", "autotune"], [2, 5, 1, "", "get_available_cpu_count"], [3, 0, 0, "-", "param"], [2, 5, 1, "", "run_with_timeout"], [2, 5, 1, "", "timeout_handler"]], "tilelang.autotuner.AutoTuner": [[2, 3, 1, "", "cache_dir"], [2, 3, 1, "", "compile_args"], [2, 2, 1, "", "from_kernel"], [2, 2, 1, "", "generate_cache_key"], [2, 3, 1, "", "profile_args"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_compile_args"], [2, 2, 1, "", "set_kernel_parameters"], [2, 2, 1, "", "set_profile_args"]], "tilelang.autotuner.param": [[3, 1, 1, "", "AutotuneResult"], [3, 1, 1, "", "CompileArgs"], [3, 1, 1, "", "ProfileArgs"]], "tilelang.autotuner.param.AutotuneResult": [[3, 3, 1, "id0", "config"], [3, 3, 1, "id1", "func"], [3, 3, 1, "id2", "kernel"], [3, 3, 1, "id3", "latency"], [3, 3, 1, "id4", "libcode"], [3, 2, 1, "", "load_from_disk"], [3, 3, 1, "id5", "ref_latency"], [3, 2, 1, "", "save_to_disk"]], "tilelang.autotuner.param.CompileArgs": [[3, 2, 1, "", "compile_program"], [3, 3, 1, "id6", "execution_backend"], [3, 3, 1, "", "out_idx"], [3, 3, 1, "id7", "pass_configs"], [3, 3, 1, "id8", "target"], [3, 3, 1, "id9", "target_host"], [3, 3, 1, "id10", "verbose"]], "tilelang.autotuner.param.ProfileArgs": [[3, 3, 1, "id14", "atol"], [3, 3, 1, "id15", "cache_input_tensors"], [3, 3, 1, "id16", "manual_check_prog"], [3, 3, 1, "id17", "max_mismatched_ratio"], [3, 3, 1, "", "out_idx"], [3, 3, 1, "id18", "ref_prog"], [3, 3, 1, "id19", "rep"], [3, 3, 1, "id20", "rtol"], [3, 3, 1, "id21", "skip_check"], [3, 3, 1, "id22", "supply_prog"], [3, 3, 1, "id23", "supply_type"], [3, 3, 1, "id24", "timeout"], [3, 3, 1, "id25", "warmup"]], "tilelang.cache": [[4, 5, 1, "", "cached"], [4, 5, 1, "", "clear_cache"], [4, 5, 1, "", "get_cache_dir"], [5, 0, 0, "-", "kernel_cache"], [4, 5, 1, "", "set_cache_dir"], [6, 0, 0, "-", "tuner_cache"]], "tilelang.cache.kernel_cache": [[5, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[5, 3, 1, "", "cache_dir"], [5, 2, 1, "", "cached"], [5, 2, 1, "", "clear_cache"], [5, 3, 1, "", "execution_backend"], [5, 2, 1, "", "get_cache_dir"], [5, 2, 1, "", "set_cache_dir"]], "tilelang.cache.tuner_cache": [[6, 1, 1, "", "AutoTunerCache"]], "tilelang.cache.tuner_cache.AutoTunerCache": [[6, 3, 1, "", "cache_dir"], [6, 2, 1, "", "cached"], [6, 2, 1, "", "clear_cache"], [6, 2, 1, "", "get_cache_dir"], [6, 2, 1, "", "set_cache_dir"]], "tilelang.carver": [[8, 0, 0, "-", "analysis"], [9, 0, 0, "-", "arch"], [16, 0, 0, "-", "common_schedules"], [17, 0, 0, "-", "matmul_analysis"], [18, 0, 0, "-", "roller"], [30, 0, 0, "-", "template"], [38, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[8, 1, 1, "", "BlockInfo"], [8, 1, 1, "", "IterInfo"], [8, 5, 1, "", "check_func_with_dynamic"], [8, 5, 1, "", "collect_block_iter_vars_used_in_access_region"], [8, 5, 1, "", "collect_vars_used_in_prim_expr"], [8, 5, 1, "", "detect_dominant_read"], [8, 5, 1, "", "find_var_from_func"], [8, 5, 1, "", "get_coalesced_veclen"], [8, 5, 1, "", "get_max_shared_memory_per_block"], [8, 5, 1, "", "get_max_threads_per_block"], [8, 5, 1, "", "get_reduction_blocks"], [8, 5, 1, "", "get_root_block"], [8, 5, 1, "", "is_broadcast_epilogue"], [8, 5, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[8, 3, 1, "", "block_rv"], [8, 2, 1, "", "dom"], [8, 2, 1, "", "dom_kind"], [8, 2, 1, "", "is_elementwise"], [8, 2, 1, "", "is_gemm"], [8, 2, 1, "", "is_gemv"], [8, 2, 1, "", "is_injective"], [8, 2, 1, "", "is_reduction"], [8, 3, 1, "", "iters"], [8, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[8, 6, 1, "", "dom"], [8, 3, 1, "", "kind"], [8, 3, 1, "", "loop_rv"], [8, 3, 1, "", "var"]], "tilelang.carver.arch": [[10, 0, 0, "-", "arch_base"], [9, 5, 1, "", "auto_infer_current_arch"], [11, 0, 0, "-", "cdna"], [12, 0, 0, "-", "cpu"], [13, 0, 0, "-", "cuda"], [14, 0, 0, "-", "driver"], [9, 5, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[10, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[10, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[11, 1, 1, "", "CDNA"], [11, 5, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[12, 1, 1, "", "CPU"], [12, 5, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[13, 1, 1, "", "CUDA"], [13, 1, 1, "", "TensorInstruction"], [13, 5, 1, "", "check_sm_version"], [13, 5, 1, "", "has_mma_support"], [13, 5, 1, "", "is_ada_arch"], [13, 5, 1, "", "is_ampere_arch"], [13, 5, 1, "", "is_cuda_arch"], [13, 5, 1, "", "is_hopper_arch"], [13, 5, 1, "", "is_tensorcore_supported_precision"], [13, 5, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[13, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.driver": [[15, 0, 0, "-", "cuda_driver"]], "tilelang.carver.arch.driver.cuda_driver": [[15, 1, 1, "", "cudaDeviceProp"], [15, 5, 1, "", "get_cuda_device_properties"], [15, 5, 1, "", "get_device_attribute"], [15, 5, 1, "", "get_device_name"], [15, 5, 1, "", "get_max_dynamic_shared_size_bytes"], [15, 5, 1, "", "get_num_sms"], [15, 5, 1, "", "get_persisting_l2_cache_max_size"], [15, 5, 1, "", "get_shared_memory_per_block"]], "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp": [[15, 3, 1, "", "ECCEnabled"], [15, 3, 1, "", "asyncEngineCount"], [15, 3, 1, "", "canMapHostMemory"], [15, 3, 1, "", "clockRate"], [15, 3, 1, "", "computeMode"], [15, 3, 1, "", "concurrentKernels"], [15, 3, 1, "", "deviceOverlap"], [15, 3, 1, "", "globalL1CacheSupported"], [15, 3, 1, "", "integrated"], [15, 3, 1, "", "isMultiGpuBoard"], [15, 3, 1, "", "kernelExecTimeoutEnabled"], [15, 3, 1, "", "l2CacheSize"], [15, 3, 1, "", "localL1CacheSupported"], [15, 3, 1, "", "luid"], [15, 3, 1, "", "luidDeviceNodeMask"], [15, 3, 1, "", "major"], [15, 3, 1, "", "managedMemory"], [15, 3, 1, "", "maxGridSize"], [15, 3, 1, "", "maxSurface1D"], [15, 3, 1, "", "maxSurface1DLayered"], [15, 3, 1, "", "maxSurface2D"], [15, 3, 1, "", "maxSurface2DLayered"], [15, 3, 1, "", "maxSurface3D"], [15, 3, 1, "", "maxSurfaceCubemap"], [15, 3, 1, "", "maxSurfaceCubemapLayered"], [15, 3, 1, "", "maxTexture1D"], [15, 3, 1, "", "maxTexture1DLayered"], [15, 3, 1, "", "maxTexture1DLinear"], [15, 3, 1, "", "maxTexture1DMipmap"], [15, 3, 1, "", "maxTexture2D"], [15, 3, 1, "", "maxTexture2DGather"], [15, 3, 1, "", "maxTexture2DLayered"], [15, 3, 1, "", "maxTexture2DLinear"], [15, 3, 1, "", "maxTexture2DMipmap"], [15, 3, 1, "", "maxTexture3D"], [15, 3, 1, "", "maxTexture3DAlt"], [15, 3, 1, "", "maxTextureCubemap"], [15, 3, 1, "", "maxTextureCubemapLayered"], [15, 3, 1, "", "maxThreadsDim"], [15, 3, 1, "", "maxThreadsPerBlock"], [15, 3, 1, "", "maxThreadsPerMultiProcessor"], [15, 3, 1, "", "memPitch"], [15, 3, 1, "", "memoryBusWidth"], [15, 3, 1, "", "memoryClockRate"], [15, 3, 1, "", "minor"], [15, 3, 1, "", "multiGpuBoardGroupID"], [15, 3, 1, "", "multiProcessorCount"], [15, 3, 1, "", "name"], [15, 3, 1, "", "pciBusID"], [15, 3, 1, "", "pciDeviceID"], [15, 3, 1, "", "pciDomainID"], [15, 3, 1, "", "persistingL2CacheMaxSize"], [15, 3, 1, "", "regsPerBlock"], [15, 3, 1, "", "regsPerMultiprocessor"], [15, 3, 1, "", "reserved"], [15, 3, 1, "", "reserved1"], [15, 3, 1, "", "reserved2"], [15, 3, 1, "", "sharedMemPerBlock"], [15, 3, 1, "", "sharedMemPerMultiprocessor"], [15, 3, 1, "", "streamPrioritiesSupported"], [15, 3, 1, "", "surfaceAlignment"], [15, 3, 1, "", "tccDriver"], [15, 3, 1, "", "textureAlignment"], [15, 3, 1, "", "texturePitchAlignment"], [15, 3, 1, "", "totalConstMem"], [15, 3, 1, "", "totalGlobalMem"], [15, 3, 1, "", "unifiedAddressing"], [15, 3, 1, "", "uuid"], [15, 3, 1, "", "warpSize"]], "tilelang.carver.common_schedules": [[16, 5, 1, "", "get_block"], [16, 5, 1, "", "get_output_blocks"], [16, 5, 1, "", "try_inline"], [16, 5, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[17, 1, 1, "", "IterKind"], [17, 1, 1, "", "IterTrait"], [17, 5, 1, "", "auto_inline_consumer_chain"], [17, 5, 1, "", "auto_inline_consumers"], [17, 5, 1, "", "auto_inline_producers"], [17, 5, 1, "", "collect_vars_from_expr"], [17, 5, 1, "", "detect_iter_traits"], [17, 5, 1, "", "find_arg_idx_from_buffer_chain"], [17, 5, 1, "", "find_first_similar_buffer"], [17, 5, 1, "", "find_first_similar_region"], [17, 5, 1, "", "find_last_producer_from_buffer"], [17, 5, 1, "", "get_dequantize_block"], [17, 5, 1, "", "get_in_out_dtypes"], [17, 5, 1, "", "get_index_map"], [17, 5, 1, "", "get_ladder_stage3_map"], [17, 5, 1, "", "get_propagate_map"], [17, 5, 1, "", "get_tensorized_func_and_tags"], [17, 5, 1, "", "inline_transpose_block"], [17, 5, 1, "", "is_identity_block"], [17, 5, 1, "", "is_identity_or_transpose_block"], [17, 5, 1, "", "is_transpose_block"], [17, 5, 1, "", "layout_propagate_chain"], [17, 5, 1, "", "make_iter_fusion_index_map"], [17, 5, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[17, 3, 1, "", "kIter_I"], [17, 3, 1, "", "kIter_J"], [17, 3, 1, "", "kIter_K"], [17, 3, 1, "", "kIter_S"], [17, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[17, 3, 1, "", "extent"], [17, 3, 1, "", "kind"]], "tilelang.carver.roller": [[19, 0, 0, "-", "bestfit"], [20, 0, 0, "-", "hint"], [21, 0, 0, "-", "node"], [22, 0, 0, "-", "policy"], [26, 0, 0, "-", "rasterization"], [27, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[19, 1, 1, "", "BestFit"], [19, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[19, 2, 1, "", "free"], [19, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[19, 2, 1, "", "merge"], [19, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[20, 1, 1, "", "Hint"], [20, 1, 1, "", "IntrinInfo"], [20, 1, 1, "", "Stride"], [20, 1, 1, "", "TensorCoreExtraConfig"], [20, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[20, 2, 1, "", "complete_config"], [20, 2, 1, "", "from_dict"], [20, 6, 1, "", "raxis_order"], [20, 6, 1, "", "step"], [20, 2, 1, "", "tensorcore_legalization"], [20, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[20, 6, 1, "", "inter_transform_a"], [20, 6, 1, "", "inter_transform_b"], [20, 2, 1, "", "is_input_8bit"], [20, 6, 1, "", "smooth_a"], [20, 6, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[20, 6, 1, "", "ax"], [20, 2, 1, "", "compute_elements_from_shape"], [20, 2, 1, "", "compute_strides_from_shape"], [20, 2, 1, "", "is_valid"], [20, 6, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[20, 2, 1, "", "get_rstep"], [20, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[21, 1, 1, "", "BlockAnalyzer"], [21, 1, 1, "", "Edge"], [21, 1, 1, "", "Node"], [21, 1, 1, "", "OutputNode"], [21, 1, 1, "", "PlaceHolderNode"], [21, 1, 1, "", "PrimFuncNode"], [21, 5, 1, "", "find_topo_sort"], [21, 5, 1, "", "find_topo_sort_priority"], [21, 5, 1, "", "pre_order_traverse"], [21, 5, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[21, 2, 1, "", "get_block_info"], [21, 2, 1, "", "get_block_name"], [21, 2, 1, "", "get_buffers"], [21, 2, 1, "", "get_consumer_blocks"], [21, 2, 1, "", "get_input_buffers"], [21, 2, 1, "", "get_output_buffers"], [21, 2, 1, "", "get_producer_blocks"], [21, 2, 1, "", "get_reduce_axis"], [21, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[21, 3, 1, "", "dst_id"], [21, 3, 1, "", "dst_node"], [21, 3, 1, "", "src_id"], [21, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[21, 2, 1, "", "add_tag"], [21, 2, 1, "", "get_dtype"], [21, 2, 1, "", "get_ir"], [21, 2, 1, "", "get_shape"], [21, 2, 1, "", "get_tag"], [21, 6, 1, "", "inputs"], [21, 2, 1, "", "is_output"], [21, 2, 1, "", "is_placeholder"], [21, 2, 1, "", "num_outputs"], [21, 6, 1, "", "outputs"], [21, 2, 1, "", "set_dtype"], [21, 2, 1, "", "set_inputs"], [21, 2, 1, "", "set_outputs"], [21, 2, 1, "", "set_shape"], [21, 2, 1, "", "set_tag"], [21, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[21, 2, 1, "", "get_ir"], [21, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[21, 2, 1, "", "get_ir"], [21, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[21, 2, 1, "", "extent_wrapper"], [21, 2, 1, "", "footprint"], [21, 2, 1, "", "get_buffer_dtype"], [21, 2, 1, "", "get_input_buffers"], [21, 2, 1, "", "get_opt_shape"], [21, 2, 1, "", "get_reduce_inputs_dtype"], [21, 2, 1, "", "get_space_dim"], [21, 2, 1, "", "infer_tensorcore_axis"], [21, 2, 1, "", "propagate"], [21, 2, 1, "", "propagate_inputs"], [21, 2, 1, "", "propagate_inputs_on_reduction"], [21, 2, 1, "", "propagate_outputs"], [21, 2, 1, "", "propagate_reduction_inputs"], [21, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[23, 0, 0, "-", "common"], [24, 0, 0, "-", "default"], [25, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[23, 5, 1, "", "coalesced_factor"], [23, 5, 1, "", "coalesced_tensor_shape"], [23, 5, 1, "", "factorize"], [23, 5, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[24, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[24, 3, 1, "", "arch"], [24, 2, 1, "", "assign_block_size"], [24, 2, 1, "", "check_tile_shape_isvalid"], [24, 2, 1, "", "compute_node_stride_map"], [24, 2, 1, "", "compute_tile_dict"], [24, 2, 1, "", "compute_workload_per_item"], [24, 2, 1, "", "dfs_smem_tile"], [24, 2, 1, "", "emit_config"], [24, 2, 1, "", "from_output_nodes"], [24, 2, 1, "", "from_prim_func"], [24, 3, 1, "", "func"], [24, 2, 1, "", "get_base_tile"], [24, 2, 1, "", "get_block_size"], [24, 2, 1, "", "get_node_reduce_step_candidates"], [24, 2, 1, "", "infer_node_smem_usage"], [24, 3, 1, "", "nodes"], [24, 2, 1, "", "plan_rasterization"], [24, 2, 1, "", "recommend_block_size"], [24, 2, 1, "", "score_block_size"], [24, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[25, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[25, 3, 1, "", "block_reduction_depth"], [25, 2, 1, "", "check_tile_shape_isvalid"], [25, 2, 1, "", "compute_node_stride_map"], [25, 2, 1, "", "get_node_reduce_step_candidates"], [25, 2, 1, "", "infer_node_smem_usage"], [25, 3, 1, "", "pipeline_stage"], [25, 2, 1, "", "plan_rasterization"], [25, 3, 1, "", "use_async_copy"], [25, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[26, 1, 1, "", "NoRasterization"], [26, 1, 1, "", "Rasterization"], [26, 1, 1, "", "Rasterization2DColumn"], [26, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[26, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[26, 2, 1, "", "get_code"], [26, 6, 1, "", "panel_width"], [26, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[26, 2, 1, "", "get_code"], [26, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[26, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[28, 0, 0, "-", "common"], [29, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[28, 1, 1, "", "InputShapeInference"], [28, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[28, 2, 1, "", "get_input_exprs"], [28, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[29, 1, 1, "", "DependencyAnalysis"], [29, 1, 1, "", "InputShapeInference"], [29, 1, 1, "", "Statement"], [29, 1, 1, "", "TensorDepNode"], [29, 5, 1, "", "get_analyzer_by_tir"], [29, 5, 1, "", "region_exist_in_list"], [29, 5, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[29, 2, 1, "", "analyze"], [29, 2, 1, "", "find_path_from_source"], [29, 2, 1, "", "get_or_create_node"], [29, 2, 1, "", "print_dependencies"], [29, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[29, 2, 1, "", "construct_dependency_target"], [29, 2, 1, "", "get_input_exprs"], [29, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[29, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[29, 2, 1, "", "add_next"], [29, 2, 1, "", "add_prev"], [29, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[31, 0, 0, "-", "base"], [32, 0, 0, "-", "conv"], [33, 0, 0, "-", "elementwise"], [34, 0, 0, "-", "flashattention"], [35, 0, 0, "-", "gemv"], [36, 0, 0, "-", "general_reduce"], [37, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[31, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[31, 6, 1, "", "arch"], [31, 2, 1, "", "equivalent_function"], [31, 2, 1, "", "get_hardware_aware_configs"], [31, 2, 1, "", "has_arch"], [31, 2, 1, "", "initialize_function"], [31, 2, 1, "", "is_ampere_arch"], [31, 2, 1, "", "is_cdna_arch"], [31, 2, 1, "", "is_volta_arch"], [31, 6, 1, "", "output_nodes"], [31, 2, 1, "", "recommend_hints"], [31, 2, 1, "", "set_function"], [31, 2, 1, "", "set_output_nodes"], [31, 2, 1, "", "with_arch"]], "tilelang.carver.template.conv": [[32, 1, 1, "", "ConvTemplate"]], "tilelang.carver.template.conv.ConvTemplate": [[32, 3, 1, "id0", "C"], [32, 3, 1, "id1", "D"], [32, 3, 1, "id2", "F"], [32, 3, 1, "id3", "H"], [32, 3, 1, "id4", "K"], [32, 3, 1, "id5", "N"], [32, 3, 1, "id6", "P"], [32, 3, 1, "id7", "S"], [32, 3, 1, "id8", "W"], [32, 3, 1, "id9", "accum_dtype"], [32, 6, 1, "", "class_attributes"], [32, 2, 1, "", "get_hardware_aware_configs"], [32, 3, 1, "id10", "in_dtype"], [32, 2, 1, "", "initialize_function"], [32, 3, 1, "id11", "out_dtype"], [32, 2, 1, "", "params_as_dict"], [32, 3, 1, "id12", "with_bias"]], "tilelang.carver.template.elementwise": [[33, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[33, 6, 1, "", "class_attributes"], [33, 3, 1, "id0", "dtype"], [33, 2, 1, "", "get_hardware_aware_configs"], [33, 2, 1, "", "initialize_function"], [33, 2, 1, "", "params_as_dict"], [33, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[34, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[34, 3, 1, "", "accum_dtype"], [34, 3, 1, "", "batch_size"], [34, 6, 1, "", "class_attributes"], [34, 2, 1, "", "get_hardware_aware_configs"], [34, 3, 1, "", "head_dim"], [34, 3, 1, "", "in_dtype"], [34, 2, 1, "", "initialize_function"], [34, 3, 1, "", "is_causal"], [34, 3, 1, "", "num_heads"], [34, 3, 1, "", "out_dtype"], [34, 2, 1, "", "params_as_dict"], [34, 3, 1, "", "seq_kv_length"], [34, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[35, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[35, 3, 1, "", "K"], [35, 3, 1, "", "N"], [35, 3, 1, "", "accum_dtype"], [35, 6, 1, "", "class_attributes"], [35, 2, 1, "", "get_hardware_aware_configs"], [35, 3, 1, "", "in_dtype"], [35, 2, 1, "", "initialize_function"], [35, 3, 1, "", "out_dtype"], [35, 2, 1, "", "params_as_dict"], [35, 3, 1, "", "trans_B"], [35, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[36, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[36, 6, 1, "", "class_attributes"], [36, 3, 1, "", "dtype"], [36, 2, 1, "", "get_hardware_aware_configs"], [36, 2, 1, "", "initialize_function"], [36, 2, 1, "", "params_as_dict"], [36, 3, 1, "", "shape"], [36, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[37, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[37, 3, 1, "id0", "K"], [37, 3, 1, "id1", "M"], [37, 3, 1, "id2", "N"], [37, 3, 1, "id3", "accum_dtype"], [37, 6, 1, "", "class_attributes"], [37, 2, 1, "", "get_hardware_aware_configs"], [37, 3, 1, "id4", "in_dtype"], [37, 2, 1, "", "initialize_function"], [37, 3, 1, "id5", "out_dtype"], [37, 2, 1, "", "params_as_dict"], [37, 3, 1, "id6", "trans_A"], [37, 3, 1, "id7", "trans_B"], [37, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[38, 5, 1, "", "get_rasterization_code"], [38, 5, 1, "", "get_roller_hints_from_func"], [38, 5, 1, "", "get_roller_hints_from_output_nodes"], [38, 5, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[40, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[40, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[40, 3, 1, "", "InterWarpTransform"], [40, 3, 1, "", "IntraWarpTransform"], [40, 3, 1, "", "LDMatrixTransform"], [40, 3, 1, "", "NonTransform"], [40, 2, 1, "", "is_inter_warp_transform"], [40, 2, 1, "", "is_intra_warp_transform"], [40, 2, 1, "", "is_ld_matrix_transform"], [40, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[42, 0, 0, "-", "cc"], [43, 0, 0, "-", "dlpack"], [44, 0, 0, "-", "hipcc"], [45, 0, 0, "-", "nvcc"], [47, 0, 0, "-", "rocm"]], "tilelang.contrib.cc": [[42, 5, 1, "", "create_executable"], [42, 5, 1, "", "create_shared"], [42, 5, 1, "", "create_staticlib"], [42, 5, 1, "", "cross_compiler"], [42, 5, 1, "", "get_cc"], [42, 5, 1, "", "get_cplus_compiler"], [42, 5, 1, "", "get_global_symbol_section_map"], [42, 5, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[43, 5, 1, "", "convert_func"], [43, 5, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[44, 5, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[45, 5, 1, "", "callback_libdevice_path"], [45, 5, 1, "", "compile_cuda"], [45, 5, 1, "", "find_cuda_path"], [45, 5, 1, "", "get_cuda_version"], [45, 5, 1, "", "get_nvcc_compiler"], [45, 5, 1, "", "have_cudagraph"], [45, 5, 1, "", "have_fp16"], [45, 5, 1, "", "have_int8"], [45, 5, 1, "", "have_tensorcore"], [45, 5, 1, "", "parse_compute_version"]], "tilelang.contrib.rocm": [[47, 5, 1, "", "find_lld"], [47, 5, 1, "", "find_rocm_path"], [47, 5, 1, "", "have_matrixcore"], [47, 5, 1, "", "parse_compute_version"], [47, 5, 1, "", "rocm_link"]], "tilelang.engine": [[49, 0, 0, "-", "callback"], [50, 0, 0, "-", "lower"], [51, 0, 0, "-", "param"], [52, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[49, 5, 1, "", "register_cuda_postproc"], [49, 5, 1, "", "register_cuda_postproc_callback"], [49, 5, 1, "", "register_hip_postproc"], [49, 5, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[50, 5, 1, "", "canon_target_host"], [50, 5, 1, "", "device_codegen"], [50, 5, 1, "", "device_codegen_without_compile"], [50, 5, 1, "", "extrac_params"], [50, 5, 1, "", "get_device_call"], [50, 5, 1, "", "get_host_call"], [50, 5, 1, "", "has_device_kernel_launch"], [50, 5, 1, "", "host_codegen"], [50, 5, 1, "", "is_cpu_device_backend"], [50, 5, 1, "", "is_device_call"], [50, 5, 1, "", "is_device_call_c_device"], [50, 5, 1, "", "lower"]], "tilelang.engine.param": [[51, 1, 1, "", "CompiledArtifact"], [51, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[51, 3, 1, "", "device_mod"], [51, 3, 1, "", "host_mod"], [51, 3, 1, "", "kernel_source"], [51, 3, 1, "", "params"], [51, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[51, 3, 1, "", "dtype"], [51, 2, 1, "", "from_buffer"], [51, 2, 1, "", "from_var"], [51, 2, 1, "", "is_boolean"], [51, 2, 1, "", "is_float8"], [51, 2, 1, "", "is_scalar"], [51, 2, 1, "", "is_unsigned"], [51, 3, 1, "", "shape"]], "tilelang.engine.phase": [[52, 5, 1, "", "LowerAndLegalize"], [52, 5, 1, "", "OptimizeForTarget"], [52, 5, 1, "", "allow_fence_proxy"], [52, 5, 1, "", "allow_global_thread_synchronization"], [52, 5, 1, "", "allow_tma_and_warp_specialized"], [52, 5, 1, "", "allow_vectorize"], [52, 5, 1, "", "allow_warp_specialized"]], "tilelang.env": [[53, 5, 1, "", "disable_cache"], [53, 5, 1, "", "enable_cache"], [53, 5, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[55, 0, 0, "-", "mfma_layout"], [56, 0, 0, "-", "mfma_macro_generator"], [57, 0, 0, "-", "mma_layout"], [58, 0, 0, "-", "mma_macro_generator"], [59, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[55, 5, 1, "", "make_mfma_swizzle_layout"], [55, 5, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_A"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_B"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_C"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_k_n"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_m_n"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_n_k"], [55, 5, 1, "", "shared_16x16_to_local_64x4_layout_n_m"], [55, 5, 1, "", "shared_16x32_to_local_64x8_layout_A"], [55, 5, 1, "", "shared_16x32_to_local_64x8_layout_B"], [55, 5, 1, "", "shared_16x4_to_local_64x1_layout_A"], [55, 5, 1, "", "shared_16x64_to_local_64x16_layout_A"], [55, 5, 1, "", "shared_16x64_to_local_64x16_layout_B"], [55, 5, 1, "", "shared_4x16_to_local_64x1_layout_B"], [55, 5, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_A"], [55, 5, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_B"], [55, 5, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [55, 5, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [55, 5, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [55, 5, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [55, 5, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [55, 5, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [55, 5, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [55, 5, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[56, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[56, 3, 1, "", "M_DIM"], [56, 3, 1, "", "N_DIM"], [56, 3, 1, "", "WARP_SIZE"], [56, 3, 1, "", "dtype_abbrv"], [56, 2, 1, "", "extract_thread_binding"], [56, 2, 1, "", "get_ldmatrix_index_map"], [56, 3, 1, "", "is_m_first"], [56, 3, 1, "", "k_pack"], [56, 2, 1, "", "ldmatrix_a"], [56, 2, 1, "", "ldmatrix_b"], [56, 2, 1, "", "mfma"], [56, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[57, 5, 1, "", "get_swizzle_layout"], [57, 5, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [57, 5, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [57, 5, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [57, 5, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [57, 5, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [57, 5, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [57, 5, 1, "", "make_mma_swizzle_layout"], [57, 5, 1, "", "mma_32x8_to_shared_16x16_layout"], [57, 5, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [57, 5, 1, "", "shared_16x16_to_mma_32x8_layout"], [57, 5, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [57, 5, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [57, 5, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [57, 5, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [57, 5, 1, "", "shared_16x32_to_mma_32x16_layout"], [57, 5, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [57, 5, 1, "", "shared_32x16_to_mma_32x16_layout"], [57, 5, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[58, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [58, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [58, 1, 1, "", "TensorCoreIntrinEmitter"], [58, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[58, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[58, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[58, 3, 1, "", "M_DIM"], [58, 3, 1, "", "N_DIM"], [58, 3, 1, "", "WARP_SIZE"], [58, 3, 1, "", "dtype_abbrv"], [58, 2, 1, "", "extract_thread_binding"], [58, 2, 1, "", "get_store_index_map"], [58, 3, 1, "", "is_m_first"], [58, 2, 1, "", "ldmatrix_a"], [58, 2, 1, "", "ldmatrix_b"], [58, 2, 1, "", "make_mma_load_layout"], [58, 2, 1, "", "make_mma_store_layout"], [58, 2, 1, "", "mma"], [58, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[58, 2, 1, "", "ldmatrix_a"], [58, 2, 1, "", "ldmatrix_b"], [58, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[59, 5, 1, "", "get_ldmatrix_offset"], [59, 5, 1, "", "get_mma_micro_size"], [59, 5, 1, "", "index_to_coordinates"], [59, 5, 1, "", "mfma_store_index_map"], [59, 5, 1, "", "mma_store_index_map"], [59, 5, 1, "", "shared_16x16_to_mma_32x8_layout"], [59, 5, 1, "", "shared_16x32_to_mma_32x16_layout"], [59, 5, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[61, 0, 0, "-", "adapter"], [60, 5, 1, "", "compile"], [74, 0, 0, "-", "env"], [60, 5, 1, "", "jit"], [75, 0, 0, "-", "kernel"], [76, 0, 0, "-", "param"]], "tilelang.jit.adapter": [[62, 0, 0, "-", "base"], [63, 0, 0, "-", "ctypes"], [65, 0, 0, "-", "cython"], [68, 0, 0, "-", "dlpack"], [69, 0, 0, "-", "libgen"], [70, 0, 0, "-", "nvrtc"], [72, 0, 0, "-", "utils"], [73, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[62, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[62, 3, 1, "", "func"], [62, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[64, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[64, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[64, 3, 1, "", "dynamic_symbolic_map"], [64, 2, 1, "", "from_database"], [64, 2, 1, "", "get_kernel_source"], [64, 3, 1, "", "ir_module"], [64, 6, 1, "", "is_dynamic"], [64, 3, 1, "", "kernel_global_source"], [64, 3, 1, "", "lib"], [64, 6, 1, "", "lib_code"], [64, 6, 1, "", "libpath"], [64, 3, 1, "", "param_dtypes"], [64, 3, 1, "", "param_shapes"], [64, 3, 1, "", "pass_configs"], [64, 6, 1, "", "prim_func"], [64, 6, 1, "", "srcpath"], [64, 3, 1, "", "target"], [64, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[66, 0, 0, "-", "adapter"], [67, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[66, 1, 1, "", "CythonKernelAdapter"], [66, 5, 1, "", "get_cache_dir"], [66, 5, 1, "", "get_cached_lib"], [66, 5, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[66, 3, 1, "", "buffer_device_map"], [66, 3, 1, "", "buffer_dtype_map"], [66, 3, 1, "", "dynamic_symbolic_map"], [66, 2, 1, "", "from_database"], [66, 2, 1, "", "get_kernel_source"], [66, 3, 1, "", "ir_module"], [66, 6, 1, "", "is_dynamic"], [66, 3, 1, "", "kernel_global_source"], [66, 3, 1, "", "lib"], [66, 6, 1, "", "lib_code"], [66, 6, 1, "", "libpath"], [66, 3, 1, "", "pass_configs"], [66, 6, 1, "", "prim_func"], [66, 3, 1, "", "ptr_map"], [66, 6, 1, "", "srcpath"], [66, 3, 1, "", "static_shape_map"], [66, 3, 1, "", "target"], [66, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[67, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[67, 2, 1, "", "forward"], [67, 2, 1, "", "set_buffer_device_map"], [67, 2, 1, "", "set_buffer_dtype_map"], [67, 2, 1, "", "set_dynamic_symbolic_map"], [67, 2, 1, "", "set_ptr_map"], [67, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[68, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[69, 1, 1, "", "LibraryGenerator"], [69, 1, 1, "", "PyLibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[69, 2, 1, "", "compile_lib"], [69, 2, 1, "", "get_lib_path"], [69, 2, 1, "", "get_source_path"], [69, 3, 1, "", "lib_code"], [69, 3, 1, "", "libpath"], [69, 2, 1, "", "load_lib"], [69, 2, 1, "", "remove_lib"], [69, 2, 1, "", "set_lib_path"], [69, 2, 1, "", "set_src_path"], [69, 3, 1, "", "srcpath"], [69, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.libgen.PyLibraryGenerator": [[69, 2, 1, "", "compile_lib"], [69, 3, 1, "", "culib"], [69, 3, 1, "", "host_func"], [69, 2, 1, "", "import_from_file"], [69, 2, 1, "", "load_lib"], [69, 3, 1, "", "pymodule"], [69, 2, 1, "", "update_host_func"]], "tilelang.jit.adapter.nvrtc": [[71, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.nvrtc.adapter": [[71, 1, 1, "", "NVRTCKernelAdapter"]], "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter": [[71, 2, 1, "", "from_database"], [71, 2, 1, "", "get_kernel_source"], [71, 3, 1, "", "kernels"], [71, 6, 1, "", "prim_func"], [71, 3, 1, "", "pymodule"]], "tilelang.jit.adapter.utils": [[72, 5, 1, "", "get_annotated_mod"], [72, 5, 1, "", "is_cpu_target"], [72, 5, 1, "", "is_cuda_target"], [72, 5, 1, "", "is_hip_target"], [72, 5, 1, "", "match_declare_kernel"], [72, 5, 1, "", "match_declare_kernel_cpu"], [72, 5, 1, "", "match_global_kernel"]], "tilelang.jit.adapter.wrapper": [[73, 1, 1, "", "BaseWrapper"], [73, 1, 1, "", "TLCPUSourceWrapper"], [73, 1, 1, "", "TLCUDASourceWrapper"], [73, 1, 1, "", "TLHIPSourceWrapper"], [73, 1, 1, "", "TLNVRTCSourceWrapper"], [73, 1, 1, "", "TLPyWrapper"], [73, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[73, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[73, 3, 1, "", "CALL_PREFIX"], [73, 3, 1, "", "INIT_FUNC"], [73, 3, 1, "", "backend"], [73, 2, 1, "", "create_call_func"], [73, 3, 1, "", "device_mod"], [73, 2, 1, "", "get_cpu_init_func"], [73, 2, 1, "", "get_dynamic_symbolic_set"], [73, 3, 1, "", "host_mod"], [73, 2, 1, "", "parse_source_information"], [73, 3, 1, "", "pass_configs"], [73, 6, 1, "", "prim_func"], [73, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[73, 3, 1, "", "backend"], [73, 2, 1, "", "create_dispatch_func"], [73, 3, 1, "", "device_mod"], [73, 2, 1, "", "generate_l2_persistent_map"], [73, 2, 1, "", "generate_tma_descriptor_args"], [73, 2, 1, "", "get_dynamic_symbolic_set"], [73, 2, 1, "", "get_init_func"], [73, 2, 1, "", "get_stream_type"], [73, 3, 1, "", "host_mod"], [73, 2, 1, "", "is_tma_descriptor_arg"], [73, 2, 1, "", "parse_source_information"], [73, 3, 1, "", "pass_configs"], [73, 6, 1, "", "prim_func"], [73, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[73, 2, 1, "", "get_init_func"], [73, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper": [[73, 2, 1, "", "create_dispatch_func"], [73, 2, 1, "", "generate_tma_descriptor_args"], [73, 2, 1, "", "get_stream_type"], [73, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLPyWrapper": [[73, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[73, 2, 1, "", "assign_device_module"], [73, 2, 1, "", "assign_host_module"], [73, 2, 1, "", "assign_optimized_module"], [73, 2, 1, "", "assign_pass_configs"], [73, 3, 1, "", "device_mod"], [73, 3, 1, "", "host_mod"], [73, 3, 1, "", "lib"], [73, 3, 1, "", "pass_configs"], [73, 3, 1, "", "target"], [73, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[75, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[75, 3, 1, "id0", "adapter"], [75, 3, 1, "id1", "artifact"], [75, 3, 1, "", "config"], [75, 2, 1, "", "export_library"], [75, 2, 1, "", "from_database"], [75, 2, 1, "", "from_tilelang_function"], [75, 2, 1, "", "get_host_source"], [75, 2, 1, "", "get_kernel_source"], [75, 2, 1, "", "get_profiler"], [75, 2, 1, "", "get_tuner_result"], [75, 6, 1, "", "host_source"], [75, 6, 1, "", "kernel_source"], [75, 3, 1, "", "latency"], [75, 6, 1, "", "out_idx"], [75, 6, 1, "", "params"], [75, 3, 1, "", "prim_func"], [75, 3, 1, "", "ref_latency"], [75, 2, 1, "", "run_once"], [75, 3, 1, "id2", "torch_function"], [75, 2, 1, "", "update_tuner_result"]], "tilelang.jit.param": [[76, 1, 1, "", "Kernel"], [76, 1, 1, "", "Program"]], "tilelang.jit.param.Kernel": [[76, 2, 1, "", "get_kernel_source"]], "tilelang.language": [[78, 0, 0, "-", "allocate"], [77, 5, 1, "", "annotate_l2_hit_ratio"], [77, 5, 1, "", "annotate_layout"], [77, 5, 1, "", "annotate_padding"], [79, 0, 0, "-", "builtin"], [80, 0, 0, "-", "copy"], [81, 0, 0, "-", "customize"], [82, 0, 0, "-", "fill"], [83, 0, 0, "-", "frame"], [84, 0, 0, "-", "gemm"], [77, 5, 1, "", "import_source"], [85, 0, 0, "-", "kernel"], [86, 0, 0, "-", "logical"], [87, 0, 0, "-", "memscope"], [88, 0, 0, "-", "parallel"], [89, 0, 0, "-", "pipeline"], [90, 0, 0, "-", "print"], [91, 0, 0, "-", "proxy"], [92, 0, 0, "-", "reduce"], [77, 5, 1, "", "symbolic"], [93, 0, 0, "-", "tir"], [77, 5, 1, "", "use_swizzle"], [97, 0, 0, "-", "warpgroup"]], "tilelang.language.allocate": [[78, 5, 1, "", "alloc_fragment"], [78, 5, 1, "", "alloc_local"], [78, 5, 1, "", "alloc_shared"], [78, 5, 1, "", "alloc_var"]], "tilelang.language.builtin": [[79, 5, 1, "", "barrier_arrive"], [79, 5, 1, "", "barrier_wait"], [79, 5, 1, "", "create_list_of_mbarrier"], [79, 5, 1, "", "create_tma_descriptor"], [79, 5, 1, "", "dec_max_nreg"], [79, 5, 1, "", "fence_proxy_async"], [79, 5, 1, "", "get_mbarrier"], [79, 5, 1, "", "inc_max_nreg"], [79, 5, 1, "", "mbarrier_arrive"], [79, 5, 1, "", "mbarrier_expect_tx"], [79, 5, 1, "", "mbarrier_wait_parity"], [79, 5, 1, "", "no_set_max_nreg"], [79, 5, 1, "", "set_max_nreg"], [79, 5, 1, "", "shfl_down"], [79, 5, 1, "", "shfl_up"], [79, 5, 1, "", "shfl_xor"], [79, 5, 1, "", "sync_global"], [79, 5, 1, "", "sync_thread_partial"], [79, 5, 1, "", "sync_threads"], [79, 5, 1, "", "tma_load"], [79, 5, 1, "", "tma_store_arrive"], [79, 5, 1, "", "tma_store_wait"], [79, 5, 1, "", "wait_wgmma"]], "tilelang.language.copy": [[80, 5, 1, "", "buffer_load_to_tile_region"], [80, 5, 1, "", "buffer_region_to_tile_region"], [80, 5, 1, "", "buffer_to_tile_region"], [80, 5, 1, "", "c2d_im2col"], [80, 5, 1, "", "copy"], [80, 5, 1, "", "region"]], "tilelang.language.customize": [[81, 5, 1, "", "atomic_add"], [81, 5, 1, "", "atomic_addx2"], [81, 5, 1, "", "atomic_addx4"], [81, 5, 1, "", "clamp"], [81, 5, 1, "", "dp4a"], [81, 5, 1, "", "reshape"], [81, 5, 1, "", "view"]], "tilelang.language.fill": [[82, 5, 1, "", "clear"], [82, 5, 1, "", "fill"]], "tilelang.language.frame": [[83, 1, 1, "", "FrameStack"], [83, 1, 1, "", "LetFrame"], [83, 5, 1, "", "get_let_value"], [83, 5, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[83, 2, 1, "", "get_value"], [83, 2, 1, "", "has_value"], [83, 2, 1, "", "pop"], [83, 2, 1, "", "push"], [83, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[83, 2, 1, "", "Current"], [83, 2, 1, "", "get_value"], [83, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[84, 5, 1, "", "gemm"]], "tilelang.language.kernel": [[85, 1, 1, "", "FrameStack"], [85, 5, 1, "", "Kernel"], [85, 1, 1, "", "KernelLaunchFrame"], [85, 5, 1, "", "get_block_binding"], [85, 5, 1, "", "get_block_bindings"], [85, 5, 1, "", "get_block_extent"], [85, 5, 1, "", "get_block_extents"], [85, 5, 1, "", "get_thread_binding"], [85, 5, 1, "", "get_thread_bindings"], [85, 5, 1, "", "get_thread_extent"], [85, 5, 1, "", "get_thread_extents"]], "tilelang.language.kernel.FrameStack": [[85, 2, 1, "", "pop"], [85, 2, 1, "", "push"], [85, 2, 1, "", "size"], [85, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[85, 2, 1, "", "Current"], [85, 6, 1, "", "blocks"], [85, 2, 1, "", "get_block_binding"], [85, 2, 1, "", "get_block_bindings"], [85, 2, 1, "", "get_block_extent"], [85, 2, 1, "", "get_block_extents"], [85, 2, 1, "", "get_num_threads"], [85, 2, 1, "", "get_thread_binding"], [85, 2, 1, "", "get_thread_bindings"], [85, 2, 1, "", "get_thread_extent"], [85, 2, 1, "", "get_thread_extents"], [85, 6, 1, "", "num_threads"], [85, 6, 1, "", "threads"]], "tilelang.language.logical": [[86, 5, 1, "", "all_of"], [86, 5, 1, "", "any_of"]], "tilelang.language.parallel": [[88, 5, 1, "", "Parallel"]], "tilelang.language.pipeline": [[89, 5, 1, "", "Pipelined"]], "tilelang.language.print": [[90, 5, 1, "", "print"]], "tilelang.language.proxy": [[91, 1, 1, "", "BaseTensorProxy"], [91, 1, 1, "", "BufferProxy"], [91, 1, 1, "", "FragmentBufferProxy"], [91, 1, 1, "", "LocalBufferProxy"], [91, 1, 1, "", "SharedBufferProxy"], [91, 1, 1, "", "TensorProxy"], [91, 5, 1, "", "make_tensor"], [91, 5, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[91, 3, 1, "", "default_align"], [91, 3, 1, "", "default_offset_factor"], [91, 3, 1, "", "default_scope"], [91, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[91, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[91, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[91, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[91, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[92, 5, 1, "", "cumsum"], [92, 5, 1, "", "reduce"], [92, 5, 1, "", "reduce_absmax"], [92, 5, 1, "", "reduce_abssum"], [92, 5, 1, "", "reduce_max"], [92, 5, 1, "", "reduce_min"], [92, 5, 1, "", "reduce_sum"]], "tilelang.language.tir": [[94, 0, 0, "-", "entry"], [95, 0, 0, "-", "ir"], [96, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[94, 5, 1, "", "macro"], [94, 5, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[95, 5, 1, "", "grid"], [95, 5, 1, "", "parallel"], [95, 5, 1, "", "serial"], [95, 5, 1, "", "thread_binding"], [95, 5, 1, "", "unroll"], [95, 5, 1, "", "vectorized"]], "tilelang.language.tir.op": [[96, 5, 1, "", "TVMBackendAllocWorkspace"], [96, 5, 1, "", "TVMBackendFreeWorkspace"], [96, 5, 1, "", "abs"], [96, 5, 1, "", "acos"], [96, 5, 1, "", "acosh"], [96, 5, 1, "", "address_of"], [96, 5, 1, "", "all"], [96, 5, 1, "", "any"], [96, 5, 1, "", "anylist_getitem"], [96, 5, 1, "", "anylist_resetitem"], [96, 5, 1, "", "anylist_setitem_call_cpacked"], [96, 5, 1, "", "anylist_setitem_call_packed"], [96, 5, 1, "", "asin"], [96, 5, 1, "", "asinh"], [96, 5, 1, "", "assume"], [96, 5, 1, "", "atan"], [96, 5, 1, "", "atan2"], [96, 5, 1, "", "atanh"], [96, 5, 1, "", "bitwise_and"], [96, 5, 1, "", "bitwise_not"], [96, 5, 1, "", "bitwise_or"], [96, 5, 1, "", "bitwise_xor"], [96, 5, 1, "", "call_cpacked"], [96, 5, 1, "", "call_cpacked_lowered"], [96, 5, 1, "", "call_extern"], [96, 5, 1, "", "call_intrin"], [96, 5, 1, "", "call_llvm_intrin"], [96, 5, 1, "", "call_llvm_pure_intrin"], [96, 5, 1, "", "call_packed"], [96, 5, 1, "", "call_packed_lowered"], [96, 5, 1, "", "call_pure_extern"], [96, 5, 1, "", "call_tir"], [96, 5, 1, "", "ceil"], [96, 5, 1, "", "ceildiv"], [96, 5, 1, "", "clz"], [96, 5, 1, "", "comm_reducer"], [96, 5, 1, "", "copysign"], [96, 5, 1, "", "cos"], [96, 5, 1, "", "cosh"], [96, 5, 1, "", "create_barriers"], [96, 5, 1, "", "div"], [96, 5, 1, "", "end_profile_intrinsic"], [96, 5, 1, "", "erf"], [96, 5, 1, "", "exp"], [96, 5, 1, "", "exp10"], [96, 5, 1, "", "exp2"], [96, 5, 1, "", "floor"], [96, 5, 1, "", "floordiv"], [96, 5, 1, "", "floormod"], [96, 5, 1, "", "fmod"], [96, 5, 1, "", "hypot"], [96, 5, 1, "", "if_then_else"], [96, 5, 1, "", "indexdiv"], [96, 5, 1, "", "indexmod"], [96, 5, 1, "", "infinity"], [96, 5, 1, "", "isfinite"], [96, 5, 1, "", "isinf"], [96, 5, 1, "", "isnan"], [96, 5, 1, "", "isnullptr"], [96, 5, 1, "", "ldexp"], [96, 5, 1, "", "likely"], [96, 5, 1, "", "log"], [96, 5, 1, "", "log10"], [96, 5, 1, "", "log1p"], [96, 5, 1, "", "log2"], [96, 5, 1, "", "lookup_param"], [96, 5, 1, "", "max_value"], [96, 5, 1, "", "min_value"], [96, 5, 1, "", "mma_fill"], [96, 5, 1, "", "mma_store"], [96, 5, 1, "", "nearbyint"], [96, 5, 1, "", "nextafter"], [96, 5, 1, "", "popcount"], [96, 5, 1, "", "pow"], [96, 5, 1, "", "pow_of_int"], [96, 5, 1, "", "power"], [96, 5, 1, "", "ptx_arrive_barrier"], [96, 5, 1, "", "ptx_arrive_barrier_expect_tx"], [96, 5, 1, "", "ptx_commit_group"], [96, 5, 1, "", "ptx_cp_async"], [96, 5, 1, "", "ptx_cp_async_barrier"], [96, 5, 1, "", "ptx_cp_async_bulk"], [96, 5, 1, "", "ptx_init_barrier_thread_count"], [96, 5, 1, "", "ptx_ldmatrix"], [96, 5, 1, "", "ptx_mma"], [96, 5, 1, "", "ptx_mma_sp"], [96, 5, 1, "", "ptx_wait_barrier"], [96, 5, 1, "", "ptx_wait_group"], [96, 5, 1, "", "q_multiply_shift"], [96, 5, 1, "", "q_multiply_shift_per_axis"], [96, 5, 1, "", "reinterpret"], [96, 5, 1, "", "ret"], [96, 5, 1, "", "round"], [96, 5, 1, "", "rsqrt"], [96, 5, 1, "", "shift_left"], [96, 5, 1, "", "shift_right"], [96, 5, 1, "", "sigmoid"], [96, 5, 1, "", "sin"], [96, 5, 1, "", "sinh"], [96, 5, 1, "", "sqrt"], [96, 5, 1, "", "start_profile_intrinsic"], [96, 5, 1, "", "tan"], [96, 5, 1, "", "tanh"], [96, 5, 1, "", "trace"], [96, 5, 1, "", "trunc"], [96, 5, 1, "", "truncdiv"], [96, 5, 1, "", "truncmod"], [96, 5, 1, "", "tvm_access_ptr"], [96, 5, 1, "", "tvm_bmma_sync"], [96, 5, 1, "", "tvm_check_return"], [96, 5, 1, "", "tvm_fill_fragment"], [96, 5, 1, "", "tvm_load_matrix_sync"], [96, 5, 1, "", "tvm_mfma"], [96, 5, 1, "", "tvm_mfma_store"], [96, 5, 1, "", "tvm_mma_sync"], [96, 5, 1, "", "tvm_rdna_wmma"], [96, 5, 1, "", "tvm_rdna_wmma_store"], [96, 5, 1, "", "tvm_stack_alloca"], [96, 5, 1, "", "tvm_stack_make_array"], [96, 5, 1, "", "tvm_stack_make_shape"], [96, 5, 1, "", "tvm_storage_sync"], [96, 5, 1, "", "tvm_store_matrix_sync"], [96, 5, 1, "", "tvm_struct_get"], [96, 5, 1, "", "tvm_struct_set"], [96, 5, 1, "", "tvm_thread_allreduce"], [96, 5, 1, "", "tvm_thread_invariant"], [96, 5, 1, "", "tvm_throw_last_error"], [96, 5, 1, "", "tvm_tuple"], [96, 5, 1, "", "tvm_warp_activemask"], [96, 5, 1, "", "tvm_warp_shuffle"], [96, 5, 1, "", "tvm_warp_shuffle_down"], [96, 5, 1, "", "tvm_warp_shuffle_up"], [96, 5, 1, "", "type_annotation"], [96, 5, 1, "", "undef"], [96, 5, 1, "", "vectorcombine"], [96, 5, 1, "", "vectorhigh"], [96, 5, 1, "", "vectorlow"], [96, 5, 1, "", "vscale"]], "tilelang.language.warpgroup": [[97, 5, 1, "", "WarpSpecialize"], [97, 1, 1, "", "WarpSpecializeFrame"], [97, 5, 1, "", "ws"]], "tilelang.layout": [[99, 0, 0, "-", "fragment"], [100, 0, 0, "-", "layout"], [101, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[99, 1, 1, "", "Fragment"], [99, 5, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[99, 2, 1, "", "condense_rep_var"], [99, 2, 1, "", "get_thread_size"], [99, 2, 1, "", "map_forward_thread"], [99, 2, 1, "", "repeat"], [99, 2, 1, "", "replicate"], [99, 6, 1, "", "thread"]], "tilelang.layout.layout": [[100, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[100, 2, 1, "", "get_forward_vars"], [100, 2, 1, "", "get_input_shape"], [100, 2, 1, "", "get_output_shape"], [100, 6, 1, "", "index"], [100, 2, 1, "", "inverse"], [100, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[101, 5, 1, "", "make_swizzled_layout"]], "tilelang.math": [[102, 5, 1, "", "cdiv"], [102, 5, 1, "", "next_power_of_2"]], "tilelang.primitives": [[104, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[105, 0, 0, "-", "base"], [104, 5, 1, "", "gemm"], [106, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[105, 1, 1, "", "GemmBaseParams"], [105, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[105, 3, 1, "", "A"], [105, 3, 1, "", "B"], [105, 3, 1, "", "C"], [105, 3, 1, "", "block_col_warps"], [105, 3, 1, "", "block_row_warps"], [105, 3, 1, "", "chunk"], [105, 6, 1, "", "class_attributes"], [105, 2, 1, "", "get_warp_size"], [105, 2, 1, "", "infer_block_partition"], [105, 3, 1, "", "k_pack"], [105, 2, 1, "", "params_as_dict"], [105, 3, 1, "", "policy"], [105, 3, 1, "", "transpose_A"], [105, 3, 1, "", "transpose_B"], [105, 3, 1, "", "warp_col_tiles"], [105, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[105, 3, 1, "", "FullCol"], [105, 3, 1, "", "FullRow"], [105, 3, 1, "", "Square"], [105, 2, 1, "", "compute_warp_partition"], [105, 2, 1, "", "from_warp_partition"], [105, 2, 1, "", "is_full_col"], [105, 2, 1, "", "is_full_row"], [105, 2, 1, "", "is_square"], [105, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[106, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[106, 6, 1, "", "accum_dtype"], [106, 2, 1, "", "gemm_rrr"], [106, 2, 1, "", "gemm_rsr"], [106, 2, 1, "", "gemm_srr"], [106, 2, 1, "", "gemm_ssr"], [106, 6, 1, "", "in_dtype"], [106, 2, 1, "", "invoke"]], "tilelang.profiler": [[107, 1, 1, "", "Profiler"], [108, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[107, 3, 1, "id0", "adapter"], [107, 2, 1, "", "assert_allclose"], [107, 2, 1, "", "assert_consistent"], [107, 2, 1, "", "determine_profiler"], [107, 2, 1, "", "do_bench"], [107, 6, 1, "", "func"], [107, 2, 1, "", "manual_assert_close"], [107, 3, 1, "id1", "params"], [107, 3, 1, "id2", "result_idx"], [107, 2, 1, "", "run_once"], [107, 3, 1, "id3", "supply_type"], [107, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[108, 5, 1, "", "do_bench"]], "tilelang.quantize": [[110, 0, 0, "-", "lop3"], [111, 0, 0, "-", "quantization"], [112, 0, 0, "-", "utils"]], "tilelang.quantize.lop3": [[110, 5, 1, "", "get_lop3_intrin_group"]], "tilelang.quantize.utils": [[112, 5, 1, "", "gen_quant4"], [112, 5, 1, "", "general_compress"], [112, 5, 1, "", "interleave_weight"]], "tilelang.tools": [[115, 0, 0, "-", "Analyzer"], [116, 0, 0, "-", "plot_layout"]], "tilelang.tools.Analyzer": [[115, 1, 1, "", "AnalysisResult"], [115, 1, 1, "", "Analyzer"]], "tilelang.tools.Analyzer.AnalysisResult": [[115, 3, 1, "", "bandwidth_GBps"], [115, 3, 1, "id0", "estimated_time"], [115, 3, 1, "", "expected_bandwidth_GBps"], [115, 3, 1, "", "expected_tflops"], [115, 3, 1, "", "tflops"], [115, 3, 1, "", "total_flops"], [115, 3, 1, "id1", "total_global_bytes"]], "tilelang.tools.Analyzer.Analyzer": [[115, 2, 1, "", "analysis"], [115, 2, 1, "", "calculate"], [115, 2, 1, "", "ir_pass"]], "tilelang.tools.plot_layout": [[116, 5, 1, "", "plot_layout"]], "tilelang.transform": [[117, 5, 1, "", "AnnotateDeviceRegions"], [117, 5, 1, "", "ClusterPlanning"], [117, 5, 1, "", "ConfigIndexBitwidth"], [117, 5, 1, "", "EliminateStorageSyncForMBarrier"], [117, 5, 1, "", "FlattenBuffer"], [117, 5, 1, "", "FrontendLegalize"], [117, 5, 1, "", "IfStmtBinding"], [117, 5, 1, "", "InjectFenceProxy"], [117, 5, 1, "", "InjectPTXAsyncCopy"], [117, 5, 1, "", "InjectSoftwarePipeline"], [117, 5, 1, "", "InjectTmaBarrier"], [117, 5, 1, "", "LayoutInference"], [117, 5, 1, "", "LegalizeSafeMemoryAccess"], [117, 5, 1, "", "LegalizeVectorizedLoop"], [117, 5, 1, "", "LoopVectorizeDynamic"], [117, 5, 1, "", "LowerDeviceStorageAccessInfo"], [117, 5, 1, "", "LowerHopperIntrin"], [117, 5, 1, "", "LowerL2Persistent"], [117, 5, 1, "", "LowerTileOp"], [117, 5, 1, "", "MakePackedAPI"], [117, 5, 1, "", "MergeIfStmt"], [117, 5, 1, "", "MergeSharedMemoryAllocations"], [117, 5, 1, "", "MultiVersionBuffer"], [117, 5, 1, "", "PipelinePlanning"], [117, 5, 1, "", "RewriteWgmmaSync"], [117, 5, 1, "", "ThreadPartialSync"], [117, 5, 1, "", "ThreadSync"], [117, 5, 1, "", "VectorizeLoop"], [117, 5, 1, "", "WarpSpecialized"], [117, 5, 1, "", "WarpSpecializedPipeline"], [117, 5, 1, "", "get_pass_context"], [118, 0, 0, "-", "pass_config"], [119, 0, 0, "-", "simplify"]], "tilelang.transform.pass_config": [[118, 1, 1, "", "PassConfigKey"]], "tilelang.transform.pass_config.PassConfigKey": [[118, 3, 1, "", "CUDA_KERNELS_OUTPUT_DIR"], [118, 3, 1, "", "TIR_ADD_LOWER_PASS"], [118, 3, 1, "", "TIR_DISABLE_CSE"], [118, 3, 1, "", "TIR_DISABLE_STORAGE_REWRITE"], [118, 3, 1, "", "TIR_DISABLE_VECTORIZE"], [118, 3, 1, "", "TIR_ENABLE_DEBUG"], [118, 3, 1, "", "TIR_ENABLE_EQUIV_TERMS_IN_CSE"], [118, 3, 1, "", "TIR_MERGE_STATIC_SMEM"], [118, 3, 1, "", "TIR_NOALIAS"], [118, 3, 1, "", "TIR_SIMPLIFY"], [118, 3, 1, "", "TIR_USE_ASYNC_COPY"], [118, 3, 1, "", "TL_CONFIG_INDEX_BITWIDTH"], [118, 3, 1, "", "TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"], [118, 3, 1, "", "TL_DISABLE_DYNAMIC_TAIL_SPLIT"], [118, 3, 1, "", "TL_DISABLE_SAFE_MEMORY_ACCESS"], [118, 3, 1, "", "TL_DISABLE_TMA_LOWER"], [118, 3, 1, "", "TL_DISABLE_WARP_SPECIALIZED"], [118, 3, 1, "", "TL_DYNAMIC_ALIGNMENT"], [118, 3, 1, "", "TL_SIMPLIFY"]], "tilelang.transform.simplify": [[119, 5, 1, "", "Simplify"], [119, 5, 1, "", "apply_simplify"], [119, 5, 1, "", "simplify_prim_func"]], "tilelang.utils": [[121, 0, 0, "-", "deprecated"], [122, 0, 0, "-", "language"], [123, 0, 0, "-", "target"], [124, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[121, 5, 1, "", "deprecated"]], "tilelang.utils.language": [[122, 5, 1, "", "array_reduce"], [122, 5, 1, "", "get_buffer_elems"], [122, 5, 1, "", "is_fragment"], [122, 5, 1, "", "is_global"], [122, 5, 1, "", "is_local"], [122, 5, 1, "", "is_shared"], [122, 5, 1, "", "is_shared_dynamic"], [122, 5, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[123, 5, 1, "", "check_cuda_availability"], [123, 5, 1, "", "check_hip_availability"], [123, 5, 1, "", "determine_target"]], "tilelang.utils.tensor": [[124, 1, 1, "", "TensorSupplyType"], [124, 5, 1, "", "adapt_torch2tvm"], [124, 5, 1, "", "get_tensor_supply"], [124, 5, 1, "", "map_torch_type"], [124, 5, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[124, 3, 1, "", "Auto"], [124, 3, 1, "", "Integer"], [124, 3, 1, "", "Normal"], [124, 3, 1, "", "One"], [124, 3, 1, "", "Randn"], [124, 3, 1, "", "Uniform"], [124, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 136], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130], "packag": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 93, 98, 102, 103, 104, 107, 109, 113, 114, 117, 120], "subpackag": [1, 7, 9, 18, 60, 61, 77, 103], "submodul": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 93, 98, 104, 107, 109, 114, 117, 120, 134], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "content": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 93, 98, 102, 103, 104, 107, 109, 113, 114, 117, 120], "autotun": [2, 3, 130], "param": [3, 51, 76], "cach": [4, 5, 6], "kernel_cach": 5, "tuner_cach": 6, "carver": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 142], "analysi": 8, "arch": [9, 10, 11, 12, 13, 14, 15], "arch_bas": 10, "cdna": 11, "cpu": 12, "cuda": [13, 127], "driver": [14, 15], "cuda_driv": 15, "common_schedul": 16, "matmul_analysi": 17, "roller": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "bestfit": 19, "hint": 20, "node": 21, "polici": [22, 23, 24, 25], "common": [23, 28, 39, 40], "default": 24, "tensorcor": 25, "raster": 26, "shape_infer": [27, 28, 29], "tir": [29, 93, 94, 95, 96], "templat": [30, 31, 32, 33, 34, 35, 36, 37], "base": [31, 62, 105, 133, 135], "conv": 32, "elementwis": [33, 127], "flashattent": 34, "gemv": [35, 130], "general_reduc": 36, "matmul": 37, "util": [38, 59, 72, 112, 120, 121, 122, 123, 124], "transform_kind": 40, "contrib": [41, 42, 43, 44, 45, 46, 47], "cc": 42, "dlpack": [43, 68], "hipcc": 44, "nvcc": 45, "nvrtc": [46, 70, 71], "rocm": 47, "engin": [48, 49, 50, 51, 52], "callback": [49, 143], "lower": 50, "phase": 52, "env": [53, 74], "intrins": [54, 55, 56, 57, 58, 59], "mfma_layout": 55, "mfma_macro_gener": 56, "mma_layout": 57, "mma_macro_gener": 58, "jit": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "adapt": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "ctype": [63, 64], "cython": [65, 66, 67], "cython_wrapp": 67, "libgen": 69, "wrapper": 73, "kernel": [75, 85, 139, 146, 147], "languag": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 122, 135, 136, 137, 138, 139, 143], "alloc": [78, 135], "builtin": 79, "copi": [80, 139], "custom": [81, 130], "fill": [82, 139], "frame": 83, "gemm": [84, 104, 105, 106, 139], "logic": 86, "memscop": 87, "parallel": [88, 130, 139], "pipelin": [89, 126, 139, 145], "print": [90, 143], "proxi": 91, "reduc": 92, "entri": 94, "ir": 95, "op": 96, "warpgroup": 97, "layout": [98, 99, 100, 101, 126, 141], "fragment": 99, "swizzl": [101, 126], "math": 102, "primit": [103, 104, 105, 106, 138, 146], "gemm_mma": 106, "profil": [107, 108], "bench": 108, "quantiz": [109, 110, 111, 112], "lop3": 110, "test": 113, "tool": [114, 115, 116], "analyz": 115, "plot_layout": 116, "transform": [117, 118, 119], "pass_config": 118, "simplifi": 119, "deprec": 121, "target": 123, "tensor": 124, "convolut": 125, "write": [126, 146, 147], "high": [126, 146, 147], "perform": [126, 131, 142, 146, 147], "flashmla": 126, "hopper": [126, 130], "introduct": [126, 135], "mla": 126, "benchmark": [126, 130, 142], "result": 126, "implement": [126, 130, 142], "infer": 126, "threadblock": 126, "share": 126, "memori": [126, 135, 141], "warp": 126, "special": 126, "split": 126, "kv": 126, "On": 126, "amd": 126, "mi300x": 126, "acceler": 126, "architectur": 126, "consider": 126, "optim": [126, 142], "strategi": 126, "evalu": 126, "futur": 126, "opportun": 126, "oper": [127, 136], "add": 127, "how": 127, "compil": [127, 135, 142, 144], "dynam": 127, "shape": 127, "address": 127, "boundari": 127, "relat": 127, "issu": [127, 143], "comparison": [127, 131], "cute": 127, "conclus": [127, 130, 131, 143], "flash": [128, 129], "attent": [128, 129], "linear": 129, "gener": [130, 131, 132, 142, 143], "matrix": [130, 131, 132, 142, 143], "vector": 130, "multipl": [130, 131, 132, 142, 143], "triton": 130, "naiv": 130, "more": 130, "concurr": 130, "k": 130, "dimens": 130, "read": 130, "tvm_thread_allreduc": 130, "instead": 130, "atomicadd": 130, "tabl": [130, 133], "gpu": [130, 131], "tile": [131, 135, 136, 137, 138, 139, 143, 147], "librari": [131, 147], "why": 131, "anoth": 131, "dsl": 131, "exampl": [131, 142, 143], "basic": 131, "structur": 131, "kei": 131, "concept": 131, "other": 131, "differ": 131, "platform": 131, "further": 131, "resourc": 131, "dequant": 132, "tmac": 133, "look": 133, "up": 133, "mix": 133, "precis": 133, "comput": [133, 145], "instal": 134, "guid": 134, "pip": 134, "build": 134, "from": 134, "sourc": [134, 143], "method": 134, "1": [134, 142], "us": [134, 142], "your": 134, "own": 134, "tvm": 134, "2": [134, 142], "bundl": 134, "3": [134, 142], "provid": 134, "script": 134, "nightli": 134, "version": 134, "The": 135, "A": 135, "brief": 135, "program": [135, 143], "interfac": 135, "flow": 135, "model": 135, "declar": 135, "explicit": 135, "hardwar": 135, "welcom": 136, "get": 136, "start": 136, "tutori": 136, "deep": 136, "learn": 136, "refer": 136, "privaci": [136, 140], "ast": 137, "tilelibrari": 139, "t": [139, 143], "alloc_shar": 139, "alloc_frag": 139, "reduce_max": 139, "reduce_sum": 139, "clear": 139, "use_swizzl": 139, "annot": 141, "auto": 142, "tune": 142, "techniqu": 142, "overview": [142, 143], "step": 142, "reserv": 142, "paramet": 142, "candid": 142, "configur": 142, "debug": 143, "correct": 143, "post": 143, "process": 143, "runtim": 143, "just": 144, "In": 144, "time": 144, "data": 145, "movement": 145, "thread": 146}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [7, "subpackages"], [9, "subpackages"], [18, "subpackages"], [60, "subpackages"], [61, "subpackages"], [77, "subpackages"], [103, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [4, "submodules"], [7, "submodules"], [9, "submodules"], [14, "submodules"], [18, "submodules"], [22, "submodules"], [27, "submodules"], [30, "submodules"], [39, "submodules"], [41, "submodules"], [48, "submodules"], [54, "submodules"], [60, "submodules"], [61, "submodules"], [63, "submodules"], [65, "submodules"], [70, "submodules"], [77, "submodules"], [93, "submodules"], [98, "submodules"], [104, "submodules"], [107, "submodules"], [109, "submodules"], [114, "submodules"], [117, "submodules"], [120, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [4, "module-tilelang.cache"], [7, "module-tilelang.carver"], [9, "module-tilelang.carver.arch"], [14, "module-tilelang.carver.arch.driver"], [18, "module-tilelang.carver.roller"], [22, "module-tilelang.carver.roller.policy"], [27, "module-tilelang.carver.roller.shape_inference"], [30, "module-tilelang.carver.template"], [39, "module-tilelang.common"], [41, "module-tilelang.contrib"], [48, "module-tilelang.engine"], [54, "module-tilelang.intrinsics"], [60, "module-tilelang.jit"], [61, "module-tilelang.jit.adapter"], [63, "module-tilelang.jit.adapter.ctypes"], [65, "module-tilelang.jit.adapter.cython"], [70, "module-tilelang.jit.adapter.nvrtc"], [77, "module-tilelang.language"], [93, "module-tilelang.language.tir"], [98, "module-tilelang.layout"], [102, "module-tilelang.math"], [103, "module-tilelang.primitives"], [104, "module-tilelang.primitives.gemm"], [107, "module-tilelang.profiler"], [109, "module-tilelang.quantize"], [113, "module-contents"], [114, "module-tilelang.tools"], [117, "module-tilelang.transform"], [120, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.autotuner.param module": [[3, "module-tilelang.autotuner.param"]], "tilelang.cache package": [[4, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[5, "module-tilelang.cache.kernel_cache"]], "tilelang.cache.tuner_cache module": [[6, "module-tilelang.cache.tuner_cache"]], "tilelang.carver package": [[7, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[8, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[9, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[10, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[11, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[12, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[13, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver package": [[14, "tilelang-carver-arch-driver-package"]], "tilelang.carver.arch.driver.cuda_driver module": [[15, "module-tilelang.carver.arch.driver.cuda_driver"]], "tilelang.carver.common_schedules module": [[16, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[17, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[18, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[19, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[20, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[21, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[22, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[23, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[24, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[25, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[26, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[27, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[28, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[29, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[30, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[31, "module-tilelang.carver.template.base"]], "tilelang.carver.template.conv module": [[32, "module-tilelang.carver.template.conv"]], "tilelang.carver.template.elementwise module": [[33, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[34, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[35, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[36, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[37, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[38, "module-tilelang.carver.utils"]], "tilelang.common package": [[39, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[40, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[41, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[42, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[43, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[44, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[45, "module-tilelang.contrib.nvcc"]], "tilelang.contrib.nvrtc module": [[46, "tilelang-contrib-nvrtc-module"]], "tilelang.contrib.rocm module": [[47, "module-tilelang.contrib.rocm"]], "tilelang.engine package": [[48, "tilelang-engine-package"]], "tilelang.engine.callback module": [[49, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[50, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[51, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[52, "module-tilelang.engine.phase"]], "tilelang.env module": [[53, "module-tilelang.env"]], "tilelang.intrinsics package": [[54, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[55, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[56, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[57, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[58, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[59, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[60, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[61, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[62, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[63, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[64, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[65, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[66, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[67, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[68, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[69, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.nvrtc package": [[70, "tilelang-jit-adapter-nvrtc-package"]], "tilelang.jit.adapter.nvrtc.adapter module": [[71, "module-tilelang.jit.adapter.nvrtc.adapter"]], "tilelang.jit.adapter.utils module": [[72, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[73, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[74, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[75, "module-tilelang.jit.kernel"]], "tilelang.jit.param module": [[76, "module-tilelang.jit.param"]], "tilelang.language package": [[77, "tilelang-language-package"]], "tilelang.language.allocate module": [[78, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[79, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[80, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[81, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[82, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[83, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[84, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[85, "module-tilelang.language.kernel"]], "tilelang.language.logical module": [[86, "module-tilelang.language.logical"]], "tilelang.language.memscope module": [[87, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[88, "module-tilelang.language.parallel"]], "tilelang.language.pipeline module": [[89, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[90, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[91, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[92, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[93, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[94, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[95, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[96, "module-tilelang.language.tir.op"]], "tilelang.language.warpgroup module": [[97, "module-tilelang.language.warpgroup"]], "tilelang.layout package": [[98, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[99, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[100, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[101, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[102, "tilelang-math-package"]], "tilelang.primitives package": [[103, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[104, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[105, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[106, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[107, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[108, "module-tilelang.profiler.bench"]], "tilelang.quantize package": [[109, "tilelang-quantize-package"]], "tilelang.quantize.lop3 module": [[110, "module-tilelang.quantize.lop3"]], "tilelang.quantize.quantization module": [[111, "module-tilelang.quantize.quantization"]], "tilelang.quantize.utils module": [[112, "module-tilelang.quantize.utils"]], "tilelang.testing package": [[113, "tilelang-testing-package"]], "tilelang.tools package": [[114, "tilelang-tools-package"]], "tilelang.tools.Analyzer module": [[115, "module-tilelang.tools.Analyzer"]], "tilelang.tools.plot_layout module": [[116, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[117, "tilelang-transform-package"]], "tilelang.transform.pass_config module": [[118, "module-tilelang.transform.pass_config"]], "tilelang.transform.simplify module": [[119, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[120, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[121, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[122, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[123, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[124, "module-tilelang.utils.tensor"]], "Convolution": [[125, "convolution"]], "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper": [[126, "write-high-performance-flashmla-with-tilelang-on-hopper"]], "Introduction to MLA": [[126, "introduction-to-mla"]], "Benchmark Results": [[126, "benchmark-results"]], "Implementation": [[126, "implementation"]], "Layout Inference": [[126, "layout-inference"]], "Threadblock Swizzling": [[126, "threadblock-swizzling"]], "Shared Memory Swizzling": [[126, "shared-memory-swizzling"]], "Warp-Specialization": [[126, "warp-specialization"]], "Pipeline": [[126, "pipeline"]], "Split-KV": [[126, "split-kv"]], "\ud83d\ude80 On AMD MI300X Accelerators": [[126, "on-amd-mi300x-accelerators"]], "Architectural Considerations and Optimization Strategies": [[126, "architectural-considerations-and-optimization-strategies"]], "Performance Evaluation": [[126, "performance-evaluation"]], "Future Optimization Opportunities": [[126, "future-optimization-opportunities"]], "ElementWise Operators": [[127, "elementwise-operators"]], "Elementwise add in TileLang": [[127, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[127, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[127, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[127, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[127, "conclusion"], [130, "conclusion"], [131, "conclusion"], [143, "conclusion"]], "Flash Attention": [[128, "flash-attention"]], "Flash Linear Attention": [[129, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[130, "general-matrix-vector-multiplication-gemv"]], "Triton Implementation": [[130, "triton-implementation"]], "Naive Implementation in TileLang": [[130, "naive-implementation-in-tilelang"]], "More Concurrency": [[130, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[130, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[130, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[130, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[130, "autotune"]], "Benchmark Table on Hopper GPU": [[130, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[131, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[131, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[131, "matrix-multiplication-example"], [142, "matrix-multiplication-example"], [143, "matrix-multiplication-example"]], "Basic Structure": [[131, "basic-structure"]], "Key Concepts": [[131, "key-concepts"]], "Comparison with Other DSLs": [[131, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[131, "performance-on-different-platforms"]], "Further Resources": [[131, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[132, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[133, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[134, "installation-guide"]], "Installing with pip": [[134, "installing-with-pip"]], "Building from Source": [[134, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[134, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[134, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[134, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[134, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[135, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[135, "programming-interface"]], "Programming Interfaces": [[135, "programming-interfaces"]], "Compilation Flow": [[135, "compilation-flow"]], "Tile-based Programming Model": [[135, "tile-based-programming-model"]], "Tile declarations": [[135, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[135, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[136, "welcome-to-tile-language"]], "GET STARTED": [[136, null]], "TUTORIALS": [[136, null]], "DEEP LEARNING OPERATORS": [[136, null]], "LANGUAGE REFERENCE": [[136, null]], "API Reference": [[136, null]], "Privacy": [[136, null], [140, "privacy"]], "Tile Language AST": [[137, "tile-language-ast"]], "Tile Language: Primitives": [[138, "tile-language-primitives"]], "Tile Language: TileLibrary": [[139, "tile-language-tilelibrary"]], "T.Kernel": [[139, "t-kernel"]], "T.alloc_shared": [[139, "t-alloc-shared"]], "T.alloc_fragment": [[139, "t-alloc-fragment"]], "T.copy": [[139, "t-copy"]], "T.gemm": [[139, "t-gemm"]], "T.reduce_max T.reduce_sum": [[139, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[139, "t-parallel"]], "T.Pipelined": [[139, "t-pipelined"]], "T.clear T.fill": [[139, "t-clear-t-fill"]], "T.use_swizzle": [[139, "t-use-swizzle"]], "Annotate Memory Layout": [[141, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[142, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[142, "overview"], [143, "overview"]], "Step 1: Implement with Reserved Parameters": [[142, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[142, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[142, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[142, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[143, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[143, "debugging-generation-issues"]], "Debugging Correctness Issues": [[143, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[143, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[143, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[144, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[145, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[146, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[147, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.autotuner.param"], [4, "module-tilelang.cache"], [5, "module-tilelang.cache.kernel_cache"], [6, "module-tilelang.cache.tuner_cache"], [7, "module-tilelang.carver"], [8, "module-tilelang.carver.analysis"], [9, "module-tilelang.carver.arch"], [10, "module-tilelang.carver.arch.arch_base"], [11, "module-tilelang.carver.arch.cdna"], [12, "module-tilelang.carver.arch.cpu"], [13, "module-tilelang.carver.arch.cuda"], [14, "module-tilelang.carver.arch.driver"], [15, "module-tilelang.carver.arch.driver.cuda_driver"], [16, "module-tilelang.carver.common_schedules"], [17, "module-tilelang.carver.matmul_analysis"], [18, "module-tilelang.carver.roller"], [19, "module-tilelang.carver.roller.bestfit"], [20, "module-tilelang.carver.roller.hint"], [21, "module-tilelang.carver.roller.node"], [22, "module-tilelang.carver.roller.policy"], [23, "module-tilelang.carver.roller.policy.common"], [24, "module-tilelang.carver.roller.policy.default"], [25, "module-tilelang.carver.roller.policy.tensorcore"], [26, "module-tilelang.carver.roller.rasterization"], [27, "module-tilelang.carver.roller.shape_inference"], [28, "module-tilelang.carver.roller.shape_inference.common"], [29, "module-tilelang.carver.roller.shape_inference.tir"], [30, "module-tilelang.carver.template"], [31, "module-tilelang.carver.template.base"], [32, "module-tilelang.carver.template.conv"], [33, "module-tilelang.carver.template.elementwise"], [34, "module-tilelang.carver.template.flashattention"], [35, "module-tilelang.carver.template.gemv"], [36, "module-tilelang.carver.template.general_reduce"], [37, "module-tilelang.carver.template.matmul"], [38, "module-tilelang.carver.utils"], [39, "module-tilelang.common"], [40, "module-tilelang.common.transform_kind"], [41, "module-tilelang.contrib"], [42, "module-tilelang.contrib.cc"], [43, "module-tilelang.contrib.dlpack"], [44, "module-tilelang.contrib.hipcc"], [45, "module-tilelang.contrib.nvcc"], [47, "module-tilelang.contrib.rocm"], [48, "module-tilelang.engine"], [49, "module-tilelang.engine.callback"], [50, "module-tilelang.engine.lower"], [51, "module-tilelang.engine.param"], [52, "module-tilelang.engine.phase"], [53, "module-tilelang.env"], [54, "module-tilelang.intrinsics"], [55, "module-tilelang.intrinsics.mfma_layout"], [56, "module-tilelang.intrinsics.mfma_macro_generator"], [57, "module-tilelang.intrinsics.mma_layout"], [58, "module-tilelang.intrinsics.mma_macro_generator"], [59, "module-tilelang.intrinsics.utils"], [60, "module-tilelang.jit"], [61, "module-tilelang.jit.adapter"], [62, "module-tilelang.jit.adapter.base"], [63, "module-tilelang.jit.adapter.ctypes"], [64, "module-tilelang.jit.adapter.ctypes.adapter"], [65, "module-tilelang.jit.adapter.cython"], [66, "module-tilelang.jit.adapter.cython.adapter"], [67, "module-tilelang.jit.adapter.cython.cython_wrapper"], [68, "module-tilelang.jit.adapter.dlpack"], [69, "module-tilelang.jit.adapter.libgen"], [70, "module-tilelang.jit.adapter.nvrtc"], [71, "module-tilelang.jit.adapter.nvrtc.adapter"], [72, "module-tilelang.jit.adapter.utils"], [73, "module-tilelang.jit.adapter.wrapper"], [74, "module-tilelang.jit.env"], [75, "module-tilelang.jit.kernel"], [76, "module-tilelang.jit.param"], [77, "module-tilelang.language"], [78, "module-tilelang.language.allocate"], [79, "module-tilelang.language.builtin"], [80, "module-tilelang.language.copy"], [81, "module-tilelang.language.customize"], [82, "module-tilelang.language.fill"], [83, "module-tilelang.language.frame"], [84, "module-tilelang.language.gemm"], [85, "module-tilelang.language.kernel"], [86, "module-tilelang.language.logical"], [87, "module-tilelang.language.memscope"], [88, "module-tilelang.language.parallel"], [89, "module-tilelang.language.pipeline"], [90, "module-tilelang.language.print"], [91, "module-tilelang.language.proxy"], [92, "module-tilelang.language.reduce"], [93, "module-tilelang.language.tir"], [94, "module-tilelang.language.tir.entry"], [95, "module-tilelang.language.tir.ir"], [96, "module-tilelang.language.tir.op"], [97, "module-tilelang.language.warpgroup"], [98, "module-tilelang.layout"], [99, "module-tilelang.layout.fragment"], [100, "module-tilelang.layout.layout"], [101, "module-tilelang.layout.swizzle"], [102, "module-tilelang.math"], [103, "module-tilelang.primitives"], [104, "module-tilelang.primitives.gemm"], [105, "module-tilelang.primitives.gemm.base"], [106, "module-tilelang.primitives.gemm.gemm_mma"], [107, "module-tilelang.profiler"], [108, "module-tilelang.profiler.bench"], [109, "module-tilelang.quantize"], [110, "module-tilelang.quantize.lop3"], [111, "module-tilelang.quantize.quantization"], [112, "module-tilelang.quantize.utils"], [114, "module-tilelang.tools"], [115, "module-tilelang.tools.Analyzer"], [116, "module-tilelang.tools.plot_layout"], [117, "module-tilelang.transform"], [118, "module-tilelang.transform.pass_config"], [119, "module-tilelang.transform.simplify"], [120, "module-tilelang.utils"], [121, "module-tilelang.utils.deprecated"], [122, "module-tilelang.utils.language"], [123, "module-tilelang.utils.target"], [124, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "autotuner (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutoTuner"]], "timeoutexception": [[2, "tilelang.autotuner.TimeoutException"]], "autotune() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.autotune"]], "cache_dir (tilelang.autotuner.autotuner attribute)": [[2, "tilelang.autotuner.AutoTuner.cache_dir"]], "compile_args (tilelang.autotuner.autotuner attribute)": [[2, "tilelang.autotuner.AutoTuner.compile_args"]], "from_kernel() (tilelang.autotuner.autotuner class method)": [[2, "tilelang.autotuner.AutoTuner.from_kernel"]], "generate_cache_key() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.generate_cache_key"]], "get_available_cpu_count() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.get_available_cpu_count"]], "profile_args (tilelang.autotuner.autotuner attribute)": [[2, "tilelang.autotuner.AutoTuner.profile_args"]], "run() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.run"]], "run_with_timeout() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.run_with_timeout"]], "set_compile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_compile_args"]], "set_kernel_parameters() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_kernel_parameters"]], "set_profile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_profile_args"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "timeout_handler() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.timeout_handler"]], "autotuneresult (class in tilelang.autotuner.param)": [[3, "tilelang.autotuner.param.AutotuneResult"]], "compileargs (class in tilelang.autotuner.param)": [[3, "tilelang.autotuner.param.CompileArgs"]], "profileargs (class in tilelang.autotuner.param)": [[3, "tilelang.autotuner.param.ProfileArgs"]], "atol (tilelang.autotuner.param.profileargs attribute)": [[3, "id14"], [3, "tilelang.autotuner.param.ProfileArgs.atol"]], "cache_input_tensors (tilelang.autotuner.param.profileargs attribute)": [[3, "id15"], [3, "tilelang.autotuner.param.ProfileArgs.cache_input_tensors"]], "compile_program() (tilelang.autotuner.param.compileargs method)": [[3, "tilelang.autotuner.param.CompileArgs.compile_program"]], "config (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id0"], [3, "tilelang.autotuner.param.AutotuneResult.config"]], "execution_backend (tilelang.autotuner.param.compileargs attribute)": [[3, "id6"], [3, "tilelang.autotuner.param.CompileArgs.execution_backend"]], "func (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id1"], [3, "tilelang.autotuner.param.AutotuneResult.func"]], "kernel (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id2"], [3, "tilelang.autotuner.param.AutotuneResult.kernel"]], "latency (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id3"], [3, "tilelang.autotuner.param.AutotuneResult.latency"]], "libcode (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id4"], [3, "tilelang.autotuner.param.AutotuneResult.libcode"]], "load_from_disk() (tilelang.autotuner.param.autotuneresult class method)": [[3, "tilelang.autotuner.param.AutotuneResult.load_from_disk"]], "manual_check_prog (tilelang.autotuner.param.profileargs attribute)": [[3, "id16"], [3, "tilelang.autotuner.param.ProfileArgs.manual_check_prog"]], "max_mismatched_ratio (tilelang.autotuner.param.profileargs attribute)": [[3, "id17"], [3, "tilelang.autotuner.param.ProfileArgs.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.param.compileargs attribute)": [[3, "tilelang.autotuner.param.CompileArgs.out_idx"]], "out_idx (tilelang.autotuner.param.profileargs attribute)": [[3, "tilelang.autotuner.param.ProfileArgs.out_idx"]], "pass_configs (tilelang.autotuner.param.compileargs attribute)": [[3, "id7"], [3, "tilelang.autotuner.param.CompileArgs.pass_configs"]], "ref_latency (tilelang.autotuner.param.autotuneresult attribute)": [[3, "id5"], [3, "tilelang.autotuner.param.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.param.profileargs attribute)": [[3, "id12"], [3, "id18"], [3, "tilelang.autotuner.param.ProfileArgs.ref_prog"]], "rep (tilelang.autotuner.param.profileargs attribute)": [[3, "id19"], [3, "tilelang.autotuner.param.ProfileArgs.rep"]], "rtol (tilelang.autotuner.param.profileargs attribute)": [[3, "id20"], [3, "tilelang.autotuner.param.ProfileArgs.rtol"]], "save_to_disk() (tilelang.autotuner.param.autotuneresult method)": [[3, "tilelang.autotuner.param.AutotuneResult.save_to_disk"]], "skip_check (tilelang.autotuner.param.profileargs attribute)": [[3, "id21"], [3, "tilelang.autotuner.param.ProfileArgs.skip_check"]], "supply_prog (tilelang.autotuner.param.profileargs attribute)": [[3, "id13"], [3, "id22"], [3, "tilelang.autotuner.param.ProfileArgs.supply_prog"]], "supply_type (tilelang.autotuner.param.profileargs attribute)": [[3, "id11"], [3, "id23"], [3, "tilelang.autotuner.param.ProfileArgs.supply_type"]], "target (tilelang.autotuner.param.compileargs attribute)": [[3, "id8"], [3, "tilelang.autotuner.param.CompileArgs.target"]], "target_host (tilelang.autotuner.param.compileargs attribute)": [[3, "id9"], [3, "tilelang.autotuner.param.CompileArgs.target_host"]], "tilelang.autotuner.param": [[3, "module-tilelang.autotuner.param"]], "timeout (tilelang.autotuner.param.profileargs attribute)": [[3, "id24"], [3, "tilelang.autotuner.param.ProfileArgs.timeout"]], "verbose (tilelang.autotuner.param.compileargs attribute)": [[3, "id10"], [3, "tilelang.autotuner.param.CompileArgs.verbose"]], "warmup (tilelang.autotuner.param.profileargs attribute)": [[3, "id25"], [3, "tilelang.autotuner.param.ProfileArgs.warmup"]], "cached() (in module tilelang.cache)": [[4, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[4, "tilelang.cache.clear_cache"]], "get_cache_dir() (in module tilelang.cache)": [[4, "tilelang.cache.get_cache_dir"]], "set_cache_dir() (in module tilelang.cache)": [[4, "tilelang.cache.set_cache_dir"]], "tilelang.cache": [[4, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[5, "tilelang.cache.kernel_cache.KernelCache"]], "cache_dir (tilelang.cache.kernel_cache.kernelcache attribute)": [[5, "tilelang.cache.kernel_cache.KernelCache.cache_dir"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "execution_backend (tilelang.cache.kernel_cache.kernelcache attribute)": [[5, "tilelang.cache.kernel_cache.KernelCache.execution_backend"]], "get_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.set_cache_dir"]], "tilelang.cache.kernel_cache": [[5, "module-tilelang.cache.kernel_cache"]], "autotunercache (class in tilelang.cache.tuner_cache)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache"]], "cache_dir (tilelang.cache.tuner_cache.autotunercache attribute)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.cache_dir"]], "cached() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.cached"]], "clear_cache() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.clear_cache"]], "get_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.set_cache_dir"]], "tilelang.cache.tuner_cache": [[6, "module-tilelang.cache.tuner_cache"]], "tilelang.carver": [[7, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[8, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[8, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[8, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[8, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[8, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[8, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[8, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[8, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[8, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[8, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[9, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[9, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[9, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[10, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[10, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[10, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[11, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[11, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[11, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[12, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[12, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[12, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[13, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[13, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[13, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver": [[14, "module-tilelang.carver.arch.driver"]], "eccenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.ECCEnabled"]], "asyncenginecount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.asyncEngineCount"]], "canmaphostmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.canMapHostMemory"]], "clockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.clockRate"]], "computemode (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.computeMode"]], "concurrentkernels (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.concurrentKernels"]], "cudadeviceprop (class in tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp"]], "deviceoverlap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.deviceOverlap"]], "get_cuda_device_properties() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_cuda_device_properties"]], "get_device_attribute() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_device_attribute"]], "get_device_name() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_device_name"]], "get_max_dynamic_shared_size_bytes() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_max_dynamic_shared_size_bytes"]], "get_num_sms() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_num_sms"]], "get_persisting_l2_cache_max_size() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_persisting_l2_cache_max_size"]], "get_shared_memory_per_block() (in module tilelang.carver.arch.driver.cuda_driver)": [[15, "tilelang.carver.arch.driver.cuda_driver.get_shared_memory_per_block"]], "globall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.globalL1CacheSupported"]], "integrated (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.integrated"]], "ismultigpuboard (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.isMultiGpuBoard"]], "kernelexectimeoutenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.kernelExecTimeoutEnabled"]], "l2cachesize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.l2CacheSize"]], "locall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.localL1CacheSupported"]], "luid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luid"]], "luiddevicenodemask (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luidDeviceNodeMask"]], "major (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.major"]], "managedmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.managedMemory"]], "maxgridsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxGridSize"]], "maxsurface1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1D"]], "maxsurface1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1DLayered"]], "maxsurface2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2D"]], "maxsurface2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2DLayered"]], "maxsurface3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface3D"]], "maxsurfacecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemap"]], "maxsurfacecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemapLayered"]], "maxtexture1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1D"]], "maxtexture1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLayered"]], "maxtexture1dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLinear"]], "maxtexture1dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DMipmap"]], "maxtexture2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2D"]], "maxtexture2dgather (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DGather"]], "maxtexture2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLayered"]], "maxtexture2dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLinear"]], "maxtexture2dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DMipmap"]], "maxtexture3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3D"]], "maxtexture3dalt (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3DAlt"]], "maxtexturecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemap"]], "maxtexturecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemapLayered"]], "maxthreadsdim (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsDim"]], "maxthreadsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerBlock"]], "maxthreadspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerMultiProcessor"]], "mempitch (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memPitch"]], "memorybuswidth (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryBusWidth"]], "memoryclockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryClockRate"]], "minor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.minor"]], "multigpuboardgroupid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiGpuBoardGroupID"]], "multiprocessorcount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiProcessorCount"]], "name (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.name"]], "pcibusid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciBusID"]], "pcideviceid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDeviceID"]], "pcidomainid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDomainID"]], "persistingl2cachemaxsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.persistingL2CacheMaxSize"]], "regsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerBlock"]], "regspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerMultiprocessor"]], "reserved (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved"]], "reserved1 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved1"]], "reserved2 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved2"]], "sharedmemperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerBlock"]], "sharedmempermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerMultiprocessor"]], "streamprioritiessupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.streamPrioritiesSupported"]], "surfacealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.surfaceAlignment"]], "tccdriver (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.tccDriver"]], "texturealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.textureAlignment"]], "texturepitchalignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.texturePitchAlignment"]], "tilelang.carver.arch.driver.cuda_driver": [[15, "module-tilelang.carver.arch.driver.cuda_driver"]], "totalconstmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalConstMem"]], "totalglobalmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalGlobalMem"]], "unifiedaddressing (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.unifiedAddressing"]], "uuid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.uuid"]], "warpsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[15, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.warpSize"]], "get_block() (in module tilelang.carver.common_schedules)": [[16, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[16, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[16, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[16, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[16, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[17, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[17, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[17, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[17, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[17, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[17, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[17, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[17, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[17, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[18, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[19, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[19, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[19, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[19, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[19, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[19, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[19, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[20, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[20, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[20, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[20, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[20, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[20, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[20, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[20, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[20, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[20, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[20, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[20, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[20, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[20, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[20, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[20, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[20, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[20, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[20, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[20, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[20, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[20, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[20, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[20, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[21, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[21, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[21, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[21, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[21, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[21, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[21, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[21, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[21, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[21, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[21, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[21, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[21, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[21, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[21, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[22, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[23, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[23, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[23, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[23, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[23, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[24, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[24, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[25, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[25, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[26, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[26, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[26, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[26, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[26, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[26, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[26, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[26, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[26, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[26, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[26, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[26, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[27, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[28, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[28, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[28, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[28, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[28, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[29, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[29, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[29, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[29, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[29, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[29, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[29, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[29, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[29, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[29, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[30, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[31, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[31, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[31, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[31, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[31, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "c (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id0"], [32, "tilelang.carver.template.conv.ConvTemplate.C"]], "convtemplate (class in tilelang.carver.template.conv)": [[32, "tilelang.carver.template.conv.ConvTemplate"]], "d (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id1"], [32, "tilelang.carver.template.conv.ConvTemplate.D"]], "f (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id2"], [32, "tilelang.carver.template.conv.ConvTemplate.F"]], "h (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id3"], [32, "tilelang.carver.template.conv.ConvTemplate.H"]], "k (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id4"], [32, "tilelang.carver.template.conv.ConvTemplate.K"]], "n (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id5"], [32, "tilelang.carver.template.conv.ConvTemplate.N"]], "p (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id6"], [32, "tilelang.carver.template.conv.ConvTemplate.P"]], "s (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id7"], [32, "tilelang.carver.template.conv.ConvTemplate.S"]], "w (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id8"], [32, "tilelang.carver.template.conv.ConvTemplate.W"]], "accum_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id9"], [32, "tilelang.carver.template.conv.ConvTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.conv.convtemplate property)": [[32, "tilelang.carver.template.conv.ConvTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.conv.convtemplate method)": [[32, "tilelang.carver.template.conv.ConvTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id10"], [32, "tilelang.carver.template.conv.ConvTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.conv.convtemplate method)": [[32, "tilelang.carver.template.conv.ConvTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id11"], [32, "tilelang.carver.template.conv.ConvTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.conv.convtemplate method)": [[32, "tilelang.carver.template.conv.ConvTemplate.params_as_dict"]], "tilelang.carver.template.conv": [[32, "module-tilelang.carver.template.conv"]], "with_bias (tilelang.carver.template.conv.convtemplate attribute)": [[32, "id12"], [32, "tilelang.carver.template.conv.ConvTemplate.with_bias"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[33, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[33, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[33, "id0"], [33, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[33, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[33, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[33, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[33, "id1"], [33, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[33, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[34, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[34, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[35, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[35, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[35, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[36, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[36, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id0"], [37, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id1"], [37, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[37, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id2"], [37, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id3"], [37, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[37, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[37, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id4"], [37, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[37, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id5"], [37, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[37, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[37, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id6"], [37, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id7"], [37, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[37, "id8"], [37, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[38, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[38, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[38, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[38, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[38, "module-tilelang.carver.utils"]], "tilelang.common": [[39, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[40, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[40, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[41, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[42, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[43, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[43, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[43, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[44, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[44, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.get_cuda_version"]], "get_nvcc_compiler() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.get_nvcc_compiler"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[45, "module-tilelang.contrib.nvcc"]], "find_lld() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.find_lld"]], "find_rocm_path() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.find_rocm_path"]], "have_matrixcore() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.have_matrixcore"]], "parse_compute_version() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.parse_compute_version"]], "rocm_link() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.rocm_link"]], "tilelang.contrib.rocm": [[47, "module-tilelang.contrib.rocm"]], "tilelang.engine": [[48, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[49, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[50, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[51, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[51, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[51, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[51, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[51, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[51, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[51, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.OptimizeForTarget"]], "allow_fence_proxy() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_fence_proxy"]], "allow_global_thread_synchronization() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_global_thread_synchronization"]], "allow_tma_and_warp_specialized() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_tma_and_warp_specialized"]], "allow_vectorize() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_vectorize"]], "allow_warp_specialized() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_warp_specialized"]], "tilelang.engine.phase": [[52, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[53, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[53, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[53, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[53, "module-tilelang.env"]], "tilelang.intrinsics": [[54, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x16_to_local_64x4_layout_k_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_k_n"]], "shared_16x16_to_local_64x4_layout_m_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_m_n"]], "shared_16x16_to_local_64x4_layout_n_k() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_k"]], "shared_16x16_to_local_64x4_layout_n_m() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_m"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_16x64_to_local_64x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_A"]], "shared_16x64_to_local_64x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_B"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x16_to_16x64_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_A"]], "thread_id_shared_access_64x16_to_16x64_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[55, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[56, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[56, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[57, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[58, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[59, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[60, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[60, "tilelang.jit.jit"]], "tilelang.jit": [[60, "module-tilelang.jit"]], "tilelang.jit.adapter": [[61, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[62, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[63, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[64, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[65, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[66, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[67, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[68, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[68, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "pylibrarygenerator (class in tilelang.jit.adapter.libgen)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "compile_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.compile_lib"]], "culib (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.culib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "host_func (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.host_func"]], "import_from_file() (tilelang.jit.adapter.libgen.pylibrarygenerator static method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.import_from_file"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "load_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.load_lib"]], "pymodule (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.pymodule"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[69, "module-tilelang.jit.adapter.libgen"]], "update_host_func() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.update_host_func"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "tilelang.jit.adapter.nvrtc": [[70, "module-tilelang.jit.adapter.nvrtc"]], "nvrtckerneladapter (class in tilelang.jit.adapter.nvrtc.adapter)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter"]], "from_database() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter class method)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter method)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.get_kernel_source"]], "kernels (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.kernels"]], "prim_func (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter property)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.prim_func"]], "pymodule (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.pymodule"]], "tilelang.jit.adapter.nvrtc.adapter": [[71, "module-tilelang.jit.adapter.nvrtc.adapter"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_global_kernel"]], "tilelang.jit.adapter.utils": [[72, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlnvrtcsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper"]], "tlpywrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLPyWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_l2_persistent_map() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_l2_persistent_map"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_init_func"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[73, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[73, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlpywrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLPyWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[74, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[75, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[75, "id0"], [75, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[75, "id1"], [75, "tilelang.jit.kernel.JITKernel.artifact"]], "config (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.config"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[75, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[75, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_profiler"]], "get_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_tuner_result"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.kernel_source"]], "latency (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.latency"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.params"]], "prim_func (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.prim_func"]], "ref_latency (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.ref_latency"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[75, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[75, "id2"], [75, "tilelang.jit.kernel.JITKernel.torch_function"]], "update_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.update_tuner_result"]], "kernel (class in tilelang.jit.param)": [[76, "tilelang.jit.param.Kernel"]], "program (class in tilelang.jit.param)": [[76, "tilelang.jit.param.Program"]], "get_kernel_source() (tilelang.jit.param.kernel method)": [[76, "tilelang.jit.param.Kernel.get_kernel_source"]], "tilelang.jit.param": [[76, "module-tilelang.jit.param"]], "annotate_l2_hit_ratio() (in module tilelang.language)": [[77, "tilelang.language.annotate_l2_hit_ratio"]], "annotate_layout() (in module tilelang.language)": [[77, "tilelang.language.annotate_layout"]], "annotate_padding() (in module tilelang.language)": [[77, "tilelang.language.annotate_padding"]], "import_source() (in module tilelang.language)": [[77, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[77, "tilelang.language.symbolic"]], "tilelang.language": [[77, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[77, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[78, "module-tilelang.language.allocate"]], "barrier_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.barrier_arrive"]], "barrier_wait() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.barrier_wait"]], "create_list_of_mbarrier() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.create_list_of_mbarrier"]], "create_tma_descriptor() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.create_tma_descriptor"]], "dec_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.dec_max_nreg"]], "fence_proxy_async() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.fence_proxy_async"]], "get_mbarrier() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.get_mbarrier"]], "inc_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.inc_max_nreg"]], "mbarrier_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_arrive"]], "mbarrier_expect_tx() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_expect_tx"]], "mbarrier_wait_parity() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_wait_parity"]], "no_set_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.no_set_max_nreg"]], "set_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.set_max_nreg"]], "shfl_down() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_down"]], "shfl_up() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_up"]], "shfl_xor() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_xor"]], "sync_global() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_global"]], "sync_thread_partial() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_thread_partial"]], "sync_threads() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_threads"]], "tilelang.language.builtin": [[79, "module-tilelang.language.builtin"]], "tma_load() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_load"]], "tma_store_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_store_arrive"]], "tma_store_wait() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_store_wait"]], "wait_wgmma() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.wait_wgmma"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.region"]], "tilelang.language.copy": [[80, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_addx2"]], "atomic_addx4() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_addx4"]], "clamp() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[81, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[82, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[82, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[82, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[83, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[83, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[83, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[83, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[83, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[83, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[83, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[83, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[84, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[84, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[85, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[85, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_extent"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_block_extents() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_extents"]], "get_block_extents() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_extents"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_extent"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "get_thread_extents() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_extents"]], "get_thread_extents() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extents"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.push"]], "size() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.size"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[85, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.top"]], "all_of() (in module tilelang.language.logical)": [[86, "tilelang.language.logical.all_of"]], "any_of() (in module tilelang.language.logical)": [[86, "tilelang.language.logical.any_of"]], "tilelang.language.logical": [[86, "module-tilelang.language.logical"]], "tilelang.language.memscope": [[87, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[88, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[88, "module-tilelang.language.parallel"]], "pipelined() (in module tilelang.language.pipeline)": [[89, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[89, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[90, "tilelang.language.print.print"]], "tilelang.language.print": [[90, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[91, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[91, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[91, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[91, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[91, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[91, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[91, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[91, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[91, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[91, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[91, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[91, "module-tilelang.language.proxy"]], "cumsum() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.cumsum"]], "reduce() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce"]], "reduce_absmax() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce_absmax"]], "reduce_abssum() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[92, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[92, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[93, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[94, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[94, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[94, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[95, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[95, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.pow"]], "pow_of_int() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.pow_of_int"]], "power() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[96, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[96, "tilelang.language.tir.op.vscale"]], "warpspecialize() (in module tilelang.language.warpgroup)": [[97, "tilelang.language.warpgroup.WarpSpecialize"]], "warpspecializeframe (class in tilelang.language.warpgroup)": [[97, "tilelang.language.warpgroup.WarpSpecializeFrame"]], "tilelang.language.warpgroup": [[97, "module-tilelang.language.warpgroup"]], "ws() (in module tilelang.language.warpgroup)": [[97, "tilelang.language.warpgroup.ws"]], "tilelang.layout": [[98, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[99, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[99, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[99, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[99, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[99, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[99, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[99, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[99, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[99, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[100, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[100, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[100, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[100, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[100, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[100, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[100, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[100, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[101, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[101, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[102, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[102, "tilelang.math.next_power_of_2"]], "tilelang.math": [[102, "module-tilelang.math"]], "tilelang.primitives": [[103, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[104, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[104, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[105, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[105, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[105, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[106, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[106, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[107, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[107, "id0"], [107, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[107, "tilelang.profiler.Profiler.func"]], "manual_assert_close() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.manual_assert_close"]], "params (tilelang.profiler.profiler attribute)": [[107, "id1"], [107, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[107, "id2"], [107, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[107, "id3"], [107, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[107, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[107, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[108, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[108, "module-tilelang.profiler.bench"]], "tilelang.quantize": [[109, "module-tilelang.quantize"]], "get_lop3_intrin_group() (in module tilelang.quantize.lop3)": [[110, "tilelang.quantize.lop3.get_lop3_intrin_group"]], "tilelang.quantize.lop3": [[110, "module-tilelang.quantize.lop3"]], "tilelang.quantize.quantization": [[111, "module-tilelang.quantize.quantization"]], "gen_quant4() (in module tilelang.quantize.utils)": [[112, "tilelang.quantize.utils.gen_quant4"]], "general_compress() (in module tilelang.quantize.utils)": [[112, "tilelang.quantize.utils.general_compress"]], "interleave_weight() (in module tilelang.quantize.utils)": [[112, "tilelang.quantize.utils.interleave_weight"]], "tilelang.quantize.utils": [[112, "module-tilelang.quantize.utils"]], "tilelang.tools": [[114, "module-tilelang.tools"]], "analysisresult (class in tilelang.tools.analyzer)": [[115, "tilelang.tools.Analyzer.AnalysisResult"]], "analyzer (class in tilelang.tools.analyzer)": [[115, "tilelang.tools.Analyzer.Analyzer"]], "analysis() (tilelang.tools.analyzer.analyzer class method)": [[115, "tilelang.tools.Analyzer.Analyzer.analysis"]], "bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[115, "tilelang.tools.Analyzer.AnalysisResult.bandwidth_GBps"]], "calculate() (tilelang.tools.analyzer.analyzer method)": [[115, "tilelang.tools.Analyzer.Analyzer.calculate"]], "estimated_time (tilelang.tools.analyzer.analysisresult attribute)": [[115, "id0"], [115, "tilelang.tools.Analyzer.AnalysisResult.estimated_time"]], "expected_bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[115, "tilelang.tools.Analyzer.AnalysisResult.expected_bandwidth_GBps"]], "expected_tflops (tilelang.tools.analyzer.analysisresult attribute)": [[115, "tilelang.tools.Analyzer.AnalysisResult.expected_tflops"]], "ir_pass() (tilelang.tools.analyzer.analyzer method)": [[115, "tilelang.tools.Analyzer.Analyzer.ir_pass"]], "tflops (tilelang.tools.analyzer.analysisresult attribute)": [[115, "tilelang.tools.Analyzer.AnalysisResult.tflops"]], "tilelang.tools.analyzer": [[115, "module-tilelang.tools.Analyzer"]], "total_flops (tilelang.tools.analyzer.analysisresult attribute)": [[115, "tilelang.tools.Analyzer.AnalysisResult.total_flops"]], "total_global_bytes (tilelang.tools.analyzer.analysisresult attribute)": [[115, "id1"], [115, "tilelang.tools.Analyzer.AnalysisResult.total_global_bytes"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[116, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[116, "module-tilelang.tools.plot_layout"]], "annotatedeviceregions() (in module tilelang.transform)": [[117, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[117, "tilelang.transform.ClusterPlanning"]], "configindexbitwidth() (in module tilelang.transform)": [[117, "tilelang.transform.ConfigIndexBitwidth"]], "eliminatestoragesyncformbarrier() (in module tilelang.transform)": [[117, "tilelang.transform.EliminateStorageSyncForMBarrier"]], "flattenbuffer() (in module tilelang.transform)": [[117, "tilelang.transform.FlattenBuffer"]], "frontendlegalize() (in module tilelang.transform)": [[117, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[117, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[117, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[117, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[117, "tilelang.transform.InjectSoftwarePipeline"]], "injecttmabarrier() (in module tilelang.transform)": [[117, "tilelang.transform.InjectTmaBarrier"]], "layoutinference() (in module tilelang.transform)": [[117, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[117, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[117, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[117, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[117, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[117, "tilelang.transform.LowerHopperIntrin"]], "lowerl2persistent() (in module tilelang.transform)": [[117, "tilelang.transform.LowerL2Persistent"]], "lowertileop() (in module tilelang.transform)": [[117, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[117, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[117, "tilelang.transform.MergeIfStmt"]], "mergesharedmemoryallocations() (in module tilelang.transform)": [[117, "tilelang.transform.MergeSharedMemoryAllocations"]], "multiversionbuffer() (in module tilelang.transform)": [[117, "tilelang.transform.MultiVersionBuffer"]], "pipelineplanning() (in module tilelang.transform)": [[117, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[117, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[117, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[117, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[117, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[117, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[117, "tilelang.transform.WarpSpecializedPipeline"]], "get_pass_context() (in module tilelang.transform)": [[117, "tilelang.transform.get_pass_context"]], "tilelang.transform": [[117, "module-tilelang.transform"]], "cuda_kernels_output_dir (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.CUDA_KERNELS_OUTPUT_DIR"]], "passconfigkey (class in tilelang.transform.pass_config)": [[118, "tilelang.transform.pass_config.PassConfigKey"]], "tir_add_lower_pass (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_ADD_LOWER_PASS"]], "tir_disable_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_CSE"]], "tir_disable_storage_rewrite (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_STORAGE_REWRITE"]], "tir_disable_vectorize (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_VECTORIZE"]], "tir_enable_debug (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_DEBUG"]], "tir_enable_equiv_terms_in_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_EQUIV_TERMS_IN_CSE"]], "tir_merge_static_smem (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_MERGE_STATIC_SMEM"]], "tir_noalias (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_NOALIAS"]], "tir_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_SIMPLIFY"]], "tir_use_async_copy (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TIR_USE_ASYNC_COPY"]], "tl_config_index_bitwidth (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_CONFIG_INDEX_BITWIDTH"]], "tl_debug_merge_shared_memory_allocations (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"]], "tl_disable_dynamic_tail_split (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_DYNAMIC_TAIL_SPLIT"]], "tl_disable_safe_memory_access (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_SAFE_MEMORY_ACCESS"]], "tl_disable_tma_lower (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_TMA_LOWER"]], "tl_disable_warp_specialized (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_WARP_SPECIALIZED"]], "tl_dynamic_alignment (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_DYNAMIC_ALIGNMENT"]], "tl_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[118, "tilelang.transform.pass_config.PassConfigKey.TL_SIMPLIFY"]], "tilelang.transform.pass_config": [[118, "module-tilelang.transform.pass_config"]], "simplify() (in module tilelang.transform.simplify)": [[119, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[119, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[119, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[119, "module-tilelang.transform.simplify"]], "tilelang.utils": [[120, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[121, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[121, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.array_reduce"]], "get_buffer_elems() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.get_buffer_elems"]], "is_fragment() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[122, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[122, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[123, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[123, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[123, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[123, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[124, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[124, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[124, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[124, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[124, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[124, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[124, "tilelang.utils.tensor.torch_assert_close"]]}})