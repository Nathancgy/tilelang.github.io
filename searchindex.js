Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.autotuner.param", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.cache.tuner_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.arch.driver", "api/tilelang.carver.arch.driver.cuda_driver", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.contrib.nvrtc", "api/tilelang.contrib.rocm", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.nvrtc", "api/tilelang.jit.adapter.nvrtc.adapter", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.jit.param", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.logical", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.persistent", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.language.warpgroup", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.quantize", "api/tilelang.quantize.lop3", "api/tilelang.quantize.quantization", "api/tilelang.quantize.utils", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.Analyzer", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.pass_config", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/deepseek_mla", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.autotuner.param.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.cache.tuner_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.arch.driver.rst", "api/tilelang.carver.arch.driver.cuda_driver.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.contrib.nvrtc.rst", "api/tilelang.contrib.rocm.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.nvrtc.rst", "api/tilelang.jit.adapter.nvrtc.adapter.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.jit.param.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.logical.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.persistent.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.language.warpgroup.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.quantize.rst", "api/tilelang.quantize.lop3.rst", "api/tilelang.quantize.quantization.rst", "api/tilelang.quantize.utils.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.Analyzer.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.pass_config.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/deepseek_mla.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.autotuner.param module", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.cache.tuner_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.arch.driver package", "tilelang.carver.arch.driver.cuda_driver module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.contrib.nvrtc module", "tilelang.contrib.rocm module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.nvrtc package", "tilelang.jit.adapter.nvrtc.adapter module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.jit.param module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.logical module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.persistent module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.language.warpgroup module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.quantize package", "tilelang.quantize.lop3 module", "tilelang.quantize.quantization module", "tilelang.quantize.utils module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.Analyzer module", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.pass_config module", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 132, 135, 136, 137, 144], "packag": [0, 135], "subpackag": 0, "autotun": [0, 1, 143], "submodul": [0, 104], "modul": [0, 135], "content": [0, 82, 97, 144], "cach": [0, 1, 53, 66, 109, 127, 131, 132, 136, 140], "carver": [0, 1], "common": [0, 1, 18, 22, 27, 79, 119, 127, 128, 143], "contrib": [0, 1], "engin": [0, 1, 108, 144], "intrins": [0, 1, 82, 86, 97, 132, 136], "jit": [0, 1, 50, 108, 131, 132, 143], "languag": [0, 1, 104, 121, 127, 128, 131, 132, 143], "layout": [0, 1, 58, 77, 97, 118, 132, 136, 137], "math": [0, 1, 97], "primit": [0, 1, 91, 127, 131, 132, 136, 137, 144], "profil": [0, 1, 51, 62, 64, 66, 68, 75, 97, 121, 132, 144], "quantiz": [0, 1], "test": [0, 1, 97, 127, 128, 132, 135], "tool": [0, 1, 85, 88, 89, 90, 98, 131, 144], "transform": [0, 1, 58, 80, 100, 101, 127, 143, 144], "util": [0, 1, 4, 5, 6, 7, 42, 44, 45, 47, 51, 54, 60, 61, 62, 64, 66, 68, 78, 91, 108, 109, 110, 127, 128, 136], "env": [0, 1, 45, 60], "disable_cach": [0, 1, 53], "enable_cach": [0, 1, 53], "is_cache_en": [0, 1, 53], "param": [1, 2, 5, 6, 48, 60, 62, 64, 66, 68, 71, 75, 97, 108, 140], "kernel_cach": [1, 4], "kernelcach": [1, 4, 5, 6], "tuner_cach": [1, 4], "autotunercach": [1, 4, 6], "clear_cach": [1, 4, 5, 6], "get_cache_dir": [1, 4, 5, 6, 61, 65, 66], "set_cache_dir": [1, 4, 5, 6], "arch": [1, 7, 44, 45, 143], "roller": [1, 7], "templat": [1, 7, 127, 128, 143], "analysi": [1, 7, 118, 127, 144], "common_schedul": [1, 7], "matmul_analysi": [1, 7], "transform_kind": [1, 39], "transformkind": [1, 39, 40, 58], "cc": [1, 41, 144], "create_execut": [1, 41, 42], "create_shar": [1, 41, 42], "create_staticlib": [1, 41, 42], "cross_compil": [1, 41, 42], "get_cc": [1, 41, 42], "get_cplus_compil": [1, 41, 42], "get_global_symbol_section_map": [1, 41, 42], "get_target_by_dump_machin": [1, 41, 42], "dlpack": [1, 4, 5, 6, 41, 60, 61, 75], "convert_func": [1, 41, 43], "to_pytorch_func": [1, 41, 43], "hipcc": [1, 41], "compile_hip": [1, 41, 44], "nvcc": [1, 41, 144], "callback_libdevice_path": [1, 41, 45], "compile_cuda": [1, 41, 45], "find_cuda_path": [1, 41, 45], "get_cuda_vers": [1, 41, 45], "get_nvcc_compil": [1, 41, 45], "have_cudagraph": [1, 41, 45], "have_fp16": [1, 41, 45], "have_int8": [1, 41, 45], "have_tensorcor": [1, 41, 45], "parse_compute_vers": [1, 41, 45, 47], "nvrtc": [1, 4, 5, 41, 60, 61, 73, 75], "rocm": [1, 41, 124, 135], "find_lld": [1, 41, 47], "find_rocm_path": [1, 41, 47], "have_matrixcor": [1, 41, 47], "rocm_link": [1, 41, 47], "callback": [1, 48, 97], "register_cuda_postproc": [1, 48, 49], "register_cuda_postproc_callback": [1, 48, 49, 144], "register_hip_postproc": [1, 48, 49], "register_hip_postproc_callback": [1, 48, 49], "lower": [1, 48, 97, 100, 118, 119, 127, 132, 136, 144], "canon_target_host": [1, 48, 50], "device_codegen": [1, 48, 50], "device_codegen_without_compil": [1, 48, 50], "extrac_param": [1, 48, 50], "get_device_cal": [1, 48, 50], "get_host_cal": [1, 48, 50], "has_device_kernel_launch": [1, 48, 50], "host_codegen": [1, 48, 50], "is_cpu_device_backend": [1, 48, 50], "is_device_cal": [1, 48, 50, 144], "is_device_call_c_devic": [1, 48, 50], "compiledartifact": [1, 48, 50, 51, 75], "kernelparam": [1, 48, 50, 51, 62, 66, 68, 71, 75, 108], "phase": [1, 48, 131], "lowerandleg": [1, 48, 52], "optimizefortarget": [1, 48, 52], "allow_fence_proxi": [1, 48, 52], "allow_global_thread_synchron": [1, 48, 52], "allow_tma_and_warp_speci": [1, 48, 52], "allow_vector": [1, 48, 52], "allow_warp_speci": [1, 48, 52], "mfma_layout": [1, 54], "make_mfma_swizzle_layout": [1, 54, 55], "shared_16x16_to_ldmatrix_64x4_layout": [1, 54, 55], "shared_16x16_to_local_64x4_layout_a": [1, 54, 55], "shared_16x16_to_local_64x4_layout_b": [1, 54, 55], "shared_16x16_to_local_64x4_layout_c": [1, 54, 55], "shared_16x16_to_local_64x4_layout_k_n": [1, 54, 55], "shared_16x16_to_local_64x4_layout_m_n": [1, 54, 55], "shared_16x16_to_local_64x4_layout_n_k": [1, 54, 55], "shared_16x16_to_local_64x4_layout_n_m": [1, 54, 55], "shared_16x32_to_local_64x8_layout_a": [1, 54, 55], "shared_16x32_to_local_64x8_layout_b": [1, 54, 55], "shared_16x4_to_local_64x1_layout_a": [1, 54, 55], "shared_16x64_to_local_64x16_layout_a": [1, 54, 55], "shared_16x64_to_local_64x16_layout_b": [1, 54, 55], "shared_4x16_to_local_64x1_layout_b": [1, 54, 55], "thread_id_shared_access_64x16_to_16x64_layout_a": [1, 54, 55], "thread_id_shared_access_64x16_to_16x64_layout_b": [1, 54, 55], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 54, 55], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 54, 55], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 54, 55], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 54, 55], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 54, 55], "mfma_macro_gener": [1, 54], "mma_layout": [1, 54], "get_swizzle_layout": [1, 54, 57], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 54, 57], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 54, 57], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 54, 57], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 54, 57], "ldmatrix_32x8_to_shared_16x16_layout": [1, 54, 57], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 54, 57], "make_mma_swizzle_layout": [1, 54, 57, 132], "mma_32x8_to_shared_16x16_layout": [1, 54, 57], "mma_store_32x8_to_shared_16x16_layout": [1, 54, 57], "shared_16x16_to_mma_32x8_layout": [1, 54, 57, 59], "shared_16x16_to_mma_32x8_layout_r": [1, 54, 57], "shared_16x16_to_mma_32x8_layout_sr": [1, 54, 57], "shared_16x16_to_mma_32x8_layout_tran": [1, 54, 57], "shared_16x16_to_mma_32x8_smoothlayout": [1, 54, 57], "shared_16x32_to_mma_32x16_layout": [1, 54, 57, 59], "shared_16x32_to_mma_32x16_smoothlayout": [1, 54, 57], "shared_32x16_to_mma_32x16_layout": [1, 54, 57, 59], "shared_32x16_to_mma_32x16_smoothlayout": [1, 54, 57], "mma_macro_gener": [1, 54], "int4tensorcoreintrinemitt": [1, 54, 58], "int4tensorcoreintrinemitterwithladdertransform": [1, 54, 58], "tensorcoreintrinemitt": [1, 54, 58, 107], "tensorcoreintrinemitterwithladdertransform": [1, 54, 58], "get_ldmatrix_offset": [1, 54, 59], "get_mma_micro_s": [1, 54, 59], "index_to_coordin": [1, 54, 59], "mfma_store_index_map": [1, 54, 59], "mma_store_index_map": [1, 54, 59], "adapt": [1, 60, 75, 108, 131], "kernel": [1, 4, 5, 6, 50, 51, 53, 60, 64, 66, 70, 71, 76, 77, 79, 80, 92, 98, 108, 119, 127, 128, 131, 132, 136, 137, 143, 144], "jitkernel": [1, 4, 5, 6, 60, 75], "program": [1, 50, 60, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 127, 128, 131, 132, 137, 143], "compil": [1, 4, 5, 6, 42, 44, 45, 47, 50, 51, 60, 64, 66, 75, 76, 119, 124, 127, 131, 132, 137, 140, 144], "tir": [1, 18, 27, 58, 60, 64, 66, 71, 75, 77, 79, 80, 83, 84, 86, 89, 91, 92, 93, 106, 107, 119, 144], "alloc": [1, 77, 79, 97, 119, 127, 128, 132, 140], "alloc_frag": [1, 77, 78, 127, 128, 132, 136, 137], "alloc_loc": [1, 77, 78, 131], "alloc_shar": [1, 77, 78, 127, 131, 132, 136, 137], "alloc_var": [1, 77, 78], "builtin": [1, 77], "barrier_arr": [1, 77, 79], "barrier_wait": [1, 77, 79], "create_list_of_mbarri": [1, 77, 79], "create_tma_descriptor": [1, 77, 79], "dec_max_nreg": [1, 77, 79], "fence_proxy_async": [1, 77, 79, 131], "get_mbarri": [1, 77, 79], "inc_max_nreg": [1, 77, 79], "mbarrier_arr": [1, 77, 79, 131], "mbarrier_expect_tx": [1, 77, 79], "mbarrier_wait_par": [1, 77, 79], "no_set_max_nreg": [1, 77, 79], "set_max_nreg": [1, 77, 79], "shfl_down": [1, 77, 79], "shfl_up": [1, 77, 79], "shfl_xor": [1, 77, 79], "sync_glob": [1, 77, 79], "sync_grid": [1, 77, 79], "sync_thread_parti": [1, 77, 79], "sync_thread": [1, 77, 79], "tma_load": [1, 77, 79], "tma_store_arr": [1, 77, 79], "tma_store_wait": [1, 77, 79], "wait_wgmma": [1, 77, 79], "copi": [1, 77, 79, 93, 97, 118, 119, 127, 128, 132, 135, 136, 137, 144], "buffer_load_to_tile_region": [1, 77, 80], "buffer_region_to_tile_region": [1, 77, 80], "buffer_to_tile_region": [1, 77, 80], "c2d_im2col": [1, 77, 80], "region": [1, 77, 80, 82, 86, 127, 140], "custom": [1, 77, 85, 98, 125, 127], "atomic_add": [1, 77, 81, 131], "atomic_addx2": [1, 77, 81], "atomic_addx4": [1, 77, 81], "clamp": [1, 77, 81], "dp4a": [1, 77, 81], "reshap": [1, 77, 81], "view": [1, 77, 81, 131], "fill": [1, 77, 97, 136, 137], "clear": [1, 4, 5, 6, 77, 82, 84, 93, 109, 131, 132, 136, 137], "frame": [1, 77, 85, 88, 90, 96, 98], "framestack": [1, 77, 83, 85], "letfram": [1, 77, 83], "get_let_valu": [1, 77, 83], "has_let_valu": [1, 77, 83], "gemm": [1, 77, 79, 104, 127, 131, 132, 136, 137, 143, 144], "kernellaunchfram": [1, 77, 85], "get_block_bind": [1, 77, 85], "get_block_ext": [1, 77, 85], "get_thread_bind": [1, 77, 85, 131], "get_thread_ext": [1, 77, 85], "logic": [1, 77, 127, 128, 132, 136, 144], "all_of": [1, 77, 86], "any_of": [1, 77, 86], "memscop": [1, 77], "parallel": [1, 77, 79, 94, 96, 97, 118, 127, 128, 132, 136, 137, 143, 144], "persist": [1, 4, 5, 6, 77], "pipelin": [1, 77, 79, 132, 136, 137], "print": [1, 77, 83, 132, 135], "proxi": [1, 77, 79, 86], "basetensorproxi": [1, 77, 92], "bufferproxi": [1, 77, 92], "fragmentbufferproxi": [1, 77, 92], "localbufferproxi": [1, 77, 92], "sharedbufferproxi": [1, 77, 92], "tensorproxi": [1, 77, 86, 92], "make_tensor": [1, 77, 92, 128], "ptr": [1, 77, 92, 97], "reduc": [1, 77, 97, 100, 123, 127, 128, 131, 136, 140], "cumsum": [1, 77, 93], "reduce_absmax": [1, 77, 93], "reduce_abssum": [1, 77, 93], "reduce_max": [1, 77, 93, 137], "reduce_min": [1, 77, 93], "reduce_sum": [1, 77, 93, 137], "warpgroup": [1, 77, 127], "warpspeci": [1, 77, 98, 118], "warpspecializefram": [1, 77, 98], "w": [1, 77, 80, 97, 98, 128], "annotate_l2_hit_ratio": [1, 77], "annotate_layout": [1, 77, 127, 132], "annotate_pad": [1, 77], "import_sourc": [1, 77], "symbol": [1, 42, 77, 95, 97, 128], "use_swizzl": [1, 77, 127, 132, 137], "fragment": [1, 58, 78, 92, 97, 99, 107, 118, 123, 132, 136, 140, 144], "make_swizzled_layout": [1, 99, 100, 102, 127], "swizzl": [1, 99, 132], "bench": [1, 108], "do_bench": [1, 108, 109, 132], "result_idx": [1, 62, 64, 66, 68, 71, 108], "supply_typ": [1, 108, 125, 131, 143], "assert_allclos": [1, 108], "assert_consist": [1, 108], "determine_profil": [1, 108], "func": [1, 4, 5, 6, 49, 50, 60, 61, 62, 75, 95, 108, 120, 132, 144], "manual_assert_clos": [1, 108], "run_onc": [1, 60, 75, 108], "with_default_adapt": [1, 108], "lop3": [1, 110], "analyz": [1, 115, 128, 144], "plot_layout": [1, 115], "pass_config": [1, 4, 5, 6, 60, 61, 63, 64, 65, 66, 71, 73, 75, 118], "passconfigkei": [1, 118, 119], "simplifi": [1, 118, 119, 131, 132, 135, 143, 144], "apply_simplifi": [1, 118, 120], "simplify_prim_func": [1, 118, 120], "aligndynamicsharedmemoryalloc": [1, 118], "annotatedeviceregion": [1, 118], "clusterplan": [1, 118], "configindexbitwidth": [1, 118], "eliminatestoragesyncformbarri": [1, 118], "flattenbuff": [1, 118], "frontendleg": [1, 118], "ifstmtbind": [1, 118], "injectfenceproxi": [1, 118], "injectptxasynccopi": [1, 118], "injectsoftwarepipelin": [1, 118], "injecttmabarri": [1, 118], "layoutinfer": [1, 118], "legalizesafememoryaccess": [1, 118], "legalizevectorizedloop": [1, 118], "loopvectorizedynam": [1, 118], "lowerdevicestorageaccessinfo": [1, 118], "lowerhopperintrin": [1, 118], "lowerl2persist": [1, 118], "lowertileop": [1, 118, 144], "makepackedapi": [1, 118], "mergeifstmt": [1, 118], "mergesharedmemoryalloc": [1, 118], "multiversionbuff": [1, 118], "persistthreadblock": [1, 118], "pipelineplan": [1, 118], "rewritewgmmasync": [1, 118], "threadpartialsync": [1, 118], "threadsync": [1, 118], "vectorizeloop": [1, 118], "warpspecializedpipelin": [1, 118], "get_pass_context": [1, 118], "deprec": [1, 121], "array_reduc": [1, 121, 123], "get_buffer_elem": [1, 121, 123], "is_frag": [1, 121, 123], "is_glob": [1, 121, 123], "is_loc": [1, 121, 123], "is_shar": [1, 121, 123], "is_shared_dynam": [1, 121, 123], "retrieve_func_from_modul": [1, 121, 123], "target": [1, 4, 5, 6, 42, 43, 44, 45, 49, 50, 52, 60, 61, 63, 64, 65, 66, 69, 71, 72, 73, 75, 97, 109, 118, 121, 128, 131, 132, 136, 143, 144], "check_cuda_avail": [1, 121, 124], "check_hip_avail": [1, 121, 124], "determine_target": [1, 121, 124], "tensor": [1, 43, 51, 60, 64, 66, 75, 77, 79, 88, 92, 97, 107, 108, 109, 119, 121, 127, 128, 132, 144], "tensorsupplytyp": [1, 75, 108, 121, 125, 131, 143], "adapt_torch2tvm": [1, 121, 125], "get_tensor_suppli": [1, 121, 125], "map_torch_typ": [1, 121, 125], "torch_assert_clos": [1, 121, 125], "cache_dir": [4, 5, 6], "execution_backend": [4, 5, 6, 60, 75, 128], "The": [4, 5, 6, 42, 44, 45, 47, 49, 50, 51, 58, 60, 62, 64, 66, 68, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 106, 107, 108, 109, 118, 120, 121, 122, 123, 124, 125, 127, 128, 132, 135, 137, 140, 143, 144], "class": [4, 5, 6, 40, 51, 58, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 83, 85, 92, 98, 100, 101, 106, 107, 108, 119, 125, 136], "databas": [4, 5, 6, 75], "init": [4, 73, 97], "file": [4, 5, 6, 42, 44, 45, 47, 74, 75, 135, 136, 144], "option": [4, 5, 6, 42, 44, 45, 47, 49, 50, 51, 52, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 105, 106, 107, 108, 109, 125, 127, 132, 135], "primfunc": [4, 5, 6, 50, 60, 64, 66, 71, 72, 75, 95, 97, 120, 123], "none": [4, 5, 6, 42, 44, 45, 47, 49, 50, 51, 52, 57, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 77, 79, 80, 81, 83, 85, 88, 90, 92, 93, 95, 96, 97, 100, 105, 106, 107, 108, 109, 119, 131, 135, 143], "out_idx": [4, 5, 6, 60, 75, 76, 128, 131, 132, 143], "list": [4, 5, 6, 42, 44, 45, 47, 50, 51, 60, 62, 64, 66, 68, 71, 75, 79, 80, 81, 85, 89, 90, 95, 97, 98, 100, 101, 106, 108, 109, 123, 131, 143], "int": [4, 5, 6, 45, 47, 51, 58, 60, 62, 64, 66, 68, 71, 72, 75, 77, 79, 80, 84, 85, 88, 89, 90, 93, 97, 98, 100, 101, 105, 106, 107, 108, 109, 118, 123, 127, 128, 131], "arg": [4, 5, 6, 73, 79, 80, 95, 97, 125, 140], "union": [4, 5, 6, 42, 49, 50, 51, 57, 58, 60, 64, 66, 71, 72, 75, 79, 80, 81, 82, 84, 85, 86, 95, 97, 109, 120, 124], "str": [4, 5, 6, 42, 44, 45, 47, 49, 50, 51, 57, 58, 60, 62, 64, 66, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 85, 91, 92, 93, 96, 97, 107, 108, 118, 119, 122, 124, 125, 127, 131], "auto": [4, 5, 6, 50, 60, 72, 75, 108, 121, 124, 125, 128, 131, 132, 137, 144], "target_host": [4, 5, 6, 50, 60, 72, 75], "liter": [4, 5, 6, 58, 59, 60, 72, 75, 97, 109, 124], "ctype": [4, 5, 6, 60, 61, 66, 75], "cython": [4, 5, 6, 60, 61, 75, 128], "verbos": [4, 5, 6, 44, 45, 60, 64, 66, 71, 75, 125], "bool": [4, 5, 6, 47, 49, 50, 51, 52, 53, 57, 58, 59, 60, 64, 66, 71, 72, 73, 75, 83, 84, 85, 92, 93, 95, 97, 100, 105, 106, 107, 109, 118, 123, 124, 125], "fals": [4, 5, 6, 44, 45, 47, 49, 50, 51, 57, 58, 59, 60, 64, 66, 67, 71, 75, 83, 84, 85, 92, 93, 95, 97, 100, 105, 106, 107, 119, 123, 124, 125, 131, 143], "dict": [4, 5, 6, 42, 60, 64, 66, 71, 73, 75, 77, 96], "reus": [4, 5, 6], "us": [4, 5, 6, 42, 45, 47, 49, 51, 58, 60, 64, 66, 74, 75, 79, 83, 88, 90, 92, 95, 97, 100, 107, 108, 109, 122, 127, 128, 131, 132, 136, 140, 144], "entir": [4, 5, 6, 80, 132, 136, 144], "path": [4, 5, 6, 42, 45, 47, 64, 66, 75, 124, 135], "get": [4, 5, 6, 42, 45, 66, 74, 75, 83, 97, 100, 101, 118, 123, 131, 135, 144], "directori": [4, 5, 6, 42, 60, 66, 119, 135], "rubric": 4, "exampl": [4, 42, 77, 79, 95, 97, 98, 106, 127, 128, 131, 136, 140], "posixpath": [4, 5, 6], "user": [4, 124, 127, 131, 132, 135, 136, 141, 143, 144], "usernam": 4, "set": [4, 5, 6, 42, 60, 78, 79, 82, 93, 97, 100, 101, 106, 127, 128, 132, 135, 143], "home": [5, 6], "t": [5, 6, 45, 58, 77, 78, 79, 84, 95, 97, 98, 127, 128, 131, 132, 135, 136, 137, 143], "leiwang": [5, 6], "base": [5, 6, 7, 30, 40, 51, 58, 60, 61, 64, 66, 67, 68, 69, 71, 73, 75, 76, 83, 85, 92, 97, 98, 100, 101, 104, 105, 107, 108, 119, 125, 127, 128, 132, 135, 137, 144], "object": [5, 6, 42, 47, 51, 58, 60, 67, 69, 73, 75, 76, 78, 83, 85, 86, 91, 92, 97, 100, 101, 106, 107, 108, 124, 127, 136, 143], "avoid": [5, 6], "redund": [5, 6], "cu": [5, 6], "sourc": [5, 6, 42, 43, 60, 64, 66, 72, 73, 75, 76, 77, 80, 97, 127, 136, 137], "code": [5, 6, 44, 45, 49, 51, 64, 66, 73, 75, 85, 97, 119, 127, 128, 131, 132, 135, 136, 143, 144], "wrapped_kernel": [5, 6], "wrap": [5, 6, 43, 60, 61, 64, 66, 73, 75, 78, 99, 100, 101, 102, 118], "kernel_lib": [5, 6], "so": [5, 6, 127, 128, 135], "librari": [5, 6, 42, 64, 66, 74, 75, 127, 136, 137, 144], "pkl": [5, 6], "paramet": [5, 6, 42, 43, 44, 45, 47, 49, 51, 58, 60, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 106, 107, 108, 109, 118, 122, 123, 124, 127, 128, 131], "function": [5, 6, 42, 43, 45, 47, 49, 58, 60, 64, 66, 71, 75, 76, 78, 83, 84, 91, 92, 95, 97, 107, 108, 109, 123, 125, 128, 132, 140, 144], "prepar": [5, 6, 132], "indic": [5, 6, 50, 58, 64, 66, 85, 97, 98, 100, 101, 108, 119, 122, 127, 132, 144], "specifi": [5, 6, 45, 47, 79, 80, 81, 82, 93, 95, 97, 106, 108, 124, 125, 127, 128, 131, 132, 135], "which": [5, 6, 58, 79, 93, 97, 100, 107, 108, 127, 128, 131, 132, 135, 136, 143, 144], "output": [5, 6, 42, 44, 45, 47, 60, 80, 84, 93, 97, 101, 108, 119, 127, 131, 132, 135, 144], "return": [5, 6, 42, 43, 44, 45, 47, 49, 51, 53, 58, 60, 64, 66, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 106, 107, 108, 109, 118, 120, 123, 124, 128, 131, 132, 140, 143, 144], "platform": [5, 6, 127], "host": [5, 6, 50, 51, 60, 72, 75, 135], "argument": [5, 6, 60, 75, 79, 80, 95, 97, 100, 132], "pass": [5, 6, 42, 45, 60, 75, 109, 118, 119, 120, 132, 136, 144], "either": [5, 6, 45, 47, 60, 79, 82, 86, 91, 127, 140], "freshli": [5, 6], "from": [5, 6, 42, 43, 45, 51, 64, 66, 71, 74, 75, 80, 83, 85, 92, 95, 97, 107, 123, 127, 128, 131, 132, 136, 137, 140, 144], "type": [5, 6, 42, 43, 44, 45, 47, 51, 58, 60, 66, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 106, 107, 108, 109, 118, 119, 120, 123, 124, 127], "includ": [5, 6, 60, 91, 127, 128, 132, 135, 136, 144], "both": [5, 6, 51, 91, 107, 127, 128, 132], "memori": [5, 6, 78, 79, 80, 92, 97, 107, 118, 119, 123, 128, 131, 132, 137, 140, 144], "disk": [5, 6], "driver": [7, 9], "arch_bas": [7, 9], "cdna": [7, 9], "cpu": [7, 9, 85, 132, 137, 143, 144], "cuda": [7, 9, 45, 49, 60, 64, 66, 77, 79, 97, 118, 119, 124, 127, 131, 132, 135, 136, 143, 144], "polici": [7, 18, 77, 84, 105, 106, 107, 127, 140], "shape_infer": [7, 18], "bestfit": [7, 18], "hint": [7, 18, 128, 132, 143], "node": [7, 18, 97, 101], "raster": [7, 18, 132], "conv": [7, 30], "elementwis": [7, 30, 137, 143], "flashattent": [7, 30, 127, 137], "gemv": [7, 30, 137], "general_reduc": [7, 30], "matmul": [7, 30, 132, 136, 143, 144], "cuda_driv": [9, 14], "default": [18, 22, 42, 45, 49, 50, 60, 75, 78, 80, 81, 84, 92, 93, 97, 119, 125, 132], "tensorcor": [18, 22, 45], "interwarptransform": [39, 40], "intrawarptransform": [39, 40], "ldmatrixtransform": [39, 40], "nontransform": [39, 40], "is_inter_warp_transform": [39, 40], "is_intra_warp_transform": [39, 40], "is_ld_matrix_transform": [39, 40], "is_non_transform": [39, 40], "valu": [40, 51, 77, 79, 81, 82, 83, 85, 90, 91, 92, 93, 95, 96, 97, 98, 106, 119, 125, 127, 128, 144], "intenum": [40, 106], "an": [40, 42, 51, 60, 75, 81, 82, 83, 85, 91, 95, 97, 100, 123, 125, 127, 128, 131, 132, 136, 137, 144], "enumer": [40, 106, 125], "1": [40, 45, 58, 59, 64, 66, 67, 79, 84, 85, 93, 97, 98, 100, 105, 106, 107, 108, 125, 127, 128, 131, 132, 136, 144], "2": [40, 58, 59, 64, 66, 85, 97, 106, 125, 127, 128, 131, 132, 136, 140, 144], "3": [40, 59, 64, 66, 85, 125, 127, 131, 132, 140], "0": [40, 45, 47, 58, 73, 77, 79, 84, 85, 90, 91, 92, 93, 97, 98, 106, 107, 108, 109, 125, 128, 131, 132, 135, 140, 143, 144], "invok": [42, 44, 45, 75, 105, 107, 132], "c": [42, 64, 66, 73, 77, 81, 84, 85, 97, 105, 106, 107, 128, 131, 132, 135, 136, 140, 143, 144], "system": [42, 44, 45, 47, 124, 135, 136], "cwd": 42, "ccache_env": 42, "creat": [42, 51, 58, 75, 79, 80, 88, 92, 93, 97, 107, 132, 135], "execut": [42, 51, 60, 79, 84, 91, 97, 108, 127, 128, 136, 144], "binari": [42, 97], "addit": [42, 44, 45, 60, 75, 81, 97, 100, 119, 128, 136, 143], "string": [42, 45, 47, 60, 97, 119, 124, 144], "command": [42, 135], "urrent": 42, "work": [42, 127, 128, 136], "environ": [42, 135], "variabl": [42, 51, 78, 79, 82, 83, 91, 92, 96, 97, 100, 101, 135, 140, 144], "ccach": 42, "disabl": [42, 53, 79, 119], "share": [42, 47, 75, 78, 92, 97, 107, 118, 119, 123, 132, 136, 140], "current": [42, 53, 66, 77, 79, 83, 85, 97, 101, 118, 127, 135, 140], "input": [42, 47, 49, 60, 67, 75, 79, 80, 81, 84, 91, 93, 97, 101, 107, 108, 127, 132, 136], "ar": [42, 58, 83, 86, 95, 97, 106, 108, 125, 127, 128, 131, 132, 135, 136, 144], "static": [42, 69, 83, 106, 119], "each": [42, 78, 127, 128, 131, 132, 136, 140], "can": [42, 49, 60, 74, 75, 84, 85, 88, 91, 97, 127, 128, 131, 132, 135, 136, 140, 143, 144], "tarbal": 42, "compile_func": 42, "output_format": 42, "get_target_tripl": 42, "add_fil": 42, "cross": [42, 60], "special": [42, 78, 119, 131, 136, 140, 144], "thi": [42, 47, 58, 60, 64, 66, 74, 75, 78, 83, 84, 88, 91, 92, 93, 97, 100, 109, 118, 127, 128, 131, 132, 135, 136, 140, 144], "construct": [42, 85, 88, 89, 90, 92, 98, 136], "autotvm": 42, "measur": [42, 75, 109, 132], "export_librari": [42, 60, 75], "callabl": [42, 49, 50, 60, 62, 64, 66, 75, 95, 108, 109, 120], "perform": [42, 79, 80, 81, 82, 84, 86, 93, 97, 107, 109, 128, 131, 136, 137, 140, 144], "actual": [42, 128], "format": [42, 44, 45, 97], "tripl": 42, "accord": [42, 97], "dumpmachin": 42, "part": [42, 127, 132], "fcompil": 42, "A": [42, 49, 58, 59, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 95, 97, 98, 100, 101, 105, 106, 107, 108, 122, 127, 128, 131, 132, 137, 140, 143, 144], "tvm": [42, 43, 45, 47, 51, 60, 64, 66, 72, 75, 78, 79, 80, 82, 86, 92, 95, 97, 106, 107, 108, 118, 120, 123, 132, 137, 144], "import": [42, 85, 95, 128, 132, 135, 143, 144], "ndk": 42, "export": [42, 75, 135], "arm": 42, "gcc": [42, 135], "mod": [42, 52, 62, 68, 144], "build_runtime_modul": 42, "path_dso": 42, "linux": [42, 135], "gnueabihf": 42, "specialized_ndk": 42, "sysroot": 42, "fpic": 42, "lm": 42, "out": [42, 58, 66, 93, 97, 131, 132, 140], "wa": [42, 66, 100, 127, 128, 144], "found": [42, 66, 83, 131], "nm": 42, "global": [42, 53, 83, 92, 95, 97, 118, 123, 132, 136, 140], "via": [42, 97, 104, 131, 135, 136], "g": [42, 45, 47, 60, 78, 106, 108, 123, 127, 128, 131, 132, 135, 136, 137, 140, 143, 144], "symbol_section_map": 42, "map": [42, 58, 83, 100, 101, 127, 128, 132, 136, 140, 143], "defin": [42, 79, 80, 101, 108, 128, 132, 136, 143, 144], "section": [42, 97, 128, 136], "functor": 42, "bridg": 43, "framework": [43, 127, 135, 143], "support": [43, 45, 47, 51, 79, 84, 100, 127, 128, 132, 136, 140], "tvm_func": 43, "tensor_typ": 43, "to_dlpack_func": 43, "convert": [43, 51, 62, 64, 66, 68, 80, 108, 109, 121, 140], "one": [43, 89, 123, 127, 128, 140, 144], "accept": [43, 97], "anoth": [43, 97, 127], "provid": [43, 45, 47, 60, 78, 83, 85, 91, 92, 97, 100, 101, 106, 107, 127, 128, 132, 136, 143, 144], "other": [43, 127, 128, 131, 136, 140, 143, 144], "built": [43, 47, 132, 135, 143, 144], "oper": [43, 51, 64, 66, 78, 79, 80, 81, 82, 83, 84, 86, 91, 92, 93, 97, 100, 119, 123, 127, 131, 132, 135, 136, 140, 143, 144], "arrai": [43, 97, 123], "pytorch": [43, 51, 64, 66, 75, 109, 127, 132, 135], "wrapped_func": 43, "target_format": [44, 45], "hsaco": 44, "path_target": [44, 45], "hip": [44, 49, 73, 124, 132, 136], "amd": [44, 97, 132, 136], "gpu": [44, 45, 47, 85, 92, 127, 135, 136, 137, 143, 144], "architectur": [44, 45, 132, 136], "bytearrai": [44, 45], "ptx": [45, 97, 132], "cubin": 45, "find": [45, 47, 135], "root": [45, 47, 97, 144], "cuda_path": 45, "version": [45, 47, 66, 97, 128, 131, 137, 144], "If": [45, 51, 58, 60, 79, 80, 82, 83, 84, 91, 93, 97, 100, 106, 107, 123, 124, 125, 131, 135, 140], "i": [45, 47, 50, 51, 55, 57, 58, 59, 60, 74, 77, 79, 83, 85, 86, 90, 91, 93, 95, 97, 98, 100, 106, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 140, 141, 143, 144], "float": [45, 69, 75, 97, 108, 109, 125, 128, 131, 132, 143, 144], "graph": 45, "compute_vers": [45, 47], "fp16": [45, 58, 132, 140], "comput": [45, 47, 79, 84, 92, 93, 97, 100, 101, 106, 109, 127, 128, 131, 132, 136, 137, 144], "capabl": [45, 47, 127, 132], "e": [45, 47, 60, 78, 97, 106, 108, 123, 127, 128, 131, 132, 135, 136, 137, 140, 143, 144], "6": [45, 47, 125, 132], "int8": [45, 58, 59], "7": [45, 47, 125, 132, 135], "determin": [45, 106, 108, 124, 127, 136], "isn": 45, "pars": [45, 47, 95], "divid": [45, 47, 97, 127], "major": [45, 47, 97, 127], "minor": [45, 47], "number": [45, 47, 79, 84, 85, 90, 93, 97, 100, 106, 108, 109, 123, 125, 127, 128, 131, 136, 140], "backend": [47, 60, 61, 73, 97, 108, 132, 135, 136, 143], "requir": [47, 106, 119, 127, 128, 131, 132, 135, 144], "true": [47, 49, 51, 58, 77, 83, 86, 93, 95, 97, 100, 106, 109, 118, 119, 123, 124, 125, 127, 131, 132, 143], "ld": 47, "lld": 47, "whether": [47, 49, 50, 60, 64, 66, 79, 84, 85, 92, 93, 95, 97, 109, 124], "runtim": [47, 51, 75, 97, 109, 132, 135, 136], "error": [47, 97, 144], "rais": [47, 51, 58, 79, 80, 82, 83, 84, 91, 106, 107, 123, 124, 127], "valid_list": 47, "possibl": 47, "first": [47, 81, 84, 91, 93, 97, 100, 125, 127, 128, 131, 136, 144], "search": [47, 131, 143], "match": [47, 84, 95, 132], "llvm": [47, 60, 97, 135, 136, 144], "matrixcor": 47, "otherwis": [47, 51, 58, 83, 106, 123, 124], "in_fil": 47, "out_fil": 47, "link": [47, 135], "relocat": 47, "elf": 47, "name": [47, 77, 95, 97, 122, 131, 144], "linker": 47, "we": [47, 50, 79, 85, 97, 98, 127, 128, 131, 132, 135, 136, 140, 144], "try": [47, 66, 97, 118], "guess": 47, "clang": 47, "device_mod": [48, 50, 51, 61, 64, 66, 71, 73, 144], "host_mod": [48, 50, 51, 61, 64, 66, 71, 73], "kernel_sourc": [48, 51, 60, 75, 144], "rt_mod": [48, 51], "dtype": [48, 51, 57, 59, 64, 66, 77, 78, 81, 92, 93, 97, 107, 125, 127, 128, 131, 132, 140, 143, 144], "from_buff": [48, 51], "from_var": [48, 51], "is_boolean": [48, 51], "is_float8": [48, 51], "is_scalar": [48, 51], "is_unsign": [48, 51], "shape": [48, 51, 59, 64, 66, 78, 81, 92, 93, 97, 100, 101, 106, 118, 119, 127, 136, 140], "overrid": [49, 83, 109], "regist": [49, 79, 97, 127, 128, 132, 136, 140, 144], "post": 49, "process": [49, 127, 128, 131, 135, 136], "gener": [49, 59, 84, 85, 91, 97, 107, 108, 119, 127, 128, 135, 136, 137], "take": [49, 78, 97, 132, 135, 144], "exist": [49, 85, 93, 100, 135, 143, 144], "decor": [49, 60, 76, 95, 122], "without": [49, 60, 83, 85, 92, 95, 132, 136, 137], "parenthes": 49, "def": [49, 77, 95, 128, 131, 132, 143, 144], "boolean": [49, 51, 77, 97], "flag": [49, 107, 135], "tl": [50, 60, 73, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 98, 119, 131, 143], "irmodul": [50, 51, 52, 64, 66, 71, 72, 73, 97, 120, 123, 136], "is_device_c": 50, "attr": [50, 131], "check": [50, 51, 83, 86, 97, 106, 108, 123, 124, 128, 144], "attribut": [50, 77, 95], "devic": [50, 51, 66, 72, 97, 118, 132, 136, 141], "launch": [50, 85, 98, 128, 140], "func_or_mod": [50, 64, 66, 71, 72], "runtime_onli": 50, "enable_host_codegen": 50, "enable_device_compil": 50, "enabl": [50, 53, 60, 77, 90, 119, 127, 128, 132, 135, 136], "codegen": [50, 144], "have": [50, 95, 97, 106, 107, 127, 128, 131, 135, 136], "our": [50, 127, 131, 136], "own": [50, 127, 136], "implement": [50, 59, 79, 83, 92, 93, 108, 128, 136, 140, 144], "torch": [51, 62, 64, 66, 68, 108, 109, 121, 125, 127, 131, 132, 144], "repres": [51, 58, 85, 92, 98, 100, 101, 106, 107, 127, 136, 140], "artifact": [51, 60, 75], "contain": [51, 75, 82, 83, 123, 135, 136, 143], "store": [51, 58, 79, 93, 97, 127, 131, 140], "all": [51, 72, 77, 79, 85, 86, 92, 94, 95, 97, 106, 118, 127, 128, 131, 135, 140, 141], "necessari": [51, 107, 131, 135, 136, 137], "compon": 51, "var": [51, 64, 66, 78, 79, 82, 83, 84, 85, 92, 97], "inform": [51, 74, 118, 119], "describ": [51, 58], "scalar": [51, 97, 144], "interop": 51, "classmethod": [51, 64, 66, 71, 75, 83, 85, 106], "buffer": [51, 58, 77, 78, 80, 81, 82, 84, 86, 90, 91, 92, 93, 97, 100, 102, 105, 106, 107, 118, 123, 127, 131, 132, 136, 140, 143, 144], "instanc": [51, 60, 75, 127, 128, 144], "valueerror": [51, 82, 91, 106, 123, 124, 144], "dimens": [51, 80, 84, 85, 93, 97, 100, 106, 107, 127, 128, 132, 140, 144], "intimm": [51, 97], "empti": [51, 83, 85, 119], "float8": 51, "ha": [51, 83, 95, 127, 131, 132, 140, 143], "unsign": 51, "integ": [51, 85, 97, 98, 121, 123, 125, 131, 143], "pass_ctx": 52, "passcontext": [52, 60], "state": [53, 137], "mma": [54, 58, 97, 107, 127, 132], "m_dim": [54, 58], "n_dim": [54, 58], "warp_siz": [54, 58, 97], "dtype_abbrv": [54, 58], "extract_thread_bind": [54, 58], "get_store_index_map": [54, 58], "is_m_first": [54, 58], "ldmatrix_a": [54, 58], "ldmatrix_b": [54, 58], "make_mma_load_layout": [54, 58], "make_mma_store_layout": [54, 58], "stmatrix": [54, 58], "shared_buf": [55, 57], "vecsiz": 55, "8": [55, 58, 89, 128, 131, 135, 144], "ind": 55, "j": [55, 57, 59, 77, 128, 132, 135], "thread_id": [55, 57, 58, 59], "local_id": [55, 57, 59], "row_idx": [57, 59], "col_idx": [57, 59], "row_siz": 57, "datatyp": [57, 131], "swizzle_byt": 57, "is_smooth": 57, "a_dtyp": [58, 97], "float16": [58, 59, 127, 131, 132, 143, 144], "b_dtype": [58, 97], "accum_dtyp": [58, 105, 107, 131, 132, 143, 144], "a_transpos": 58, "b_transpos": 58, "block_row_warp": [58, 105, 106, 107], "block_col_warp": [58, 105, 106, 107], "warp_row_til": [58, 105, 106, 107], "warp_col_til": [58, 105, 106, 107], "chunk": [58, 105, 106, 107, 136], "16": [58, 118, 119, 131, 135, 144], "reduce_k": 58, "num_elems_per_byt": [58, 59], "a_local_buf": 58, "b_local_buf": 58, "c_local_buf": 58, "transform_kind_a": 58, "transform_kind_b": 58, "To": [58, 128, 131, 135], "elimin": [58, 119, 127], "python": [58, 64, 66, 97, 127, 132, 135, 136, 137, 144], "syntax": [58, 79, 136, 137], "within": [58, 79, 128, 131, 136, 140, 144], "macro": [58, 77, 91, 94, 95, 107], "32": [58, 97, 119, 128, 131, 132, 140, 143, 144], "bfloat16": [58, 128], "bf16": 58, "e4m3_float8": 58, "e4m3": 58, "e5m2_float8": 58, "e5m2": 58, "float32": [58, 78, 92], "fp32": 58, "int32": [58, 77, 78], "primexpr": [58, 72, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 96, 97, 100, 101, 107], "tupl": [58, 64, 66, 72, 78, 85, 92, 97, 98, 106], "thread": [58, 77, 78, 79, 85, 91, 93, 96, 97, 99, 100, 106, 127, 128, 131, 132, 136, 137, 140, 144], "bind": [58, 83, 85, 95, 96, 98], "form": [58, 127], "tx": [58, 91, 97, 98], "warp_n": 58, "warp_m": 58, "split": [58, 97, 119], "n": [58, 73, 77, 97, 106, 128, 131, 132, 143, 144], "m": [58, 77, 97, 106, 127, 128, 131, 132, 143, 144], "invers": [58, 99, 101], "indexmap": 58, "a_shared_buf": 58, "ki": 58, "rk": 58, "b_shared_buf": 58, "local_buf": 58, "matrix": [58, 59, 79, 84, 97, 107, 123, 127, 136, 137], "b": [58, 59, 77, 81, 84, 95, 97, 105, 106, 107, 127, 128, 131, 132, 136, 140, 143], "result": [58, 75, 84, 85, 93, 97, 98, 107, 109, 118, 120, 128, 131, 132, 143, 144], "conjunct": 58, "inverse_mma_store_layout": 58, "local": [58, 78, 92, 97, 123, 132, 136], "how": [58, 109, 127, 131, 132, 136, 144], "laid": 58, "assertionerror": [58, 84, 106, 107, 123, 124, 125], "detect": [58, 108, 124, 140], "k_inner": 58, "c_buf": 58, "pid_m": 58, "pid_n": 58, "With": [58, 127, 131, 132, 136], "ladder": 58, "plugin": 58, "stride": [59, 80, 97], "transpos": [59, 84], "index": [59, 60, 89, 97, 98, 99, 100, 101, 118, 136, 144], "vjj": 59, "micro_size_k": 59, "coordin": 59, "vii": 59, "micro_size_i": 59, "vj": 59, "block_k": [59, 131, 132, 136, 143, 144], "vi": 59, "block_n": [59, 77, 127, 128, 131, 132, 136, 143, 144], "4": [59, 81, 106, 125, 127, 131, 132, 135, 143, 144], "basekerneladapt": [60, 61, 62, 64, 66, 68, 71, 75, 108], "torchdlpackkerneladapt": [60, 61, 68], "libgen": [60, 61], "librarygener": [60, 61, 69], "pylibrarygener": [60, 61, 69], "get_annotated_mod": [60, 61, 72], "is_cpu_target": [60, 61, 72], "is_cuda_target": [60, 61, 72], "is_hip_target": [60, 61, 72], "match_declare_kernel": [60, 61, 72], "match_declare_kernel_cpu": [60, 61, 72], "match_global_kernel": [60, 61, 72], "pythonic_expr": [60, 61, 72], "wrapper": [60, 61, 75, 85], "basewrapp": [60, 61, 73], "tlcpusourcewrapp": [60, 61, 73], "tlcudasourcewrapp": [60, 61, 73], "tlhipsourcewrapp": [60, 61, 73], "tlnvrtcsourcewrapp": [60, 61, 73], "tlpywrapp": [60, 61, 73], "tlwrapper": [60, 61, 73], "torch_funct": [60, 75], "config": [60, 75, 118, 131, 135, 143], "from_databas": [60, 63, 64, 65, 66, 70, 71, 75], "from_tilelang_funct": [60, 75], "get_host_sourc": [60, 75], "get_kernel_sourc": [60, 61, 62, 63, 64, 65, 66, 70, 71, 75, 76, 128, 132, 144], "get_profil": [60, 75, 132], "get_tuner_result": [60, 75], "host_sourc": [60, 75], "latenc": [60, 75, 127, 131, 132, 136], "prim_func": [60, 61, 63, 64, 65, 66, 70, 71, 73, 75, 77, 94, 95, 128, 131, 132, 143, 144], "ref_lat": [60, 75], "update_tuner_result": [60, 75], "tune": [60, 75, 131, 132, 136, 137, 144], "infrastructur": [60, 137], "It": [60, 78, 83, 91, 92, 97, 127, 131, 132, 140, 143], "runnabl": 60, "ani": [60, 64, 66, 71, 73, 75, 76, 77, 79, 83, 86, 91, 94, 96, 97, 106, 127, 135], "given": [60, 85, 92, 100, 101, 106, 108, 143], "build": [60, 97, 127, 137], "keyword": [60, 75], "avail": [60, 78, 106, 124, 132, 135], "disable_vector": [60, 119], "disable_tma_low": [60, 119], "disable_warp_speci": [60, 119], "config_index_bitwidth": [60, 119], "disable_dynamic_tail_split": [60, 119], "dynamic_vectorize_size_bit": 60, "128": [60, 77, 79, 95, 98, 127, 128, 131, 132, 143, 144], "disable_safe_memory_leg": [60, 119], "_p": 60, "_rprog": 60, "debug_root_path": 60, "just": [60, 127, 128, 132, 137], "In": [60, 127, 128, 131, 132, 136, 137, 144], "time": [60, 93, 95, 100, 108, 109, 131, 132, 135, 137], "appli": [60, 119, 120, 128], "func_or_out_idx": 60, "configur": [60, 75, 79, 92, 119, 127, 128, 131, 132, 135], "directli": [60, 75, 79, 91, 93, 124, 128, 135, 136, 143, 144], "implicitli": 60, "log": [60, 77, 94, 97], "dure": [60, 93, 97, 127, 128, 131, 136, 144], "": [60, 78, 95, 97, 101, 127, 128, 131, 132, 136, 140, 144], "context": [60, 77, 118, 132, 136], "save": 60, "debug": [60, 91, 119, 137], "around": [60, 85, 127, 131], "ctypeskerneladapt": [61, 63, 64], "cythonkerneladapt": [61, 65, 66], "get_cached_lib": [61, 65, 66], "get_cython_compil": [61, 65, 66], "cython_wrapp": [61, 65], "cythonkernelwrapp": [61, 65, 67], "nvrtckerneladapt": [61, 70, 71], "compile_lib": [61, 69], "get_lib_path": [61, 69], "get_source_path": [61, 69], "lib_cod": [61, 63, 64, 65, 66, 69], "libpath": [61, 63, 64, 65, 66, 69], "load_lib": [61, 69], "remove_lib": [61, 69], "set_lib_path": [61, 69], "set_src_path": [61, 69], "srcpath": [61, 63, 64, 65, 66, 69], "update_lib_cod": [61, 69, 73], "culib": [61, 69], "host_func": [61, 69], "import_from_fil": [61, 69], "pymodul": [61, 69, 70, 71], "update_host_func": [61, 69], "call_prefix": [61, 73], "init_func": [61, 73], "create_call_func": [61, 73], "get_cpu_init_func": [61, 73], "get_dynamic_symbolic_set": [61, 73], "parse_source_inform": [61, 73], "create_dispatch_func": [61, 73], "generate_l2_persistent_map": [61, 73], "generate_tma_descriptor_arg": [61, 73], "get_init_func": [61, 73], "get_stream_typ": [61, 73], "is_tma_descriptor_arg": [61, 73], "assign_device_modul": [61, 73], "assign_host_modul": [61, 73], "assign_optimized_modul": [61, 73], "assign_pass_config": [61, 73], "lib": [61, 63, 64, 65, 66, 73], "abc": [62, 73], "dynamic_symbolic_map": [63, 64, 65, 66, 67], "ir_modul": [63, 64, 65, 66, 123], "is_dynam": [63, 64, 65, 66], "kernel_global_sourc": [63, 64, 65, 66, 71, 75], "param_dtyp": [63, 64], "param_shap": [63, 64], "wrapped_sourc": [63, 64, 65, 66], "tensortyp": [64, 66], "handl": [64, 66, 79, 80, 81, 84, 85, 91, 92, 93, 97, 98, 109, 127, 128, 131, 132], "manag": [64, 66, 83, 85, 98, 127, 132, 136], "dynam": [64, 66, 92, 118, 119, 123, 140], "usag": [64, 66, 79, 128, 132, 136], "kernel_lib_path": [64, 66, 71, 75], "kernel_onli": [64, 66], "properti": [64, 66, 71, 73, 75, 85, 100, 101, 106, 107, 108], "cdll": [64, 66], "primari": [64, 66, 71], "ir": [64, 66, 71, 72, 77, 92, 94, 107, 136, 144], "buffer_device_map": [65, 66, 67], "buffer_dtype_map": [65, 66, 67], "ptr_map": [65, 66, 67], "static_shape_map": [65, 66, 67], "forward": [65, 67, 101, 127], "set_buffer_device_map": [65, 67], "set_buffer_dtype_map": [65, 67], "set_dynamic_symbolic_map": [65, 67], "set_ptr_map": [65, 67], "set_static_shape_map": [65, 67], "source_cod": 66, "load": [66, 79, 80, 97, 107, 128, 131, 132, 136, 140], "stream": [67, 127], "skip_tensor_valid": 67, "timeout": 69, "lib_path": 69, "module_nam": 69, "file_path": 69, "model_typ": 72, "annot": [72, 77, 96, 97, 127, 132, 137], "__global__": [72, 128, 131], "int32_t": 72, "expr": [72, 92, 97], "abstract": [73, 132, 136], "kwarg": [73, 75], "scheduled_ir_modul": 73, "ifdef": 73, "__cplusplu": 73, "nextern": 73, "endif": 73, "nint32_t": 73, "call": [73, 79, 80, 82, 84, 86, 93, 97, 128, 132, 136, 144], "function_inform": 73, "function_nam": 73, "desc_name_map": 73, "arg_nam": 73, "c_sourc": 73, "standalon": 74, "variou": [74, 84, 128, 132, 136], "info": [74, 97], "modifi": [74, 81, 144], "flashinf": [74, 127], "compat": [75, 135], "kernel_fil": 75, "altern": [75, 127, 135], "constructor": 75, "torchfunct": 75, "tilelang_func": 75, "tensor_supply_typ": 75, "benchmark": [75, 108, 109, 132], "suppli": [75, 108], "dictionari": [75, 77], "refer": [75, 77, 108, 128, 132, 136, 144], "comparison": [75, 108, 125, 127], "updat": [75, 83, 135, 140], "compar": [75, 108, 125, 127, 128, 131, 132], "against": [75, 97, 108, 132], "placehold": [76, 97], "data": [76, 78, 79, 80, 83, 92, 97, 100, 107, 127, 128, 131, 132, 136, 137, 140, 141, 144], "origin": [76, 127, 128, 136], "entri": [77, 85, 94, 98, 107], "grid": [77, 79, 94, 96, 127, 128, 132, 140], "serial": [77, 94, 96, 127, 131], "thread_bind": [77, 94, 96], "unrol": [77, 94, 96, 128], "vector": [77, 94, 96, 97, 118, 119, 128, 137, 140, 144], "op": [77, 94], "tvmbackendallocworkspac": [77, 94, 97], "tvmbackendfreeworkspac": [77, 94, 97], "ab": [77, 94, 97], "aco": [77, 94, 97], "acosh": [77, 94, 97], "address_of": [77, 94, 97], "anylist_getitem": [77, 94, 97], "anylist_resetitem": [77, 94, 97], "anylist_setitem_call_cpack": [77, 94, 97], "anylist_setitem_call_pack": [77, 94, 97], "asin": [77, 94, 97], "asinh": [77, 94, 97], "assum": [77, 94, 97, 107, 131], "atan": [77, 94, 97], "atan2": [77, 94, 97], "atanh": [77, 94, 97], "bitwise_and": [77, 94, 97], "bitwise_not": [77, 94, 97], "bitwise_or": [77, 94, 97], "bitwise_xor": [77, 94, 97], "call_cpack": [77, 94, 97], "call_cpacked_low": [77, 94, 97], "call_extern": [77, 94, 97], "call_intrin": [77, 94, 97], "call_llvm_intrin": [77, 94, 97], "call_llvm_pure_intrin": [77, 94, 97], "call_pack": [77, 94, 97], "call_packed_low": [77, 94, 97], "call_pure_extern": [77, 94, 97], "call_tir": [77, 94, 97], "ceil": [77, 94, 97], "ceildiv": [77, 94, 97, 128, 131, 132], "clz": [77, 94, 97], "comm_reduc": [77, 94, 97, 131], "copysign": [77, 94, 97], "co": [77, 94, 97], "cosh": [77, 94, 97], "create_barri": [77, 94, 97], "div": [77, 94, 97], "end_profile_intrins": [77, 94, 97], "erf": [77, 94, 97], "exp": [77, 94, 97, 127], "exp10": [77, 94, 97], "exp2": [77, 94, 97], "floor": [77, 94, 97], "floordiv": [77, 94, 97], "floormod": [77, 94, 97], "fmod": [77, 94, 97], "hypot": [77, 94, 97], "if_then_els": [77, 94, 97], "indexdiv": [77, 94, 97], "indexmod": [77, 94, 97], "infin": [77, 94, 97], "isfinit": [77, 94, 97], "isinf": [77, 94, 97], "isnan": [77, 94, 97], "isnullptr": [77, 94, 97], "ldexp": [77, 94, 97], "like": [77, 83, 85, 94, 95, 97, 127, 128, 131, 132, 136, 144], "log10": [77, 94, 97], "log1p": [77, 94, 97], "log2": [77, 94, 97], "lookup_param": [77, 94, 97], "max_valu": [77, 94, 97], "min_valu": [77, 94, 97], "mma_fil": [77, 94, 97], "mma_stor": [77, 94, 97], "nearbyint": [77, 94, 97], "nextaft": [77, 94, 97], "popcount": [77, 94, 97], "pow": [77, 94, 97], "pow_of_int": [77, 94, 97], "power": [77, 94, 97, 127, 131], "ptx_arrive_barri": [77, 94, 97], "ptx_arrive_barrier_expect_tx": [77, 94, 97], "ptx_commit_group": [77, 94, 97], "ptx_cp_async": [77, 94, 97], "ptx_cp_async_barri": [77, 94, 97], "ptx_cp_async_bulk": [77, 94, 97], "ptx_init_barrier_thread_count": [77, 94, 97], "ptx_ldmatrix": [77, 94, 97], "ptx_mma": [77, 94, 97], "ptx_mma_sp": [77, 94, 97], "ptx_wait_barri": [77, 94, 97], "ptx_wait_group": [77, 94, 97], "q_multiply_shift": [77, 94, 97], "q_multiply_shift_per_axi": [77, 94, 97], "reinterpret": [77, 94, 97, 131], "ret": [77, 94, 97], "round": [77, 94, 97], "rsqrt": [77, 94, 97], "shift_left": [77, 94, 97], "shift_right": [77, 94, 97], "sigmoid": [77, 94, 97], "sin": [77, 94, 97], "sinh": [77, 94, 97], "sqrt": [77, 94, 97], "start_profile_intrins": [77, 94, 97], "tan": [77, 94, 97], "tanh": [77, 94, 97], "trace": [77, 94, 97], "trunc": [77, 94, 97], "truncdiv": [77, 94, 97], "truncmod": [77, 94, 97], "tvm_access_ptr": [77, 94, 97], "tvm_bmma_sync": [77, 94, 97], "tvm_check_return": [77, 94, 97], "tvm_fill_frag": [77, 94, 97], "tvm_load_matrix_sync": [77, 94, 97], "tvm_mfma": [77, 94, 97], "tvm_mfma_stor": [77, 94, 97], "tvm_mma_sync": [77, 94, 97], "tvm_rdna_wmma": [77, 94, 97], "tvm_rdna_wmma_stor": [77, 94, 97], "tvm_stack_alloca": [77, 94, 97], "tvm_stack_make_arrai": [77, 94, 97], "tvm_stack_make_shap": [77, 94, 97], "tvm_storage_sync": [77, 94, 97], "tvm_store_matrix_sync": [77, 94, 97], "tvm_struct_get": [77, 94, 97], "tvm_struct_set": [77, 94, 97], "tvm_thread_allreduc": [77, 94, 97], "tvm_thread_invari": [77, 94, 97], "tvm_throw_last_error": [77, 94, 97], "tvm_tupl": [77, 94, 97], "tvm_warp_activemask": [77, 94, 97], "tvm_warp_shuffl": [77, 94, 97], "tvm_warp_shuffle_down": [77, 94, 97], "tvm_warp_shuffle_up": [77, 94, 97], "type_annot": [77, 94, 97], "undef": [77, 94, 97], "vectorcombin": [77, 94, 97], "vectorhigh": [77, 94, 97], "vectorlow": [77, 94, 97], "vscale": [77, 94, 97], "get_valu": [77, 83], "has_valu": [77, 83], "pop": [77, 83, 85], "push": [77, 83, 85], "top": [77, 83, 85, 137, 140, 143], "size": [77, 80, 85, 89, 97, 100, 127, 128, 132, 140], "block": [77, 79, 85, 106, 107, 128, 131, 132, 136, 143], "get_num_thread": [77, 85], "num_thread": [77, 85, 140], "default_align": [77, 92], "default_offset_factor": [77, 92], "default_scop": [77, 92], "from_ptr": [77, 92], "interfac": [77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 98, 108, 137], "l2_hit_ratio_map": 77, "l2": [77, 109, 127, 140], "hit": [77, 127], "ratio": [77, 108, 125, 127], "detail": [77, 79, 127, 128, 132, 136], "explan": 77, "pleas": [77, 128, 131, 132, 135], "http": [77, 79, 97, 128, 135], "doc": [77, 79, 97], "nvidia": [77, 79, 97, 127, 132, 135, 136, 144], "com": [77, 79, 97, 128, 135], "guid": [77, 128, 137], "access": [77, 79, 80, 97, 118, 119, 127, 128, 135, 136], "5": [77, 97, 125, 132, 143], "layout_map": 77, "block_attr": 77, "main": [77, 92, 128, 131, 132, 143, 144], "initi": [77, 93, 97, 128, 132, 136], "block_m": [77, 127, 128, 132, 136, 143, 144], "bx": [77, 128, 132, 136], "a_shar": [77, 79, 131, 132], "padding_map": 77, "pad": [77, 80, 140], "pad_valu": 77, "10": [77, 97, 108, 132, 135, 143], "panel_s": [77, 127, 132], "order": [77, 90, 127], "row": [77, 97, 106, 127], "tile": [78, 80, 89, 104, 127, 128, 131, 135, 143], "ai": [78, 127, 135], "differ": [78, 92, 97, 108, 127, 128, 136, 143], "conveni": [78, 85, 127], "scope": [78, 83, 85, 92, 97, 98, 118, 123, 128, 140], "inter": 78, "commun": [78, 97, 144], "privat": [78, 95], "storag": [78, 92, 97, 118, 119, 136, 140], "singl": [78, 79, 84, 107, 123, 127, 128, 131, 132, 140], "element": [78, 81, 86, 88, 97, 108, 123, 125, 127, 128, 131, 140], "appropri": [78, 124, 132], "dyn": [78, 92], "barrier_id": [79, 97], "arriv": [79, 97], "barrier": [79, 97, 127], "pariti": [79, 127], "wait": [79, 84, 97], "complet": [79, 97, 127, 143, 144], "sugar": 79, "onli": [79, 91, 97, 127, 128, 131, 140], "multipl": [79, 84, 93, 97, 108, 109, 123, 127, 136, 137, 140], "typeerror": [79, 80], "variad": 79, "tma": [79, 119, 127], "descriptor": [79, 80], "reg_count": 79, "decrement": 79, "maximum": [79, 81, 90, 96, 97, 108, 125, 136], "fenc": 79, "asynchron": [79, 118, 119, 132], "retriev": [79, 83, 101, 123, 128], "request": [79, 97, 127], "increment": 79, "mbarrier": [79, 97, 127], "expect": [79, 97, 144], "transact": [79, 97], "count": [79, 84, 97, 109], "condit": [79, 97, 128, 144], "ko": [79, 132], "rang": [79, 81, 100, 127, 132], "num_stag": [79, 90, 132, 140, 143], "produc": [79, 90, 97, 127, 128, 131, 140, 144], "consum": [79, 90, 127, 131, 140], "finish": [79, 118, 131, 144], "previou": [79, 127, 128], "iter": [79, 88, 90, 96, 100, 101, 108, 109, 127, 131], "a_glob": 79, "signal": 79, "readi": [79, 136], "b_share": [79, 131, 132], "c_local": [79, 132], "limit": [79, 136, 144], "is_inc": 79, "document": [79, 128, 131, 132, 144], "miscellan": 79, "instruct": [79, 97, 107, 127, 132, 135], "setmaxnreg": 79, "offset": [79, 92, 97, 128], "shuffl": [79, 97], "down": [79, 132], "up": [79, 83, 97, 132, 137], "xor": [79, 97, 127], "synchron": [79, 97, 127, 131, 136, 144], "warp": [79, 84, 93, 97, 98, 106, 119, 136], "wgmma": [79, 127], "group": [79, 84, 89, 90, 97, 98, 127, 128], "multipli": [79, 107, 132], "accumul": [79, 81, 84, 93, 97, 107, 131, 132, 136], "bufferload": [80, 97, 140], "access_typ": 80, "extent": [80, 85, 88, 96, 97, 100], "r": [80, 97], "read": [80, 97, 118, 136], "write": [80, 97, 118, 128, 131, 132, 136, 137, 140, 144], "rw": 80, "express": [80, 88, 91, 92, 97, 100, 101, 107, 132], "area": 80, "buffer_region": 80, "bufferregion": [80, 82, 86, 140], "cover": [80, 128, 144], "img": 80, "col": [80, 97, 127], "nhw_step": 80, "c_step": 80, "dilat": 80, "im2col": 80, "2d": 80, "convolut": [80, 127, 137], "imag": 80, "column": [80, 97, 106, 127], "step": [80, 93, 107, 131, 135], "batch": [80, 127], "spatial": 80, "channel": 80, "rate": [80, 127], "src": [80, 81, 93, 140, 144], "dst": [80, 81, 93, 140], "coalesced_width": [80, 88], "between": [80, 81, 90, 97, 109, 118, 127, 128, 136, 140], "destin": [80, 81, 97], "width": [80, 81, 88, 97, 127], "coalesc": [80, 88, 128, 136], "cannot": [80, 97, 127], "deduc": [80, 127], "atom": 81, "where": [81, 84, 97, 100, 127, 128, 132, 144], "ad": [81, 144], "doubl": [81, 140], "operand": [81, 97], "min_val": 81, "max_val": 81, "minimum": [81, 90, 96, 97, 127], "dot": [81, 131], "product": [81, 131, 137, 143], "second": [81, 84, 97, 125], "new": [81, 92, 97, 100, 101, 122, 128, 135], "zero": [82, 97, 108, 121, 125, 140], "invalid": [82, 106, 124], "messag": [83, 91, 144], "when": [83, 93, 97, 127, 128, 131, 132, 136, 140, 144], "enter": 83, "stack": [83, 85, 97], "structur": [83, 97], "dequ": [83, 85], "maintain": 83, "method": [83, 85, 95, 106, 122, 127, 128], "lookup": 83, "associ": [83, 101, 128], "look": [83, 131, 137], "remov": [83, 85, 127], "item": [83, 85, 97], "indexerror": 83, "onto": [83, 85], "applic": 83, "tirfram": [83, 85, 98], "let": [83, 127, 128, 132, 136], "track": [83, 97], "extend": [83, 128, 136], "activ": [83, 97, 128], "topmost": [83, 85], "bound": [83, 97], "transpose_a": [84, 105, 106, 107, 140], "transpose_b": [84, 105, 106, 107, 127, 140], "gemmwarppolici": [84, 104, 105, 106, 107], "squar": [84, 97, 105, 106, 107], "clear_accum": 84, "k_pack": [84, 105, 106, 107], "wg_wait": 84, "mode": [84, 97, 109, 132, 135], "befor": [84, 85, 93, 128, 135, 144], "k": [84, 97, 127, 132, 143, 144], "pack": [84, 97], "matric": [84, 97, 127, 136], "don": [84, 127], "simpl": [85, 131, 144], "is_cpu": 85, "prelud": 85, "quickli": [85, 127, 144], "griddim": 85, "x": [85, 97, 98, 128, 131, 132, 140], "y": [85, 97, 98, 128, 131, 135, 140], "z": [85, 97, 98, 128], "blockdim": [85, 98, 128], "Or": [85, 98], "skip": [85, 98], "threadidx": [85, 98, 128, 131, 144], "run": [85, 108, 109, 118, 132, 135, 136, 143, 144], "thu": [85, 132], "blockidx": [85, 128, 131, 140, 144], "inject": 85, "re": [85, 88, 90, 92, 95, 96, 97, 98, 135], "launchthreadfram": [85, 98], "exit": [85, 98], "dim": [85, 93, 127, 140], "correspond": [85, 97, 101, 106, 127, 128, 131, 136], "three": [85, 132, 135, 136, 143, 144], "total": [85, 106, 125], "0x7f76f3b94400": 86, "stmt": [86, 120], "nest": 88, "loop": [88, 89, 90, 96, 107, 118, 128, 132, 136, 140, 143], "wise": [88, 97, 127], "forfram": [88, 90, 96], "domain": [89, 132, 137], "wave_s": 89, "group_siz": 89, "domin": 89, "wave": 89, "start": [90, 96, 97, 131, 140], "stop": [90, 96, 140], "stage": [90, 127, 132, 144], "sync": [90, 118], "max": [90, 93, 109, 127], "condition": 91, "obj": 91, "msg": [91, 144], "its": [91, 95, 127, 128], "ty": 91, "tz": 91, "statement": [91, 96, 97, 140, 144], "unsupport": [91, 144], "serv": [92, 127, 128], "foundat": 92, "customiz": 92, "align": [92, 118, 119, 128], "factor": [92, 100, 106], "core": [92, 97, 107, 127, 136], "specif": [92, 97, 108, 127, 128, 132, 135, 136, 137, 144], "pointer_var": 92, "pointer": [92, 97, 119], "0x7f76f3b97700": 92, "typic": [92, 127, 128], "temporari": 92, "commonli": [92, 127], "inherit": [92, 107], "modif": 92, "storage_scop": [92, 97, 118], "is_size_var": 92, "sizevar": 92, "instead": [92, 97, 122, 127, 144], "cast": [92, 97, 131], "revers": 93, "cumul": 93, "sum": [93, 131, 136], "reduce_typ": 93, "reduct": [93, 97, 107, 140, 143], "along": [93, 127, 131, 132], "min": [93, 109], "abssum": 93, "absolut": [93, 97, 108, 125], "inf": 93, "note": [93, 127, 128, 135, 136, 140], "becaus": [93, 136], "same": [93, 97, 107, 127, 128, 136], "would": [93, 127], "therefor": [93, 127], "follow": [93, 97, 107, 127, 128, 135, 136, 143], "temp": 93, "add": [93, 127, 140], "hygien": 95, "definit": 95, "bodi": 95, "resolv": [95, 144], "locat": [95, 97, 124], "non": [95, 97, 119, 127], "script": [95, 127], "x_valu": 95, "static_captur": 95, "dynamic_captur": 95, "check_well_form": 95, "prim": [95, 140], "allow": [95, 97, 108, 125, 127, 131, 132, 136, 137, 144], "should": [95, 97, 109, 123, 127, 131, 140], "treat": 95, "For": [96, 97, 127, 128, 132, 135, 136, 144], "device_typ": 97, "device_id": 97, "nbyte": 97, "dtype_code_hint": 97, "dtype_bits_hint": 97, "tempor": 97, "workspac": [97, 135], "space": [97, 100, 132, 136], "id": 97, "certain": [97, 127, 135], "opengl": 97, "bit": [97, 127, 131], "free": 97, "span": 97, "buffer_load": 97, "address": [97, 127, 144], "intersect": 97, "list_handl": 97, "anylist": 97, "reset": 97, "func_nam": 97, "extra": 97, "cond": 97, "simplif": [97, 119], "constraint": [97, 127, 140], "x1": 97, "x2": 97, "arctan2": 97, "bitwis": 97, "two": [97, 125, 127, 128, 144], "left": [97, 127], "right": [97, 127, 144], "extern": [97, 128, 131], "except": [97, 127, 128], "last": [97, 131], "resourc": [97, 127], "posit": 97, "te": 97, "overload": 97, "translat": [97, 144], "rule": [97, 127], "pure": [97, 132, 136], "pod": 97, "present": [97, 127, 128], "packedfunc": 97, "receiv": 97, "tvmarrayhandl": 97, "whose": [97, 109], "valid": [97, 108, 124, 132, 144], "period": 97, "ndarrai": 97, "global_var": 97, "globalvar": 97, "lh": [97, 125], "rh": [97, 125], "lead": [97, 127, 128], "64": [97, 127, 131, 143], "undefin": 97, "fcombin": 97, "fident": 97, "commut": 97, "const": [97, 128, 144], "over": [97, 100, 132], "axi": [97, 131, 140], "There": [97, 140], "wai": [97, 131, 135, 140], "simpli": [97, 128], "mysum": 97, "lambda": [97, 131], "reduce_axi": 97, "chang": [97, 135], "sign": 97, "barrier_count": 97, "semant": [97, 128], "hand": [97, 127, 132, 136], "known": [97, 127, 143], "neg": 97, "end": [97, 128], "gauss": 97, "exponenti": 97, "calcul": [97, 109, 127, 144], "primexprwithop": 97, "remaind": 97, "equival": [97, 119, 136], "f": [97, 132, 135, 144], "select": [97, 124, 127], "unlik": [97, 128], "branch": 97, "doe": [97, 128, 132], "satisfi": 97, "you": [97, 127, 128, 131, 132, 135, 140, 143, 144], "guard": 97, "some": [97, 132, 135, 140, 144], "lane": [97, 144], "mai": [97, 100, 127, 128, 131, 132, 135, 136, 144], "advantag": [97, 127], "finit": 97, "infinit": 97, "nan": 97, "nullptr": 97, "mark": [97, 132], "respect": [97, 127, 128, 144], "param_nam": 97, "local_s": 97, "local_ptr": 97, "dst_ptr": 97, "src_ptr": 97, "src_offset": 97, "dst_stride": 97, "nearest": 97, "faster": [97, 109, 131, 136], "notabl": [97, 127], "wherea": [97, 136], "ignor": 97, "see": [97, 127, 132, 143, 144], "en": 97, "cpprefer": 97, "cpp": 97, "numer": 97, "next": [97, 128], "point": [97, 107, 127, 140], "after": [97, 118, 128, 131, 132, 135, 136, 140, 144], "toward": 97, "expon": 97, "fast": [97, 136], "than": [97, 123, 131, 132, 135, 136, 144], "html": 97, "byte_count": 97, "expect_tx": 97, "increas": [97, 131], "async": [97, 140], "commit": 97, "movement": [97, 127, 128, 136, 137], "convers": 97, "cp": [97, 135], "shared_ptr": 97, "shared_offset": 97, "global_ptr": 97, "global_offset": 97, "byte": [97, 118], "bulk": 97, "thread_count": 97, "tran": 97, "num": [97, 106], "local_offset": 97, "smem_ptr": 97, "smem_offset": 97, "level": [97, 128, 131, 132, 136, 137, 144], "ldmatrix": [97, 107], "b16": 97, "memort": 97, "a_layout": 97, "b_layout": 97, "c_dtype": 97, "multiplicand_a": 97, "a_index": 97, "multiplicand_b": 97, "b_index": 97, "c_index": 97, "satur": 97, "multiplicand": [97, 140], "metadata": 97, "meta_index": 97, "sparse_selector": 97, "spars": 97, "selector": 97, "try_wait": 97, "most": [97, 127, 135], "recent": [97, 135], "uncommit": 97, "pend": 97, "q": [97, 127, 144], "shift": 97, "mathemat": [97, 127], "more": [97, 123, 127, 128, 132, 136, 144], "about": [97, 136], "here": [97, 127, 131, 136, 144], "wikipedia": 97, "org": 97, "wiki": 97, "q_": 97, "number_format": 97, "half": [97, 127], "fraction": 97, "need": [97, 100, 127, 132, 135, 136, 140, 144], "l": 97, "is_lshift_requir": 97, "is_rshift_requir": 97, "do": [97, 107, 132, 144], "val": 97, "void": [97, 128, 131], "reciproc": 97, "quick": 97, "hyperbol": 97, "trace_act": 97, "default_trace_act": 97, "come": [97, 128], "action": 97, "truncat": 97, "closer": 97, "divis": [97, 106], "behavior": [97, 128, 132, 136, 144], "ptype": 97, "rw_mask": 97, "head": [97, 127], "pattern": [97, 127, 132, 136, 144], "mask": [97, 131], "fragment_d": 97, "index_d": 97, "fragment_a": 97, "index_a": 97, "fragment_b": 97, "index_b": 97, "fragment_c": 97, "index_c": 97, "bmma_sync": 97, "bwmma": 97, "return_unexpect": 97, "nested_cal": 97, "unexpect": 97, "fill_frag": 97, "wmma": [97, 132], "uintimm": 97, "buffer_ptr": 97, "row_major": 97, "column_major": 97, "mfma": 97, "mma_sync": 97, "dtype_str": 97, "ndim": 97, "arr_dtyp": 97, "elem_offset": 97, "dltensor": 97, "elem_offs": 97, "arr": 97, "field": 97, "struct": 97, "date": 97, "structtyp": 97, "freduce_arg": 97, "allreduc": 97, "insid": [97, 128, 136, 140, 144], "threadblock": 97, "invari": 97, "throw": 97, "tvmgetlasterror": 97, "attrstmt": 97, "warp_id": 97, "exchang": 97, "fetch": [97, 135], "sub": 97, "higher": [97, 127], "rel": [97, 108, 125], "caller": 97, "src_lane_idx": 97, "dst_lane_idx": 97, "arbitrari": [97, 140], "vec1": 97, "vec2": 97, "concat": 97, "vec": 97, "high": [97, 128, 131, 132, 136, 137], "low": [97, 127, 131, 132, 136, 137], "langref": 97, "rtype": [97, 107, 124], "warp_group_idx": 98, "256": [98, 128, 131, 143], "condense_rep_var": [99, 100], "get_thread_s": [99, 100], "map_forward_thread": [99, 100], "repeat": [99, 100, 108, 109], "replic": [99, 100], "get_forward_var": [99, 101], "get_input_shap": [99, 101], "get_output_shap": [99, 101], "map_forward_index": [99, 101], "forward_fn": [100, 101], "forward_thread_fn": 100, "forward_index_fn": 100, "encapsul": [100, 136], "forward_var": 100, "forward_thread": 100, "forward_index": 100, "thread_repl": 100, "fine": [100, 131, 132, 136], "grain": [100, 131, 132, 136], "control": [100, 127, 131, 132, 136], "multi": [100, 127, 136], "dimension": [100, 128], "condens": 100, "fold": 100, "longer": [100, 132], "separ": [100, 132], "reflect": 100, "repeat_on_thread": 100, "lower_dim_first": 100, "happen": [100, 128], "across": [100, 108, 127, 131, 132], "itervar": [100, 101], "gemmbaseparam": [104, 105, 106, 107], "gemm_mma": [104, 105], "gemmprimitivemma": [104, 105, 107], "bootstrap": 104, "class_attribut": [105, 106], "get_warp_s": [105, 106], "infer_block_partit": [105, 106], "params_as_dict": [105, 106], "fullcol": [105, 106, 127], "fullrow": [105, 106], "compute_warp_partit": [105, 106], "from_warp_partit": [105, 106], "is_full_col": [105, 106], "is_full_row": [105, 106], "is_squar": [105, 106], "to_prime_factor": [105, 106], "gemm_rrr": [105, 107], "gemm_rsr": [105, 107], "gemm_srr": [105, 107], "gemm_ssr": [105, 107], "in_dtyp": [105, 107, 128, 143], "infer": [106, 107, 118, 131, 132, 136, 140], "partit": [106, 107, 127, 140], "alreadi": [106, 135], "attempt": 106, "them": [106, 107, 128, 144], "automat": [106, 108, 109, 124, 127, 128, 131, 132, 136], "must": [106, 128, 140], "miss": 106, "inconsist": 106, "num_warp": 106, "m_warp": 106, "n_warp": 106, "workload": 106, "fail": [106, 144], "from_block_row_col": 106, "balanc": [106, 132], "distribut": [106, 127, 140], "full": [106, 132], "prime": 106, "basic": [107, 131, 136], "transposit": [107, 127], "mma_emitt": 107, "ssr": 107, "helper": 107, "respons": [107, 128], "etc": [107, 108, 127, 132, 144], "correct": [107, 132], "final": [107, 128, 131, 136, 144], "random": 108, "reference_program": 108, "input_tensor": 108, "atol": [108, 125, 132], "01": [108, 125, 135], "rtol": [108, 125, 132], "max_mismatched_ratio": [108, 125], "pre": [108, 135, 143], "toler": [108, 125], "mismatch": [108, 125], "consist": [108, 109, 127], "explicitli": [108, 128, 132, 136], "warmup": [108, 109, 131, 143], "25": [108, 109], "rep": [108, 109, 131, 143], "100": [108, 109], "n_warmup": 108, "n_repeat": 108, "millisecond": [108, 109], "repetit": [108, 109], "averag": 108, "manual_check_prog": 108, "fn": 109, "_n_warmup": 109, "_n_repeat": 109, "grad_to_non": 109, "quantil": 109, "fast_flush": 109, "return_mod": 109, "mean": [109, 127], "median": 109, "flush": 109, "gradient": 109, "backward": 109, "percentil": 109, "aggreg": 109, "cuda_kernels_output_dir": [118, 119], "tir_add_lower_pass": [118, 119], "tir_disable_cs": [118, 119], "tir_disable_storage_rewrit": [118, 119], "tir_disable_vector": [118, 119], "tir_enable_debug": [118, 119], "tir_enable_equiv_terms_in_cs": [118, 119], "tir_merge_static_smem": [118, 119], "tir_noalia": [118, 119], "tir_simplifi": [118, 119], "tir_use_async_copi": [118, 119], "tl_config_index_bitwidth": [118, 119], "tl_debug_merge_shared_memory_alloc": [118, 119], "tl_disable_dynamic_tail_split": [118, 119], "tl_disable_safe_memory_access": [118, 119], "tl_disable_tma_low": [118, 119], "tl_disable_warp_speci": [118, 119], "tl_dynamic_align": [118, 119], "tl_simplifi": [118, 119], "align_byt": 118, "fpass": [118, 120], "bitwidth": [118, 119], "rewrit": [118, 119], "legalizeloopvector": 118, "attach": 118, "insert": [118, 131], "partial": [118, 131, 132, 136], "enable_vector": 118, "enum": [119, 125], "kei": [119, 127, 131], "kernels_output_dir": 119, "add_lower_pass": 119, "disable_cse_tir": 119, "subexpress": 119, "disable_storage_rewrit": 119, "optim": [119, 128, 131, 132, 136, 137, 140, 144], "enable_debug": 119, "enable_equiv_terms_in_cse_tir": 119, "term": 119, "merge_static_smem": 119, "merg": [119, 127], "noalia": 119, "alias": 119, "assumpt": 119, "use_async_copi": 119, "debug_merge_shared_memory_alloc": 119, "tail": [119, 128], "safe": 119, "dynamic_align": 119, "normal": [121, 125], "One": [121, 125, 127, 131], "randn": [121, 125, 132], "uniform": [121, 125], "method_nam": 122, "new_method_nam": 122, "allow_dynam": 123, "extract": 123, "exactli": 123, "return_object": 124, "manual": [124, 127, 132, 136, 143], "intyp": 125, "tensor_a": 125, "tensor_b": 125, "001": 125, "equal_nan": 125, "check_devic": 125, "check_dtyp": 125, "check_layout": 125, "check_strid": 125, "base_nam": 125, "ref_nam": 125, "assert": 125, "close": [125, 128, 131], "enough": [125, 132], "percentag": 125, "1e": [125, 132], "exce": 125, "author": [127, 128, 132, 143, 144], "yu": 127, "cheng": 127, "lei": [127, 132, 144], "wang": [127, 128, 132, 144], "friendli": [127, 132, 136], "significantli": [127, 128, 136, 144], "help": [127, 128, 136, 143, 144], "howev": [127, 128, 131, 132], "still": [127, 128, 131, 132], "master": 127, "techniqu": [127, 128, 137], "better": [127, 132], "leverag": [127, 136, 144], "ll": 127, "demonstr": [127, 128, 131, 132, 136, 143, 144], "deepseek": 127, "latent": 127, "attent": [127, 128, 132, 137], "novel": 127, "mechan": 127, "hardwar": [127, 132, 144], "effici": [127, 128, 132, 136, 143], "signific": 127, "improv": [127, 128, 131, 132, 135, 136], "model": [127, 131, 132, 137], "speed": 127, "sever": [127, 128, 144], "deep": [127, 128, 131], "learn": [127, 128, 131], "triton": [127, 132], "develop": [127, 128, 135, 136, 137], "februari": 127, "2025": 127, "open": 127, "github": [127, 132, 135, 137], "cutlass": [127, 132], "incorpor": [127, 128, 136], "achiev": [127, 131, 132], "impress": 127, "under": [127, 132], "shown": [127, 132], "figur": [127, 132, 136], "below": [127, 128, 131, 132, 136, 144], "As": 127, "case": [127, 128, 131, 140, 144], "outperform": 127, "accomplish": 127, "80": 127, "line": [127, 132, 144], "eas": 127, "dive": [127, 136, 144], "review": [127, 128], "tradit": 127, "acc_": 127, "scores_max": 127, "scores_scal": 127, "acc_o": 127, "loop_rang": 127, "scores_max_prev": 127, "v": [127, 144], "while": [127, 128, 132, 143], "mha": 127, "gqa": 127, "queri": 127, "challeng": 127, "larg": [127, 131], "576": 127, "512": 127, "issu": 127, "becom": 127, "too": 127, "insuffici": 127, "spill": 127, "occur": [127, 144], "impact": 127, "question": 127, "mma_async": 127, "organ": 127, "collect": [127, 141], "introduc": [127, 128, 131, 132, 144], "solut": 127, "obtain": 127, "through": [127, 132, 143, 144], "abov": [127, 128], "seem": [127, 136], "complex": [127, 128, 132], "worri": [127, 136], "intricaci": 127, "illustr": [127, 128, 136, 144], "frontend": 127, "plan": 127, "vertic": 127, "concret": [127, 128], "acc_s_0": 127, "blockm": 127, "blockn": 127, "sinc": [127, 128, 132, 140], "consequ": 127, "continu": 127, "s_share": 127, "worth": 127, "schedul": [127, 132, 143], "approach": [127, 128, 131, 132, 136, 144], "assign": [127, 128, 131, 132, 136], "scheme": [127, 143], "remain": [127, 128], "nevertheless": [127, 128], "among": 127, "sm": 127, "multiprocessor": 127, "remap": 127, "therebi": 127, "natur": [127, 131], "contigu": 127, "adjac": 127, "ineffici": [127, 128], "emploi": [127, 136, 137], "diagon": 127, "interleav": 127, "adjust": 127, "ensur": [127, 128, 135], "consecut": 127, "overlap": [127, 132], "bank": 127, "servic": 127, "per": [127, 128, 131], "clock": 127, "cycl": 127, "conflict": 127, "simultan": 127, "forc": 127, "degrad": 127, "rearrang": 127, "fall": 127, "manipul": [127, 136], "alter": 127, "evenli": 127, "particularli": 127, "crucial": 127, "task": [127, 128], "overal": [127, 136], "similarli": 127, "also": [127, 128, 132, 136, 143], "desir": [127, 135, 136, 144], "design": [127, 128, 131, 132, 136, 137], "shield": 127, "intens": [127, 131], "similar": [127, 128, 132], "flashdecod": 127, "small": 127, "fulli": [127, 136], "due": 127, "kv_ctx": 127, "combin": [127, 131], "num_split": 127, "examin": [127, 128, 132, 144], "variat": 127, "explicit": [127, 132], "ident": 127, "manifest": 127, "64kb": 127, "228kb": 127, "care": [127, 128], "softwar": [127, 132], "q_share": 127, "block_h": 127, "q_pe_shar": 127, "pe_dim": 127, "q_local": 127, "q_pe_loc": 127, "flexibl": [127, 132, 136], "absenc": 127, "permit": 127, "visibl": 127, "conduct": 127, "precis": [127, 137], "experiment": [127, 128, 131, 132], "throughput": [127, 131], "assembli": [127, 132], "aiter": 127, "asm": 127, "98": 127, "76": 127, "concis": [127, 132, 136, 137], "programm": 127, "mitig": 127, "primarili": 127, "nt": 127, "further": [127, 128, 131, 136, 144], "investig": 127, "research": 127, "direct": [127, 136], "propos": 127, "pressur": 127, "enhanc": 127, "chenghua": 128, "incomplet": [128, 131, 132], "suggest": [128, 131, 132], "highli": [128, 131, 132, 136], "encourag": [128, 131, 132], "submit": [128, 131, 132], "pr": [128, 131, 132], "wide": 128, "often": [128, 144], "encount": [128, 144], "those": [128, 144], "begin": 128, "explor": [128, 132, 143], "tutori": [128, 131, 132, 144], "By": [128, 131, 132, 136, 137, 144], "delv": 128, "deepli": 128, "principl": 128, "broader": 128, "understand": [128, 131, 136], "recommend": [128, 135, 143], "consult": 128, "overview": [128, 132, 136], "elementwise_add": 128, "b_x": 128, "familiar": 128, "might": [128, 131, 136, 144], "wonder": 128, "fit": 128, "your": [128, 131, 132], "focu": [128, 136, 137], "sole": 128, "carefulli": [128, 144], "handcraft": 128, "subsequ": [128, 136], "discuss": [128, 136], "1024": [128, 131, 132, 144], "straightforward": [128, 131], "practic": 128, "reader": 128, "out_dtyp": [128, 143], "start_x": 128, "start_i": 128, "local_i": 128, "local_x": 128, "fix": 128, "want": [128, 132, 135], "replac": 128, "make": [128, 131, 135, 136], "bfloat16_t": 128, "__restrict__": [128, 131], "cost": 128, "These": [128, 132, 136], "prevent": 128, "advanc": [128, 132, 144], "involv": [128, 143], "paragraph": 128, "clearer": 128, "2047": 128, "num_per_thread": 128, "__launch_bounds__": [128, 131], "main_kernel": [128, 131], "pragma": 128, "observ": 128, "did": 128, "fact": 128, "could": 128, "simplic": 128, "breviti": 128, "style": 128, "idx": 128, "evid": 128, "acceler": [128, 136, 143], "written": [128, 132], "travers": [128, 143], "beginn": [128, 136], "addition": [128, 136], "transpar": 128, "uint4": [128, 131], "__1": 128, "v_": 128, "v__1": 128, "nv_bfloat162": 128, "aforement": 128, "sometim": [128, 144], "appear": 128, "counterintuit": [128, 136], "effect": [128, 131], "interestingli": 128, "retain": [128, 132], "scenario": 128, "intend": [128, 136, 144], "aha": 128, "convent": 128, "intuit": 128, "But": 128, "what": 128, "num_ele_per_thread": 128, "a_regist": 128, "b_regist": 128, "c_regist": 128, "s_start": 128, "s_end": 128, "ldg": 128, "tid": 128, "stg": 128, "individu": 128, "reson": 128, "u": 128, "now": [128, 131], "8192": 128, "2048": [128, 131], "emerg": [128, 132], "reassign": 128, "evalu": [128, 131], "nv_bfloat16": 128, "namespac": 128, "t_c": 128, "make_gmem_ptr": 128, "make_shap": 128, "t_a": 128, "t_b": 128, "t_c_tile": 128, "local_til": 128, "make_coord": 128, "t_a_til": 128, "t_b_tile": 128, "reg_buffer_a": 128, "make_tensor_lik": 128, "reg_buffer_b": 128, "reg_buffer_c": 128, "reg_c_vector": 128, "recast": 128, "reg_a_vector": 128, "reg_b_vector": 128, "vec_idx": 128, "reg_c_flat": 128, "showcas": [128, 136], "minim": [128, 136], "demand": [128, 132, 136], "essenti": [128, 135, 144], "thoroughli": 128, "draw": 128, "inspir": 128, "blog": 128, "zhuanlan": 128, "zhihu": 128, "p": 128, "690703999": 128, "contributor": 131, "botbw": 131, "example_gemv": 131, "py": [131, 143, 144], "plai": 131, "critic": [131, 136], "role": 131, "especi": 131, "perspect": 131, "_gemv_naiv": 131, "x_ptr": 131, "a_ptr": 131, "y_ptr": 131, "block_size_k": 131, "constexpr": 131, "program_id": 131, "offs_k": 131, "arang": 131, "a_val": 131, "x_val": 131, "expos": [131, 136], "strategi": [131, 143, 144], "think": 131, "naive_gemv": 131, "bn": 131, "tn": 131, "c_reg": 131, "bk": 131, "tk": 131, "astyp": 131, "And": 131, "half_t": 131, "__shared__": 131, "__align__": 131, "uchar": 131, "buf_dyn_shmem": 131, "uint64_t": 131, "_mbarrier": 131, "mbarrier_init": 131, "__syncthread": 131, "warpgroup_reg_dealloc": 131, "24": 131, "mbarrier_wait": 131, "16256": 131, "131072": 131, "mbarrier_cp_async_arr": 131, "els": 131, "warpgroup_reg_alloc": 131, "240": 131, "000000e": 131, "00f": 131, "bk_1": 131, "tk_1": 131, "act": 131, "1d": [131, 144], "At": [131, 136], "gain": 131, "veri": [131, 132], "littl": 131, "17": 131, "cubla": [131, 132], "008": 131, "20x": 131, "slower": 131, "exploit": 131, "finer": [131, 132], "naive_splitk_gemv": 131, "a_loc": 131, "b_local": 131, "c_accum": 131, "c_share": 131, "024": 131, "par": [131, 132], "mani": [131, 132], "reduce_thread": 131, "splitk_gemv": 131, "tile_k": 131, "less": [131, 135], "bottleneck": 131, "float2": 131, "float4": 131, "splitk_gemv_vector": 131, "max_transaction_size_in_bit": 131, "0084": 131, "outperfrom": 131, "plain": 131, "smem": 131, "atomidadd": 131, "splitk_gemv_vectorized_tvm": 131, "c_reduc": 131, "reduce_scop": 131, "uint64": 131, "uint32": 131, "0069": 131, "hyperparamet": 131, "featur": [131, 135], "get_best_config": 131, "get_config": [131, 143], "_config": [131, 143], "itertool": [131, 143], "20": [131, 135, 143], "ref_prog": [131, 143], "ref_program": [131, 143], "skip_check": [131, 143], "0067": 131, "red_buf0": 131, "00784": 131, "00773": 131, "16607": 131, "02419": 131, "00809": 131, "00675": 131, "0077344514429569244": 131, "knowledg": 132, "concern": 132, "conceptu": 132, "idea": 132, "behind": 132, "awar": [132, 136], "necessarili": [132, 144], "drop": 132, "lowest": 132, "somewhat": 132, "almost": 132, "expert": [132, 136], "who": [132, 135, 136], "everi": 132, "inlin": 132, "flow": [132, 137], "walk": 132, "show": [132, 144], "divers": 132, "yet": [132, 135, 136], "comfort": 132, "incur": 132, "fusion": 132, "flash": [132, 137], "easili": 132, "give": 132, "effort": 132, "raw": 132, "strike": 132, "portabl": 132, "reason": [132, 136], "snippet": [132, 136, 144], "comment": 132, "jit_kernel": 132, "ref_c": 132, "assert_clos": 132, "inspect": [132, 144], "cuda_sourc": 132, "though": 132, "slice": 132, "arrang": 132, "arithmet": 132, "depth": [132, 136], "hood": 132, "cute": 132, "On": 132, "compos": [132, 136], "back": 132, "mix": [132, 136, 137], "keep": [132, 136], "rest": 132, "tuner": 132, "vendor": [132, 144], "intern": 132, "4090": 132, "a100": 132, "h100": 132, "mi300x": 132, "1x": 132, "speedup": 132, "rtx": 132, "97x": 132, "0x": 132, "04x": 132, "08x": 132, "25x": 132, "depend": [132, 135, 136], "vari": 132, "few": 132, "dispatch": 132, "verifi": [132, 135], "abil": [132, 136], "tunabl": 132, "experi": 132, "scale": 132, "meanwhil": 132, "consid": [132, 140, 144], "bitbla": 132, "pycuda": 132, "prerequisit": 135, "wheel": 135, "pypi": 135, "ubuntu": 135, "04": 135, "later": [135, 140], "11": 135, "easiest": 135, "lang": [135, 137], "latest": 135, "termin": 135, "choos": [135, 136], "prebuilt": 135, "releas": 135, "page": 135, "dev0": 135, "cu120": 135, "py3": 135, "whl": 135, "repositori": 135, "git": 135, "__version__": 135, "docker": 135, "rm": 135, "ipc": 135, "nvcr": 135, "io": 135, "23": 135, "requisit": 135, "apach": 135, "debian": 135, "apt": 135, "python3": 135, "dev": 135, "setuptool": 135, "zlib1g": 135, "cmake": 135, "libedit": 135, "clone": 135, "recurs": 135, "cd": 135, "patient": 135, "mkdir": 135, "dtvm_prebuild_path": 135, "pythonpath": 135, "tvm_import_python_path": 135, "3rd": 135, "parti": 135, "prefer": 135, "3rdparti": 135, "echo": 135, "use_llvm": 135, "ON": 135, "use_cuda": 135, "use_rocm": 135, "libtilelang": 135, "libtvm": 135, "libtvm_runtim": 135, "bash": 135, "install_cuda": 135, "sh": 135, "install_amd": 135, "offici": 135, "cu121": 135, "stabl": 135, "thei": [135, 136, 140], "ideal": [135, 136], "bugfix": 135, "hasn": 135, "been": [135, 143], "depict": 136, "progress": [136, 144], "descript": 136, "resid": 136, "whichev": 136, "best": [136, 143], "suit": 136, "unawar": 136, "independ": 136, "goal": 136, "hierarchi": 136, "consider": 136, "predefin": 136, "made": 136, "experienc": 136, "characterist": 136, "offer": 136, "grant": 136, "tailor": 136, "expertis": 136, "expand": [136, 144], "intermedi": [136, 144], "represent": [136, 144], "captur": 136, "placement": 136, "particular": 136, "bandwidth": [136, 144], "heart": 136, "notion": 136, "portion": 136, "unit": 136, "easier": 136, "hallmark": 136, "place": 136, "rather": 136, "leav": 136, "opaqu": 136, "face": 136, "physic": 136, "chip": 136, "abund": 136, "deriv": 136, "transfer": 136, "furthermor": 136, "streamlin": 137, "dequant": 137, "linearattent": 137, "underli": [137, 144], "sacrif": 137, "art": 137, "instal": 137, "pip": 137, "nightli": 137, "brief": 137, "introduct": 137, "linear": 137, "flashmla": 137, "hopper": 137, "tmac": 137, "tabl": 137, "ast": 137, "tilelibrari": 137, "sequenti": 140, "whole": 140, "know": 140, "boundari": 140, "length": 140, "reorder": 140, "noth": 140, "serpentin": 140, "stai": 141, "app": 141, "yyttt6": 143, "identifi": 143, "readabl": 143, "example_gemm": 143, "thread_num": 143, "enable_raster": 143, "combinatori": 143, "from_kernel": 143, "with_rol": 143, "set_compile_arg": 143, "out_c": 143, "lightweight": 143, "rank": 143, "orient": 143, "matmultempl": 143, "carve_templ": 143, "with_arch": 143, "topk": 143, "roller_hint": 143, "recommend_hint": 143, "rstep": 143, "pipeline_stag": 143, "block_row": 143, "block_col": 143, "rasterization_plan": 143, "noraster": 143, "hereaft": 144, "undergo": 144, "roughli": 144, "categori": 144, "incorrect": 144, "theoret": 144, "focus": 144, "problem": 144, "nsight": 144, "rocprof": 144, "futur": 144, "materi": 144, "again": 144, "eventu": 144, "jump": 144, "caus": 144, "35": 144, "shape_q": 144, "yield": 144, "codegen_cuda": 144, "1257": 144, "ramp": 144, "somewher": 144, "filter": 144, "rt_mod_cuda": 144, "std": 144, "cg": 144, "registri": 144, "tilelang_callback_cuda_postproc": 144, "henc": 144, "intercept": 144, "_": 144, "cuda_runtim": 144, "h": 144, "Be": 144, "mind": 144, "concurr": 144, "debug_print_buff": 144, "debug_print_buffer_condit": 144, "debug_print_value_condit": 144, "debug_print_register_fil": 144, "prefix": 144, "debug_print_msg": 144, "someth": 144, "hello": 144, "world": 144, "diagnos": 144, "deviat": 144, "prong": 144, "suffici": 144, "occup": 144, "aspect": 144}, "objects": {"tilelang": [[4, 0, 0, "-", "cache"], [39, 0, 0, "-", "common"], [41, 0, 0, "-", "contrib"], [48, 0, 0, "-", "engine"], [53, 0, 0, "-", "env"], [54, 0, 0, "-", "intrinsics"], [60, 0, 0, "-", "jit"], [77, 0, 0, "-", "language"], [99, 0, 0, "-", "layout"], [104, 0, 0, "-", "primitives"], [108, 0, 0, "-", "profiler"], [118, 0, 0, "-", "transform"], [121, 0, 0, "-", "utils"]], "tilelang.cache": [[4, 1, 1, "", "cached"], [4, 1, 1, "", "clear_cache"], [4, 1, 1, "", "get_cache_dir"], [5, 0, 0, "-", "kernel_cache"], [4, 1, 1, "", "set_cache_dir"], [6, 0, 0, "-", "tuner_cache"]], "tilelang.cache.kernel_cache": [[5, 2, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[5, 3, 1, "", "cache_dir"], [5, 4, 1, "", "cached"], [5, 4, 1, "", "clear_cache"], [5, 3, 1, "", "execution_backend"], [5, 4, 1, "", "get_cache_dir"], [5, 4, 1, "", "set_cache_dir"]], "tilelang.cache.tuner_cache": [[6, 2, 1, "", "AutoTunerCache"]], "tilelang.cache.tuner_cache.AutoTunerCache": [[6, 3, 1, "", "cache_dir"], [6, 4, 1, "", "cached"], [6, 4, 1, "", "clear_cache"], [6, 4, 1, "", "get_cache_dir"], [6, 4, 1, "", "set_cache_dir"]], "tilelang.common": [[40, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[40, 2, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[40, 3, 1, "", "InterWarpTransform"], [40, 3, 1, "", "IntraWarpTransform"], [40, 3, 1, "", "LDMatrixTransform"], [40, 3, 1, "", "NonTransform"], [40, 4, 1, "", "is_inter_warp_transform"], [40, 4, 1, "", "is_intra_warp_transform"], [40, 4, 1, "", "is_ld_matrix_transform"], [40, 4, 1, "", "is_non_transform"]], "tilelang.contrib": [[42, 0, 0, "-", "cc"], [43, 0, 0, "-", "dlpack"], [44, 0, 0, "-", "hipcc"], [45, 0, 0, "-", "nvcc"], [47, 0, 0, "-", "rocm"]], "tilelang.contrib.cc": [[42, 1, 1, "", "create_executable"], [42, 1, 1, "", "create_shared"], [42, 1, 1, "", "create_staticlib"], [42, 1, 1, "", "cross_compiler"], [42, 1, 1, "", "get_cc"], [42, 1, 1, "", "get_cplus_compiler"], [42, 1, 1, "", "get_global_symbol_section_map"], [42, 1, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[43, 1, 1, "", "convert_func"], [43, 1, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[44, 1, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[45, 1, 1, "", "callback_libdevice_path"], [45, 1, 1, "", "compile_cuda"], [45, 1, 1, "", "find_cuda_path"], [45, 1, 1, "", "get_cuda_version"], [45, 1, 1, "", "get_nvcc_compiler"], [45, 1, 1, "", "have_cudagraph"], [45, 1, 1, "", "have_fp16"], [45, 1, 1, "", "have_int8"], [45, 1, 1, "", "have_tensorcore"], [45, 1, 1, "", "parse_compute_version"]], "tilelang.contrib.rocm": [[47, 1, 1, "", "find_lld"], [47, 1, 1, "", "find_rocm_path"], [47, 1, 1, "", "have_matrixcore"], [47, 1, 1, "", "parse_compute_version"], [47, 1, 1, "", "rocm_link"]], "tilelang.engine": [[49, 0, 0, "-", "callback"], [50, 0, 0, "-", "lower"], [51, 0, 0, "-", "param"], [52, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[49, 1, 1, "", "register_cuda_postproc"], [49, 1, 1, "", "register_cuda_postproc_callback"], [49, 1, 1, "", "register_hip_postproc"], [49, 1, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[50, 1, 1, "", "canon_target_host"], [50, 1, 1, "", "device_codegen"], [50, 1, 1, "", "device_codegen_without_compile"], [50, 1, 1, "", "extrac_params"], [50, 1, 1, "", "get_device_call"], [50, 1, 1, "", "get_host_call"], [50, 1, 1, "", "has_device_kernel_launch"], [50, 1, 1, "", "host_codegen"], [50, 1, 1, "", "is_cpu_device_backend"], [50, 1, 1, "", "is_device_call"], [50, 1, 1, "", "is_device_call_c_device"], [50, 1, 1, "", "lower"]], "tilelang.engine.param": [[51, 2, 1, "", "CompiledArtifact"], [51, 2, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[51, 3, 1, "", "device_mod"], [51, 3, 1, "", "host_mod"], [51, 3, 1, "", "kernel_source"], [51, 3, 1, "", "params"], [51, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[51, 3, 1, "", "dtype"], [51, 4, 1, "", "from_buffer"], [51, 4, 1, "", "from_var"], [51, 4, 1, "", "is_boolean"], [51, 4, 1, "", "is_float8"], [51, 4, 1, "", "is_scalar"], [51, 4, 1, "", "is_unsigned"], [51, 3, 1, "", "shape"]], "tilelang.engine.phase": [[52, 1, 1, "", "LowerAndLegalize"], [52, 1, 1, "", "OptimizeForTarget"], [52, 1, 1, "", "allow_fence_proxy"], [52, 1, 1, "", "allow_global_thread_synchronization"], [52, 1, 1, "", "allow_tma_and_warp_specialized"], [52, 1, 1, "", "allow_vectorize"], [52, 1, 1, "", "allow_warp_specialized"]], "tilelang.env": [[53, 1, 1, "", "disable_cache"], [53, 1, 1, "", "enable_cache"], [53, 1, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[55, 0, 0, "-", "mfma_layout"], [57, 0, 0, "-", "mma_layout"], [58, 0, 0, "-", "mma_macro_generator"], [59, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[55, 1, 1, "", "make_mfma_swizzle_layout"], [55, 1, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_A"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_B"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_C"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_k_n"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_m_n"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_n_k"], [55, 1, 1, "", "shared_16x16_to_local_64x4_layout_n_m"], [55, 1, 1, "", "shared_16x32_to_local_64x8_layout_A"], [55, 1, 1, "", "shared_16x32_to_local_64x8_layout_B"], [55, 1, 1, "", "shared_16x4_to_local_64x1_layout_A"], [55, 1, 1, "", "shared_16x64_to_local_64x16_layout_A"], [55, 1, 1, "", "shared_16x64_to_local_64x16_layout_B"], [55, 1, 1, "", "shared_4x16_to_local_64x1_layout_B"], [55, 1, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_A"], [55, 1, 1, "", "thread_id_shared_access_64x16_to_16x64_layout_B"], [55, 1, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [55, 1, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [55, 1, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [55, 1, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [55, 1, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [55, 1, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [55, 1, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [55, 1, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mma_layout": [[57, 1, 1, "", "get_swizzle_layout"], [57, 1, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [57, 1, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [57, 1, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [57, 1, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [57, 1, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [57, 1, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [57, 1, 1, "", "make_mma_swizzle_layout"], [57, 1, 1, "", "mma_32x8_to_shared_16x16_layout"], [57, 1, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [57, 1, 1, "", "shared_16x16_to_mma_32x8_layout"], [57, 1, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [57, 1, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [57, 1, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [57, 1, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [57, 1, 1, "", "shared_16x32_to_mma_32x16_layout"], [57, 1, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [57, 1, 1, "", "shared_32x16_to_mma_32x16_layout"], [57, 1, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[58, 2, 1, "", "INT4TensorCoreIntrinEmitter"], [58, 2, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [58, 2, 1, "", "TensorCoreIntrinEmitter"], [58, 2, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[58, 4, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[58, 4, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[58, 3, 1, "", "M_DIM"], [58, 3, 1, "", "N_DIM"], [58, 3, 1, "", "WARP_SIZE"], [58, 3, 1, "", "dtype_abbrv"], [58, 4, 1, "", "extract_thread_binding"], [58, 4, 1, "", "get_store_index_map"], [58, 3, 1, "", "is_m_first"], [58, 4, 1, "", "ldmatrix_a"], [58, 4, 1, "", "ldmatrix_b"], [58, 4, 1, "", "make_mma_load_layout"], [58, 4, 1, "", "make_mma_store_layout"], [58, 4, 1, "", "mma"], [58, 4, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[58, 4, 1, "", "ldmatrix_a"], [58, 4, 1, "", "ldmatrix_b"], [58, 4, 1, "", "mma"]], "tilelang.intrinsics.utils": [[59, 1, 1, "", "get_ldmatrix_offset"], [59, 1, 1, "", "get_mma_micro_size"], [59, 1, 1, "", "index_to_coordinates"], [59, 1, 1, "", "mfma_store_index_map"], [59, 1, 1, "", "mma_store_index_map"], [59, 1, 1, "", "shared_16x16_to_mma_32x8_layout"], [59, 1, 1, "", "shared_16x32_to_mma_32x16_layout"], [59, 1, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[61, 0, 0, "-", "adapter"], [60, 1, 1, "", "compile"], [74, 0, 0, "-", "env"], [60, 1, 1, "", "jit"], [75, 0, 0, "-", "kernel"], [76, 0, 0, "-", "param"]], "tilelang.jit.adapter": [[62, 0, 0, "-", "base"], [63, 0, 0, "-", "ctypes"], [65, 0, 0, "-", "cython"], [68, 0, 0, "-", "dlpack"], [69, 0, 0, "-", "libgen"], [70, 0, 0, "-", "nvrtc"], [72, 0, 0, "-", "utils"], [73, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[62, 2, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[62, 3, 1, "", "func"], [62, 4, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[64, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[64, 2, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[64, 3, 1, "", "dynamic_symbolic_map"], [64, 4, 1, "", "from_database"], [64, 4, 1, "", "get_kernel_source"], [64, 3, 1, "", "ir_module"], [64, 5, 1, "", "is_dynamic"], [64, 3, 1, "", "kernel_global_source"], [64, 3, 1, "", "lib"], [64, 5, 1, "", "lib_code"], [64, 5, 1, "", "libpath"], [64, 3, 1, "", "param_dtypes"], [64, 3, 1, "", "param_shapes"], [64, 3, 1, "", "pass_configs"], [64, 5, 1, "", "prim_func"], [64, 5, 1, "", "srcpath"], [64, 3, 1, "", "target"], [64, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[66, 0, 0, "-", "adapter"], [67, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[66, 2, 1, "", "CythonKernelAdapter"], [66, 1, 1, "", "get_cache_dir"], [66, 1, 1, "", "get_cached_lib"], [66, 1, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[66, 3, 1, "", "buffer_device_map"], [66, 3, 1, "", "buffer_dtype_map"], [66, 3, 1, "", "dynamic_symbolic_map"], [66, 4, 1, "", "from_database"], [66, 4, 1, "", "get_kernel_source"], [66, 3, 1, "", "ir_module"], [66, 5, 1, "", "is_dynamic"], [66, 3, 1, "", "kernel_global_source"], [66, 3, 1, "", "lib"], [66, 5, 1, "", "lib_code"], [66, 5, 1, "", "libpath"], [66, 3, 1, "", "pass_configs"], [66, 5, 1, "", "prim_func"], [66, 3, 1, "", "ptr_map"], [66, 5, 1, "", "srcpath"], [66, 3, 1, "", "static_shape_map"], [66, 3, 1, "", "target"], [66, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[67, 2, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[67, 4, 1, "", "forward"], [67, 4, 1, "", "set_buffer_device_map"], [67, 4, 1, "", "set_buffer_dtype_map"], [67, 4, 1, "", "set_dynamic_symbolic_map"], [67, 4, 1, "", "set_ptr_map"], [67, 4, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[68, 2, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[69, 2, 1, "", "LibraryGenerator"], [69, 2, 1, "", "PyLibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[69, 4, 1, "", "compile_lib"], [69, 4, 1, "", "get_lib_path"], [69, 4, 1, "", "get_source_path"], [69, 3, 1, "", "lib_code"], [69, 3, 1, "", "libpath"], [69, 4, 1, "", "load_lib"], [69, 4, 1, "", "remove_lib"], [69, 4, 1, "", "set_lib_path"], [69, 4, 1, "", "set_src_path"], [69, 3, 1, "", "srcpath"], [69, 4, 1, "", "update_lib_code"]], "tilelang.jit.adapter.libgen.PyLibraryGenerator": [[69, 4, 1, "", "compile_lib"], [69, 3, 1, "", "culib"], [69, 3, 1, "", "host_func"], [69, 4, 1, "", "import_from_file"], [69, 4, 1, "", "load_lib"], [69, 3, 1, "", "pymodule"], [69, 4, 1, "", "update_host_func"]], "tilelang.jit.adapter.nvrtc": [[71, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.nvrtc.adapter": [[71, 2, 1, "", "NVRTCKernelAdapter"]], "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter": [[71, 4, 1, "", "from_database"], [71, 4, 1, "", "get_kernel_source"], [71, 3, 1, "", "kernels"], [71, 5, 1, "", "prim_func"], [71, 3, 1, "", "pymodule"]], "tilelang.jit.adapter.utils": [[72, 1, 1, "", "get_annotated_mod"], [72, 1, 1, "", "is_cpu_target"], [72, 1, 1, "", "is_cuda_target"], [72, 1, 1, "", "is_hip_target"], [72, 1, 1, "", "match_declare_kernel"], [72, 1, 1, "", "match_declare_kernel_cpu"], [72, 1, 1, "", "match_global_kernel"], [72, 1, 1, "", "pythonic_expr"]], "tilelang.jit.adapter.wrapper": [[73, 2, 1, "", "BaseWrapper"], [73, 2, 1, "", "TLCPUSourceWrapper"], [73, 2, 1, "", "TLCUDASourceWrapper"], [73, 2, 1, "", "TLHIPSourceWrapper"], [73, 2, 1, "", "TLNVRTCSourceWrapper"], [73, 2, 1, "", "TLPyWrapper"], [73, 2, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[73, 4, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[73, 3, 1, "", "CALL_PREFIX"], [73, 3, 1, "", "INIT_FUNC"], [73, 3, 1, "", "backend"], [73, 4, 1, "", "create_call_func"], [73, 3, 1, "", "device_mod"], [73, 4, 1, "", "get_cpu_init_func"], [73, 4, 1, "", "get_dynamic_symbolic_set"], [73, 3, 1, "", "host_mod"], [73, 4, 1, "", "parse_source_information"], [73, 3, 1, "", "pass_configs"], [73, 5, 1, "", "prim_func"], [73, 4, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[73, 3, 1, "", "backend"], [73, 4, 1, "", "create_dispatch_func"], [73, 3, 1, "", "device_mod"], [73, 4, 1, "", "generate_l2_persistent_map"], [73, 4, 1, "", "generate_tma_descriptor_args"], [73, 4, 1, "", "get_dynamic_symbolic_set"], [73, 4, 1, "", "get_init_func"], [73, 4, 1, "", "get_stream_type"], [73, 3, 1, "", "host_mod"], [73, 4, 1, "", "is_tma_descriptor_arg"], [73, 4, 1, "", "parse_source_information"], [73, 3, 1, "", "pass_configs"], [73, 5, 1, "", "prim_func"], [73, 4, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[73, 4, 1, "", "get_init_func"], [73, 4, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper": [[73, 4, 1, "", "create_dispatch_func"], [73, 4, 1, "", "generate_tma_descriptor_args"], [73, 4, 1, "", "get_stream_type"], [73, 4, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLPyWrapper": [[73, 4, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[73, 4, 1, "", "assign_device_module"], [73, 4, 1, "", "assign_host_module"], [73, 4, 1, "", "assign_optimized_module"], [73, 4, 1, "", "assign_pass_configs"], [73, 3, 1, "", "device_mod"], [73, 3, 1, "", "host_mod"], [73, 3, 1, "", "lib"], [73, 3, 1, "", "pass_configs"], [73, 3, 1, "", "target"], [73, 4, 1, "", "wrap"]], "tilelang.jit.kernel": [[75, 2, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[75, 3, 1, "id0", "adapter"], [75, 3, 1, "id1", "artifact"], [75, 3, 1, "", "config"], [75, 4, 1, "", "export_library"], [75, 4, 1, "", "from_database"], [75, 4, 1, "", "from_tilelang_function"], [75, 4, 1, "", "get_host_source"], [75, 4, 1, "", "get_kernel_source"], [75, 4, 1, "", "get_profiler"], [75, 4, 1, "", "get_tuner_result"], [75, 5, 1, "", "host_source"], [75, 5, 1, "", "kernel_source"], [75, 3, 1, "", "latency"], [75, 5, 1, "", "out_idx"], [75, 5, 1, "", "params"], [75, 3, 1, "", "prim_func"], [75, 3, 1, "", "ref_latency"], [75, 4, 1, "", "run_once"], [75, 3, 1, "id2", "torch_function"], [75, 4, 1, "", "update_tuner_result"]], "tilelang.jit.param": [[76, 2, 1, "", "Kernel"], [76, 2, 1, "", "Program"]], "tilelang.jit.param.Kernel": [[76, 4, 1, "", "get_kernel_source"]], "tilelang.language": [[78, 0, 0, "-", "allocate"], [77, 1, 1, "", "annotate_l2_hit_ratio"], [77, 1, 1, "", "annotate_layout"], [77, 1, 1, "", "annotate_padding"], [79, 0, 0, "-", "builtin"], [80, 0, 0, "-", "copy"], [81, 0, 0, "-", "customize"], [82, 0, 0, "-", "fill"], [83, 0, 0, "-", "frame"], [84, 0, 0, "-", "gemm"], [77, 1, 1, "", "import_source"], [85, 0, 0, "-", "kernel"], [86, 0, 0, "-", "logical"], [87, 0, 0, "-", "memscope"], [88, 0, 0, "-", "parallel"], [89, 0, 0, "-", "persistent"], [90, 0, 0, "-", "pipeline"], [91, 0, 0, "-", "print"], [92, 0, 0, "-", "proxy"], [93, 0, 0, "-", "reduce"], [77, 1, 1, "", "symbolic"], [94, 0, 0, "-", "tir"], [77, 1, 1, "", "use_swizzle"], [98, 0, 0, "-", "warpgroup"]], "tilelang.language.allocate": [[78, 1, 1, "", "alloc_fragment"], [78, 1, 1, "", "alloc_local"], [78, 1, 1, "", "alloc_shared"], [78, 1, 1, "", "alloc_var"]], "tilelang.language.builtin": [[79, 1, 1, "", "barrier_arrive"], [79, 1, 1, "", "barrier_wait"], [79, 1, 1, "", "create_list_of_mbarrier"], [79, 1, 1, "", "create_tma_descriptor"], [79, 1, 1, "", "dec_max_nreg"], [79, 1, 1, "", "fence_proxy_async"], [79, 1, 1, "", "get_mbarrier"], [79, 1, 1, "", "inc_max_nreg"], [79, 1, 1, "", "mbarrier_arrive"], [79, 1, 1, "", "mbarrier_expect_tx"], [79, 1, 1, "", "mbarrier_wait_parity"], [79, 1, 1, "", "no_set_max_nreg"], [79, 1, 1, "", "set_max_nreg"], [79, 1, 1, "", "shfl_down"], [79, 1, 1, "", "shfl_up"], [79, 1, 1, "", "shfl_xor"], [79, 1, 1, "", "sync_global"], [79, 1, 1, "", "sync_grid"], [79, 1, 1, "", "sync_thread_partial"], [79, 1, 1, "", "sync_threads"], [79, 1, 1, "", "tma_load"], [79, 1, 1, "", "tma_store_arrive"], [79, 1, 1, "", "tma_store_wait"], [79, 1, 1, "", "wait_wgmma"]], "tilelang.language.copy": [[80, 1, 1, "", "buffer_load_to_tile_region"], [80, 1, 1, "", "buffer_region_to_tile_region"], [80, 1, 1, "", "buffer_to_tile_region"], [80, 1, 1, "", "c2d_im2col"], [80, 1, 1, "", "copy"], [80, 1, 1, "", "region"]], "tilelang.language.customize": [[81, 1, 1, "", "atomic_add"], [81, 1, 1, "", "atomic_addx2"], [81, 1, 1, "", "atomic_addx4"], [81, 1, 1, "", "clamp"], [81, 1, 1, "", "dp4a"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "view"]], "tilelang.language.fill": [[82, 1, 1, "", "clear"], [82, 1, 1, "", "fill"]], "tilelang.language.frame": [[83, 2, 1, "", "FrameStack"], [83, 2, 1, "", "LetFrame"], [83, 1, 1, "", "get_let_value"], [83, 1, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[83, 4, 1, "", "get_value"], [83, 4, 1, "", "has_value"], [83, 4, 1, "", "pop"], [83, 4, 1, "", "push"], [83, 4, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[83, 4, 1, "", "Current"], [83, 4, 1, "", "get_value"], [83, 4, 1, "", "has_value"]], "tilelang.language.gemm": [[84, 1, 1, "", "gemm"]], "tilelang.language.kernel": [[85, 2, 1, "", "FrameStack"], [85, 1, 1, "", "Kernel"], [85, 2, 1, "", "KernelLaunchFrame"], [85, 1, 1, "", "get_block_binding"], [85, 1, 1, "", "get_block_bindings"], [85, 1, 1, "", "get_block_extent"], [85, 1, 1, "", "get_block_extents"], [85, 1, 1, "", "get_thread_binding"], [85, 1, 1, "", "get_thread_bindings"], [85, 1, 1, "", "get_thread_extent"], [85, 1, 1, "", "get_thread_extents"]], "tilelang.language.kernel.FrameStack": [[85, 4, 1, "", "pop"], [85, 4, 1, "", "push"], [85, 4, 1, "", "size"], [85, 4, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[85, 4, 1, "", "Current"], [85, 5, 1, "", "blocks"], [85, 4, 1, "", "get_block_binding"], [85, 4, 1, "", "get_block_bindings"], [85, 4, 1, "", "get_block_extent"], [85, 4, 1, "", "get_block_extents"], [85, 4, 1, "", "get_num_threads"], [85, 4, 1, "", "get_thread_binding"], [85, 4, 1, "", "get_thread_bindings"], [85, 4, 1, "", "get_thread_extent"], [85, 4, 1, "", "get_thread_extents"], [85, 5, 1, "", "num_threads"], [85, 5, 1, "", "threads"]], "tilelang.language.logical": [[86, 1, 1, "", "all_of"], [86, 1, 1, "", "any_of"]], "tilelang.language.parallel": [[88, 1, 1, "", "Parallel"]], "tilelang.language.persistent": [[89, 1, 1, "", "Persistent"]], "tilelang.language.pipeline": [[90, 1, 1, "", "Pipelined"]], "tilelang.language.print": [[91, 1, 1, "", "print"]], "tilelang.language.proxy": [[92, 2, 1, "", "BaseTensorProxy"], [92, 2, 1, "", "BufferProxy"], [92, 2, 1, "", "FragmentBufferProxy"], [92, 2, 1, "", "LocalBufferProxy"], [92, 2, 1, "", "SharedBufferProxy"], [92, 2, 1, "", "TensorProxy"], [92, 1, 1, "", "make_tensor"], [92, 1, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[92, 3, 1, "", "default_align"], [92, 3, 1, "", "default_offset_factor"], [92, 3, 1, "", "default_scope"], [92, 4, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[92, 4, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[92, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[92, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[92, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[93, 1, 1, "", "cumsum"], [93, 1, 1, "", "reduce"], [93, 1, 1, "", "reduce_absmax"], [93, 1, 1, "", "reduce_abssum"], [93, 1, 1, "", "reduce_max"], [93, 1, 1, "", "reduce_min"], [93, 1, 1, "", "reduce_sum"]], "tilelang.language.tir": [[95, 0, 0, "-", "entry"], [96, 0, 0, "-", "ir"], [97, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[95, 1, 1, "", "macro"], [95, 1, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[96, 1, 1, "", "grid"], [96, 1, 1, "", "parallel"], [96, 1, 1, "", "serial"], [96, 1, 1, "", "thread_binding"], [96, 1, 1, "", "unroll"], [96, 1, 1, "", "vectorized"]], "tilelang.language.tir.op": [[97, 1, 1, "", "TVMBackendAllocWorkspace"], [97, 1, 1, "", "TVMBackendFreeWorkspace"], [97, 1, 1, "", "abs"], [97, 1, 1, "", "acos"], [97, 1, 1, "", "acosh"], [97, 1, 1, "", "address_of"], [97, 1, 1, "", "all"], [97, 1, 1, "", "any"], [97, 1, 1, "", "anylist_getitem"], [97, 1, 1, "", "anylist_resetitem"], [97, 1, 1, "", "anylist_setitem_call_cpacked"], [97, 1, 1, "", "anylist_setitem_call_packed"], [97, 1, 1, "", "asin"], [97, 1, 1, "", "asinh"], [97, 1, 1, "", "assume"], [97, 1, 1, "", "atan"], [97, 1, 1, "", "atan2"], [97, 1, 1, "", "atanh"], [97, 1, 1, "", "bitwise_and"], [97, 1, 1, "", "bitwise_not"], [97, 1, 1, "", "bitwise_or"], [97, 1, 1, "", "bitwise_xor"], [97, 1, 1, "", "call_cpacked"], [97, 1, 1, "", "call_cpacked_lowered"], [97, 1, 1, "", "call_extern"], [97, 1, 1, "", "call_intrin"], [97, 1, 1, "", "call_llvm_intrin"], [97, 1, 1, "", "call_llvm_pure_intrin"], [97, 1, 1, "", "call_packed"], [97, 1, 1, "", "call_packed_lowered"], [97, 1, 1, "", "call_pure_extern"], [97, 1, 1, "", "call_tir"], [97, 1, 1, "", "ceil"], [97, 1, 1, "", "ceildiv"], [97, 1, 1, "", "clz"], [97, 1, 1, "", "comm_reducer"], [97, 1, 1, "", "copysign"], [97, 1, 1, "", "cos"], [97, 1, 1, "", "cosh"], [97, 1, 1, "", "create_barriers"], [97, 1, 1, "", "div"], [97, 1, 1, "", "end_profile_intrinsic"], [97, 1, 1, "", "erf"], [97, 1, 1, "", "exp"], [97, 1, 1, "", "exp10"], [97, 1, 1, "", "exp2"], [97, 1, 1, "", "floor"], [97, 1, 1, "", "floordiv"], [97, 1, 1, "", "floormod"], [97, 1, 1, "", "fmod"], [97, 1, 1, "", "hypot"], [97, 1, 1, "", "if_then_else"], [97, 1, 1, "", "indexdiv"], [97, 1, 1, "", "indexmod"], [97, 1, 1, "", "infinity"], [97, 1, 1, "", "isfinite"], [97, 1, 1, "", "isinf"], [97, 1, 1, "", "isnan"], [97, 1, 1, "", "isnullptr"], [97, 1, 1, "", "ldexp"], [97, 1, 1, "", "likely"], [97, 1, 1, "", "log"], [97, 1, 1, "", "log10"], [97, 1, 1, "", "log1p"], [97, 1, 1, "", "log2"], [97, 1, 1, "", "lookup_param"], [97, 1, 1, "", "max_value"], [97, 1, 1, "", "min_value"], [97, 1, 1, "", "mma_fill"], [97, 1, 1, "", "mma_store"], [97, 1, 1, "", "nearbyint"], [97, 1, 1, "", "nextafter"], [97, 1, 1, "", "popcount"], [97, 1, 1, "", "pow"], [97, 1, 1, "", "pow_of_int"], [97, 1, 1, "", "power"], [97, 1, 1, "", "ptx_arrive_barrier"], [97, 1, 1, "", "ptx_arrive_barrier_expect_tx"], [97, 1, 1, "", "ptx_commit_group"], [97, 1, 1, "", "ptx_cp_async"], [97, 1, 1, "", "ptx_cp_async_barrier"], [97, 1, 1, "", "ptx_cp_async_bulk"], [97, 1, 1, "", "ptx_init_barrier_thread_count"], [97, 1, 1, "", "ptx_ldmatrix"], [97, 1, 1, "", "ptx_mma"], [97, 1, 1, "", "ptx_mma_sp"], [97, 1, 1, "", "ptx_wait_barrier"], [97, 1, 1, "", "ptx_wait_group"], [97, 1, 1, "", "q_multiply_shift"], [97, 1, 1, "", "q_multiply_shift_per_axis"], [97, 1, 1, "", "reinterpret"], [97, 1, 1, "", "ret"], [97, 1, 1, "", "round"], [97, 1, 1, "", "rsqrt"], [97, 1, 1, "", "shift_left"], [97, 1, 1, "", "shift_right"], [97, 1, 1, "", "sigmoid"], [97, 1, 1, "", "sin"], [97, 1, 1, "", "sinh"], [97, 1, 1, "", "sqrt"], [97, 1, 1, "", "start_profile_intrinsic"], [97, 1, 1, "", "tan"], [97, 1, 1, "", "tanh"], [97, 1, 1, "", "trace"], [97, 1, 1, "", "trunc"], [97, 1, 1, "", "truncdiv"], [97, 1, 1, "", "truncmod"], [97, 1, 1, "", "tvm_access_ptr"], [97, 1, 1, "", "tvm_bmma_sync"], [97, 1, 1, "", "tvm_check_return"], [97, 1, 1, "", "tvm_fill_fragment"], [97, 1, 1, "", "tvm_load_matrix_sync"], [97, 1, 1, "", "tvm_mfma"], [97, 1, 1, "", "tvm_mfma_store"], [97, 1, 1, "", "tvm_mma_sync"], [97, 1, 1, "", "tvm_rdna_wmma"], [97, 1, 1, "", "tvm_rdna_wmma_store"], [97, 1, 1, "", "tvm_stack_alloca"], [97, 1, 1, "", "tvm_stack_make_array"], [97, 1, 1, "", "tvm_stack_make_shape"], [97, 1, 1, "", "tvm_storage_sync"], [97, 1, 1, "", "tvm_store_matrix_sync"], [97, 1, 1, "", "tvm_struct_get"], [97, 1, 1, "", "tvm_struct_set"], [97, 1, 1, "", "tvm_thread_allreduce"], [97, 1, 1, "", "tvm_thread_invariant"], [97, 1, 1, "", "tvm_throw_last_error"], [97, 1, 1, "", "tvm_tuple"], [97, 1, 1, "", "tvm_warp_activemask"], [97, 1, 1, "", "tvm_warp_shuffle"], [97, 1, 1, "", "tvm_warp_shuffle_down"], [97, 1, 1, "", "tvm_warp_shuffle_up"], [97, 1, 1, "", "type_annotation"], [97, 1, 1, "", "undef"], [97, 1, 1, "", "vectorcombine"], [97, 1, 1, "", "vectorhigh"], [97, 1, 1, "", "vectorlow"], [97, 1, 1, "", "vscale"]], "tilelang.language.warpgroup": [[98, 1, 1, "", "WarpSpecialize"], [98, 2, 1, "", "WarpSpecializeFrame"], [98, 1, 1, "", "ws"]], "tilelang.layout": [[100, 0, 0, "-", "fragment"], [101, 0, 0, "-", "layout"], [102, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[100, 2, 1, "", "Fragment"], [100, 1, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[100, 4, 1, "", "condense_rep_var"], [100, 4, 1, "", "get_thread_size"], [100, 4, 1, "", "map_forward_thread"], [100, 4, 1, "", "repeat"], [100, 4, 1, "", "replicate"], [100, 5, 1, "", "thread"]], "tilelang.layout.layout": [[101, 2, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[101, 4, 1, "", "get_forward_vars"], [101, 4, 1, "", "get_input_shape"], [101, 4, 1, "", "get_output_shape"], [101, 5, 1, "", "index"], [101, 4, 1, "", "inverse"], [101, 4, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[102, 1, 1, "", "make_swizzled_layout"]], "tilelang.primitives": [[105, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[106, 0, 0, "-", "base"], [105, 1, 1, "", "gemm"], [107, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[106, 2, 1, "", "GemmBaseParams"], [106, 2, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[106, 3, 1, "", "A"], [106, 3, 1, "", "B"], [106, 3, 1, "", "C"], [106, 3, 1, "", "block_col_warps"], [106, 3, 1, "", "block_row_warps"], [106, 3, 1, "", "chunk"], [106, 5, 1, "", "class_attributes"], [106, 4, 1, "", "get_warp_size"], [106, 4, 1, "", "infer_block_partition"], [106, 3, 1, "", "k_pack"], [106, 4, 1, "", "params_as_dict"], [106, 3, 1, "", "policy"], [106, 3, 1, "", "transpose_A"], [106, 3, 1, "", "transpose_B"], [106, 3, 1, "", "warp_col_tiles"], [106, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[106, 3, 1, "", "FullCol"], [106, 3, 1, "", "FullRow"], [106, 3, 1, "", "Square"], [106, 4, 1, "", "compute_warp_partition"], [106, 4, 1, "", "from_warp_partition"], [106, 4, 1, "", "is_full_col"], [106, 4, 1, "", "is_full_row"], [106, 4, 1, "", "is_square"], [106, 4, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[107, 2, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[107, 5, 1, "", "accum_dtype"], [107, 4, 1, "", "gemm_rrr"], [107, 4, 1, "", "gemm_rsr"], [107, 4, 1, "", "gemm_srr"], [107, 4, 1, "", "gemm_ssr"], [107, 5, 1, "", "in_dtype"], [107, 4, 1, "", "invoke"]], "tilelang.profiler": [[108, 2, 1, "", "Profiler"], [109, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[108, 3, 1, "id0", "adapter"], [108, 4, 1, "", "assert_allclose"], [108, 4, 1, "", "assert_consistent"], [108, 4, 1, "", "determine_profiler"], [108, 4, 1, "", "do_bench"], [108, 5, 1, "", "func"], [108, 4, 1, "", "manual_assert_close"], [108, 3, 1, "id1", "params"], [108, 3, 1, "id2", "result_idx"], [108, 4, 1, "", "run_once"], [108, 3, 1, "id3", "supply_type"], [108, 4, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[109, 1, 1, "", "do_bench"]], "tilelang.transform": [[118, 1, 1, "", "AlignDynamicSharedMemoryAllocations"], [118, 1, 1, "", "AnnotateDeviceRegions"], [118, 1, 1, "", "ClusterPlanning"], [118, 1, 1, "", "ConfigIndexBitwidth"], [118, 1, 1, "", "EliminateStorageSyncForMBarrier"], [118, 1, 1, "", "FlattenBuffer"], [118, 1, 1, "", "FrontendLegalize"], [118, 1, 1, "", "IfStmtBinding"], [118, 1, 1, "", "InjectFenceProxy"], [118, 1, 1, "", "InjectPTXAsyncCopy"], [118, 1, 1, "", "InjectSoftwarePipeline"], [118, 1, 1, "", "InjectTmaBarrier"], [118, 1, 1, "", "LayoutInference"], [118, 1, 1, "", "LegalizeSafeMemoryAccess"], [118, 1, 1, "", "LegalizeVectorizedLoop"], [118, 1, 1, "", "LoopVectorizeDynamic"], [118, 1, 1, "", "LowerDeviceStorageAccessInfo"], [118, 1, 1, "", "LowerHopperIntrin"], [118, 1, 1, "", "LowerL2Persistent"], [118, 1, 1, "", "LowerTileOp"], [118, 1, 1, "", "MakePackedAPI"], [118, 1, 1, "", "MergeIfStmt"], [118, 1, 1, "", "MergeSharedMemoryAllocations"], [118, 1, 1, "", "MultiVersionBuffer"], [118, 1, 1, "", "PersistThreadblock"], [118, 1, 1, "", "PipelinePlanning"], [118, 1, 1, "", "RewriteWgmmaSync"], [118, 1, 1, "", "ThreadPartialSync"], [118, 1, 1, "", "ThreadSync"], [118, 1, 1, "", "VectorizeLoop"], [118, 1, 1, "", "WarpSpecialized"], [118, 1, 1, "", "WarpSpecializedPipeline"], [118, 1, 1, "", "get_pass_context"], [119, 0, 0, "-", "pass_config"], [120, 0, 0, "-", "simplify"]], "tilelang.transform.pass_config": [[119, 2, 1, "", "PassConfigKey"]], "tilelang.transform.pass_config.PassConfigKey": [[119, 3, 1, "", "CUDA_KERNELS_OUTPUT_DIR"], [119, 3, 1, "", "TIR_ADD_LOWER_PASS"], [119, 3, 1, "", "TIR_DISABLE_CSE"], [119, 3, 1, "", "TIR_DISABLE_STORAGE_REWRITE"], [119, 3, 1, "", "TIR_DISABLE_VECTORIZE"], [119, 3, 1, "", "TIR_ENABLE_DEBUG"], [119, 3, 1, "", "TIR_ENABLE_EQUIV_TERMS_IN_CSE"], [119, 3, 1, "", "TIR_MERGE_STATIC_SMEM"], [119, 3, 1, "", "TIR_NOALIAS"], [119, 3, 1, "", "TIR_SIMPLIFY"], [119, 3, 1, "", "TIR_USE_ASYNC_COPY"], [119, 3, 1, "", "TL_CONFIG_INDEX_BITWIDTH"], [119, 3, 1, "", "TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"], [119, 3, 1, "", "TL_DISABLE_DYNAMIC_TAIL_SPLIT"], [119, 3, 1, "", "TL_DISABLE_SAFE_MEMORY_ACCESS"], [119, 3, 1, "", "TL_DISABLE_TMA_LOWER"], [119, 3, 1, "", "TL_DISABLE_WARP_SPECIALIZED"], [119, 3, 1, "", "TL_DYNAMIC_ALIGNMENT"], [119, 3, 1, "", "TL_SIMPLIFY"]], "tilelang.transform.simplify": [[120, 1, 1, "", "Simplify"], [120, 1, 1, "", "apply_simplify"], [120, 1, 1, "", "simplify_prim_func"]], "tilelang.utils": [[122, 0, 0, "-", "deprecated"], [123, 0, 0, "-", "language"], [124, 0, 0, "-", "target"], [125, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[122, 1, 1, "", "deprecated"]], "tilelang.utils.language": [[123, 1, 1, "", "array_reduce"], [123, 1, 1, "", "get_buffer_elems"], [123, 1, 1, "", "is_fragment"], [123, 1, 1, "", "is_global"], [123, 1, 1, "", "is_local"], [123, 1, 1, "", "is_shared"], [123, 1, 1, "", "is_shared_dynamic"], [123, 1, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[124, 1, 1, "", "check_cuda_availability"], [124, 1, 1, "", "check_hip_availability"], [124, 1, 1, "", "determine_target"]], "tilelang.utils.tensor": [[125, 2, 1, "", "TensorSupplyType"], [125, 1, 1, "", "adapt_torch2tvm"], [125, 1, 1, "", "get_tensor_supply"], [125, 1, 1, "", "map_torch_type"], [125, 1, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[125, 3, 1, "", "Auto"], [125, 3, 1, "", "Integer"], [125, 3, 1, "", "Normal"], [125, 3, 1, "", "One"], [125, 3, 1, "", "Randn"], [125, 3, 1, "", "Uniform"], [125, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 137], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131], "packag": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 94, 99, 103, 104, 105, 108, 110, 114, 115, 118, 121], "subpackag": [1, 7, 9, 18, 60, 61, 77, 104], "submodul": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 94, 99, 105, 108, 110, 115, 118, 121, 135], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "content": [1, 2, 4, 7, 9, 14, 18, 22, 27, 30, 39, 41, 48, 54, 60, 61, 63, 65, 70, 77, 94, 99, 103, 104, 105, 108, 110, 114, 115, 118, 121], "autotun": [2, 3, 131], "param": [3, 51, 76], "cach": [4, 5, 6], "kernel_cach": 5, "tuner_cach": 6, "carver": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 143], "analysi": 8, "arch": [9, 10, 11, 12, 13, 14, 15], "arch_bas": 10, "cdna": 11, "cpu": 12, "cuda": [13, 128], "driver": [14, 15], "cuda_driv": 15, "common_schedul": 16, "matmul_analysi": 17, "roller": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "bestfit": 19, "hint": 20, "node": 21, "polici": [22, 23, 24, 25], "common": [23, 28, 39, 40], "default": 24, "tensorcor": 25, "raster": 26, "shape_infer": [27, 28, 29], "tir": [29, 94, 95, 96, 97], "templat": [30, 31, 32, 33, 34, 35, 36, 37], "base": [31, 62, 106, 134, 136], "conv": 32, "elementwis": [33, 128], "flashattent": 34, "gemv": [35, 131], "general_reduc": 36, "matmul": 37, "util": [38, 59, 72, 113, 121, 122, 123, 124, 125], "transform_kind": 40, "contrib": [41, 42, 43, 44, 45, 46, 47], "cc": 42, "dlpack": [43, 68], "hipcc": 44, "nvcc": 45, "nvrtc": [46, 70, 71], "rocm": 47, "engin": [48, 49, 50, 51, 52], "callback": [49, 144], "lower": 50, "phase": 52, "env": [53, 74], "intrins": [54, 55, 56, 57, 58, 59], "mfma_layout": 55, "mfma_macro_gener": 56, "mma_layout": 57, "mma_macro_gener": 58, "jit": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "adapt": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "ctype": [63, 64], "cython": [65, 66, 67], "cython_wrapp": 67, "libgen": 69, "wrapper": 73, "kernel": [75, 85, 140, 147, 148], "languag": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 123, 136, 137, 138, 139, 140, 144], "alloc": [78, 136], "builtin": 79, "copi": [80, 140], "custom": [81, 131], "fill": [82, 140], "frame": 83, "gemm": [84, 105, 106, 107, 140], "logic": 86, "memscop": 87, "parallel": [88, 131, 140], "persist": 89, "pipelin": [90, 127, 140, 146], "print": [91, 144], "proxi": 92, "reduc": 93, "entri": 95, "ir": 96, "op": 97, "warpgroup": 98, "layout": [99, 100, 101, 102, 127, 142], "fragment": 100, "swizzl": [102, 127], "math": 103, "primit": [104, 105, 106, 107, 139, 147], "gemm_mma": 107, "profil": [108, 109], "bench": 109, "quantiz": [110, 111, 112, 113], "lop3": 111, "test": 114, "tool": [115, 116, 117], "analyz": 116, "plot_layout": 117, "transform": [118, 119, 120], "pass_config": 119, "simplifi": 120, "deprec": 122, "target": 124, "tensor": 125, "convolut": 126, "write": [127, 147, 148], "high": [127, 147, 148], "perform": [127, 132, 143, 147, 148], "flashmla": 127, "hopper": [127, 131], "introduct": [127, 136], "mla": 127, "benchmark": [127, 131, 143], "result": 127, "implement": [127, 131, 143], "infer": 127, "threadblock": 127, "share": 127, "memori": [127, 136, 142], "warp": 127, "special": 127, "split": 127, "kv": 127, "On": 127, "amd": 127, "mi300x": 127, "acceler": 127, "architectur": 127, "consider": 127, "optim": [127, 143], "strategi": 127, "evalu": 127, "futur": 127, "opportun": 127, "oper": [128, 137], "add": 128, "how": 128, "compil": [128, 136, 143, 145], "dynam": 128, "shape": 128, "address": 128, "boundari": 128, "relat": 128, "issu": [128, 144], "comparison": [128, 132], "cute": 128, "conclus": [128, 131, 132, 144], "flash": [129, 130], "attent": [129, 130], "linear": 130, "gener": [131, 132, 133, 143, 144], "matrix": [131, 132, 133, 143, 144], "vector": 131, "multipl": [131, 132, 133, 143, 144], "triton": 131, "naiv": 131, "more": 131, "concurr": 131, "k": 131, "dimens": 131, "read": 131, "tvm_thread_allreduc": 131, "instead": 131, "atomicadd": 131, "tabl": [131, 134], "gpu": [131, 132], "tile": [132, 136, 137, 138, 139, 140, 144, 148], "librari": [132, 148], "why": 132, "anoth": 132, "dsl": 132, "exampl": [132, 143, 144], "basic": 132, "structur": 132, "kei": 132, "concept": 132, "other": 132, "differ": 132, "platform": 132, "further": 132, "resourc": 132, "dequant": 133, "tmac": 134, "look": 134, "up": 134, "mix": 134, "precis": 134, "comput": [134, 146], "instal": 135, "guid": 135, "pip": 135, "build": 135, "from": 135, "sourc": [135, 144], "method": 135, "1": [135, 143], "us": [135, 143], "your": 135, "own": 135, "tvm": 135, "2": [135, 143], "bundl": 135, "3": [135, 143], "provid": 135, "script": 135, "nightli": 135, "version": 135, "The": 136, "A": 136, "brief": 136, "program": [136, 144], "interfac": 136, "flow": 136, "model": 136, "declar": 136, "explicit": 136, "hardwar": 136, "welcom": 137, "get": 137, "start": 137, "tutori": 137, "deep": 137, "learn": 137, "refer": 137, "privaci": [137, 141], "ast": 138, "tilelibrari": 140, "t": [140, 144], "alloc_shar": 140, "alloc_frag": 140, "reduce_max": 140, "reduce_sum": 140, "clear": 140, "use_swizzl": 140, "annot": 142, "auto": 143, "tune": 143, "techniqu": 143, "overview": [143, 144], "step": 143, "reserv": 143, "paramet": 143, "candid": 143, "configur": 143, "debug": 144, "correct": 144, "post": 144, "process": 144, "runtim": 144, "just": 145, "In": 145, "time": 145, "data": 146, "movement": 146, "thread": 147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [7, "subpackages"], [9, "subpackages"], [18, "subpackages"], [60, "subpackages"], [61, "subpackages"], [77, "subpackages"], [104, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [4, "submodules"], [7, "submodules"], [9, "submodules"], [14, "submodules"], [18, "submodules"], [22, "submodules"], [27, "submodules"], [30, "submodules"], [39, "submodules"], [41, "submodules"], [48, "submodules"], [54, "submodules"], [60, "submodules"], [61, "submodules"], [63, "submodules"], [65, "submodules"], [70, "submodules"], [77, "submodules"], [94, "submodules"], [99, "submodules"], [105, "submodules"], [108, "submodules"], [110, "submodules"], [115, "submodules"], [118, "submodules"], [121, "submodules"]], "Module contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-tilelang.cache"], [7, "module-contents"], [9, "module-contents"], [14, "module-contents"], [18, "module-contents"], [22, "module-contents"], [27, "module-contents"], [30, "module-contents"], [39, "module-tilelang.common"], [41, "module-tilelang.contrib"], [48, "module-tilelang.engine"], [54, "module-tilelang.intrinsics"], [60, "module-tilelang.jit"], [61, "module-tilelang.jit.adapter"], [63, "module-tilelang.jit.adapter.ctypes"], [65, "module-tilelang.jit.adapter.cython"], [70, "module-tilelang.jit.adapter.nvrtc"], [77, "module-tilelang.language"], [94, "module-tilelang.language.tir"], [99, "module-tilelang.layout"], [103, "module-contents"], [104, "module-tilelang.primitives"], [105, "module-tilelang.primitives.gemm"], [108, "module-tilelang.profiler"], [110, "module-contents"], [114, "module-contents"], [115, "module-contents"], [118, "module-tilelang.transform"], [121, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.autotuner.param module": [[3, "tilelang-autotuner-param-module"]], "tilelang.cache package": [[4, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[5, "module-tilelang.cache.kernel_cache"]], "tilelang.cache.tuner_cache module": [[6, "module-tilelang.cache.tuner_cache"]], "tilelang.carver package": [[7, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[8, "tilelang-carver-analysis-module"]], "tilelang.carver.arch package": [[9, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[10, "tilelang-carver-arch-arch-base-module"]], "tilelang.carver.arch.cdna module": [[11, "tilelang-carver-arch-cdna-module"]], "tilelang.carver.arch.cpu module": [[12, "tilelang-carver-arch-cpu-module"]], "tilelang.carver.arch.cuda module": [[13, "tilelang-carver-arch-cuda-module"]], "tilelang.carver.arch.driver package": [[14, "tilelang-carver-arch-driver-package"]], "tilelang.carver.arch.driver.cuda_driver module": [[15, "tilelang-carver-arch-driver-cuda-driver-module"]], "tilelang.carver.common_schedules module": [[16, "tilelang-carver-common-schedules-module"]], "tilelang.carver.matmul_analysis module": [[17, "tilelang-carver-matmul-analysis-module"]], "tilelang.carver.roller package": [[18, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[19, "tilelang-carver-roller-bestfit-module"]], "tilelang.carver.roller.hint module": [[20, "tilelang-carver-roller-hint-module"]], "tilelang.carver.roller.node module": [[21, "tilelang-carver-roller-node-module"]], "tilelang.carver.roller.policy package": [[22, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[23, "tilelang-carver-roller-policy-common-module"]], "tilelang.carver.roller.policy.default module": [[24, "tilelang-carver-roller-policy-default-module"]], "tilelang.carver.roller.policy.tensorcore module": [[25, "tilelang-carver-roller-policy-tensorcore-module"]], "tilelang.carver.roller.rasterization module": [[26, "tilelang-carver-roller-rasterization-module"]], "tilelang.carver.roller.shape_inference package": [[27, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[28, "tilelang-carver-roller-shape-inference-common-module"]], "tilelang.carver.roller.shape_inference.tir module": [[29, "tilelang-carver-roller-shape-inference-tir-module"]], "tilelang.carver.template package": [[30, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[31, "tilelang-carver-template-base-module"]], "tilelang.carver.template.conv module": [[32, "tilelang-carver-template-conv-module"]], "tilelang.carver.template.elementwise module": [[33, "tilelang-carver-template-elementwise-module"]], "tilelang.carver.template.flashattention module": [[34, "tilelang-carver-template-flashattention-module"]], "tilelang.carver.template.gemv module": [[35, "tilelang-carver-template-gemv-module"]], "tilelang.carver.template.general_reduce module": [[36, "tilelang-carver-template-general-reduce-module"]], "tilelang.carver.template.matmul module": [[37, "tilelang-carver-template-matmul-module"]], "tilelang.carver.utils module": [[38, "tilelang-carver-utils-module"]], "tilelang.common package": [[39, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[40, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[41, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[42, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[43, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[44, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[45, "module-tilelang.contrib.nvcc"]], "tilelang.contrib.nvrtc module": [[46, "tilelang-contrib-nvrtc-module"]], "tilelang.contrib.rocm module": [[47, "module-tilelang.contrib.rocm"]], "tilelang.engine package": [[48, "tilelang-engine-package"]], "tilelang.engine.callback module": [[49, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[50, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[51, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[52, "module-tilelang.engine.phase"]], "tilelang.env module": [[53, "module-tilelang.env"]], "tilelang.intrinsics package": [[54, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[55, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[56, "tilelang-intrinsics-mfma-macro-generator-module"]], "tilelang.intrinsics.mma_layout module": [[57, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[58, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[59, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[60, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[61, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[62, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[63, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[64, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[65, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[66, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[67, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[68, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[69, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.nvrtc package": [[70, "tilelang-jit-adapter-nvrtc-package"]], "tilelang.jit.adapter.nvrtc.adapter module": [[71, "module-tilelang.jit.adapter.nvrtc.adapter"]], "tilelang.jit.adapter.utils module": [[72, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[73, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[74, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[75, "module-tilelang.jit.kernel"]], "tilelang.jit.param module": [[76, "module-tilelang.jit.param"]], "tilelang.language package": [[77, "tilelang-language-package"]], "tilelang.language.allocate module": [[78, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[79, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[80, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[81, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[82, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[83, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[84, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[85, "module-tilelang.language.kernel"]], "tilelang.language.logical module": [[86, "module-tilelang.language.logical"]], "tilelang.language.memscope module": [[87, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[88, "module-tilelang.language.parallel"]], "tilelang.language.persistent module": [[89, "module-tilelang.language.persistent"]], "tilelang.language.pipeline module": [[90, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[91, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[92, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[93, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[94, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[95, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[96, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[97, "module-tilelang.language.tir.op"]], "tilelang.language.warpgroup module": [[98, "module-tilelang.language.warpgroup"]], "tilelang.layout package": [[99, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[100, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[101, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[102, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[103, "tilelang-math-package"]], "tilelang.primitives package": [[104, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[105, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[106, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[107, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[108, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[109, "module-tilelang.profiler.bench"]], "tilelang.quantize package": [[110, "tilelang-quantize-package"]], "tilelang.quantize.lop3 module": [[111, "tilelang-quantize-lop3-module"]], "tilelang.quantize.quantization module": [[112, "tilelang-quantize-quantization-module"]], "tilelang.quantize.utils module": [[113, "tilelang-quantize-utils-module"]], "tilelang.testing package": [[114, "tilelang-testing-package"]], "tilelang.tools package": [[115, "tilelang-tools-package"]], "tilelang.tools.Analyzer module": [[116, "tilelang-tools-analyzer-module"]], "tilelang.tools.plot_layout module": [[117, "tilelang-tools-plot-layout-module"]], "tilelang.transform package": [[118, "tilelang-transform-package"]], "tilelang.transform.pass_config module": [[119, "module-tilelang.transform.pass_config"]], "tilelang.transform.simplify module": [[120, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[121, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[122, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[123, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[124, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[125, "module-tilelang.utils.tensor"]], "Convolution": [[126, "convolution"]], "\ud83d\ude80 Write High Performance FlashMLA with TileLang on Hopper": [[127, "write-high-performance-flashmla-with-tilelang-on-hopper"]], "Introduction to MLA": [[127, "introduction-to-mla"]], "Benchmark Results": [[127, "benchmark-results"]], "Implementation": [[127, "implementation"]], "Layout Inference": [[127, "layout-inference"]], "Threadblock Swizzling": [[127, "threadblock-swizzling"]], "Shared Memory Swizzling": [[127, "shared-memory-swizzling"]], "Warp-Specialization": [[127, "warp-specialization"]], "Pipeline": [[127, "pipeline"]], "Split-KV": [[127, "split-kv"]], "\ud83d\ude80 On AMD MI300X Accelerators": [[127, "on-amd-mi300x-accelerators"]], "Architectural Considerations and Optimization Strategies": [[127, "architectural-considerations-and-optimization-strategies"]], "Performance Evaluation": [[127, "performance-evaluation"]], "Future Optimization Opportunities": [[127, "future-optimization-opportunities"]], "ElementWise Operators": [[128, "elementwise-operators"]], "Elementwise add in TileLang": [[128, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[128, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[128, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[128, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[128, "conclusion"], [131, "conclusion"], [132, "conclusion"], [144, "conclusion"]], "Flash Attention": [[129, "flash-attention"]], "Flash Linear Attention": [[130, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[131, "general-matrix-vector-multiplication-gemv"]], "Triton Implementation": [[131, "triton-implementation"]], "Naive Implementation in TileLang": [[131, "naive-implementation-in-tilelang"]], "More Concurrency": [[131, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[131, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[131, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[131, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[131, "autotune"]], "Benchmark Table on Hopper GPU": [[131, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[132, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[132, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[132, "matrix-multiplication-example"], [143, "matrix-multiplication-example"], [144, "matrix-multiplication-example"]], "Basic Structure": [[132, "basic-structure"]], "Key Concepts": [[132, "key-concepts"]], "Comparison with Other DSLs": [[132, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[132, "performance-on-different-platforms"]], "Further Resources": [[132, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[133, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[134, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[135, "installation-guide"]], "Installing with pip": [[135, "installing-with-pip"]], "Building from Source": [[135, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[135, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[135, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[135, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[135, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[136, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[136, "programming-interface"]], "Programming Interfaces": [[136, "programming-interfaces"]], "Compilation Flow": [[136, "compilation-flow"]], "Tile-based Programming Model": [[136, "tile-based-programming-model"]], "Tile declarations": [[136, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[136, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[137, "welcome-to-tile-language"]], "GET STARTED": [[137, null]], "TUTORIALS": [[137, null]], "DEEP LEARNING OPERATORS": [[137, null]], "LANGUAGE REFERENCE": [[137, null]], "API Reference": [[137, null]], "Privacy": [[137, null], [141, "privacy"]], "Tile Language AST": [[138, "tile-language-ast"]], "Tile Language: Primitives": [[139, "tile-language-primitives"]], "Tile Language: TileLibrary": [[140, "tile-language-tilelibrary"]], "T.Kernel": [[140, "t-kernel"]], "T.alloc_shared": [[140, "t-alloc-shared"]], "T.alloc_fragment": [[140, "t-alloc-fragment"]], "T.copy": [[140, "t-copy"]], "T.gemm": [[140, "t-gemm"]], "T.reduce_max T.reduce_sum": [[140, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[140, "t-parallel"]], "T.Pipelined": [[140, "t-pipelined"]], "T.clear T.fill": [[140, "t-clear-t-fill"]], "T.use_swizzle": [[140, "t-use-swizzle"]], "Annotate Memory Layout": [[142, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[143, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[143, "overview"], [144, "overview"]], "Step 1: Implement with Reserved Parameters": [[143, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[143, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[143, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[143, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[144, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[144, "debugging-generation-issues"]], "Debugging Correctness Issues": [[144, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[144, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[144, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[145, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[146, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[147, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[148, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"cached() (in module tilelang.cache)": [[4, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[4, "tilelang.cache.clear_cache"]], "get_cache_dir() (in module tilelang.cache)": [[4, "tilelang.cache.get_cache_dir"]], "module": [[4, "module-tilelang.cache"], [5, "module-tilelang.cache.kernel_cache"], [6, "module-tilelang.cache.tuner_cache"], [39, "module-tilelang.common"], [40, "module-tilelang.common.transform_kind"], [41, "module-tilelang.contrib"], [42, "module-tilelang.contrib.cc"], [43, "module-tilelang.contrib.dlpack"], [44, "module-tilelang.contrib.hipcc"], [45, "module-tilelang.contrib.nvcc"], [47, "module-tilelang.contrib.rocm"], [48, "module-tilelang.engine"], [49, "module-tilelang.engine.callback"], [50, "module-tilelang.engine.lower"], [51, "module-tilelang.engine.param"], [52, "module-tilelang.engine.phase"], [53, "module-tilelang.env"], [54, "module-tilelang.intrinsics"], [55, "module-tilelang.intrinsics.mfma_layout"], [57, "module-tilelang.intrinsics.mma_layout"], [58, "module-tilelang.intrinsics.mma_macro_generator"], [59, "module-tilelang.intrinsics.utils"], [60, "module-tilelang.jit"], [61, "module-tilelang.jit.adapter"], [62, "module-tilelang.jit.adapter.base"], [63, "module-tilelang.jit.adapter.ctypes"], [64, "module-tilelang.jit.adapter.ctypes.adapter"], [65, "module-tilelang.jit.adapter.cython"], [66, "module-tilelang.jit.adapter.cython.adapter"], [67, "module-tilelang.jit.adapter.cython.cython_wrapper"], [68, "module-tilelang.jit.adapter.dlpack"], [69, "module-tilelang.jit.adapter.libgen"], [70, "module-tilelang.jit.adapter.nvrtc"], [71, "module-tilelang.jit.adapter.nvrtc.adapter"], [72, "module-tilelang.jit.adapter.utils"], [73, "module-tilelang.jit.adapter.wrapper"], [74, "module-tilelang.jit.env"], [75, "module-tilelang.jit.kernel"], [76, "module-tilelang.jit.param"], [77, "module-tilelang.language"], [78, "module-tilelang.language.allocate"], [79, "module-tilelang.language.builtin"], [80, "module-tilelang.language.copy"], [81, "module-tilelang.language.customize"], [82, "module-tilelang.language.fill"], [83, "module-tilelang.language.frame"], [84, "module-tilelang.language.gemm"], [85, "module-tilelang.language.kernel"], [86, "module-tilelang.language.logical"], [87, "module-tilelang.language.memscope"], [88, "module-tilelang.language.parallel"], [89, "module-tilelang.language.persistent"], [90, "module-tilelang.language.pipeline"], [91, "module-tilelang.language.print"], [92, "module-tilelang.language.proxy"], [93, "module-tilelang.language.reduce"], [94, "module-tilelang.language.tir"], [95, "module-tilelang.language.tir.entry"], [96, "module-tilelang.language.tir.ir"], [97, "module-tilelang.language.tir.op"], [98, "module-tilelang.language.warpgroup"], [99, "module-tilelang.layout"], [100, "module-tilelang.layout.fragment"], [101, "module-tilelang.layout.layout"], [102, "module-tilelang.layout.swizzle"], [104, "module-tilelang.primitives"], [105, "module-tilelang.primitives.gemm"], [106, "module-tilelang.primitives.gemm.base"], [107, "module-tilelang.primitives.gemm.gemm_mma"], [108, "module-tilelang.profiler"], [109, "module-tilelang.profiler.bench"], [118, "module-tilelang.transform"], [119, "module-tilelang.transform.pass_config"], [120, "module-tilelang.transform.simplify"], [121, "module-tilelang.utils"], [122, "module-tilelang.utils.deprecated"], [123, "module-tilelang.utils.language"], [124, "module-tilelang.utils.target"], [125, "module-tilelang.utils.tensor"]], "set_cache_dir() (in module tilelang.cache)": [[4, "tilelang.cache.set_cache_dir"]], "tilelang.cache": [[4, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[5, "tilelang.cache.kernel_cache.KernelCache"]], "cache_dir (tilelang.cache.kernel_cache.kernelcache attribute)": [[5, "tilelang.cache.kernel_cache.KernelCache.cache_dir"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "execution_backend (tilelang.cache.kernel_cache.kernelcache attribute)": [[5, "tilelang.cache.kernel_cache.KernelCache.execution_backend"]], "get_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.kernel_cache.kernelcache method)": [[5, "tilelang.cache.kernel_cache.KernelCache.set_cache_dir"]], "tilelang.cache.kernel_cache": [[5, "module-tilelang.cache.kernel_cache"]], "autotunercache (class in tilelang.cache.tuner_cache)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache"]], "cache_dir (tilelang.cache.tuner_cache.autotunercache attribute)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.cache_dir"]], "cached() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.cached"]], "clear_cache() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.clear_cache"]], "get_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.get_cache_dir"]], "set_cache_dir() (tilelang.cache.tuner_cache.autotunercache method)": [[6, "tilelang.cache.tuner_cache.AutoTunerCache.set_cache_dir"]], "tilelang.cache.tuner_cache": [[6, "module-tilelang.cache.tuner_cache"]], "tilelang.common": [[39, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[40, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[40, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[40, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[40, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[41, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[42, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[42, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[43, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[43, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[43, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[44, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[44, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.get_cuda_version"]], "get_nvcc_compiler() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.get_nvcc_compiler"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[45, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[45, "module-tilelang.contrib.nvcc"]], "find_lld() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.find_lld"]], "find_rocm_path() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.find_rocm_path"]], "have_matrixcore() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.have_matrixcore"]], "parse_compute_version() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.parse_compute_version"]], "rocm_link() (in module tilelang.contrib.rocm)": [[47, "tilelang.contrib.rocm.rocm_link"]], "tilelang.contrib.rocm": [[47, "module-tilelang.contrib.rocm"]], "tilelang.engine": [[48, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[49, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[49, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[50, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[50, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[51, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[51, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[51, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[51, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[51, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[51, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[51, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[51, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[51, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.OptimizeForTarget"]], "allow_fence_proxy() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_fence_proxy"]], "allow_global_thread_synchronization() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_global_thread_synchronization"]], "allow_tma_and_warp_specialized() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_tma_and_warp_specialized"]], "allow_vectorize() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_vectorize"]], "allow_warp_specialized() (in module tilelang.engine.phase)": [[52, "tilelang.engine.phase.allow_warp_specialized"]], "tilelang.engine.phase": [[52, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[53, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[53, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[53, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[53, "module-tilelang.env"]], "tilelang.intrinsics": [[54, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x16_to_local_64x4_layout_k_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_k_n"]], "shared_16x16_to_local_64x4_layout_m_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_m_n"]], "shared_16x16_to_local_64x4_layout_n_k() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_k"]], "shared_16x16_to_local_64x4_layout_n_m() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_n_m"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_16x64_to_local_64x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_A"]], "shared_16x64_to_local_64x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_16x64_to_local_64x16_layout_B"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x16_to_16x64_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_A"]], "thread_id_shared_access_64x16_to_16x64_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x16_to_16x64_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[55, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[55, "module-tilelang.intrinsics.mfma_layout"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[57, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[57, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[58, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[58, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[59, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[59, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[60, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[60, "tilelang.jit.jit"]], "tilelang.jit": [[60, "module-tilelang.jit"]], "tilelang.jit.adapter": [[61, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[62, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[62, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[63, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[64, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[64, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[65, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[66, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[66, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[66, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[67, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[67, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[68, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[68, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "pylibrarygenerator (class in tilelang.jit.adapter.libgen)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "compile_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.compile_lib"]], "culib (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.culib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "host_func (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.host_func"]], "import_from_file() (tilelang.jit.adapter.libgen.pylibrarygenerator static method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.import_from_file"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "load_lib() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.load_lib"]], "pymodule (tilelang.jit.adapter.libgen.pylibrarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.pymodule"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[69, "module-tilelang.jit.adapter.libgen"]], "update_host_func() (tilelang.jit.adapter.libgen.pylibrarygenerator method)": [[69, "tilelang.jit.adapter.libgen.PyLibraryGenerator.update_host_func"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[69, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "tilelang.jit.adapter.nvrtc": [[70, "module-tilelang.jit.adapter.nvrtc"]], "nvrtckerneladapter (class in tilelang.jit.adapter.nvrtc.adapter)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter"]], "from_database() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter class method)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter method)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.get_kernel_source"]], "kernels (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.kernels"]], "prim_func (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter property)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.prim_func"]], "pymodule (tilelang.jit.adapter.nvrtc.adapter.nvrtckerneladapter attribute)": [[71, "tilelang.jit.adapter.nvrtc.adapter.NVRTCKernelAdapter.pymodule"]], "tilelang.jit.adapter.nvrtc.adapter": [[71, "module-tilelang.jit.adapter.nvrtc.adapter"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.match_global_kernel"]], "pythonic_expr() (in module tilelang.jit.adapter.utils)": [[72, "tilelang.jit.adapter.utils.pythonic_expr"]], "tilelang.jit.adapter.utils": [[72, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlnvrtcsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper"]], "tlpywrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLPyWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_l2_persistent_map() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_l2_persistent_map"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_init_func"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[73, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlnvrtcsourcewrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLNVRTCSourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[73, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlpywrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLPyWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[73, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[74, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[75, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[75, "id0"], [75, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[75, "id1"], [75, "tilelang.jit.kernel.JITKernel.artifact"]], "config (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.config"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[75, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[75, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_profiler"]], "get_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.get_tuner_result"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.kernel_source"]], "latency (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.latency"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[75, "tilelang.jit.kernel.JITKernel.params"]], "prim_func (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.prim_func"]], "ref_latency (tilelang.jit.kernel.jitkernel attribute)": [[75, "tilelang.jit.kernel.JITKernel.ref_latency"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[75, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[75, "id2"], [75, "tilelang.jit.kernel.JITKernel.torch_function"]], "update_tuner_result() (tilelang.jit.kernel.jitkernel method)": [[75, "tilelang.jit.kernel.JITKernel.update_tuner_result"]], "kernel (class in tilelang.jit.param)": [[76, "tilelang.jit.param.Kernel"]], "program (class in tilelang.jit.param)": [[76, "tilelang.jit.param.Program"]], "get_kernel_source() (tilelang.jit.param.kernel method)": [[76, "tilelang.jit.param.Kernel.get_kernel_source"]], "tilelang.jit.param": [[76, "module-tilelang.jit.param"]], "annotate_l2_hit_ratio() (in module tilelang.language)": [[77, "tilelang.language.annotate_l2_hit_ratio"]], "annotate_layout() (in module tilelang.language)": [[77, "tilelang.language.annotate_layout"]], "annotate_padding() (in module tilelang.language)": [[77, "tilelang.language.annotate_padding"]], "import_source() (in module tilelang.language)": [[77, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[77, "tilelang.language.symbolic"]], "tilelang.language": [[77, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[77, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[78, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[78, "module-tilelang.language.allocate"]], "barrier_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.barrier_arrive"]], "barrier_wait() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.barrier_wait"]], "create_list_of_mbarrier() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.create_list_of_mbarrier"]], "create_tma_descriptor() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.create_tma_descriptor"]], "dec_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.dec_max_nreg"]], "fence_proxy_async() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.fence_proxy_async"]], "get_mbarrier() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.get_mbarrier"]], "inc_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.inc_max_nreg"]], "mbarrier_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_arrive"]], "mbarrier_expect_tx() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_expect_tx"]], "mbarrier_wait_parity() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.mbarrier_wait_parity"]], "no_set_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.no_set_max_nreg"]], "set_max_nreg() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.set_max_nreg"]], "shfl_down() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_down"]], "shfl_up() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_up"]], "shfl_xor() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.shfl_xor"]], "sync_global() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_global"]], "sync_grid() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_grid"]], "sync_thread_partial() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_thread_partial"]], "sync_threads() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.sync_threads"]], "tilelang.language.builtin": [[79, "module-tilelang.language.builtin"]], "tma_load() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_load"]], "tma_store_arrive() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_store_arrive"]], "tma_store_wait() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.tma_store_wait"]], "wait_wgmma() (in module tilelang.language.builtin)": [[79, "tilelang.language.builtin.wait_wgmma"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[80, "tilelang.language.copy.region"]], "tilelang.language.copy": [[80, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_addx2"]], "atomic_addx4() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.atomic_addx4"]], "clamp() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[81, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[81, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[82, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[82, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[82, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[83, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[83, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[83, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[83, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[83, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[83, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[83, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[83, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[83, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[84, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[84, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[85, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[85, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_extent"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_block_extents() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_block_extents"]], "get_block_extents() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_block_extents"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_extent"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "get_thread_extents() (in module tilelang.language.kernel)": [[85, "tilelang.language.kernel.get_thread_extents"]], "get_thread_extents() (tilelang.language.kernel.kernellaunchframe method)": [[85, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extents"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.push"]], "size() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.size"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[85, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[85, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[85, "tilelang.language.kernel.FrameStack.top"]], "all_of() (in module tilelang.language.logical)": [[86, "tilelang.language.logical.all_of"]], "any_of() (in module tilelang.language.logical)": [[86, "tilelang.language.logical.any_of"]], "tilelang.language.logical": [[86, "module-tilelang.language.logical"]], "tilelang.language.memscope": [[87, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[88, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[88, "module-tilelang.language.parallel"]], "persistent() (in module tilelang.language.persistent)": [[89, "tilelang.language.persistent.Persistent"]], "tilelang.language.persistent": [[89, "module-tilelang.language.persistent"]], "pipelined() (in module tilelang.language.pipeline)": [[90, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[90, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[91, "tilelang.language.print.print"]], "tilelang.language.print": [[91, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[92, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[92, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[92, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[92, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[92, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[92, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[92, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[92, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[92, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[92, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[92, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[92, "module-tilelang.language.proxy"]], "cumsum() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.cumsum"]], "reduce() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce"]], "reduce_absmax() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce_absmax"]], "reduce_abssum() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[93, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[93, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[94, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[95, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[95, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[95, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[96, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[96, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.pow"]], "pow_of_int() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.pow_of_int"]], "power() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[97, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[97, "tilelang.language.tir.op.vscale"]], "warpspecialize() (in module tilelang.language.warpgroup)": [[98, "tilelang.language.warpgroup.WarpSpecialize"]], "warpspecializeframe (class in tilelang.language.warpgroup)": [[98, "tilelang.language.warpgroup.WarpSpecializeFrame"]], "tilelang.language.warpgroup": [[98, "module-tilelang.language.warpgroup"]], "ws() (in module tilelang.language.warpgroup)": [[98, "tilelang.language.warpgroup.ws"]], "tilelang.layout": [[99, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[100, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[100, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[100, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[100, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[100, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[100, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[100, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[100, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[100, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[101, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[101, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[101, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[101, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[101, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[101, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[101, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[101, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[102, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[102, "module-tilelang.layout.swizzle"]], "tilelang.primitives": [[104, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[105, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[105, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[106, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[106, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[106, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[107, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[107, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[108, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[108, "id0"], [108, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[108, "tilelang.profiler.Profiler.func"]], "manual_assert_close() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.manual_assert_close"]], "params (tilelang.profiler.profiler attribute)": [[108, "id1"], [108, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[108, "id2"], [108, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[108, "id3"], [108, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[108, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[108, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[109, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[109, "module-tilelang.profiler.bench"]], "aligndynamicsharedmemoryallocations() (in module tilelang.transform)": [[118, "tilelang.transform.AlignDynamicSharedMemoryAllocations"]], "annotatedeviceregions() (in module tilelang.transform)": [[118, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[118, "tilelang.transform.ClusterPlanning"]], "configindexbitwidth() (in module tilelang.transform)": [[118, "tilelang.transform.ConfigIndexBitwidth"]], "eliminatestoragesyncformbarrier() (in module tilelang.transform)": [[118, "tilelang.transform.EliminateStorageSyncForMBarrier"]], "flattenbuffer() (in module tilelang.transform)": [[118, "tilelang.transform.FlattenBuffer"]], "frontendlegalize() (in module tilelang.transform)": [[118, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[118, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[118, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[118, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[118, "tilelang.transform.InjectSoftwarePipeline"]], "injecttmabarrier() (in module tilelang.transform)": [[118, "tilelang.transform.InjectTmaBarrier"]], "layoutinference() (in module tilelang.transform)": [[118, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[118, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[118, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[118, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[118, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[118, "tilelang.transform.LowerHopperIntrin"]], "lowerl2persistent() (in module tilelang.transform)": [[118, "tilelang.transform.LowerL2Persistent"]], "lowertileop() (in module tilelang.transform)": [[118, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[118, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[118, "tilelang.transform.MergeIfStmt"]], "mergesharedmemoryallocations() (in module tilelang.transform)": [[118, "tilelang.transform.MergeSharedMemoryAllocations"]], "multiversionbuffer() (in module tilelang.transform)": [[118, "tilelang.transform.MultiVersionBuffer"]], "persistthreadblock() (in module tilelang.transform)": [[118, "tilelang.transform.PersistThreadblock"]], "pipelineplanning() (in module tilelang.transform)": [[118, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[118, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[118, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[118, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[118, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[118, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[118, "tilelang.transform.WarpSpecializedPipeline"]], "get_pass_context() (in module tilelang.transform)": [[118, "tilelang.transform.get_pass_context"]], "tilelang.transform": [[118, "module-tilelang.transform"]], "cuda_kernels_output_dir (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.CUDA_KERNELS_OUTPUT_DIR"]], "passconfigkey (class in tilelang.transform.pass_config)": [[119, "tilelang.transform.pass_config.PassConfigKey"]], "tir_add_lower_pass (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_ADD_LOWER_PASS"]], "tir_disable_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_CSE"]], "tir_disable_storage_rewrite (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_STORAGE_REWRITE"]], "tir_disable_vectorize (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_DISABLE_VECTORIZE"]], "tir_enable_debug (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_DEBUG"]], "tir_enable_equiv_terms_in_cse (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_ENABLE_EQUIV_TERMS_IN_CSE"]], "tir_merge_static_smem (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_MERGE_STATIC_SMEM"]], "tir_noalias (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_NOALIAS"]], "tir_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_SIMPLIFY"]], "tir_use_async_copy (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TIR_USE_ASYNC_COPY"]], "tl_config_index_bitwidth (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_CONFIG_INDEX_BITWIDTH"]], "tl_debug_merge_shared_memory_allocations (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DEBUG_MERGE_SHARED_MEMORY_ALLOCATIONS"]], "tl_disable_dynamic_tail_split (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_DYNAMIC_TAIL_SPLIT"]], "tl_disable_safe_memory_access (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_SAFE_MEMORY_ACCESS"]], "tl_disable_tma_lower (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_TMA_LOWER"]], "tl_disable_warp_specialized (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DISABLE_WARP_SPECIALIZED"]], "tl_dynamic_alignment (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_DYNAMIC_ALIGNMENT"]], "tl_simplify (tilelang.transform.pass_config.passconfigkey attribute)": [[119, "tilelang.transform.pass_config.PassConfigKey.TL_SIMPLIFY"]], "tilelang.transform.pass_config": [[119, "module-tilelang.transform.pass_config"]], "simplify() (in module tilelang.transform.simplify)": [[120, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[120, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[120, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[120, "module-tilelang.transform.simplify"]], "tilelang.utils": [[121, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[122, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[122, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.array_reduce"]], "get_buffer_elems() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.get_buffer_elems"]], "is_fragment() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[123, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[123, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[124, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[124, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[124, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[124, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[125, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[125, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[125, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[125, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[125, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[125, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[125, "tilelang.utils.tensor.torch_assert_close"]]}})