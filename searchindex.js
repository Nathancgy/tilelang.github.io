Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.arch.driver", "api/tilelang.carver.arch.driver.cuda_driver", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.contrib.rocm", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.Analyzer", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.arch.driver.rst", "api/tilelang.carver.arch.driver.cuda_driver.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.contrib.rocm.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.Analyzer.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.arch.driver package", "tilelang.carver.arch.driver.cuda_driver module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.contrib.rocm module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.Analyzer module", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 117, 120, 121, 122, 129], "packag": [0, 120], "subpackag": 0, "autotun": [0, 1, 122, 128], "modul": [0, 120], "content": [0, 76, 89, 129], "cach": [0, 1, 2, 24, 50, 63, 100, 116, 117, 121, 125], "submodul": [0, 95], "carver": [0, 1], "common": [0, 1, 14, 16, 20, 25, 113, 128], "contrib": [0, 1], "engin": [0, 1, 99, 129], "intrins": [0, 1, 18, 76, 89, 117, 121], "jit": [0, 1, 2, 47, 99, 116, 117, 128], "languag": [0, 1, 95, 107, 113, 116, 117, 128], "layout": [0, 1, 15, 55, 89, 104, 105, 117, 121, 122], "math": [0, 1, 89], "primit": [0, 1, 83, 116, 117, 121, 122, 129], "profil": [0, 1, 2, 48, 59, 61, 63, 65, 70, 89, 107, 117, 129], "test": [0, 1, 2, 89, 113, 117, 120], "tool": [0, 1, 79, 81, 82, 116, 129], "transform": [0, 1, 15, 55, 74, 91, 92, 103, 128, 129], "util": [0, 1, 3, 4, 5, 40, 42, 43, 44, 48, 51, 57, 58, 59, 61, 63, 65, 72, 83, 99, 100, 113, 121], "env": [0, 1, 43, 57], "disable_cach": [0, 1, 50], "enable_cach": [0, 1, 50], "is_cache_en": [0, 1, 50], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "from_kernel": [1, 2, 128], "run": [1, 2, 79, 99, 100, 105, 117, 120, 121, 128, 129], "set_compile_arg": [1, 2, 128], "autotuneresult": [1, 2], "latenc": [1, 2, 116, 117, 121], "config": [1, 2, 116, 120, 128], "ref_lat": [1, 2], "libcod": [1, 2], "func": [1, 2, 3, 4, 6, 15, 18, 19, 20, 22, 29, 46, 47, 57, 58, 59, 70, 87, 99, 106, 117, 129], "kernel": [1, 2, 3, 4, 15, 30, 47, 48, 50, 57, 61, 63, 71, 74, 84, 99, 113, 116, 117, 121, 122, 128, 129], "jitcontext": [1, 2], "out_idx": [1, 2, 3, 4, 57, 70, 113, 116, 117, 128], "ref_prog": [1, 2, 116, 128], "supply_prog": [1, 2], "rtol": [1, 2, 99, 111, 117], "atol": [1, 2, 99, 111, 117], "max_mismatched_ratio": [1, 2, 99, 111], "skip_check": [1, 2, 116, 128], "cache_input_tensor": [1, 2], "target": [1, 2, 3, 4, 6, 7, 9, 10, 11, 14, 15, 19, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 49, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 89, 100, 103, 105, 107, 113, 116, 117, 121, 128, 129], "check_tensor_list_compat": [1, 2], "kernel_cach": [1, 3], "kernelcach": [1, 3, 4], "clear_cach": [1, 3, 4], "arch": [1, 5, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 128], "roller": [1, 5, 32], "templat": [1, 5, 113, 128], "analysi": [1, 5, 15, 27, 102, 103, 105, 129], "blockinfo": [1, 5, 6, 14, 19], "iterinfo": [1, 5, 6], "check_func_with_dynam": [1, 5, 6], "collect_block_iter_vars_used_in_access_region": [1, 5, 6], "collect_vars_used_in_prim_expr": [1, 5, 6], "detect_dominant_read": [1, 5, 6], "find_var_from_func": [1, 5, 6], "get_coalesced_veclen": [1, 5, 6], "get_max_shared_memory_per_block": [1, 5, 6], "get_max_threads_per_block": [1, 5, 6], "get_reduction_block": [1, 5, 6], "get_root_block": [1, 5, 6], "is_broadcast_epilogu": [1, 5, 6], "normalize_prim_func": [1, 5, 6], "common_schedul": [1, 5], "get_block": [1, 5, 14], "get_output_block": [1, 5, 14], "try_inlin": [1, 5, 14], "try_inline_contiguous_spati": [1, 5, 14], "matmul_analysi": [1, 5], "iterkind": [1, 5, 15], "itertrait": [1, 5, 15], "auto_inline_consumer_chain": [1, 5, 15], "auto_inline_consum": [1, 5, 15], "auto_inline_produc": [1, 5, 15], "collect_vars_from_expr": [1, 5, 15], "detect_iter_trait": [1, 5, 15], "find_arg_idx_from_buffer_chain": [1, 5, 15], "find_first_similar_buff": [1, 5, 15], "find_first_similar_region": [1, 5, 15], "find_last_producer_from_buff": [1, 5, 15], "get_dequantize_block": [1, 5, 15], "get_in_out_dtyp": [1, 5, 15], "get_index_map": [1, 5, 15], "get_ladder_stage3_map": [1, 5, 15], "get_propagate_map": [1, 5, 15], "get_tensorized_func_and_tag": [1, 5, 15], "inline_transpose_block": [1, 5, 15], "is_identity_block": [1, 5, 15], "is_identity_or_transpose_block": [1, 5, 15], "is_transpose_block": [1, 5, 15], "layout_propagate_chain": [1, 5, 15], "make_iter_fusion_index_map": [1, 5, 15], "normalize_to_matmul": [1, 5, 15], "get_rasterization_cod": [1, 5, 36], "get_roller_hints_from_func": [1, 5, 36], "get_roller_hints_from_output_nod": [1, 5, 36], "retrieve_func_from_modul": [1, 5, 36, 107, 109], "transform_kind": [1, 37], "transformkind": [1, 37, 38, 55], "cc": [1, 39, 129], "create_execut": [1, 39, 40], "create_shar": [1, 39, 40], "create_staticlib": [1, 39, 40], "cross_compil": [1, 39, 40], "get_cc": [1, 39, 40], "get_cplus_compil": [1, 39, 40], "get_global_symbol_section_map": [1, 39, 40], "get_target_by_dump_machin": [1, 39, 40], "dlpack": [1, 3, 4, 39, 57, 58, 70], "convert_func": [1, 39, 41], "to_pytorch_func": [1, 39, 41], "hipcc": [1, 39], "compile_hip": [1, 39, 42], "nvcc": [1, 39, 129], "callback_libdevice_path": [1, 39, 43], "compile_cuda": [1, 39, 43], "find_cuda_path": [1, 39, 43], "get_cuda_vers": [1, 39, 43], "have_cudagraph": [1, 39, 43], "have_fp16": [1, 39, 43], "have_int8": [1, 39, 43], "have_tensorcor": [1, 39, 43], "parse_compute_vers": [1, 39, 43, 44], "rocm": [1, 39, 110, 120], "find_lld": [1, 39, 44], "find_rocm_path": [1, 39, 44], "have_matrixcor": [1, 39, 44], "rocm_link": [1, 39, 44], "callback": [1, 45, 89], "register_cuda_postproc": [1, 45, 46], "register_cuda_postproc_callback": [1, 45, 46, 129], "register_hip_postproc": [1, 45, 46], "register_hip_postproc_callback": [1, 45, 46], "lower": [1, 45, 89, 91, 105, 117, 121, 129], "canon_target_host": [1, 45, 47], "device_codegen": [1, 45, 47], "device_codegen_without_compil": [1, 45, 47], "extrac_param": [1, 45, 47], "get_device_cal": [1, 45, 47], "get_host_cal": [1, 45, 47], "has_device_kernel_launch": [1, 45, 47], "host_codegen": [1, 45, 47], "is_cpu_device_backend": [1, 45, 47], "is_device_cal": [1, 45, 47, 129], "is_device_call_c_devic": [1, 45, 47], "param": [1, 4, 45, 57, 59, 61, 63, 65, 70, 89, 99, 103, 125], "compiledartifact": [1, 45, 47, 48, 70], "kernelparam": [1, 45, 47, 48, 59, 63, 65, 70, 99], "phase": [1, 45, 116], "lowerandleg": [1, 45, 49], "optimizefortarget": [1, 45, 49], "mfma_layout": [1, 51], "make_mfma_swizzle_layout": [1, 51, 52], "shared_16x16_to_ldmatrix_64x4_layout": [1, 51, 52], "shared_16x16_to_local_64x4_layout_a": [1, 51, 52], "shared_16x16_to_local_64x4_layout_b": [1, 51, 52], "shared_16x16_to_local_64x4_layout_c": [1, 51, 52], "shared_16x32_to_local_64x8_layout_a": [1, 51, 52], "shared_16x32_to_local_64x8_layout_b": [1, 51, 52], "shared_16x4_to_local_64x1_layout_a": [1, 51, 52], "shared_4x16_to_local_64x1_layout_b": [1, 51, 52], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 51, 52], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 51, 52], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 51, 52], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 51, 52], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 51, 52], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 51, 52], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 51, 52], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 51, 52], "mfma_macro_gener": [1, 51], "matrixcoreintrinemitt": [1, 51, 53], "mma_layout": [1, 51], "get_swizzle_layout": [1, 51, 54], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 51, 54], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 51, 54], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 51, 54], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 51, 54], "ldmatrix_32x8_to_shared_16x16_layout": [1, 51, 54], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 51, 54], "make_mma_swizzle_layout": [1, 51, 54, 117], "mma_32x8_to_shared_16x16_layout": [1, 51, 54], "mma_store_32x8_to_shared_16x16_layout": [1, 51, 54], "shared_16x16_to_mma_32x8_layout": [1, 51, 54, 56], "shared_16x16_to_mma_32x8_layout_r": [1, 51, 54], "shared_16x16_to_mma_32x8_layout_sr": [1, 51, 54], "shared_16x16_to_mma_32x8_layout_tran": [1, 51, 54], "shared_16x16_to_mma_32x8_smoothlayout": [1, 51, 54], "shared_16x32_to_mma_32x16_layout": [1, 51, 54, 56], "shared_16x32_to_mma_32x16_smoothlayout": [1, 51, 54], "shared_32x16_to_mma_32x16_layout": [1, 51, 54, 56], "shared_32x16_to_mma_32x16_smoothlayout": [1, 51, 54], "mma_macro_gener": [1, 51], "int4tensorcoreintrinemitt": [1, 51, 55], "int4tensorcoreintrinemitterwithladdertransform": [1, 51, 55], "tensorcoreintrinemitt": [1, 51, 55, 98], "tensorcoreintrinemitterwithladdertransform": [1, 51, 55], "get_ldmatrix_offset": [1, 51, 56], "get_mma_micro_s": [1, 51, 56], "index_to_coordin": [1, 51, 56], "mfma_store_index_map": [1, 51, 56], "mma_store_index_map": [1, 51, 56], "adapt": [1, 57, 70, 99, 116], "jitkernel": [1, 3, 4, 57, 70], "compil": [1, 2, 3, 4, 40, 42, 43, 44, 47, 48, 57, 61, 63, 70, 110, 116, 117, 122, 125, 129], "tir": [1, 6, 14, 15, 16, 25, 53, 55, 61, 63, 70, 71, 73, 74, 77, 78, 83, 84, 85, 97, 98, 129], "alloc": [1, 71, 73, 89, 113, 117, 125], "alloc_frag": [1, 71, 72, 113, 117, 121, 122], "alloc_loc": [1, 71, 72, 116], "alloc_shar": [1, 71, 72, 116, 117, 121, 122], "alloc_var": [1, 71, 72], "builtin": [1, 71], "createlistofmbarrierop": [1, 71, 73], "createtmadescriptorop": [1, 71, 73], "fenceproxyasyncop": [1, 71, 73], "getmbarrierop": [1, 71, 73], "mbarrierexpecttx": [1, 71, 73], "mbarrierwaitpar": [1, 71, 73], "nosetmaxnreg": [1, 71, 73], "setmaxnreg": [1, 71, 73], "tmaloadop": [1, 71, 73], "tmastorearr": [1, 71, 73], "tmastorewait": [1, 71, 73], "waitwgmma": [1, 71, 73], "copi": [1, 71, 89, 105, 113, 117, 120, 121, 122, 129], "buffer_load_to_tile_region": [1, 71, 74], "buffer_region_to_tile_region": [1, 71, 74], "buffer_to_tile_region": [1, 71, 74], "c2d_im2col": [1, 71, 74], "region": [1, 6, 15, 71, 74, 76, 125], "custom": [1, 71, 79, 111], "atomic_add": [1, 71, 75, 116], "atomic_addx2": [1, 71, 75], "clamp": [1, 71, 75], "dp4a": [1, 71, 75], "reshap": [1, 71, 75], "view": [1, 71, 75, 116], "fill": [1, 71, 89, 121, 122], "clear": [1, 3, 4, 71, 76, 78, 85, 100, 116, 117, 121, 122], "frame": [1, 71, 79, 81, 82, 88], "framestack": [1, 71, 77, 79], "letfram": [1, 71, 77], "get_let_valu": [1, 71, 77], "has_let_valu": [1, 71, 77], "gemm": [1, 6, 15, 71, 95, 116, 117, 121, 122, 128, 129], "kernellaunchfram": [1, 71, 79], "get_block_bind": [1, 71, 79], "get_thread_bind": [1, 71, 79, 116], "memscop": [1, 71], "parallel": [1, 22, 71, 86, 88, 89, 105, 113, 117, 121, 122, 128, 129], "pipelin": [1, 71, 117, 121, 122], "print": [1, 71, 77, 104, 117, 120], "proxi": [1, 71, 73], "basetensorproxi": [1, 71, 84], "bufferproxi": [1, 71, 84], "fragmentbufferproxi": [1, 71, 84], "localbufferproxi": [1, 71, 84], "sharedbufferproxi": [1, 71, 84], "tensorproxi": [1, 71, 84], "make_tensor": [1, 71, 84, 113], "ptr": [1, 71, 84, 89], "reduc": [1, 34, 71, 89, 91, 109, 113, 116, 121, 125], "reduce_absmax": [1, 71, 85], "reduce_abssum": [1, 71, 85], "reduce_max": [1, 71, 85, 122], "reduce_min": [1, 71, 85], "reduce_sum": [1, 71, 85, 122], "annotate_layout": [1, 71, 117], "import_sourc": [1, 71], "symbol": [1, 40, 71, 87, 89, 113], "use_swizzl": [1, 71, 117, 122], "fragment": [1, 55, 72, 84, 89, 90, 98, 105, 109, 117, 121, 125, 129], "make_swizzled_layout": [1, 90, 91, 93], "swizzl": [1, 90, 117], "cdiv": [1, 94], "next_power_of_2": [1, 94], "bench": [1, 99], "do_bench": [1, 99, 100, 117], "result_idx": [1, 59, 61, 63, 65, 99], "supply_typ": [1, 2, 99, 111, 116, 128], "assert_allclos": [1, 99], "assert_consist": [1, 99], "determine_profil": [1, 99], "run_onc": [1, 57, 70, 99], "with_default_adapt": [1, 99], "main": [1, 6, 84, 101, 113, 116, 117, 128, 129], "set_random_se": [1, 101], "analyz": [1, 14, 15, 25, 27, 102, 113, 129], "analysisresult": [1, 102, 103], "plot_layout": [1, 102], "simplifi": [1, 15, 105, 116, 117, 120, 128, 129], "apply_simplifi": [1, 105, 106], "simplify_prim_func": [1, 105, 106], "annotatedeviceregion": [1, 105], "clusterplan": [1, 105], "frontendleg": [1, 105], "ifstmtbind": [1, 105], "injectfenceproxi": [1, 105], "injectptxasynccopi": [1, 105], "injectsoftwarepipelin": [1, 105], "layoutinfer": [1, 105], "legalizesafememoryaccess": [1, 105], "legalizevectorizedloop": [1, 105], "loopvectorizedynam": [1, 105], "lowerdevicestorageaccessinfo": [1, 105], "lowerhopperintrin": [1, 105], "lowertileop": [1, 105, 129], "makepackedapi": [1, 105], "mergeifstmt": [1, 105], "multiversionbuff": [1, 105], "pipelineplan": [1, 105], "rewritewgmmasync": [1, 105], "threadpartialsync": [1, 105], "threadsync": [1, 105], "vectorizeloop": [1, 105], "warpspeci": [1, 105], "warpspecializedpipelin": [1, 105], "deprec": [1, 107], "array_reduc": [1, 107, 109], "is_frag": [1, 107, 109], "is_glob": [1, 107, 109], "is_loc": [1, 107, 109], "is_shar": [1, 107, 109], "is_shared_dynam": [1, 107, 109], "check_cuda_avail": [1, 107, 110], "check_hip_avail": [1, 107, 110], "determine_target": [1, 107, 110], "tensor": [1, 2, 18, 21, 22, 23, 27, 31, 41, 48, 61, 63, 70, 73, 81, 84, 89, 98, 99, 100, 107, 113, 117, 129], "tensorsupplytyp": [1, 2, 70, 99, 107, 111, 116, 128], "adapt_torch2tvm": [1, 107, 111], "get_tensor_suppli": [1, 107, 111], "map_torch_typ": [1, 107, 111], "torch_assert_clos": [1, 107, 111], "class": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 48, 53, 55, 59, 61, 63, 64, 65, 66, 68, 70, 77, 79, 84, 91, 92, 97, 98, 99, 103, 111, 121], "level": [1, 89, 113, 116, 117, 121, 122, 129], "0": [1, 2, 13, 15, 18, 19, 38, 43, 44, 53, 55, 68, 78, 79, 82, 83, 84, 89, 97, 98, 99, 100, 111, 113, 116, 117, 120, 125, 128, 129], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 48, 53, 55, 57, 58, 61, 63, 64, 65, 66, 68, 70, 77, 79, 84, 91, 92, 95, 96, 98, 99, 103, 104, 111, 113, 117, 120, 122, 129], "handler": 1, "log": [1, 71, 86, 89], "direct": [1, 121], "output": [1, 2, 4, 14, 16, 19, 22, 23, 26, 29, 30, 35, 40, 42, 43, 44, 57, 74, 78, 85, 89, 92, 99, 104, 116, 117, 120, 129], "tqdm": 1, "progress": [1, 121, 129], "bar": 1, "avoid": [1, 4], "interfer": 1, "record": 1, "messag": [1, 77, 83, 129], "ar": [1, 2, 6, 15, 22, 23, 30, 32, 35, 40, 55, 57, 77, 87, 89, 97, 99, 104, 111, 113, 116, 117, 121, 129], "written": [1, 113, 117], "ensur": [1, 113, 120], "isn": [1, 43], "t": [1, 4, 15, 43, 55, 72, 78, 87, 89, 104, 113, 116, 117, 120, 121, 122, 128], "corrupt": 1, "set": [1, 2, 6, 29, 30, 32, 33, 35, 40, 57, 72, 73, 76, 85, 89, 91, 92, 97, 113, 117, 120, 128], "": [1, 6, 15, 22, 28, 30, 31, 32, 33, 35, 72, 87, 89, 92, 103, 113, 116, 117, 121, 125, 129], "logger": 1, "paramet": [1, 2, 4, 14, 15, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 48, 55, 57, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 97, 98, 99, 100, 104, 105, 108, 109, 110, 113, 116], "str": [1, 2, 3, 4, 6, 7, 9, 11, 13, 14, 15, 18, 19, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 48, 53, 54, 55, 57, 59, 61, 63, 66, 67, 68, 70, 71, 72, 74, 75, 79, 83, 84, 85, 88, 89, 98, 99, 104, 105, 108, 110, 111, 116], "int": [1, 2, 3, 4, 6, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 48, 53, 55, 57, 59, 61, 63, 65, 67, 70, 71, 74, 78, 79, 81, 82, 85, 89, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 109, 113, 116], "can": [1, 15, 40, 46, 57, 69, 70, 78, 79, 81, 83, 89, 113, 116, 117, 120, 121, 125, 128, 129], "string": [1, 40, 43, 44, 57, 89, 110, 129], "name": [1, 5, 6, 11, 12, 13, 14, 19, 22, 23, 27, 44, 71, 87, 89, 104, 108, 116, 129], "e": [1, 6, 15, 34, 43, 44, 72, 89, 97, 99, 109, 113, 116, 117, 120, 121, 122, 125, 128, 129], "g": [1, 15, 34, 40, 43, 44, 72, 97, 99, 109, 113, 116, 117, 120, 121, 122, 125, 128, 129], "info": [1, 69, 89], "actual": [1, 40, 113], "option": [1, 2, 3, 4, 6, 13, 15, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 48, 53, 55, 57, 59, 61, 63, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 96, 97, 98, 99, 100, 104, 111, 117, 120], "debug": [1, 83, 122], "warn": 1, "error": [1, 44, 89, 129], "critic": [1, 116, 121], "The": [2, 3, 4, 6, 14, 15, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 48, 55, 57, 59, 61, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 120, 122, 125, 128, 129], "auto": [2, 3, 4, 15, 47, 57, 67, 70, 99, 107, 110, 111, 113, 116, 117, 122, 129], "tune": [2, 57, 116, 117, 121, 122, 129], "program": [2, 15, 47, 57, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 113, 116, 117, 122, 128], "thi": [2, 18, 22, 23, 29, 30, 32, 33, 35, 40, 44, 55, 57, 61, 63, 69, 72, 77, 78, 81, 83, 84, 89, 91, 100, 105, 113, 116, 117, 120, 121, 125, 129], "provid": [2, 29, 41, 43, 44, 57, 72, 77, 79, 83, 84, 89, 91, 92, 97, 98, 113, 117, 121, 128, 129], "function": [2, 4, 6, 15, 22, 23, 29, 31, 33, 40, 41, 43, 44, 46, 55, 57, 61, 63, 70, 72, 77, 78, 83, 84, 87, 89, 98, 99, 100, 109, 111, 113, 117, 125, 129], "includ": [2, 4, 57, 83, 113, 117, 120, 121, 129], "perform": [2, 40, 73, 74, 75, 76, 78, 85, 89, 98, 100, 103, 113, 116, 121, 122, 125, 129], "optim": [2, 22, 29, 30, 31, 32, 33, 35, 113, 116, 117, 121, 122, 125, 129], "through": [2, 117, 128, 129], "configur": [2, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 73, 84, 113, 116, 117, 120], "search": [2, 44, 116, 128], "fn": [2, 100, 103], "callabl": [2, 40, 46, 47, 57, 59, 61, 63, 70, 87, 99, 100, 106], "object": [2, 4, 6, 8, 11, 15, 17, 18, 19, 22, 23, 24, 26, 27, 40, 44, 48, 53, 55, 57, 64, 66, 68, 70, 72, 77, 79, 83, 84, 89, 91, 92, 97, 98, 99, 103, 104, 110, 121, 128], "tuner": [2, 117], "handl": [2, 61, 63, 73, 74, 75, 78, 79, 83, 84, 85, 89, 100, 113, 116, 117], "process": [2, 30, 46, 113, 116, 120, 121], "differ": [2, 72, 84, 89, 99, 113, 121, 128], "find": [2, 15, 27, 43, 44, 120], "execut": [2, 40, 48, 57, 78, 83, 89, 99, 103, 113, 121, 129], "list": [2, 3, 4, 6, 11, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 47, 48, 57, 59, 61, 63, 65, 70, 73, 74, 75, 79, 82, 87, 89, 91, 92, 97, 99, 100, 109, 116, 128], "try": [2, 14, 44, 63, 89, 105], "dure": [2, 89, 113, 116, 121, 129], "classmethod": [2, 18, 22, 48, 61, 63, 70, 77, 79, 97, 103], "creat": [2, 40, 48, 55, 70, 73, 74, 81, 84, 89, 98, 117, 120], "an": [2, 29, 31, 38, 40, 48, 57, 70, 75, 76, 77, 79, 83, 87, 89, 91, 109, 111, 113, 116, 117, 121, 122, 129], "instanc": [2, 29, 48, 57, 70, 103, 113, 129], "from": [2, 4, 14, 15, 22, 27, 40, 41, 43, 48, 57, 61, 63, 69, 70, 74, 77, 79, 84, 87, 89, 98, 103, 109, 113, 116, 117, 121, 122, 125, 129], "return": [2, 4, 14, 15, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 48, 50, 55, 57, 61, 63, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 113, 116, 117, 125, 128, 129], "A": [2, 15, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 46, 55, 56, 57, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 87, 89, 91, 92, 96, 97, 98, 99, 103, 108, 113, 116, 117, 122, 125, 128, 129], "new": [2, 75, 84, 89, 91, 92, 108, 113, 120], "type": [2, 4, 14, 15, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 48, 55, 57, 63, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110], "warmup": [2, 99, 100, 116, 128], "25": [2, 99, 100], "rep": [2, 99, 100, 116, 128], "100": [2, 99, 100], "timeout": [2, 66], "number": [2, 22, 23, 29, 30, 31, 32, 33, 34, 35, 43, 44, 73, 78, 79, 82, 89, 91, 97, 99, 100, 111, 113, 116, 121, 125], "iter": [2, 5, 6, 15, 22, 81, 82, 88, 91, 92, 99, 100, 116], "repetit": [2, 99, 100], "time": [2, 87, 91, 99, 100, 103, 116, 117, 120, 122], "maximum": [2, 13, 22, 73, 75, 82, 88, 89, 99, 111, 121], "per": [2, 103, 113, 116], "result": [2, 55, 78, 79, 85, 89, 98, 100, 103, 105, 106, 113, 116, 117, 128, 129], "none": [2, 3, 4, 15, 17, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 46, 47, 48, 53, 55, 57, 59, 61, 63, 66, 67, 68, 70, 71, 74, 75, 77, 79, 81, 82, 84, 87, 88, 89, 91, 96, 97, 98, 99, 100, 101, 104, 116, 120, 128], "float": [2, 22, 43, 66, 89, 99, 100, 103, 111, 113, 116, 117, 128, 129], "01": [2, 99, 111, 120], "bool": [2, 3, 4, 6, 9, 10, 11, 15, 18, 22, 23, 27, 29, 30, 32, 33, 35, 36, 44, 46, 47, 48, 50, 53, 54, 55, 56, 57, 61, 63, 67, 68, 70, 77, 78, 79, 84, 85, 87, 89, 91, 96, 97, 98, 100, 104, 105, 109, 110, 111], "fals": [2, 3, 4, 6, 15, 19, 22, 23, 29, 30, 32, 33, 35, 36, 42, 43, 44, 46, 47, 48, 53, 54, 55, 56, 57, 61, 63, 70, 77, 78, 79, 84, 87, 89, 91, 96, 97, 98, 104, 109, 110, 111, 116, 128], "true": [2, 15, 19, 22, 23, 29, 33, 35, 44, 46, 48, 53, 55, 71, 77, 85, 87, 89, 91, 97, 100, 104, 105, 109, 110, 111, 116, 117, 128], "liter": [2, 3, 4, 6, 55, 56, 57, 67, 70, 89, 100, 110], "cuda": [2, 5, 7, 22, 43, 46, 61, 63, 89, 105, 110, 116, 117, 120, 121, 128, 129], "hip": [2, 42, 46, 68, 110, 117, 121], "argument": [2, 4, 57, 70, 73, 74, 87, 89, 91, 117], "indic": [2, 4, 6, 47, 55, 57, 61, 63, 79, 89, 91, 92, 99, 104, 108, 117, 129], "suppli": [2, 70, 99], "mechan": 2, "ignor": [2, 89], "i": [2, 6, 15, 18, 19, 22, 23, 24, 29, 31, 43, 44, 47, 48, 52, 53, 54, 55, 56, 57, 69, 77, 79, 82, 83, 87, 89, 91, 97, 104, 108, 109, 110, 111, 113, 116, 117, 120, 121, 122, 125, 126, 128, 129], "refer": [2, 99, 113, 117, 121, 129], "valid": [2, 22, 23, 89, 99, 110, 117, 129], "input": [2, 16, 19, 30, 31, 32, 33, 35, 40, 44, 46, 64, 70, 74, 75, 78, 83, 85, 89, 92, 98, 99, 117, 121], "rel": [2, 22, 89, 99, 111], "toler": [2, 99, 111], "absolut": [2, 85, 89, 99, 111], "allow": [2, 87, 89, 99, 111, 116, 117, 121, 122, 129], "mismatch": [2, 99, 111], "ratio": [2, 99, 111], "whether": [2, 6, 15, 29, 30, 35, 44, 46, 47, 61, 63, 78, 79, 84, 85, 87, 89, 100, 110], "skip": [2, 79], "platform": [2, 4], "self": [2, 34, 103], "method": [2, 22, 29, 30, 32, 33, 34, 35, 77, 79, 87, 97, 108, 113], "chain": 2, "dict": [2, 3, 4, 15, 18, 19, 22, 23, 26, 27, 30, 31, 32, 33, 35, 40, 57, 61, 63, 68, 70, 88], "best": [2, 121, 128], "achiev": [2, 103, 116, 117], "produc": [2, 82, 89, 113, 116, 125, 129], "implement": [2, 22, 23, 29, 34, 47, 56, 77, 84, 99, 113, 121, 122, 125, 129], "gener": [2, 22, 23, 33, 46, 56, 78, 79, 83, 89, 98, 99, 113, 120, 121, 122], "librari": [2, 4, 40, 61, 63, 69, 70, 121, 122, 129], "code": [2, 4, 42, 43, 46, 48, 61, 63, 68, 70, 79, 89, 113, 116, 117, 120, 121, 128, 129], "context": [2, 22, 23, 117, 121], "just": [2, 113, 117, 122], "In": [2, 15, 113, 116, 117, 121, 122, 129], "correct": [2, 98, 117], "element": [2, 30, 31, 72, 75, 81, 89, 99, 111, 113, 116, 125], "check": [2, 6, 22, 23, 29, 47, 48, 77, 89, 97, 99, 109, 110, 113, 129], "each": [2, 22, 23, 24, 30, 40, 72, 113, 116, 117, 121, 125], "measur": [2, 40, 100, 117], "ani": [2, 19, 57, 61, 63, 68, 70, 71, 77, 83, 86, 88, 89, 97, 120], "decor": [2, 46, 57, 87, 108], "space": [2, 22, 30, 89, 91, 117, 121], "explor": [2, 113, 117, 128], "befor": [2, 35, 78, 79, 85, 113, 120, 129], "second": [2, 75, 78, 89, 103, 111], "list1": 2, "torch": [2, 48, 59, 61, 63, 65, 99, 100, 107, 111, 116, 117, 129], "list2": 2, "two": [2, 22, 89, 111, 113, 129], "compat": [2, 70, 120], "1": [2, 15, 18, 22, 23, 31, 32, 38, 43, 53, 55, 56, 61, 63, 64, 78, 79, 89, 91, 96, 97, 98, 99, 111, 113, 116, 117, 121, 129], "have": [2, 47, 87, 89, 97, 98, 113, 116, 120, 121], "same": [2, 89, 98, 113, 121], "length": [2, 22, 125], "2": [2, 15, 22, 23, 38, 53, 55, 56, 61, 63, 79, 89, 97, 111, 113, 116, 117, 121, 125, 129], "correspond": [2, 79, 89, 92, 97, 113, 116, 121], "shape": [2, 11, 18, 19, 22, 23, 26, 27, 28, 31, 34, 45, 48, 56, 61, 63, 72, 75, 84, 89, 91, 92, 97, 105, 121, 125], "first": [2, 22, 23, 44, 75, 78, 83, 85, 89, 91, 111, 113, 116, 121, 129], "databas": [3, 4, 70], "persist": [3, 4], "init": [3, 68, 89], "file": [3, 4, 40, 42, 43, 44, 69, 70, 104, 120, 121, 129], "primfunc": [3, 4, 6, 15, 19, 22, 29, 36, 47, 57, 61, 63, 67, 70, 87, 89, 103, 106, 109], "arg": [3, 4, 15, 27, 68, 73, 74, 87, 89, 111, 125], "union": [3, 4, 6, 7, 9, 11, 13, 15, 34, 36, 40, 46, 47, 48, 54, 55, 57, 61, 63, 67, 70, 74, 75, 76, 78, 79, 87, 89, 100, 106, 110], "target_host": [3, 4, 47, 57, 67, 70], "execution_backend": [3, 4, 57, 70, 113], "ctype": [3, 4, 57, 58, 63, 70], "cython": [3, 4, 57, 58, 70, 113], "verbos": [3, 4, 42, 43, 57, 61, 63, 70, 104, 111], "pass_config": [3, 4, 57, 58, 60, 61, 62, 63, 68, 70], "reus": [3, 4], "kern": 3, "l": [3, 89], "us": [3, 4, 6, 14, 15, 18, 22, 23, 30, 31, 32, 33, 35, 40, 43, 44, 46, 48, 55, 57, 61, 63, 69, 73, 77, 81, 82, 84, 87, 89, 91, 98, 99, 100, 104, 108, 113, 116, 117, 121, 125, 129], "entir": [3, 4, 74, 117, 121, 129], "cache_dir": 4, "home": 4, "leiwang": 4, "redund": [4, 22], "cu": 4, "sourc": [4, 27, 40, 41, 61, 63, 67, 68, 70, 71, 74, 89, 121, 122], "warpped_kernel": 4, "wrap": [4, 41, 58, 61, 63, 68, 70, 72, 90, 91, 92, 93, 105], "kernel_lib": 4, "so": [4, 113, 120], "pkl": 4, "prepar": [4, 117], "specifi": [4, 29, 34, 43, 44, 57, 73, 74, 75, 76, 85, 87, 89, 97, 99, 110, 111, 113, 116, 117, 120], "which": [4, 22, 23, 30, 53, 55, 57, 73, 85, 89, 91, 98, 99, 113, 116, 117, 120, 121, 128, 129], "host": [4, 47, 48, 67, 70, 120], "pass": [4, 40, 43, 70, 73, 100, 105, 106, 117, 121, 129], "either": [4, 43, 44, 76, 83, 125], "freshli": 4, "both": [4, 48, 83, 98, 113, 117], "memori": [4, 13, 22, 23, 72, 73, 74, 84, 89, 98, 103, 105, 109, 113, 116, 117, 122, 125, 129], "disk": 4, "driver": [5, 7], "arch_bas": [5, 7], "tiledevic": [5, 7, 8, 9, 10, 11, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36], "cdna": [5, 7, 29], "is_cdna_arch": [5, 7, 9, 28, 29], "cpu": [5, 7, 79, 117, 122, 128, 129], "is_cpu_arch": [5, 7, 10], "tensorinstruct": [5, 7, 11], "check_sm_vers": [5, 7, 11], "has_mma_support": [5, 7, 11], "is_ada_arch": [5, 7, 11], "is_ampere_arch": [5, 7, 11, 28, 29], "is_cuda_arch": [5, 7, 11], "is_hopper_arch": [5, 7, 11], "is_tensorcore_supported_precis": [5, 7, 11], "is_volta_arch": [5, 7, 11, 28, 29], "auto_infer_current_arch": [5, 7], "get_arch": [5, 7], "polici": [5, 16, 78, 96, 97, 98, 125], "shape_infer": [5, 16], "bestfit": [5, 16], "block": [5, 6, 14, 15, 16, 17, 19, 22, 27, 71, 79, 97, 98, 113, 116, 117, 121, 128], "hint": [5, 16, 22, 29, 30, 31, 32, 33, 34, 35, 36, 113, 117, 128], "intrininfo": [5, 16, 18], "stride": [5, 16, 18, 22, 23, 56, 74, 89], "tensorcoreextraconfig": [5, 16, 18], "tiledict": [5, 16, 18, 22, 23], "node": [5, 16, 18, 20, 22, 23, 27, 29, 32, 89, 92], "blockanalyz": [5, 16, 19], "edg": [5, 16, 19], "outputnod": [5, 16, 19, 22, 29, 32, 36], "placeholdernod": [5, 16, 19], "primfuncnod": [5, 16, 18, 19, 22, 23], "find_topo_sort": [5, 16, 19], "find_topo_sort_prior": [5, 16, 19], "pre_order_travers": [5, 16, 19], "topo_ord": [5, 16, 19], "raster": [5, 16, 22, 23, 117], "noraster": [5, 16, 24, 128], "rasterization2dcolumn": [5, 16, 24], "rasterization2drow": [5, 16, 24], "basetempl": [5, 28, 29, 30, 31, 32, 33, 34, 35], "conv": [5, 28], "convtempl": [5, 28, 30], "elementwis": [5, 6, 28, 122, 128], "elementwisetempl": [5, 28, 31], "flashattent": [5, 28, 122], "flashattentiontempl": [5, 28, 32], "gemv": [5, 6, 28, 122], "gemvtempl": [5, 28, 33], "general_reduc": [5, 28], "generalreductiontempl": [5, 28, 34], "matmul": [5, 15, 28, 117, 121, 128, 129], "matmultempl": [5, 28, 35, 128], "block_rv": [5, 6], "dom": [5, 6, 22, 23], "dom_kind": [5, 6], "is_elementwis": [5, 6], "is_gemm": [5, 6], "is_gemv": [5, 6], "is_inject": [5, 6], "is_reduct": [5, 6], "kind": [5, 6, 15], "loop_rv": [5, 6], "var": [5, 6, 48, 61, 63, 72, 76, 77, 78, 79, 84, 89], "kiter_i": [5, 15], "kiter_j": [5, 15], "kiter_k": [5, 15], "kiter_": [5, 15], "kiter_t": [5, 15], "extent": [5, 15, 22, 23, 74, 79, 81, 88, 89, 91], "infra": 5, "loop": [6, 81, 82, 88, 98, 105, 113, 117, 121, 125, 128], "blockrv": [6, 14, 15, 19, 27], "reduction_block": 6, "inform": [6, 18, 19, 48, 69, 103, 104, 105], "about": [6, 89, 104, 121], "primexpr": [6, 15, 27, 53, 55, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 98], "domain": [6, 22, 23, 117, 122], "exampl": [6, 40, 87, 89, 97, 113, 116, 121, 125], "ssss": 6, "sssr": 6, "sch": [6, 14, 15, 19], "schedul": [6, 14, 15, 17, 18, 22, 23, 117, 128], "trivial": [6, 15], "map": [6, 15, 22, 23, 30, 40, 55, 77, 91, 92, 104, 113, 117, 121, 125, 128], "between": [6, 30, 74, 75, 82, 89, 100, 105, 113, 121, 125], "read": [6, 15, 74, 89, 105, 121, 122], "write": [6, 15, 74, 89, 105, 113, 116, 117, 121, 122, 125, 129], "workload": [6, 97], "inject": [6, 79], "all": [6, 15, 22, 23, 48, 67, 71, 79, 84, 86, 87, 89, 97, 105, 113, 116, 120, 125, 126], "its": [6, 22, 83, 87, 113], "reduct": [6, 15, 22, 23, 85, 89, 98, 125, 128], "r": [6, 74, 89], "o": 6, "looprv": 6, "properti": [6, 18, 19, 24, 29, 30, 31, 32, 33, 34, 35, 61, 63, 68, 70, 79, 91, 92, 97, 98, 99], "rang": [6, 75, 91, 117], "collect": [6, 126], "variabl": [6, 22, 23, 40, 48, 72, 73, 76, 77, 83, 84, 88, 89, 91, 92, 120, 125, 129], "access": [6, 73, 74, 89, 105, 113, 120, 121], "buffer": [6, 15, 19, 48, 55, 72, 74, 75, 76, 78, 82, 83, 84, 85, 89, 91, 93, 96, 97, 98, 104, 105, 109, 116, 117, 121, 125, 128, 129], "expr": [6, 15, 27, 84, 89], "detect": [6, 15, 55, 99, 110, 125], "domin": 6, "block_stmt": [6, 15], "target_bit": 6, "128": [6, 87, 113, 116, 117, 128, 129], "func_nam": [6, 89], "epilogu": 6, "broadcast": 6, "pattern": [6, 15, 89, 117, 121, 129], "normal": [6, 107, 111], "form": [6, 30, 32, 33, 35, 53, 55], "cuda_driv": [7, 12], "cudadeviceprop": [7, 12, 13], "get_cuda_device_properti": [7, 12, 13], "get_device_attribut": [7, 12, 13], "get_device_nam": [7, 12, 13], "get_max_dynamic_shared_size_byt": [7, 12, 13], "get_shared_memory_per_block": [7, 12, 13], "get_avaliable_tensorintrin_shap": [7, 8, 11], "repres": [8, 15, 22, 48, 53, 55, 79, 84, 91, 92, 97, 98, 121, 125], "architectur": [8, 22, 29, 30, 31, 32, 33, 34, 35, 42, 43, 117, 121], "comput": [8, 15, 18, 22, 23, 27, 30, 31, 32, 33, 34, 35, 43, 44, 78, 84, 89, 91, 92, 97, 100, 113, 116, 117, 121, 122, 129], "devic": [8, 47, 48, 63, 67, 89, 103, 105, 117, 121, 126], "captur": [8, 121], "variou": [8, 18, 22, 69, 78, 113, 117, 121], "hardwar": [8, 29, 30, 31, 32, 33, 34, 35, 117, 129], "specif": [8, 29, 84, 89, 99, 113, 117, 120, 121, 122, 129], "in_dtyp": [11, 18, 28, 30, 32, 33, 35, 96, 98, 113, 128], "accum_dtyp": [11, 28, 30, 32, 33, 35, 53, 55, 96, 98, 116, 117, 128, 129], "eccen": [12, 13], "asyncenginecount": [12, 13], "canmaphostmemori": [12, 13], "clockrat": [12, 13], "computemod": [12, 13], "concurrentkernel": [12, 13], "deviceoverlap": [12, 13], "globall1cachesupport": [12, 13], "integr": [12, 13], "ismultigpuboard": [12, 13], "kernelexectimeouten": [12, 13], "l2caches": [12, 13], "locall1cachesupport": [12, 13], "luid": [12, 13], "luiddevicenodemask": [12, 13], "major": [12, 13, 43, 44, 89], "managedmemori": [12, 13], "maxgrids": [12, 13], "maxsurface1d": [12, 13], "maxsurface1dlay": [12, 13], "maxsurface2d": [12, 13], "maxsurface2dlay": [12, 13], "maxsurface3d": [12, 13], "maxsurfacecubemap": [12, 13], "maxsurfacecubemaplay": [12, 13], "maxtexture1d": [12, 13], "maxtexture1dlay": [12, 13], "maxtexture1dlinear": [12, 13], "maxtexture1dmipmap": [12, 13], "maxtexture2d": [12, 13], "maxtexture2dgath": [12, 13], "maxtexture2dlay": [12, 13], "maxtexture2dlinear": [12, 13], "maxtexture2dmipmap": [12, 13], "maxtexture3d": [12, 13], "maxtexture3dalt": [12, 13], "maxtexturecubemap": [12, 13], "maxtexturecubemaplay": [12, 13], "maxthreadsdim": [12, 13], "maxthreadsperblock": [12, 13], "maxthreadspermultiprocessor": [12, 13], "mempitch": [12, 13], "memorybuswidth": [12, 13], "memoryclockr": [12, 13], "minor": [12, 13, 43, 44], "multigpuboardgroupid": [12, 13], "multiprocessorcount": [12, 13], "pcibusid": [12, 13], "pcideviceid": [12, 13], "pcidomainid": [12, 13], "persistingl2cachemaxs": [12, 13], "regsperblock": [12, 13], "regspermultiprocessor": [12, 13], "reserv": [12, 13], "reserved1": [12, 13], "reserved2": [12, 13], "sharedmemperblock": [12, 13], "sharedmempermultiprocessor": [12, 13], "streamprioritiessupport": [12, 13], "surfacealign": [12, 13], "tccdriver": [12, 13], "texturealign": [12, 13], "texturepitchalign": [12, 13], "totalconstmem": [12, 13], "totalglobalmem": [12, 13], "unifiedaddress": [12, 13], "uuid": [12, 13], "warpsiz": [12, 13], "structur": [13, 28, 29, 34, 77, 89], "member": 13, "device_id": [13, 89], "attr": [13, 47, 116], "format": [13, 40, 42, 43, 89], "byte": [13, 89, 103], "get": [13, 14, 15, 22, 40, 43, 63, 69, 77, 89, 91, 92, 116, 120, 129], "dynam": [13, 61, 63, 84, 105, 109, 125], "share": [13, 22, 23, 40, 44, 70, 72, 84, 89, 98, 105, 109, 117, 121, 125], "size": [13, 16, 17, 22, 23, 30, 74, 89, 91, 113, 117, 125], "kilobyt": 13, "megabyt": 13, "strategi": [14, 116, 128, 129], "target_block": 14, "output_block": 14, "inlin": [14, 117], "mani": [14, 116, 117], "possibl": [14, 22, 23, 44], "remain": [14, 113], "cannot": [14, 74, 89], "block_info": 14, "contigu": 14, "spatial": [14, 15, 30, 34, 74], "rule": [15, 89], "gpu": [15, 42, 43, 44, 79, 84, 120, 121, 122, 128, 129], "oper": [15, 31, 41, 48, 61, 63, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 89, 91, 103, 109, 116, 117, 120, 121, 125, 128, 129], "valu": [15, 19, 30, 32, 33, 35, 38, 48, 75, 76, 77, 79, 82, 83, 84, 87, 88, 89, 97, 111, 113, 129], "enum": [15, 111], "like": [15, 71, 77, 79, 86, 87, 89, 113, 116, 117, 121, 129], "we": [15, 44, 47, 79, 89, 113, 116, 117, 120, 121, 125, 129], "c": [15, 28, 30, 35, 40, 61, 63, 68, 75, 78, 79, 89, 96, 97, 98, 113, 116, 117, 120, 121, 125, 128, 129], "j": [15, 52, 54, 56, 113, 117, 120], "k": [15, 19, 28, 30, 32, 33, 35, 78, 89, 117, 128, 129], "b": [15, 31, 35, 55, 56, 75, 78, 87, 89, 94, 96, 97, 98, 113, 116, 117, 121, 125, 128], "where": [15, 31, 75, 78, 89, 91, 104, 113, 117, 129], "fundament": 15, "ax": [15, 16, 18, 22, 23, 34], "other": [15, 17, 22, 23, 41, 113, 116, 121, 125, 128, 129], "batch": [15, 30, 74], "3": [15, 38, 56, 61, 63, 79, 111, 116, 117, 125], "4": [15, 24, 56, 75, 97, 111, 116, 117, 120, 128, 129], "tvm": [15, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 48, 57, 61, 63, 67, 70, 72, 74, 76, 84, 87, 89, 97, 98, 99, 103, 105, 106, 109, 117, 122, 129], "ir": [15, 61, 63, 67, 71, 84, 86, 98, 103, 121, 129], "skip_block": 15, "prim_expr": 15, "tupl": [15, 18, 19, 22, 23, 27, 53, 55, 61, 63, 67, 72, 79, 84, 89, 97], "trait": 15, "doe": [15, 22, 23, 89, 113, 117], "match": [15, 44, 78, 87, 117], "main_block": 15, "travers": [15, 103, 113, 128], "index": [15, 56, 57, 89, 90, 91, 92, 121, 129], "bufferregion": [15, 74, 76, 125], "out": [15, 40, 55, 63, 85, 89, 116, 117, 125], "data": [15, 30, 31, 33, 35, 72, 74, 77, 84, 89, 91, 98, 103, 113, 116, 117, 121, 122, 125, 126, 129], "given": [15, 18, 22, 23, 31, 57, 79, 84, 91, 92, 97, 99, 103, 128], "indexmap": [15, 55], "n": [15, 21, 22, 28, 30, 32, 33, 35, 53, 55, 68, 89, 97, 113, 116, 117, 128, 129], "infer": [15, 22, 23, 25, 26, 27, 57, 97, 98, 105, 116, 117, 121, 125], "last": [15, 89, 116], "axi": [15, 18, 22, 23, 89, 116, 125], "index_map": 15, "dtype": [15, 19, 28, 31, 34, 45, 48, 54, 56, 61, 63, 71, 72, 75, 84, 89, 98, 111, 113, 116, 117, 125, 128, 129], "float16": [15, 30, 31, 32, 33, 34, 35, 53, 55, 56, 116, 117, 128, 129], "index_dtyp": 15, "int32": [15, 53, 55, 71, 72], "tran": [15, 89], "matrix_nam": 15, "skip_norm": 15, "allow_gemv": [15, 36], "necessari": [15, 48, 98, 116, 120, 121, 122], "conv2d": 15, "im2col": [15, 74], "start_block": 15, "start_buff": 15, "end_block": 15, "kind_ord": 15, "coalesced_factor": [16, 20, 21], "coalesced_tensor_shap": [16, 20, 21], "factor": [16, 20, 21, 22, 23, 84, 91, 97], "get_all_factor": [16, 20, 21], "default": [16, 20, 29, 31, 34, 40, 43, 46, 47, 70, 72, 74, 75, 78, 84, 85, 89, 104, 111, 117], "defaultpolici": [16, 20, 22, 23], "tensorcor": [16, 18, 20, 43], "tensorcorepolici": [16, 20, 23], "inputshapeinfer": [16, 25, 26, 27], "statement": [16, 25, 26, 27, 83, 88, 89, 125, 129], "dependencyanalysi": [16, 25, 27], "tensordepnod": [16, 25, 27], "get_analyzer_by_tir": [16, 25, 27], "region_exist_in_list": [16, 25, 27], "walk_indic": [16, 25, 27], "free": [16, 17, 89], "malloc": [16, 17], "merg": [16, 17], "complete_config": [16, 18], "from_dict": [16, 18], "raxis_ord": [16, 18], "step": [16, 18, 22, 23, 30, 74, 98, 116, 120], "tensorcore_leg": [16, 18], "to_dict": [16, 18], "inter_transform_a": [16, 18], "inter_transform_b": [16, 18], "is_input_8bit": [16, 18], "smooth_a": [16, 18], "smooth_b": [16, 18], "compute_elements_from_shap": [16, 18], "compute_strides_from_shap": [16, 18], "is_valid": [16, 18], "get_rstep": [16, 18], "get_til": [16, 18], "get_block_info": [16, 19], "get_block_nam": [16, 19], "get_buff": [16, 19], "get_consumer_block": [16, 19], "get_input_buff": [16, 19], "get_output_buff": [16, 19], "get_producer_block": [16, 19], "get_reduce_axi": [16, 19], "get_spatial_axi": [16, 19], "dst_id": [16, 19], "dst_node": [16, 19], "src_id": [16, 19], "src_node": [16, 19], "add_tag": [16, 19], "get_dtyp": [16, 19], "get_ir": [16, 19], "get_shap": [16, 19], "get_tag": [16, 19], "is_output": [16, 19], "is_placehold": [16, 19], "num_output": [16, 19], "set_dtyp": [16, 19], "set_input": [16, 19], "set_output": [16, 19], "set_shap": [16, 19], "set_tag": [16, 19], "update_tag": [16, 19], "extent_wrapp": [16, 19], "footprint": [16, 19], "get_buffer_dtyp": [16, 19], "get_opt_shap": [16, 19], "get_reduce_inputs_dtyp": [16, 19], "get_space_dim": [16, 19], "infer_tensorcore_axi": [16, 19], "propag": [16, 19], "propagate_input": [16, 19], "propagate_inputs_on_reduct": [16, 19], "propagate_output": [16, 19], "propagate_reduction_input": [16, 19], "get_cod": [16, 24], "panel_width": [16, 24], "panel_width_": [16, 24], "get_device_funct": [16, 24], "benefit": 17, "For": [17, 22, 23, 24, 27, 88, 89, 113, 117, 120, 121, 129], "align": [17, 84, 113], "32": [17, 55, 89, 113, 116, 117, 125, 128, 129], "start": [17, 27, 82, 88, 89, 116, 125], "end": [17, 89, 113], "is_fre": 17, "definit": [18, 34, 87], "central": 18, "manag": [18, 61, 63, 77, 79, 117, 121], "task": [18, 113], "dic": 18, "out_dtyp": [18, 28, 30, 32, 33, 35, 113, 128], "trans_b": [18, 28, 33, 35], "input_transform_kind": 18, "weight_transform_kind": 18, "relat": [18, 22, 103], "as_shap": 18, "bs_shape": 18, "af_shap": 18, "bf_shape": 18, "tc_axi": 18, "store": [18, 29, 34, 48, 55, 73, 85, 89, 103, 116, 125], "extra": [18, 22, 23, 89], "output_til": [18, 22], "tile": [18, 19, 22, 23, 72, 74, 95, 113, 116, 120, 128], "wrapper": [19, 57, 58, 70, 79], "analaysi": 19, "itervar": [19, 91, 92], "tag": [19, 20, 22, 23], "v": [19, 129], "id": [19, 89], "datatyp": [19, 54, 116], "overwrit": 19, "prim_func": [19, 58, 60, 61, 62, 63, 68, 71, 86, 87, 113, 116, 117, 128, 129], "rstep": [19, 26, 27, 128], "stride_map": 19, "output_node_list": 19, "block_analyz": [19, 27], "list_of_nod": 19, "assign_block_s": [20, 22], "check_tile_shape_isvalid": [20, 22, 23], "compute_node_stride_map": [20, 22, 23], "compute_tile_dict": [20, 22], "compute_workload_per_item": [20, 22], "dfs_smem_til": [20, 22], "emit_config": [20, 22], "from_output_nod": [20, 22], "from_prim_func": [20, 22], "get_base_til": [20, 22], "get_block_s": [20, 22], "get_node_reduce_step_candid": [20, 22, 23], "infer_node_smem_usag": [20, 22, 23], "plan_raster": [20, 22, 23], "recommend_block_s": [20, 22], "score_block_s": [20, 22], "block_reduction_depth": [20, 23], "pipeline_stag": [20, 23, 128], "use_async_copi": [20, 23], "wmma_k": [20, 23], "subtensor": 21, "transaction_s": 21, "core": [22, 84, 89, 98, 121], "fastdlight": 22, "heurist": 22, "plan": [22, 23, 24], "tri": 22, "minim": [22, 113, 121], "traffic": 22, "maxim": 22, "bitbla": [22, 117], "td": [22, 23], "topk": [22, 29, 30, 31, 32, 33, 34, 35, 36, 128], "assign": [22, 113, 116, 117, 121], "recommend": [22, 29, 34, 113, 120, 128], "top": [22, 29, 30, 31, 32, 33, 34, 35, 71, 77, 79, 122, 125, 128], "consid": [22, 30, 31, 32, 33, 35, 117, 125, 129], "yield": [22, 129], "primari": [22, 61, 63], "contain": [22, 23, 30, 31, 32, 33, 35, 48, 70, 76, 77, 109, 120, 121, 128], "otherwis": [22, 23, 29, 44, 48, 53, 55, 57, 77, 97, 109, 110], "dictionari": [22, 23, 30, 31, 32, 33, 35], "rstep_map": 22, "cost": [22, 113], "grid": [22, 71, 86, 88, 113, 117, 125], "init_til": 22, "minimum": [22, 75, 82, 88, 89], "satisfi": [22, 89], "equal": 22, "dimens": [22, 30, 48, 74, 78, 79, 85, 89, 91, 97, 98, 113, 117, 125, 129], "determin": [22, 30, 43, 97, 99, 110, 121], "constraint": [22, 89, 125], "score": 22, "chosen": 22, "constrain": 22, "1024": [22, 113, 116, 117, 129], "calcul": [22, 23, 89, 100, 102, 103, 129], "candid": [22, 23], "idea": [22, 23, 117], "sinc": [22, 23, 113, 117, 125], "requir": [22, 23, 44, 97, 113, 116, 117, 120, 129], "boundari": [22, 23, 125], "larg": [22, 23, 116], "prime": [22, 23, 97], "rare": [22, 23], "case": [22, 23, 113, 116, 125, 129], "power": [22, 23, 71, 86, 89, 116], "It": [22, 23, 29, 34, 57, 72, 77, 83, 84, 89, 103, 116, 117, 125, 128], "raxi": [22, 23], "usag": [22, 23, 61, 63, 113, 117, 121], "estim": [22, 23, 103], "amount": [22, 23], "yet": [22, 23, 117, 120, 121], "rais": [22, 23, 29, 30, 32, 35, 44, 48, 55, 57, 74, 76, 77, 78, 83, 97, 98, 109, 110], "rasterrationplan": [22, 23], "sort": 22, "effici": [22, 113, 117, 121, 128], "fit": [22, 113], "warp": [22, 73, 78, 89, 97, 121], "sm": 22, "partit": [22, 97, 98, 125], "respect": [22, 89, 113, 129], "16": [23, 53, 55, 116, 120, 129], "l2": [24, 100, 125], "local": [24, 55, 72, 84, 89, 109, 117, 121], "column": [24, 35, 74, 89, 97], "line": [24, 117, 129], "width": [24, 30, 74, 75, 81, 89], "_": [24, 129], "row": [24, 35, 71, 89, 97], "_________": 24, "__________": 24, "get_input_expr": [25, 26, 27], "find_path_from_sourc": [25, 27], "get_or_create_nod": [25, 27], "print_depend": [25, 27], "traverse_depend": [25, 27], "construct_dependency_target": [25, 27], "make_revers": [25, 27], "add_next": [25, 27], "add_prev": [25, 27], "dedupl": [25, 27], "dep": [26, 27], "output_expr": [26, 27], "dependent_region": 26, "var_map": 26, "ordereddict": 26, "range_map": 26, "start_nam": 27, "target_nam": 27, "path": [27, 40, 43, 44, 61, 63, 70, 110, 120], "exist": [27, 46, 79, 91, 120, 128, 129], "constintbound": 27, "input_nam": 27, "input_it": 27, "depend": [27, 117, 120, 121], "lst": 27, "equivalent_funct": [28, 29], "get_hardware_aware_config": [28, 29, 30, 31, 32, 33, 34, 35], "has_arch": [28, 29], "initialize_funct": [28, 29, 30, 31, 32, 33, 34, 35], "output_nod": [28, 29, 36], "recommend_hint": [28, 29, 128], "set_funct": [28, 29], "set_output_nod": [28, 29], "with_arch": [28, 29, 128], "h": [28, 30, 129], "w": [28, 30, 74, 89, 113], "f": [28, 30, 89, 117, 120, 129], "d": [28, 30], "p": [28, 30, 113], "with_bia": [28, 30, 33, 35], "class_attribut": [28, 30, 31, 32, 33, 34, 35, 96, 97], "params_as_dict": [28, 30, 31, 32, 33, 34, 35, 96, 97], "batch_siz": [28, 32], "head_dim": [28, 32], "is_caus": [28, 32], "num_head": [28, 32], "seq_kv_length": [28, 32], "seq_length": [28, 32], "m": [28, 32, 35, 53, 55, 89, 97, 113, 116, 117, 128, 129], "trans_a": [28, 35], "abc": [29, 59, 68], "awar": [29, 30, 31, 32, 33, 34, 35, 117, 121], "serv": [29, 84, 113], "abstract": [29, 34, 68, 117, 121], "defin": [29, 30, 31, 32, 33, 35, 40, 73, 74, 92, 99, 113, 117, 121, 128, 129], "subclass": [29, 34], "current": [29, 40, 50, 57, 63, 71, 77, 79, 89, 92, 120, 125], "associ": [29, 77, 92, 113], "10": [29, 30, 31, 32, 33, 34, 35, 36, 89, 99, 117, 120, 128], "must": [29, 34, 57, 97, 113, 125], "should": [29, 34, 87, 89, 100, 109, 116, 125], "placehold": [29, 30, 32, 33, 35, 89], "respons": [29, 98, 113], "initi": [29, 30, 31, 32, 33, 35, 85, 89, 113, 117, 121], "notimplementederror": 29, "If": [29, 30, 32, 35, 43, 48, 55, 57, 74, 76, 77, 78, 83, 85, 89, 91, 97, 98, 104, 109, 110, 111, 116, 120, 125], "amper": 29, "volta": 29, "itself": 29, "updat": [29, 77, 120, 125], "convolut": [30, 74, 122], "matrix": [30, 32, 33, 35, 55, 56, 73, 78, 89, 98, 109, 121, 122], "transposit": [30, 33, 35, 98], "bia": [30, 32, 33, 35], "addit": [30, 33, 35, 40, 42, 43, 70, 75, 89, 91, 104, 113, 121, 128], "sampl": 30, "simultan": 30, "featur": [30, 116, 120], "height": 30, "filter": [30, 129], "appli": [30, 32, 33, 35, 57, 106, 113], "depth": [30, 117, 121], "slide": 30, "across": [30, 91, 99, 116, 117], "control": [30, 91, 116, 117, 121], "recept": 30, "field": [30, 89], "expans": 30, "pixel": 30, "ad": [30, 75, 129], "border": 30, "matric": [30, 32, 33, 35, 78, 89, 121], "accumul": [30, 35, 73, 75, 78, 89, 98, 116, 117, 121], "add": [30, 35, 125], "term": [30, 35], "attribut": [30, 31, 32, 33, 35, 47, 87, 103], "retriev": [30, 31, 32, 33, 35, 73, 77, 92, 109, 113], "acceler": [30, 32, 33, 35, 113, 121, 128], "up": [30, 32, 33, 35, 77, 89, 117, 122], "api": [30, 32, 33, 35], "cast": [30, 32, 33, 35, 84, 89, 116], "assertionerror": [30, 32, 35, 55, 57, 78, 97, 98, 109, 110, 111], "posit": [30, 32, 35, 89], "integ": [30, 32, 35, 48, 79, 89, 107, 109, 111, 116, 128], "wise": [31, 81, 89], "represent": [31, 121, 129], "simpl": [31, 79, 116, 129], "graph": [31, 43], "built": [31, 41, 44, 117, 120, 128, 129], "express": [31, 74, 81, 83, 84, 89, 91, 92, 98, 117], "_output_nod": 32, "multipl": [32, 33, 35, 78, 89, 99, 100, 109, 121, 122, 125], "vector": [33, 71, 86, 88, 89, 105, 113, 122, 125, 129], "pars": [34, 43, 44, 87], "ssr": [34, 98], "build": [34, 57, 89, 122], "appropri": [34, 57, 72, 110, 117], "_func": 34, "transpos": [35, 56, 78], "pannel_width": 36, "8": [36, 52, 53, 55, 113, 116, 120, 129], "func_or_modul": 36, "irmodul": [36, 47, 48, 49, 61, 63, 67, 68, 89, 103, 106, 109, 121], "tensorcore_onli": 36, "extra_tag": 36, "ir_modul": [36, 60, 61, 62, 63, 109], "interwarptransform": [37, 38], "intrawarptransform": [37, 38], "ldmatrixtransform": [37, 38], "nontransform": [37, 38], "is_inter_warp_transform": [37, 38], "is_intra_warp_transform": [37, 38], "is_ld_matrix_transform": [37, 38], "is_non_transform": [37, 38], "intenum": [38, 97], "enumer": [38, 97, 111], "invok": [40, 42, 43, 70, 96, 98, 117], "system": [40, 42, 43, 44, 110, 120, 121], "cwd": 40, "ccache_env": 40, "binari": [40, 89], "command": [40, 120], "urrent": 40, "work": [40, 113, 121], "directori": [40, 63, 104, 120], "environ": [40, 120], "ccach": 40, "disabl": [40, 50, 73], "static": [40, 77, 97], "tarbal": 40, "compile_func": 40, "output_format": 40, "get_target_tripl": 40, "add_fil": 40, "cross": 40, "special": [40, 72, 116, 121, 125, 129], "construct": [40, 79, 81, 82, 84, 121], "autotvm": 40, "export_librari": [40, 57, 70], "tripl": 40, "accord": [40, 89], "dumpmachin": 40, "part": [40, 117], "fcompil": 40, "import": [40, 79, 87, 113, 117, 120, 128, 129], "ndk": 40, "export": [40, 70, 120], "arm": 40, "gcc": [40, 120], "mod": [40, 49, 59, 65, 129], "build_runtime_modul": 40, "path_dso": 40, "linux": [40, 120], "gnueabihf": 40, "specialized_ndk": 40, "sysroot": 40, "fpic": 40, "lm": 40, "wa": [40, 63, 91, 113, 129], "found": [40, 63, 77, 116], "nm": 40, "global": [40, 50, 77, 84, 87, 89, 103, 105, 109, 117, 121, 125], "via": [40, 89, 95, 116, 120, 121], "symbol_section_map": 40, "section": [40, 89, 113, 121], "functor": 40, "bridg": 41, "framework": [41, 120, 128], "support": [41, 43, 44, 48, 57, 78, 91, 113, 117, 121, 125], "tvm_func": 41, "tensor_typ": 41, "to_dlpack_func": 41, "convert": [41, 48, 59, 61, 63, 65, 74, 99, 100, 107, 125], "one": [41, 57, 109, 113, 125, 129], "accept": [41, 89], "anoth": [41, 89], "arrai": [41, 89, 109], "pytorch": [41, 48, 61, 63, 70, 100, 117, 120], "wrapped_func": 41, "target_format": [42, 43], "hsaco": 42, "path_target": [42, 43], "amd": [42, 89, 117, 121], "bytearrai": [42, 43], "ptx": [43, 89, 117], "cubin": 43, "root": [43, 44, 89, 129], "cuda_path": 43, "version": [43, 44, 63, 89, 113, 116, 122, 129], "compute_vers": [43, 44], "fp16": [43, 53, 55, 117, 125], "capabl": [43, 44, 117], "6": [43, 44, 111, 117], "int8": [43, 53, 55, 56], "7": [43, 44, 111, 117, 120], "divid": [43, 44, 89], "backend": [44, 58, 68, 89, 99, 117, 120, 121, 128], "ld": 44, "lld": 44, "runtim": [44, 48, 70, 89, 100, 117, 120, 121], "valid_list": 44, "llvm": [44, 89, 120, 121, 129], "matrixcor": 44, "in_fil": 44, "out_fil": 44, "link": [44, 120], "relocat": 44, "elf": 44, "linker": 44, "guess": 44, "clang": 44, "device_mod": [45, 47, 48, 58, 61, 63, 68, 129], "host_mod": [45, 47, 48, 58, 61, 63, 68], "kernel_sourc": [45, 48, 57, 70, 129], "rt_mod": [45, 48], "from_buff": [45, 48], "from_var": [45, 48], "is_boolean": [45, 48], "is_float8": [45, 48], "is_scalar": [45, 48], "is_unsign": [45, 48], "overrid": [46, 77, 100], "regist": [46, 73, 89, 113, 117, 121, 125, 129], "post": 46, "take": [46, 72, 89, 117, 120, 129], "without": [46, 57, 77, 79, 84, 87, 117, 121, 122], "parenthes": 46, "def": [46, 87, 113, 116, 117, 128, 129], "boolean": [46, 48, 71, 89], "flag": [46, 98, 120], "tl": [47, 57, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 116, 128], "is_device_c": 47, "launch": [47, 79, 113, 125], "func_or_mod": [47, 61, 63, 67], "runtime_onli": 47, "enable_host_codegen": 47, "enable_device_compil": 47, "enabl": [47, 50, 71, 82, 113, 117, 120, 121], "codegen": [47, 129], "our": [47, 116, 121], "own": [47, 121], "artifact": [48, 57, 70], "compon": 48, "describ": [48, 55, 104], "scalar": [48, 89, 129], "interop": 48, "valueerror": [48, 76, 83, 97, 109, 110, 129], "intimm": [48, 89], "empti": [48, 77, 79], "float8": 48, "ha": [48, 77, 87, 116, 117, 125, 128], "unsign": 48, "state": [50, 122], "m_dim": [51, 53, 55], "n_dim": [51, 53, 55], "warp_siz": [51, 53, 55, 89], "dtype_abbrv": [51, 53, 55], "extract_thread_bind": [51, 53, 55], "get_ldmatrix_index_map": [51, 53], "is_m_first": [51, 53, 55], "k_pack": [51, 53, 78, 96, 97, 98], "ldmatrix_a": [51, 53, 55], "ldmatrix_b": [51, 53, 55], "mfma": [51, 53, 89], "stmatrix": [51, 53, 55], "mma": [51, 55, 89, 98, 117], "get_store_index_map": [51, 55], "make_mma_load_layout": [51, 55], "make_mma_store_layout": [51, 55], "shared_buf": [52, 54], "vecsiz": 52, "ind": 52, "thread_id": [52, 53, 54, 55, 56], "local_id": [52, 54, 56], "a_dtyp": [53, 55, 89], "b_dtype": [53, 55, 89], "a_transpos": [53, 55], "b_transpos": [53, 55], "block_row_warp": [53, 55, 96, 97, 98], "block_col_warp": [53, 55, 96, 97, 98], "warp_row_til": [53, 55, 96, 97, 98], "warp_col_til": [53, 55, 96, 97, 98], "chunk": [53, 55, 96, 97, 98, 121], "reduce_k": [53, 55], "num_elems_per_byt": [53, 55, 56], "To": [53, 55, 113, 116, 120], "elimin": [53, 55], "python": [53, 55, 61, 63, 89, 117, 120, 121, 122, 129], "syntax": [53, 55, 121, 122], "within": [53, 55, 113, 116, 121, 125, 129], "macro": [53, 55, 71, 83, 86, 87, 98], "64": [53, 89, 116, 128], "bfloat16": [53, 55, 113], "bf16": [53, 55], "e4m3_float8": [53, 55], "e4m3": [53, 55], "e5m2_float8": [53, 55], "e5m2": [53, 55], "float32": [53, 55, 72, 84], "fp32": [53, 55], "thread": [53, 55, 71, 72, 79, 83, 88, 89, 90, 91, 97, 113, 116, 117, 121, 122, 125, 129], "bind": [53, 55, 77, 79, 87, 88], "tx": [53, 55, 83, 89], "warp_n": [53, 55], "warp_m": [53, 55], "split": [53, 55, 89], "is_b": 53, "a_local_buf": [53, 55], "a_shared_buf": [53, 55], "ki": [53, 55], "rk": [53, 55], "b_local_buf": [53, 55], "b_shared_buf": [53, 55], "c_local_buf": [53, 55], "c_buf": [53, 55], "pid_m": [53, 55], "pid_n": [53, 55], "row_idx": [54, 56], "col_idx": [54, 56], "row_siz": 54, "is_smooth": 54, "transform_kind_a": 55, "transform_kind_b": 55, "invers": [55, 90, 92], "local_buf": 55, "conjunct": 55, "inverse_mma_store_layout": 55, "how": [55, 100, 104, 116, 117, 121, 129], "laid": 55, "k_inner": 55, "With": [55, 116, 117, 121], "ladder": 55, "plugin": 55, "vjj": 56, "micro_size_k": 56, "coordin": 56, "vii": 56, "micro_size_i": 56, "vj": 56, "block_k": [56, 116, 117, 121, 128, 129], "vi": 56, "block_n": [56, 113, 116, 117, 121, 128, 129], "basekerneladapt": [57, 58, 59, 61, 63, 65, 70, 99], "torchdlpackkerneladapt": [57, 58, 65], "libgen": [57, 58], "librarygener": [57, 58, 66], "get_annotated_mod": [57, 58, 67], "is_cpu_target": [57, 58, 67], "is_cuda_target": [57, 58, 67], "is_hip_target": [57, 58, 67], "match_declare_kernel": [57, 58, 67], "match_declare_kernel_cpu": [57, 58, 67], "match_global_kernel": [57, 58, 67], "basewrapp": [57, 58, 68], "tlcpusourcewrapp": [57, 58, 68], "tlcudasourcewrapp": [57, 58, 68], "tlhipsourcewrapp": [57, 58, 68], "tlwrapper": [57, 58, 68], "torch_funct": [57, 70], "from_databas": [57, 60, 61, 62, 63, 70], "from_tilelang_funct": [57, 70], "get_host_sourc": [57, 70], "get_kernel_sourc": [57, 58, 59, 60, 61, 62, 63, 70, 113, 117, 129], "get_profil": [57, 70, 117], "host_sourc": [57, 70], "infrastructur": [57, 122], "runnabl": 57, "pass_config_kwarg": 57, "factori": 57, "call": [57, 68, 73, 74, 76, 78, 85, 89, 113, 117, 121, 129], "directli": [57, 70, 83, 110, 113, 120, 121, 128, 129], "expect": [57, 73, 89, 129], "onli": [57, 83, 89, 113, 116, 125], "automat": [57, 97, 99, 100, 110, 113, 116, 117, 121], "avaliable_target": 57, "encapsul": [57, 91, 121], "invalid": [57, 76, 97, 110], "present": [57, 89, 113], "ctypeskerneladapt": [58, 60, 61], "cythonkerneladapt": [58, 62, 63], "get_cache_dir": [58, 62, 63], "get_cached_lib": [58, 62, 63], "get_cython_compil": [58, 62, 63], "cython_wrapp": [58, 62], "cythonkernelwrapp": [58, 62, 64], "compile_lib": [58, 66], "get_lib_path": [58, 66], "get_source_path": [58, 66], "lib_cod": [58, 60, 61, 62, 63, 66], "libpath": [58, 60, 61, 62, 63, 66], "load_lib": [58, 66], "remove_lib": [58, 66], "set_lib_path": [58, 66], "set_src_path": [58, 66], "srcpath": [58, 60, 61, 62, 63, 66], "update_lib_cod": [58, 66, 68], "call_prefix": [58, 68], "init_func": [58, 68], "create_call_func": [58, 68], "get_cpu_init_func": [58, 68], "get_dynamic_symbolic_set": [58, 68], "parse_source_inform": [58, 68], "create_dispatch_func": [58, 68], "generate_tma_descriptor_arg": [58, 68], "get_init_func": [58, 68], "get_stream_typ": [58, 68], "is_tma_descriptor_arg": [58, 68], "assign_device_modul": [58, 68], "assign_host_modul": [58, 68], "assign_optimized_modul": [58, 68], "assign_pass_config": [58, 68], "lib": [58, 60, 61, 62, 63, 68], "dynamic_symbolic_map": [60, 61, 62, 63, 64], "is_dynam": [60, 61, 62, 63], "kernel_global_sourc": [60, 61, 62, 63, 70], "param_dtyp": [60, 61], "param_shap": [60, 61], "wrapped_sourc": [60, 61, 62, 63], "tensortyp": [61, 63], "kernel_lib_path": [61, 63, 70], "kernel_onli": [61, 63], "cdll": [61, 63], "buffer_device_map": [62, 63, 64], "buffer_dtype_map": [62, 63, 64], "ptr_map": [62, 63, 64], "static_shape_map": [62, 63, 64], "forward": [62, 64, 92], "set_buffer_device_map": [62, 64], "set_buffer_dtype_map": [62, 64], "set_dynamic_symbolic_map": [62, 64], "set_ptr_map": [62, 64], "set_static_shape_map": [62, 64], "source_cod": 63, "load": [63, 73, 74, 89, 98, 113, 116, 117, 121, 125], "stream": 64, "lib_path": 66, "model_typ": 67, "annot": [67, 88, 89, 117, 122], "__global__": [67, 113, 116], "int32_t": 67, "kwarg": [68, 70], "scheduled_ir_modul": 68, "ifdef": 68, "__cplusplu": 68, "nextern": 68, "endif": 68, "nint32_t": 68, "function_inform": 68, "desc_name_map": 68, "arg_nam": 68, "c_sourc": 68, "standalon": 69, "modifi": [69, 75, 129], "flashinf": 69, "kernel_fil": 70, "altern": [70, 120], "constructor": 70, "torchfunct": 70, "tilelang_func": 70, "keyword": 70, "tensor_supply_typ": 70, "benchmark": [70, 99, 100, 117], "entri": [71, 79, 86, 98], "serial": [71, 86, 88, 116], "thread_bind": [71, 86, 88], "unrol": [71, 86, 88, 113], "op": [71, 86], "tvmbackendallocworkspac": [71, 86, 89], "tvmbackendfreeworkspac": [71, 86, 89], "ab": [71, 86, 89], "aco": [71, 86, 89], "acosh": [71, 86, 89], "address_of": [71, 86, 89], "anylist_getitem": [71, 86, 89], "anylist_resetitem": [71, 86, 89], "anylist_setitem_call_cpack": [71, 86, 89], "anylist_setitem_call_pack": [71, 86, 89], "asin": [71, 86, 89], "asinh": [71, 86, 89], "assum": [71, 86, 89, 98, 116], "atan": [71, 86, 89], "atan2": [71, 86, 89], "atanh": [71, 86, 89], "bitwise_and": [71, 86, 89], "bitwise_not": [71, 86, 89], "bitwise_or": [71, 86, 89], "bitwise_xor": [71, 86, 89], "call_cpack": [71, 86, 89], "call_cpacked_low": [71, 86, 89], "call_extern": [71, 86, 89], "call_intrin": [71, 86, 89], "call_llvm_intrin": [71, 86, 89], "call_llvm_pure_intrin": [71, 86, 89], "call_pack": [71, 86, 89], "call_packed_low": [71, 86, 89], "call_pure_extern": [71, 86, 89], "call_tir": [71, 86, 89], "ceil": [71, 86, 89], "ceildiv": [71, 86, 89, 113, 116, 117], "clz": [71, 86, 89], "comm_reduc": [71, 86, 89, 116], "copysign": [71, 86, 89], "co": [71, 86, 89], "cosh": [71, 86, 89], "create_barri": [71, 86, 89], "div": [71, 86, 89], "end_profile_intrins": [71, 86, 89], "erf": [71, 86, 89], "exp": [71, 86, 89], "exp10": [71, 86, 89], "exp2": [71, 86, 89], "floor": [71, 86, 89], "floordiv": [71, 86, 89], "floormod": [71, 86, 89], "fmod": [71, 86, 89], "hypot": [71, 86, 89], "if_then_els": [71, 86, 89], "indexdiv": [71, 86, 89], "indexmod": [71, 86, 89], "infin": [71, 86, 89], "isfinit": [71, 86, 89], "isinf": [71, 86, 89], "isnan": [71, 86, 89], "isnullptr": [71, 86, 89], "ldexp": [71, 86, 89], "log10": [71, 86, 89], "log1p": [71, 86, 89], "log2": [71, 86, 89], "lookup_param": [71, 86, 89], "max_valu": [71, 86, 89], "min_valu": [71, 86, 89], "mma_fil": [71, 86, 89], "mma_stor": [71, 86, 89], "nearbyint": [71, 86, 89], "nextaft": [71, 86, 89], "popcount": [71, 86, 89], "pow": [71, 86, 89], "ptx_arrive_barri": [71, 86, 89], "ptx_arrive_barrier_expect_tx": [71, 86, 89], "ptx_commit_group": [71, 86, 89], "ptx_cp_async": [71, 86, 89], "ptx_cp_async_barri": [71, 86, 89], "ptx_cp_async_bulk": [71, 86, 89], "ptx_init_barrier_thread_count": [71, 86, 89], "ptx_ldmatrix": [71, 86, 89], "ptx_mma": [71, 86, 89], "ptx_mma_sp": [71, 86, 89], "ptx_wait_barri": [71, 86, 89], "ptx_wait_group": [71, 86, 89], "q_multiply_shift": [71, 86, 89], "q_multiply_shift_per_axi": [71, 86, 89], "reinterpret": [71, 86, 89, 116], "ret": [71, 86, 89], "round": [71, 86, 89], "rsqrt": [71, 86, 89], "shift_left": [71, 86, 89], "shift_right": [71, 86, 89], "sigmoid": [71, 86, 89], "sin": [71, 86, 89], "sinh": [71, 86, 89], "sqrt": [71, 86, 89], "start_profile_intrins": [71, 86, 89], "tan": [71, 86, 89], "tanh": [71, 86, 89], "trace": [71, 86, 89], "trunc": [71, 86, 89], "truncdiv": [71, 86, 89], "truncmod": [71, 86, 89], "tvm_access_ptr": [71, 86, 89], "tvm_bmma_sync": [71, 86, 89], "tvm_check_return": [71, 86, 89], "tvm_fill_frag": [71, 86, 89], "tvm_load_matrix_sync": [71, 86, 89], "tvm_mfma": [71, 86, 89], "tvm_mfma_stor": [71, 86, 89], "tvm_mma_sync": [71, 86, 89], "tvm_rdna_wmma": [71, 86, 89], "tvm_rdna_wmma_stor": [71, 86, 89], "tvm_stack_alloca": [71, 86, 89], "tvm_stack_make_arrai": [71, 86, 89], "tvm_stack_make_shap": [71, 86, 89], "tvm_storage_sync": [71, 86, 89], "tvm_store_matrix_sync": [71, 86, 89], "tvm_struct_get": [71, 86, 89], "tvm_struct_set": [71, 86, 89], "tvm_thread_allreduc": [71, 86, 89, 122], "tvm_thread_invari": [71, 86, 89], "tvm_throw_last_error": [71, 86, 89], "tvm_tupl": [71, 86, 89], "tvm_warp_activemask": [71, 86, 89], "tvm_warp_shuffl": [71, 86, 89], "tvm_warp_shuffle_down": [71, 86, 89], "tvm_warp_shuffle_up": [71, 86, 89], "type_annot": [71, 86, 89], "undef": [71, 86, 89], "vectorcombin": [71, 86, 89], "vectorhigh": [71, 86, 89], "vectorlow": [71, 86, 89], "vscale": [71, 86, 89], "get_valu": [71, 77], "has_valu": [71, 77], "pop": [71, 77, 79], "push": [71, 77, 79], "get_block_ext": [71, 79], "get_num_thread": [71, 79], "get_thread_ext": [71, 79], "num_thread": [71, 79, 125], "default_align": [71, 84], "default_offset_factor": [71, 84], "default_scop": [71, 84], "from_ptr": [71, 84], "interfac": [71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 99, 122], "layout_map": 71, "panel_s": [71, 117], "order": [71, 82], "ai": [72, 120], "conveni": [72, 79], "scope": [72, 77, 79, 84, 89, 105, 109, 113, 125], "avail": [72, 97, 110, 117, 120], "inter": 72, "commun": [72, 89, 129], "privat": [72, 87], "storag": [72, 84, 89, 105, 121, 125], "singl": [72, 78, 98, 109, 113, 116, 117, 125], "dyn": [72, 84], "barrier": [73, 89], "creation": 73, "tma": 73, "descriptor": [73, 74], "fenc": 73, "asynchron": [73, 105, 117], "request": [73, 89], "transact": [73, 89], "count": [73, 78, 89, 100], "wait": [73, 78, 89], "pariti": 73, "condit": [73, 89, 113, 129], "limit": [73, 121, 129], "signal": 73, "arriv": [73, 89], "complet": [73, 89, 128, 129], "wgmma": 73, "group": [73, 78, 82, 89, 113], "multipli": [73, 98, 117], "bufferload": [74, 89, 125], "access_typ": 74, "rw": 74, "area": 74, "buffer_region": 74, "cover": [74, 113, 129], "img": 74, "col": [74, 89], "nhw_step": 74, "c_step": 74, "dilat": 74, "pad": [74, 125], "2d": 74, "imag": [74, 104], "channel": 74, "rate": 74, "src": [74, 75, 125, 129], "dst": [74, 75, 125], "coalesced_width": [74, 81], "destin": [74, 75, 89], "coalesc": [74, 81, 113, 121], "typeerror": 74, "deduc": 74, "atom": 75, "doubl": [75, 125], "operand": [75, 89], "min_val": 75, "max_val": 75, "dot": [75, 116], "product": [75, 116, 122, 128], "zero": [76, 89, 99, 107, 111, 125], "when": [77, 89, 113, 116, 117, 121, 125, 129], "enter": 77, "stack": [77, 79, 89], "dequ": [77, 79], "maintain": 77, "lookup": 77, "look": [77, 116, 122], "remov": [77, 79], "item": [77, 79, 89], "indexerror": 77, "onto": [77, 79], "applic": 77, "tirfram": [77, 79], "let": [77, 113, 117, 121], "track": [77, 89], "extend": [77, 113, 121], "activ": [77, 89, 113], "topmost": [77, 79], "bound": [77, 89], "transpose_a": [78, 96, 97, 98, 125], "transpose_b": [78, 96, 97, 98, 125], "gemmwarppolici": [78, 95, 96, 97, 98], "squar": [78, 89, 96, 97, 98], "clear_accum": 78, "wg_wait": 78, "mode": [78, 89, 100, 117, 120], "pack": [78, 89], "don": 78, "around": [79, 116], "is_cpu": 79, "prelud": 79, "quickli": [79, 129], "griddim": 79, "x": [79, 89, 94, 113, 116, 117, 125], "y": [79, 89, 113, 116, 120, 125], "z": [79, 89, 113], "blockdim": [79, 113], "Or": 79, "threadidx": [79, 113, 116, 129], "thu": [79, 117], "blockidx": [79, 113, 116, 125, 129], "re": [79, 81, 82, 84, 87, 88, 89, 120], "launchthreadfram": 79, "exit": 79, "dim": [79, 85, 125], "three": [79, 117, 120, 121, 128, 129], "total": [79, 97, 103, 111], "nest": 81, "forfram": [81, 82, 88], "stop": [82, 88, 125], "num_stag": [82, 117, 125, 128], "stage": [82, 117, 129], "sync": [82, 105], "max": [82, 85, 100], "consum": [82, 116, 125], "condition": 83, "obj": 83, "msg": [83, 129], "ty": 83, "tz": 83, "unsupport": [83, 129], "foundat": 84, "customiz": 84, "offset": [84, 89, 113], "pointer_var": 84, "pointer": [84, 89], "0x7eff79268bb0": 84, "typic": [84, 113], "temporari": 84, "commonli": 84, "inherit": [84, 98], "modif": 84, "storage_scop": [84, 89, 105], "is_size_var": 84, "sizevar": 84, "instead": [84, 89, 108, 122, 129], "reduce_typ": 85, "along": [85, 116, 117], "min": [85, 100], "sum": [85, 116, 121], "abssum": 85, "inf": 85, "hygien": 87, "bodi": 87, "resolv": [87, 129], "locat": [87, 89, 110], "non": [87, 89], "script": 87, "x_valu": 87, "static_captur": 87, "dynamic_captur": 87, "check_well_form": 87, "prim": [87, 125], "treat": 87, "device_typ": 89, "nbyte": 89, "dtype_code_hint": 89, "dtype_bits_hint": 89, "tempor": 89, "workspac": [89, 120], "certain": [89, 120], "opengl": 89, "bit": [89, 116], "span": 89, "buffer_load": 89, "address": [89, 129], "intersect": 89, "list_handl": 89, "anylist": 89, "reset": 89, "cond": 89, "simplif": 89, "x1": 89, "x2": 89, "arctan2": 89, "bitwis": 89, "left": 89, "right": [89, 129], "xor": 89, "extern": [89, 113, 116], "except": [89, 113], "resourc": 89, "te": 89, "overload": 89, "translat": [89, 129], "pure": [89, 117, 121], "pod": 89, "packedfunc": 89, "receiv": 89, "tvmarrayhandl": 89, "whose": [89, 100], "period": 89, "ndarrai": 89, "global_var": 89, "globalvar": 89, "lh": 89, "rh": 89, "lead": [89, 113], "undefin": 89, "fcombin": 89, "fident": 89, "commut": 89, "const": [89, 113, 129], "over": [89, 91, 117], "There": [89, 125], "wai": [89, 116, 120, 125], "simpli": [89, 113], "mysum": 89, "lambda": [89, 116], "reduce_axi": 89, "chang": [89, 120], "sign": 89, "barrier_count": 89, "semant": [89, 113], "hand": [89, 117, 121], "known": [89, 128], "neg": 89, "gauss": 89, "exponenti": 89, "primexprwithop": 89, "remaind": 89, "equival": [89, 121], "select": [89, 110], "unlik": [89, 113], "branch": 89, "you": [89, 113, 116, 117, 120, 125, 128, 129], "guard": 89, "against": [89, 99, 117], "some": [89, 117, 120, 125, 129], "lane": [89, 129], "mai": [89, 91, 113, 116, 117, 120, 121, 129], "advantag": 89, "finit": 89, "infinit": 89, "nan": 89, "nullptr": 89, "mark": [89, 117], "param_nam": 89, "local_s": 89, "local_ptr": 89, "dst_ptr": 89, "src_ptr": 89, "src_offset": 89, "dst_stride": 89, "nearest": 89, "faster": [89, 100, 116, 121], "notabl": 89, "wherea": [89, 121], "see": [89, 117, 128, 129], "http": [89, 113, 120], "en": 89, "cpprefer": 89, "com": [89, 113, 120], "cpp": 89, "numer": 89, "next": [89, 113], "point": [89, 98, 103, 125], "after": [89, 105, 113, 116, 117, 120, 121, 125, 129], "toward": 89, "expon": 89, "barrier_id": 89, "mbarrier": 89, "doc": 89, "nvidia": [89, 117, 120, 121, 129], "html": 89, "synchron": [89, 116, 121, 129], "instruct": [89, 98, 117, 120], "byte_count": 89, "expect_tx": 89, "increas": [89, 116], "async": [89, 125], "commit": 89, "movement": [89, 113, 121, 122], "convers": 89, "cp": [89, 120], "shared_ptr": 89, "shared_offset": 89, "global_ptr": 89, "global_offset": 89, "bulk": 89, "thread_count": 89, "num": [89, 97], "local_offset": 89, "smem_ptr": 89, "smem_offset": 89, "ldmatrix": [89, 98], "b16": 89, "memort": 89, "a_layout": 89, "b_layout": 89, "c_dtype": 89, "multiplicand_a": 89, "a_index": 89, "multiplicand_b": 89, "b_index": 89, "c_index": 89, "satur": 89, "multiplicand": [89, 125], "metadata": 89, "meta_index": 89, "sparse_selector": 89, "spars": 89, "selector": 89, "try_wait": 89, "most": [89, 120], "recent": [89, 120], "uncommit": 89, "pend": 89, "q": [89, 129], "follow": [89, 98, 113, 120, 121, 128], "shift": 89, "mathemat": 89, "more": [89, 109, 113, 117, 121, 122, 129], "here": [89, 116, 121, 129], "wikipedia": 89, "org": 89, "wiki": 89, "q_": 89, "number_format": 89, "half": 89, "5": [89, 111, 117, 128], "fraction": 89, "need": [89, 91, 117, 120, 121, 125, 129], "is_lshift_requir": 89, "is_rshift_requir": 89, "do": [89, 98, 117, 129], "val": 89, "void": [89, 113, 116], "reciproc": 89, "quick": 89, "hyperbol": 89, "trace_act": 89, "default_trace_act": 89, "come": [89, 113], "action": 89, "truncat": 89, "closer": 89, "than": [89, 109, 116, 117, 120, 121, 129], "divis": [89, 97], "behavior": [89, 113, 117, 121, 129], "ptype": 89, "rw_mask": 89, "head": 89, "mask": [89, 116], "fragment_d": 89, "index_d": 89, "fragment_a": 89, "index_a": 89, "fragment_b": 89, "index_b": 89, "fragment_c": 89, "index_c": 89, "bmma_sync": 89, "bwmma": 89, "return_unexpect": 89, "nested_cal": 89, "unexpect": 89, "fill_frag": 89, "wmma": [89, 117], "uintimm": 89, "buffer_ptr": 89, "row_major": 89, "column_major": 89, "mma_sync": 89, "dtype_str": 89, "ndim": 89, "arr_dtyp": 89, "elem_offset": 89, "dltensor": 89, "elem_offs": 89, "arr": 89, "struct": 89, "date": 89, "structtyp": 89, "freduce_arg": 89, "allreduc": 89, "insid": [89, 113, 121, 125, 129], "threadblock": 89, "invari": 89, "throw": 89, "tvmgetlasterror": 89, "attrstmt": 89, "warp_id": 89, "exchang": 89, "fetch": [89, 120], "sub": 89, "shuffl": 89, "higher": 89, "caller": 89, "src_lane_idx": 89, "dst_lane_idx": 89, "arbitrari": [89, 125], "vec1": 89, "vec2": 89, "concat": 89, "vec": 89, "high": [89, 113, 116, 117, 121, 122], "low": [89, 116, 117, 121, 122], "langref": 89, "rtype": [89, 98, 103, 110], "condense_rep_var": [90, 91], "get_thread_s": [90, 91], "map_forward_thread": [90, 91], "repeat": [90, 91, 99, 100], "replic": [90, 91], "get_forward_var": [90, 92], "get_input_shap": [90, 92], "get_output_shap": [90, 92], "map_forward_index": [90, 92], "forward_fn": [91, 92], "forward_thread_fn": 91, "forward_index_fn": 91, "forward_var": 91, "forward_thread": 91, "forward_index": 91, "thread_repl": 91, "fine": [91, 116, 117, 121], "grain": [91, 116, 117, 121], "multi": [91, 121], "dimension": [91, 113], "condens": 91, "fold": 91, "longer": [91, 117], "separ": [91, 117], "reflect": 91, "repeat_on_thread": 91, "lower_dim_first": 91, "happen": [91, 113], "gemmbaseparam": [95, 96, 97, 98], "gemm_mma": [95, 96], "gemmprimitivemma": [95, 96, 98], "bootstrap": 95, "get_warp_s": [96, 97], "infer_block_partit": [96, 97], "fullcol": [96, 97], "fullrow": [96, 97], "compute_warp_partit": [96, 97], "from_warp_partit": [96, 97], "is_full_col": [96, 97], "is_full_row": [96, 97], "is_squar": [96, 97], "to_prime_factor": [96, 97], "gemm_rrr": [96, 98], "gemm_rsr": [96, 98], "gemm_srr": [96, 98], "gemm_ssr": [96, 98], "alreadi": [97, 120], "attempt": 97, "them": [97, 98, 113, 129], "miss": 97, "inconsist": 97, "num_warp": 97, "m_warp": 97, "n_warp": 97, "fail": [97, 129], "from_block_row_col": 97, "balanc": [97, 117], "distribut": [97, 125], "full": [97, 103, 117], "basic": [98, 116, 121], "mma_emitt": 98, "helper": 98, "etc": [98, 99, 117, 129], "final": [98, 113, 116, 121, 129], "random": 99, "reference_program": 99, "input_tensor": 99, "compar": [99, 111, 113, 116, 117], "pre": [99, 120, 128], "comparison": [99, 111], "consist": [99, 100], "explicitli": [99, 113, 117, 121], "n_warmup": 99, "n_repeat": 99, "millisecond": [99, 100], "averag": 99, "_n_warmup": 100, "_n_repeat": 100, "grad_to_non": 100, "quantil": 100, "fast_flush": 100, "return_mod": 100, "mean": 100, "median": 100, "flush": 100, "gradient": 100, "backward": 100, "percentil": 100, "aggreg": 100, "seed": 101, "42": 101, "total_global_byt": [102, 103], "estimated_tim": [102, 103], "tflop": [102, 103], "bandwidth_gbp": [102, 103], "expected_bandwidth_gbp": [102, 103], "expected_tflop": [102, 103], "total_flop": [102, 103], "ir_pass": [102, 103], "transfer": [103, 121], "trillion": 103, "flop": 103, "bandwidth": [103, 121, 129], "gb": 103, "metric": 103, "extract": [103, 109], "save_directori": 104, "tmp": 104, "colormap": 104, "rdpu": 104, "plot": 104, "save": 104, "visual": 104, "fpass": [105, 106], "rewrit": 105, "legalizeloopvector": 105, "attach": 105, "finish": [105, 116, 129], "insert": [105, 116], "partial": [105, 116, 117, 121], "enable_vector": 105, "stmt": 106, "One": [107, 111, 116], "randn": [107, 111, 117], "uniform": [107, 111], "method_nam": 108, "new_method_nam": 108, "allow_dynam": 109, "exactli": 109, "return_object": 110, "manual": [110, 117, 121, 128], "user": [110, 116, 117, 120, 121, 126, 128, 129], "intyp": 111, "tensor_a": 111, "tensor_b": 111, "001": 111, "equal_nan": 111, "check_devic": 111, "check_dtyp": 111, "check_layout": 111, "check_strid": 111, "assert": 111, "close": [111, 113, 116], "enough": [111, 117], "percentag": 111, "1e": [111, 117], "exce": 111, "author": [113, 117, 128, 129], "chenghua": 113, "wang": [113, 117, 129], "document": [113, 116, 117, 129], "still": [113, 116, 117], "experiment": [113, 116, 117], "incomplet": [113, 116, 117], "suggest": [113, 116, 117], "improv": [113, 116, 117, 120, 121], "highli": [113, 116, 117, 121], "encourag": [113, 116, 117], "pleas": [113, 116, 117, 120], "submit": [113, 116, 117], "pr": [113, 116, 117], "wide": 113, "deep": [113, 116], "learn": [113, 116], "often": [113, 129], "encount": [113, 129], "those": [113, 129], "begin": 113, "tutori": [113, 116, 117, 129], "sever": [113, 129], "By": [113, 116, 117, 121, 122, 129], "similar": [113, 117], "note": [113, 120, 121, 125], "delv": 113, "deepli": 113, "design": [113, 116, 117, 121, 122], "principl": 113, "broader": 113, "understand": [113, 116, 121], "consult": 113, "overview": [113, 117, 121], "elementwise_add": 113, "256": [113, 116, 128], "b_x": 113, "logic": [113, 117, 121, 129], "bx": [113, 117, 121], "familiar": 113, "might": [113, 116, 121, 129], "wonder": 113, "your": [113, 116, 117], "focu": [113, 121, 122], "sole": 113, "further": [113, 116, 121, 129], "carefulli": [113, 129], "handcraft": 113, "demonstr": [113, 116, 117, 121, 128, 129], "concret": 113, "while": [113, 117, 128], "also": [113, 117, 121, 128], "subsequ": [113, 121], "discuss": [113, 121], "straightforward": [113, 116], "practic": 113, "below": [113, 116, 117, 121, 129], "reader": 113, "block_m": [113, 117, 121, 128, 129], "start_x": 113, "start_i": 113, "local_i": 113, "local_x": 113, "abov": 113, "fix": 113, "howev": [113, 116, 117], "want": [113, 117, 120], "replac": 113, "make": [113, 116, 120, 121], "illustr": [113, 121, 129], "bfloat16_t": 113, "__restrict__": [113, 116], "incorpor": [113, 121], "These": [113, 117, 121], "prevent": 113, "advanc": [113, 117, 129], "introduc": [113, 116, 117, 129], "involv": [113, 128], "review": 113, "paragraph": 113, "clearer": 113, "2047": 113, "num_per_thread": 113, "__launch_bounds__": [113, 116], "main_kernel": [113, 116], "pragma": 113, "observ": 113, "did": 113, "fact": 113, "tail": 113, "could": 113, "simplic": 113, "breviti": 113, "style": 113, "idx": 113, "evid": 113, "ineffici": 113, "techniqu": [113, 122], "beginn": [113, 121], "addition": [113, 121], "transpar": 113, "uint4": [113, 116], "__1": 113, "v_": 113, "v__1": 113, "nv_bfloat162": 113, "aforement": 113, "sometim": [113, 129], "appear": 113, "counterintuit": [113, 121], "effect": [113, 116], "interestingli": 113, "retain": [113, 117], "origin": [113, 121], "scenario": 113, "help": [113, 121, 128, 129], "guid": [113, 122], "intend": [113, 121, 129], "aha": 113, "convent": 113, "intuit": 113, "But": 113, "what": 113, "previou": 113, "num_ele_per_thread": 113, "a_regist": 113, "b_regist": 113, "c_regist": 113, "s_start": 113, "s_end": 113, "ldg": 113, "tid": 113, "stg": 113, "individu": 113, "reson": 113, "develop": [113, 120, 121, 122], "u": 113, "now": [113, 116], "8192": 113, "2048": [113, 116], "emerg": [113, 117], "reassign": 113, "evalu": [113, 116], "complex": [113, 117], "nv_bfloat16": 113, "namespac": 113, "t_c": 113, "make_gmem_ptr": 113, "make_shap": 113, "t_a": 113, "t_b": 113, "t_c_tile": 113, "local_til": 113, "make_coord": 113, "t_a_til": 113, "t_b_tile": 113, "reg_buffer_a": 113, "make_tensor_lik": 113, "reg_buffer_b": 113, "reg_buffer_c": 113, "reg_c_vector": 113, "recast": 113, "reg_a_vector": 113, "reg_b_vector": 113, "vec_idx": 113, "reg_c_flat": 113, "showcas": [113, 121], "approach": [113, 116, 117, 121, 129], "significantli": [113, 121, 129], "nevertheless": 113, "demand": [113, 117, 121], "care": 113, "attent": [113, 117, 122], "detail": [113, 117, 121], "essenti": [113, 120, 129], "thoroughli": 113, "examin": [113, 117, 129], "draw": 113, "inspir": 113, "blog": 113, "zhuanlan": 113, "zhihu": 113, "690703999": 113, "contributor": 116, "botbw": 116, "example_gemv": 116, "py": [116, 128, 129], "plai": 116, "role": 116, "especi": 116, "model": [116, 117, 122], "perspect": 116, "_gemv_naiv": 116, "x_ptr": 116, "a_ptr": 116, "y_ptr": 116, "block_size_k": 116, "constexpr": 116, "program_id": 116, "offs_k": 116, "arang": 116, "a_val": 116, "x_val": 116, "expos": [116, 121], "natur": 116, "think": 116, "naive_gemv": 116, "bn": 116, "tn": 116, "a_shar": [116, 117], "b_share": [116, 117], "c_reg": 116, "bk": 116, "tk": 116, "astyp": 116, "And": 116, "half_t": 116, "__shared__": 116, "__align__": 116, "uchar": 116, "buf_dyn_shmem": 116, "uint64_t": 116, "_mbarrier": 116, "mbarrier_init": 116, "__syncthread": 116, "warpgroup_reg_dealloc": 116, "24": 116, "mbarrier_wait": 116, "16256": 116, "131072": 116, "fence_proxy_async": 116, "mbarrier_cp_async_arr": 116, "mbarrier_arr": 116, "els": 116, "warpgroup_reg_alloc": 116, "240": 116, "000000e": 116, "00f": 116, "bk_1": 116, "tk_1": 116, "act": 116, "1d": [116, 129], "At": [116, 121], "gain": 116, "veri": [116, 117], "littl": 116, "17": 116, "cubla": [116, 117], "008": 116, "20x": 116, "slower": 116, "exploit": 116, "finer": [116, 117], "combin": 116, "naive_splitk_gemv": 116, "a_loc": 116, "b_local": 116, "c_accum": 116, "c_share": 116, "024": 116, "par": [116, 117], "reduce_thread": 116, "splitk_gemv": 116, "tile_k": 116, "less": [116, 120], "intens": 116, "throuput": 116, "bottleneck": 116, "float2": 116, "float4": 116, "splitk_gemv_vector": 116, "max_transaction_size_in_bit": 116, "0084": 116, "outperfrom": 116, "plain": 116, "smem": 116, "atomidadd": 116, "splitk_gemv_vectorized_tvm": 116, "c_reduc": 116, "reduce_scop": 116, "uint64": 116, "uint32": 116, "0069": 116, "hyperparamet": 116, "get_best_config": 116, "get_config": [116, 128], "_config": [116, 128], "itertool": [116, 128], "kei": 116, "20": [116, 120, 128], "ref_program": [116, 128], "0067": 116, "red_buf0": 116, "00784": 116, "00773": 116, "16607": 116, "02419": 116, "00809": 116, "00675": 116, "0077344514429569244": 116, "lei": [117, 129], "knowledg": 117, "concern": 117, "conceptu": 117, "behind": 117, "necessarili": [117, 129], "drop": 117, "down": 117, "lowest": 117, "explicit": 117, "somewhat": 117, "triton": [117, 122], "almost": 117, "expert": [117, 121], "who": [117, 120, 121], "everi": 117, "assembli": 117, "figur": [117, 121], "flow": [117, 122], "walk": 117, "show": [117, 129], "flexibl": [117, 121], "divers": 117, "comfort": 117, "incur": 117, "fusion": 117, "flash": [117, 122], "easili": 117, "give": 117, "effort": 117, "raw": 117, "strike": 117, "portabl": 117, "reason": [117, 121], "concis": [117, 121, 122], "snippet": [117, 121, 129], "softwar": 117, "c_local": 117, "comment": 117, "ko": 117, "jit_kernel": 117, "ref_c": 117, "assert_clos": 117, "inspect": [117, 129], "cuda_sourc": 117, "though": 117, "slice": 117, "arrang": 117, "overlap": 117, "arithmet": 117, "under": 117, "hood": 117, "cutlass": 117, "cute": 117, "On": 117, "compos": [117, 121], "back": 117, "mix": [117, 121, 122], "keep": [117, 121], "rest": 117, "better": 117, "vendor": [117, 129], "intern": 117, "4090": 117, "a100": 117, "h100": 117, "mi300x": 117, "shown": 117, "1x": 117, "speedup": 117, "rtx": 117, "97x": 117, "0x": 117, "04x": 117, "08x": 117, "25x": 117, "vari": 117, "few": 117, "dispatch": 117, "verifi": [117, 120], "abil": [117, 121], "friendli": [117, 121], "tunabl": 117, "experi": 117, "scale": 117, "meanwhil": 117, "github": [117, 120, 122], "pycuda": 117, "prerequisit": 120, "wheel": 120, "pypi": 120, "ubuntu": 120, "04": 120, "later": [120, 125], "11": 120, "easiest": 120, "lang": [120, 122], "latest": 120, "termin": 120, "choos": [120, 121], "prebuilt": 120, "releas": 120, "page": 120, "dev0": 120, "cu120": 120, "py3": 120, "whl": 120, "repositori": 120, "git": 120, "__version__": 120, "docker": 120, "rm": 120, "ipc": 120, "nvcr": 120, "io": 120, "23": 120, "requisit": 120, "apach": 120, "debian": 120, "sudo": 120, "apt": 120, "python3": 120, "dev": 120, "setuptool": 120, "libtinfo": 120, "zlib1g": 120, "cmake": 120, "libedit": 120, "libxml2": 120, "clone": 120, "recurs": 120, "cd": 120, "patient": 120, "mkdir": 120, "dtvm_prebuild_path": 120, "pythonpath": 120, "tvm_import_python_path": 120, "3rd": 120, "parti": 120, "prefer": 120, "desir": [120, 121, 129], "3rdparti": 120, "echo": 120, "use_llvm": 120, "ON": 120, "use_cuda": 120, "use_rocm": 120, "libtilelang": 120, "libtvm": 120, "libtvm_runtim": 120, "bash": 120, "install_cuda": 120, "sh": 120, "install_amd": 120, "offici": 120, "cu121": 120, "stabl": 120, "thei": [120, 121, 125], "ideal": [120, 121], "bugfix": 120, "hasn": 120, "been": [120, 128], "depict": 121, "descript": 121, "resid": 121, "whichev": 121, "suit": 121, "unawar": 121, "independ": 121, "goal": 121, "worri": 121, "hierarchi": 121, "fulli": 121, "consider": 121, "predefin": 121, "leverag": [121, 129], "readi": 121, "made": 121, "dive": [121, 129], "experienc": 121, "characterist": 121, "offer": 121, "grant": 121, "tailor": 121, "expertis": 121, "expand": [121, 129], "intermedi": [121, 129], "emploi": [121, 122], "placement": 121, "particular": 121, "overal": 121, "heart": 121, "notion": 121, "portion": 121, "manipul": 121, "unit": 121, "easier": 121, "hallmark": 121, "place": 121, "rather": 121, "leav": 121, "opaqu": 121, "face": 121, "physic": 121, "fast": 121, "chip": 121, "seem": 121, "abund": 121, "becaus": 121, "deriv": 121, "furthermor": 121, "streamlin": 122, "dequant": 122, "linearattent": 122, "underli": [122, 129], "sacrif": 122, "art": 122, "instal": 122, "pip": 122, "nightli": 122, "brief": 122, "introduct": 122, "naiv": 122, "concurr": [122, 129], "atomicadd": 122, "conclus": 122, "linear": 122, "tmac": 122, "tabl": 122, "precis": 122, "ast": 122, "tilelibrari": 122, "sequenti": 125, "whole": 125, "know": 125, "reorder": 125, "noth": 125, "serpentin": 125, "stai": 126, "app": 126, "yyttt6": 128, "identifi": 128, "readabl": 128, "example_gemm": 128, "thread_num": 128, "enable_raster": 128, "combinatori": 128, "with_rol": 128, "out_c": 128, "lightweight": 128, "rank": 128, "scheme": 128, "orient": 128, "carve_templ": 128, "roller_hint": 128, "block_row": 128, "block_col": 128, "rasterization_plan": 128, "hereaft": 129, "undergo": 129, "roughli": 129, "categori": 129, "incorrect": 129, "theoret": 129, "focus": 129, "problem": 129, "nsight": 129, "rocprof": 129, "futur": 129, "materi": 129, "again": 129, "eventu": 129, "occur": 129, "jump": 129, "caus": 129, "35": 129, "shape_q": 129, "codegen_cuda": 129, "1257": 129, "ramp": 129, "somewher": 129, "rt_mod_cuda": 129, "std": 129, "cg": 129, "registri": 129, "tilelang_callback_cuda_postproc": 129, "henc": 129, "intercept": 129, "cuda_runtim": 129, "Be": 129, "mind": 129, "debug_print_buff": 129, "debug_print_buffer_condit": 129, "debug_print_value_condit": 129, "debug_print_register_fil": 129, "prefix": 129, "debug_print_msg": 129, "someth": 129, "hello": 129, "world": 129, "diagnos": 129, "deviat": 129, "prong": 129, "suffici": 129, "occup": 129, "aspect": 129}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [3, 0, 0, "-", "cache"], [5, 0, 0, "-", "carver"], [37, 0, 0, "-", "common"], [39, 0, 0, "-", "contrib"], [45, 0, 0, "-", "engine"], [50, 0, 0, "-", "env"], [51, 0, 0, "-", "intrinsics"], [57, 0, 0, "-", "jit"], [71, 0, 0, "-", "language"], [90, 0, 0, "-", "layout"], [94, 0, 0, "-", "math"], [95, 0, 0, "-", "primitives"], [99, 0, 0, "-", "profiler"], [1, 4, 1, "", "set_log_level"], [101, 0, 0, "-", "testing"], [102, 0, 0, "-", "tools"], [105, 0, 0, "-", "transform"], [107, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[2, 1, 1, "", "AutoTuner"], [2, 1, 1, "", "AutotuneResult"], [2, 1, 1, "", "JITContext"], [2, 4, 1, "", "autotune"], [2, 4, 1, "", "check_tensor_list_compatibility"], [2, 4, 1, "", "jit"]], "tilelang.autotuner.AutoTuner": [[2, 2, 1, "", "from_kernel"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_compile_args"]], "tilelang.autotuner.AutotuneResult": [[2, 3, 1, "id0", "config"], [2, 3, 1, "id1", "func"], [2, 3, 1, "id2", "kernel"], [2, 3, 1, "id3", "latency"], [2, 3, 1, "id4", "libcode"], [2, 3, 1, "id5", "ref_latency"]], "tilelang.autotuner.JITContext": [[2, 3, 1, "id6", "atol"], [2, 3, 1, "id7", "cache_input_tensors"], [2, 3, 1, "id8", "max_mismatched_ratio"], [2, 3, 1, "id9", "out_idx"], [2, 3, 1, "id10", "profiler"], [2, 3, 1, "id11", "ref_prog"], [2, 3, 1, "id12", "rtol"], [2, 3, 1, "id13", "skip_check"], [2, 3, 1, "id14", "supply_prog"], [2, 3, 1, "id15", "target"]], "tilelang.cache": [[3, 4, 1, "", "cached"], [3, 4, 1, "", "clear_cache"], [4, 0, 0, "-", "kernel_cache"]], "tilelang.cache.kernel_cache": [[4, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[4, 2, 1, "", "cached"], [4, 2, 1, "", "clear_cache"]], "tilelang.carver": [[6, 0, 0, "-", "analysis"], [7, 0, 0, "-", "arch"], [14, 0, 0, "-", "common_schedules"], [15, 0, 0, "-", "matmul_analysis"], [16, 0, 0, "-", "roller"], [28, 0, 0, "-", "template"], [36, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[6, 1, 1, "", "BlockInfo"], [6, 1, 1, "", "IterInfo"], [6, 4, 1, "", "check_func_with_dynamic"], [6, 4, 1, "", "collect_block_iter_vars_used_in_access_region"], [6, 4, 1, "", "collect_vars_used_in_prim_expr"], [6, 4, 1, "", "detect_dominant_read"], [6, 4, 1, "", "find_var_from_func"], [6, 4, 1, "", "get_coalesced_veclen"], [6, 4, 1, "", "get_max_shared_memory_per_block"], [6, 4, 1, "", "get_max_threads_per_block"], [6, 4, 1, "", "get_reduction_blocks"], [6, 4, 1, "", "get_root_block"], [6, 4, 1, "", "is_broadcast_epilogue"], [6, 4, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[6, 3, 1, "", "block_rv"], [6, 2, 1, "", "dom"], [6, 2, 1, "", "dom_kind"], [6, 2, 1, "", "is_elementwise"], [6, 2, 1, "", "is_gemm"], [6, 2, 1, "", "is_gemv"], [6, 2, 1, "", "is_injective"], [6, 2, 1, "", "is_reduction"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[6, 5, 1, "", "dom"], [6, 3, 1, "", "kind"], [6, 3, 1, "", "loop_rv"], [6, 3, 1, "", "var"]], "tilelang.carver.arch": [[8, 0, 0, "-", "arch_base"], [7, 4, 1, "", "auto_infer_current_arch"], [9, 0, 0, "-", "cdna"], [10, 0, 0, "-", "cpu"], [11, 0, 0, "-", "cuda"], [12, 0, 0, "-", "driver"], [7, 4, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[8, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[8, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[9, 1, 1, "", "CDNA"], [9, 4, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[10, 1, 1, "", "CPU"], [10, 4, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[11, 1, 1, "", "CUDA"], [11, 1, 1, "", "TensorInstruction"], [11, 4, 1, "", "check_sm_version"], [11, 4, 1, "", "has_mma_support"], [11, 4, 1, "", "is_ada_arch"], [11, 4, 1, "", "is_ampere_arch"], [11, 4, 1, "", "is_cuda_arch"], [11, 4, 1, "", "is_hopper_arch"], [11, 4, 1, "", "is_tensorcore_supported_precision"], [11, 4, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[11, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.driver": [[13, 0, 0, "-", "cuda_driver"]], "tilelang.carver.arch.driver.cuda_driver": [[13, 1, 1, "", "cudaDeviceProp"], [13, 4, 1, "", "get_cuda_device_properties"], [13, 4, 1, "", "get_device_attribute"], [13, 4, 1, "", "get_device_name"], [13, 4, 1, "", "get_max_dynamic_shared_size_bytes"], [13, 4, 1, "", "get_shared_memory_per_block"]], "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp": [[13, 3, 1, "", "ECCEnabled"], [13, 3, 1, "", "asyncEngineCount"], [13, 3, 1, "", "canMapHostMemory"], [13, 3, 1, "", "clockRate"], [13, 3, 1, "", "computeMode"], [13, 3, 1, "", "concurrentKernels"], [13, 3, 1, "", "deviceOverlap"], [13, 3, 1, "", "globalL1CacheSupported"], [13, 3, 1, "", "integrated"], [13, 3, 1, "", "isMultiGpuBoard"], [13, 3, 1, "", "kernelExecTimeoutEnabled"], [13, 3, 1, "", "l2CacheSize"], [13, 3, 1, "", "localL1CacheSupported"], [13, 3, 1, "", "luid"], [13, 3, 1, "", "luidDeviceNodeMask"], [13, 3, 1, "", "major"], [13, 3, 1, "", "managedMemory"], [13, 3, 1, "", "maxGridSize"], [13, 3, 1, "", "maxSurface1D"], [13, 3, 1, "", "maxSurface1DLayered"], [13, 3, 1, "", "maxSurface2D"], [13, 3, 1, "", "maxSurface2DLayered"], [13, 3, 1, "", "maxSurface3D"], [13, 3, 1, "", "maxSurfaceCubemap"], [13, 3, 1, "", "maxSurfaceCubemapLayered"], [13, 3, 1, "", "maxTexture1D"], [13, 3, 1, "", "maxTexture1DLayered"], [13, 3, 1, "", "maxTexture1DLinear"], [13, 3, 1, "", "maxTexture1DMipmap"], [13, 3, 1, "", "maxTexture2D"], [13, 3, 1, "", "maxTexture2DGather"], [13, 3, 1, "", "maxTexture2DLayered"], [13, 3, 1, "", "maxTexture2DLinear"], [13, 3, 1, "", "maxTexture2DMipmap"], [13, 3, 1, "", "maxTexture3D"], [13, 3, 1, "", "maxTexture3DAlt"], [13, 3, 1, "", "maxTextureCubemap"], [13, 3, 1, "", "maxTextureCubemapLayered"], [13, 3, 1, "", "maxThreadsDim"], [13, 3, 1, "", "maxThreadsPerBlock"], [13, 3, 1, "", "maxThreadsPerMultiProcessor"], [13, 3, 1, "", "memPitch"], [13, 3, 1, "", "memoryBusWidth"], [13, 3, 1, "", "memoryClockRate"], [13, 3, 1, "", "minor"], [13, 3, 1, "", "multiGpuBoardGroupID"], [13, 3, 1, "", "multiProcessorCount"], [13, 3, 1, "", "name"], [13, 3, 1, "", "pciBusID"], [13, 3, 1, "", "pciDeviceID"], [13, 3, 1, "", "pciDomainID"], [13, 3, 1, "", "persistingL2CacheMaxSize"], [13, 3, 1, "", "regsPerBlock"], [13, 3, 1, "", "regsPerMultiprocessor"], [13, 3, 1, "", "reserved"], [13, 3, 1, "", "reserved1"], [13, 3, 1, "", "reserved2"], [13, 3, 1, "", "sharedMemPerBlock"], [13, 3, 1, "", "sharedMemPerMultiprocessor"], [13, 3, 1, "", "streamPrioritiesSupported"], [13, 3, 1, "", "surfaceAlignment"], [13, 3, 1, "", "tccDriver"], [13, 3, 1, "", "textureAlignment"], [13, 3, 1, "", "texturePitchAlignment"], [13, 3, 1, "", "totalConstMem"], [13, 3, 1, "", "totalGlobalMem"], [13, 3, 1, "", "unifiedAddressing"], [13, 3, 1, "", "uuid"], [13, 3, 1, "", "warpSize"]], "tilelang.carver.common_schedules": [[14, 4, 1, "", "get_block"], [14, 4, 1, "", "get_output_blocks"], [14, 4, 1, "", "try_inline"], [14, 4, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[15, 1, 1, "", "IterKind"], [15, 1, 1, "", "IterTrait"], [15, 4, 1, "", "auto_inline_consumer_chain"], [15, 4, 1, "", "auto_inline_consumers"], [15, 4, 1, "", "auto_inline_producers"], [15, 4, 1, "", "collect_vars_from_expr"], [15, 4, 1, "", "detect_iter_traits"], [15, 4, 1, "", "find_arg_idx_from_buffer_chain"], [15, 4, 1, "", "find_first_similar_buffer"], [15, 4, 1, "", "find_first_similar_region"], [15, 4, 1, "", "find_last_producer_from_buffer"], [15, 4, 1, "", "get_dequantize_block"], [15, 4, 1, "", "get_in_out_dtypes"], [15, 4, 1, "", "get_index_map"], [15, 4, 1, "", "get_ladder_stage3_map"], [15, 4, 1, "", "get_propagate_map"], [15, 4, 1, "", "get_tensorized_func_and_tags"], [15, 4, 1, "", "inline_transpose_block"], [15, 4, 1, "", "is_identity_block"], [15, 4, 1, "", "is_identity_or_transpose_block"], [15, 4, 1, "", "is_transpose_block"], [15, 4, 1, "", "layout_propagate_chain"], [15, 4, 1, "", "make_iter_fusion_index_map"], [15, 4, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[15, 3, 1, "", "kIter_I"], [15, 3, 1, "", "kIter_J"], [15, 3, 1, "", "kIter_K"], [15, 3, 1, "", "kIter_S"], [15, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[15, 3, 1, "", "extent"], [15, 3, 1, "", "kind"]], "tilelang.carver.roller": [[17, 0, 0, "-", "bestfit"], [18, 0, 0, "-", "hint"], [19, 0, 0, "-", "node"], [20, 0, 0, "-", "policy"], [24, 0, 0, "-", "rasterization"], [25, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[17, 1, 1, "", "BestFit"], [17, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[17, 2, 1, "", "free"], [17, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[17, 2, 1, "", "merge"], [17, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[18, 1, 1, "", "Hint"], [18, 1, 1, "", "IntrinInfo"], [18, 1, 1, "", "Stride"], [18, 1, 1, "", "TensorCoreExtraConfig"], [18, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[18, 2, 1, "", "complete_config"], [18, 2, 1, "", "from_dict"], [18, 5, 1, "", "raxis_order"], [18, 5, 1, "", "step"], [18, 2, 1, "", "tensorcore_legalization"], [18, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[18, 5, 1, "", "inter_transform_a"], [18, 5, 1, "", "inter_transform_b"], [18, 2, 1, "", "is_input_8bit"], [18, 5, 1, "", "smooth_a"], [18, 5, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[18, 5, 1, "", "ax"], [18, 2, 1, "", "compute_elements_from_shape"], [18, 2, 1, "", "compute_strides_from_shape"], [18, 2, 1, "", "is_valid"], [18, 5, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[18, 2, 1, "", "get_rstep"], [18, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[19, 1, 1, "", "BlockAnalyzer"], [19, 1, 1, "", "Edge"], [19, 1, 1, "", "Node"], [19, 1, 1, "", "OutputNode"], [19, 1, 1, "", "PlaceHolderNode"], [19, 1, 1, "", "PrimFuncNode"], [19, 4, 1, "", "find_topo_sort"], [19, 4, 1, "", "find_topo_sort_priority"], [19, 4, 1, "", "pre_order_traverse"], [19, 4, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[19, 2, 1, "", "get_block_info"], [19, 2, 1, "", "get_block_name"], [19, 2, 1, "", "get_buffers"], [19, 2, 1, "", "get_consumer_blocks"], [19, 2, 1, "", "get_input_buffers"], [19, 2, 1, "", "get_output_buffers"], [19, 2, 1, "", "get_producer_blocks"], [19, 2, 1, "", "get_reduce_axis"], [19, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[19, 3, 1, "", "dst_id"], [19, 3, 1, "", "dst_node"], [19, 3, 1, "", "src_id"], [19, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[19, 2, 1, "", "add_tag"], [19, 2, 1, "", "get_dtype"], [19, 2, 1, "", "get_ir"], [19, 2, 1, "", "get_shape"], [19, 2, 1, "", "get_tag"], [19, 5, 1, "", "inputs"], [19, 2, 1, "", "is_output"], [19, 2, 1, "", "is_placeholder"], [19, 2, 1, "", "num_outputs"], [19, 5, 1, "", "outputs"], [19, 2, 1, "", "set_dtype"], [19, 2, 1, "", "set_inputs"], [19, 2, 1, "", "set_outputs"], [19, 2, 1, "", "set_shape"], [19, 2, 1, "", "set_tag"], [19, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[19, 2, 1, "", "get_ir"], [19, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[19, 2, 1, "", "get_ir"], [19, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[19, 2, 1, "", "extent_wrapper"], [19, 2, 1, "", "footprint"], [19, 2, 1, "", "get_buffer_dtype"], [19, 2, 1, "", "get_input_buffers"], [19, 2, 1, "", "get_opt_shape"], [19, 2, 1, "", "get_reduce_inputs_dtype"], [19, 2, 1, "", "get_space_dim"], [19, 2, 1, "", "infer_tensorcore_axis"], [19, 2, 1, "", "propagate"], [19, 2, 1, "", "propagate_inputs"], [19, 2, 1, "", "propagate_inputs_on_reduction"], [19, 2, 1, "", "propagate_outputs"], [19, 2, 1, "", "propagate_reduction_inputs"], [19, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[21, 0, 0, "-", "common"], [22, 0, 0, "-", "default"], [23, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[21, 4, 1, "", "coalesced_factor"], [21, 4, 1, "", "coalesced_tensor_shape"], [21, 4, 1, "", "factorize"], [21, 4, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[22, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[22, 3, 1, "", "arch"], [22, 2, 1, "", "assign_block_size"], [22, 2, 1, "", "check_tile_shape_isvalid"], [22, 2, 1, "", "compute_node_stride_map"], [22, 2, 1, "", "compute_tile_dict"], [22, 2, 1, "", "compute_workload_per_item"], [22, 2, 1, "", "dfs_smem_tile"], [22, 2, 1, "", "emit_config"], [22, 2, 1, "", "from_output_nodes"], [22, 2, 1, "", "from_prim_func"], [22, 3, 1, "", "func"], [22, 2, 1, "", "get_base_tile"], [22, 2, 1, "", "get_block_size"], [22, 2, 1, "", "get_node_reduce_step_candidates"], [22, 2, 1, "", "infer_node_smem_usage"], [22, 3, 1, "", "nodes"], [22, 2, 1, "", "plan_rasterization"], [22, 2, 1, "", "recommend_block_size"], [22, 2, 1, "", "score_block_size"], [22, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[23, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[23, 3, 1, "", "block_reduction_depth"], [23, 2, 1, "", "check_tile_shape_isvalid"], [23, 2, 1, "", "compute_node_stride_map"], [23, 2, 1, "", "get_node_reduce_step_candidates"], [23, 2, 1, "", "infer_node_smem_usage"], [23, 3, 1, "", "pipeline_stage"], [23, 2, 1, "", "plan_rasterization"], [23, 3, 1, "", "use_async_copy"], [23, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[24, 1, 1, "", "NoRasterization"], [24, 1, 1, "", "Rasterization"], [24, 1, 1, "", "Rasterization2DColumn"], [24, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[24, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[24, 2, 1, "", "get_code"], [24, 5, 1, "", "panel_width"], [24, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[24, 2, 1, "", "get_code"], [24, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[24, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[26, 0, 0, "-", "common"], [27, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[26, 1, 1, "", "InputShapeInference"], [26, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[26, 2, 1, "", "get_input_exprs"], [26, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[27, 1, 1, "", "DependencyAnalysis"], [27, 1, 1, "", "InputShapeInference"], [27, 1, 1, "", "Statement"], [27, 1, 1, "", "TensorDepNode"], [27, 4, 1, "", "get_analyzer_by_tir"], [27, 4, 1, "", "region_exist_in_list"], [27, 4, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[27, 2, 1, "", "analyze"], [27, 2, 1, "", "find_path_from_source"], [27, 2, 1, "", "get_or_create_node"], [27, 2, 1, "", "print_dependencies"], [27, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[27, 2, 1, "", "construct_dependency_target"], [27, 2, 1, "", "get_input_exprs"], [27, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[27, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[27, 2, 1, "", "add_next"], [27, 2, 1, "", "add_prev"], [27, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[29, 0, 0, "-", "base"], [30, 0, 0, "-", "conv"], [31, 0, 0, "-", "elementwise"], [32, 0, 0, "-", "flashattention"], [33, 0, 0, "-", "gemv"], [34, 0, 0, "-", "general_reduce"], [35, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[29, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[29, 5, 1, "", "arch"], [29, 2, 1, "", "equivalent_function"], [29, 2, 1, "", "get_hardware_aware_configs"], [29, 2, 1, "", "has_arch"], [29, 2, 1, "", "initialize_function"], [29, 2, 1, "", "is_ampere_arch"], [29, 2, 1, "", "is_cdna_arch"], [29, 2, 1, "", "is_volta_arch"], [29, 5, 1, "", "output_nodes"], [29, 2, 1, "", "recommend_hints"], [29, 2, 1, "", "set_function"], [29, 2, 1, "", "set_output_nodes"], [29, 2, 1, "", "with_arch"]], "tilelang.carver.template.conv": [[30, 1, 1, "", "ConvTemplate"]], "tilelang.carver.template.conv.ConvTemplate": [[30, 3, 1, "id0", "C"], [30, 3, 1, "id1", "D"], [30, 3, 1, "id2", "F"], [30, 3, 1, "id3", "H"], [30, 3, 1, "id4", "K"], [30, 3, 1, "id5", "N"], [30, 3, 1, "id6", "P"], [30, 3, 1, "id7", "S"], [30, 3, 1, "id8", "W"], [30, 3, 1, "id9", "accum_dtype"], [30, 5, 1, "", "class_attributes"], [30, 2, 1, "", "get_hardware_aware_configs"], [30, 3, 1, "id10", "in_dtype"], [30, 2, 1, "", "initialize_function"], [30, 3, 1, "id11", "out_dtype"], [30, 2, 1, "", "params_as_dict"], [30, 3, 1, "id12", "with_bias"]], "tilelang.carver.template.elementwise": [[31, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[31, 5, 1, "", "class_attributes"], [31, 3, 1, "id0", "dtype"], [31, 2, 1, "", "get_hardware_aware_configs"], [31, 2, 1, "", "initialize_function"], [31, 2, 1, "", "params_as_dict"], [31, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[32, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[32, 3, 1, "", "accum_dtype"], [32, 3, 1, "", "batch_size"], [32, 5, 1, "", "class_attributes"], [32, 2, 1, "", "get_hardware_aware_configs"], [32, 3, 1, "", "head_dim"], [32, 3, 1, "", "in_dtype"], [32, 2, 1, "", "initialize_function"], [32, 3, 1, "", "is_causal"], [32, 3, 1, "", "num_heads"], [32, 3, 1, "", "out_dtype"], [32, 2, 1, "", "params_as_dict"], [32, 3, 1, "", "seq_kv_length"], [32, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[33, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[33, 3, 1, "", "K"], [33, 3, 1, "", "N"], [33, 3, 1, "", "accum_dtype"], [33, 5, 1, "", "class_attributes"], [33, 2, 1, "", "get_hardware_aware_configs"], [33, 3, 1, "", "in_dtype"], [33, 2, 1, "", "initialize_function"], [33, 3, 1, "", "out_dtype"], [33, 2, 1, "", "params_as_dict"], [33, 3, 1, "", "trans_B"], [33, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[34, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[34, 5, 1, "", "class_attributes"], [34, 3, 1, "", "dtype"], [34, 2, 1, "", "get_hardware_aware_configs"], [34, 2, 1, "", "initialize_function"], [34, 2, 1, "", "params_as_dict"], [34, 3, 1, "", "shape"], [34, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[35, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[35, 3, 1, "id0", "K"], [35, 3, 1, "id1", "M"], [35, 3, 1, "id2", "N"], [35, 3, 1, "id3", "accum_dtype"], [35, 5, 1, "", "class_attributes"], [35, 2, 1, "", "get_hardware_aware_configs"], [35, 3, 1, "id4", "in_dtype"], [35, 2, 1, "", "initialize_function"], [35, 3, 1, "id5", "out_dtype"], [35, 2, 1, "", "params_as_dict"], [35, 3, 1, "id6", "trans_A"], [35, 3, 1, "id7", "trans_B"], [35, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[36, 4, 1, "", "get_rasterization_code"], [36, 4, 1, "", "get_roller_hints_from_func"], [36, 4, 1, "", "get_roller_hints_from_output_nodes"], [36, 4, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[38, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[38, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[38, 3, 1, "", "InterWarpTransform"], [38, 3, 1, "", "IntraWarpTransform"], [38, 3, 1, "", "LDMatrixTransform"], [38, 3, 1, "", "NonTransform"], [38, 2, 1, "", "is_inter_warp_transform"], [38, 2, 1, "", "is_intra_warp_transform"], [38, 2, 1, "", "is_ld_matrix_transform"], [38, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[40, 0, 0, "-", "cc"], [41, 0, 0, "-", "dlpack"], [42, 0, 0, "-", "hipcc"], [43, 0, 0, "-", "nvcc"], [44, 0, 0, "-", "rocm"]], "tilelang.contrib.cc": [[40, 4, 1, "", "create_executable"], [40, 4, 1, "", "create_shared"], [40, 4, 1, "", "create_staticlib"], [40, 4, 1, "", "cross_compiler"], [40, 4, 1, "", "get_cc"], [40, 4, 1, "", "get_cplus_compiler"], [40, 4, 1, "", "get_global_symbol_section_map"], [40, 4, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[41, 4, 1, "", "convert_func"], [41, 4, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[42, 4, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[43, 4, 1, "", "callback_libdevice_path"], [43, 4, 1, "", "compile_cuda"], [43, 4, 1, "", "find_cuda_path"], [43, 4, 1, "", "get_cuda_version"], [43, 4, 1, "", "have_cudagraph"], [43, 4, 1, "", "have_fp16"], [43, 4, 1, "", "have_int8"], [43, 4, 1, "", "have_tensorcore"], [43, 4, 1, "", "parse_compute_version"]], "tilelang.contrib.rocm": [[44, 4, 1, "", "find_lld"], [44, 4, 1, "", "find_rocm_path"], [44, 4, 1, "", "have_matrixcore"], [44, 4, 1, "", "parse_compute_version"], [44, 4, 1, "", "rocm_link"]], "tilelang.engine": [[46, 0, 0, "-", "callback"], [47, 0, 0, "-", "lower"], [48, 0, 0, "-", "param"], [49, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[46, 4, 1, "", "register_cuda_postproc"], [46, 4, 1, "", "register_cuda_postproc_callback"], [46, 4, 1, "", "register_hip_postproc"], [46, 4, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[47, 4, 1, "", "canon_target_host"], [47, 4, 1, "", "device_codegen"], [47, 4, 1, "", "device_codegen_without_compile"], [47, 4, 1, "", "extrac_params"], [47, 4, 1, "", "get_device_call"], [47, 4, 1, "", "get_host_call"], [47, 4, 1, "", "has_device_kernel_launch"], [47, 4, 1, "", "host_codegen"], [47, 4, 1, "", "is_cpu_device_backend"], [47, 4, 1, "", "is_device_call"], [47, 4, 1, "", "is_device_call_c_device"], [47, 4, 1, "", "lower"]], "tilelang.engine.param": [[48, 1, 1, "", "CompiledArtifact"], [48, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[48, 3, 1, "", "device_mod"], [48, 3, 1, "", "host_mod"], [48, 3, 1, "", "kernel_source"], [48, 3, 1, "", "params"], [48, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[48, 3, 1, "", "dtype"], [48, 2, 1, "", "from_buffer"], [48, 2, 1, "", "from_var"], [48, 2, 1, "", "is_boolean"], [48, 2, 1, "", "is_float8"], [48, 2, 1, "", "is_scalar"], [48, 2, 1, "", "is_unsigned"], [48, 3, 1, "", "shape"]], "tilelang.engine.phase": [[49, 4, 1, "", "LowerAndLegalize"], [49, 4, 1, "", "OptimizeForTarget"]], "tilelang.env": [[50, 4, 1, "", "disable_cache"], [50, 4, 1, "", "enable_cache"], [50, 4, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[52, 0, 0, "-", "mfma_layout"], [53, 0, 0, "-", "mfma_macro_generator"], [54, 0, 0, "-", "mma_layout"], [55, 0, 0, "-", "mma_macro_generator"], [56, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[52, 4, 1, "", "make_mfma_swizzle_layout"], [52, 4, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [52, 4, 1, "", "shared_16x16_to_local_64x4_layout_A"], [52, 4, 1, "", "shared_16x16_to_local_64x4_layout_B"], [52, 4, 1, "", "shared_16x16_to_local_64x4_layout_C"], [52, 4, 1, "", "shared_16x32_to_local_64x8_layout_A"], [52, 4, 1, "", "shared_16x32_to_local_64x8_layout_B"], [52, 4, 1, "", "shared_16x4_to_local_64x1_layout_A"], [52, 4, 1, "", "shared_4x16_to_local_64x1_layout_B"], [52, 4, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [52, 4, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [52, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [52, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [52, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [52, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [52, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [52, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[53, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[53, 3, 1, "", "M_DIM"], [53, 3, 1, "", "N_DIM"], [53, 3, 1, "", "WARP_SIZE"], [53, 3, 1, "", "dtype_abbrv"], [53, 2, 1, "", "extract_thread_binding"], [53, 2, 1, "", "get_ldmatrix_index_map"], [53, 3, 1, "", "is_m_first"], [53, 3, 1, "", "k_pack"], [53, 2, 1, "", "ldmatrix_a"], [53, 2, 1, "", "ldmatrix_b"], [53, 2, 1, "", "mfma"], [53, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[54, 4, 1, "", "get_swizzle_layout"], [54, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [54, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [54, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [54, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [54, 4, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [54, 4, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [54, 4, 1, "", "make_mma_swizzle_layout"], [54, 4, 1, "", "mma_32x8_to_shared_16x16_layout"], [54, 4, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [54, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [54, 4, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [54, 4, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [54, 4, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [54, 4, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [54, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [54, 4, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [54, 4, 1, "", "shared_32x16_to_mma_32x16_layout"], [54, 4, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[55, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [55, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [55, 1, 1, "", "TensorCoreIntrinEmitter"], [55, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[55, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[55, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[55, 3, 1, "", "M_DIM"], [55, 3, 1, "", "N_DIM"], [55, 3, 1, "", "WARP_SIZE"], [55, 3, 1, "", "dtype_abbrv"], [55, 2, 1, "", "extract_thread_binding"], [55, 2, 1, "", "get_store_index_map"], [55, 3, 1, "", "is_m_first"], [55, 2, 1, "", "ldmatrix_a"], [55, 2, 1, "", "ldmatrix_b"], [55, 2, 1, "", "make_mma_load_layout"], [55, 2, 1, "", "make_mma_store_layout"], [55, 2, 1, "", "mma"], [55, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[55, 2, 1, "", "ldmatrix_a"], [55, 2, 1, "", "ldmatrix_b"], [55, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[56, 4, 1, "", "get_ldmatrix_offset"], [56, 4, 1, "", "get_mma_micro_size"], [56, 4, 1, "", "index_to_coordinates"], [56, 4, 1, "", "mfma_store_index_map"], [56, 4, 1, "", "mma_store_index_map"], [56, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [56, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [56, 4, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[58, 0, 0, "-", "adapter"], [57, 4, 1, "", "compile"], [69, 0, 0, "-", "env"], [57, 4, 1, "", "jit"], [70, 0, 0, "-", "kernel"]], "tilelang.jit.adapter": [[59, 0, 0, "-", "base"], [60, 0, 0, "-", "ctypes"], [62, 0, 0, "-", "cython"], [65, 0, 0, "-", "dlpack"], [66, 0, 0, "-", "libgen"], [67, 0, 0, "-", "utils"], [68, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[59, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[59, 3, 1, "", "func"], [59, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[61, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[61, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[61, 3, 1, "", "dynamic_symbolic_map"], [61, 2, 1, "", "from_database"], [61, 2, 1, "", "get_kernel_source"], [61, 3, 1, "", "ir_module"], [61, 5, 1, "", "is_dynamic"], [61, 3, 1, "", "kernel_global_source"], [61, 3, 1, "", "lib"], [61, 5, 1, "", "lib_code"], [61, 5, 1, "", "libpath"], [61, 3, 1, "", "param_dtypes"], [61, 3, 1, "", "param_shapes"], [61, 3, 1, "", "pass_configs"], [61, 5, 1, "", "prim_func"], [61, 5, 1, "", "srcpath"], [61, 3, 1, "", "target"], [61, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[63, 0, 0, "-", "adapter"], [64, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[63, 1, 1, "", "CythonKernelAdapter"], [63, 4, 1, "", "get_cache_dir"], [63, 4, 1, "", "get_cached_lib"], [63, 4, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[63, 3, 1, "", "buffer_device_map"], [63, 3, 1, "", "buffer_dtype_map"], [63, 3, 1, "", "dynamic_symbolic_map"], [63, 2, 1, "", "from_database"], [63, 2, 1, "", "get_kernel_source"], [63, 3, 1, "", "ir_module"], [63, 5, 1, "", "is_dynamic"], [63, 3, 1, "", "kernel_global_source"], [63, 3, 1, "", "lib"], [63, 5, 1, "", "lib_code"], [63, 5, 1, "", "libpath"], [63, 3, 1, "", "pass_configs"], [63, 5, 1, "", "prim_func"], [63, 3, 1, "", "ptr_map"], [63, 5, 1, "", "srcpath"], [63, 3, 1, "", "static_shape_map"], [63, 3, 1, "", "target"], [63, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[64, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "set_buffer_device_map"], [64, 2, 1, "", "set_buffer_dtype_map"], [64, 2, 1, "", "set_dynamic_symbolic_map"], [64, 2, 1, "", "set_ptr_map"], [64, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[65, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[66, 1, 1, "", "LibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[66, 2, 1, "", "compile_lib"], [66, 2, 1, "", "get_lib_path"], [66, 2, 1, "", "get_source_path"], [66, 3, 1, "", "lib_code"], [66, 3, 1, "", "libpath"], [66, 2, 1, "", "load_lib"], [66, 2, 1, "", "remove_lib"], [66, 2, 1, "", "set_lib_path"], [66, 2, 1, "", "set_src_path"], [66, 3, 1, "", "srcpath"], [66, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.utils": [[67, 4, 1, "", "get_annotated_mod"], [67, 4, 1, "", "is_cpu_target"], [67, 4, 1, "", "is_cuda_target"], [67, 4, 1, "", "is_hip_target"], [67, 4, 1, "", "match_declare_kernel"], [67, 4, 1, "", "match_declare_kernel_cpu"], [67, 4, 1, "", "match_global_kernel"]], "tilelang.jit.adapter.wrapper": [[68, 1, 1, "", "BaseWrapper"], [68, 1, 1, "", "TLCPUSourceWrapper"], [68, 1, 1, "", "TLCUDASourceWrapper"], [68, 1, 1, "", "TLHIPSourceWrapper"], [68, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[68, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[68, 3, 1, "", "CALL_PREFIX"], [68, 3, 1, "", "INIT_FUNC"], [68, 3, 1, "", "backend"], [68, 2, 1, "", "create_call_func"], [68, 3, 1, "", "device_mod"], [68, 2, 1, "", "get_cpu_init_func"], [68, 2, 1, "", "get_dynamic_symbolic_set"], [68, 3, 1, "", "host_mod"], [68, 2, 1, "", "parse_source_information"], [68, 3, 1, "", "pass_configs"], [68, 5, 1, "", "prim_func"], [68, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[68, 3, 1, "", "backend"], [68, 2, 1, "", "create_dispatch_func"], [68, 3, 1, "", "device_mod"], [68, 2, 1, "", "generate_tma_descriptor_args"], [68, 2, 1, "", "get_dynamic_symbolic_set"], [68, 2, 1, "", "get_init_func"], [68, 2, 1, "", "get_stream_type"], [68, 3, 1, "", "host_mod"], [68, 2, 1, "", "is_tma_descriptor_arg"], [68, 2, 1, "", "parse_source_information"], [68, 3, 1, "", "pass_configs"], [68, 5, 1, "", "prim_func"], [68, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[68, 2, 1, "", "get_init_func"], [68, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[68, 2, 1, "", "assign_device_module"], [68, 2, 1, "", "assign_host_module"], [68, 2, 1, "", "assign_optimized_module"], [68, 2, 1, "", "assign_pass_configs"], [68, 3, 1, "", "device_mod"], [68, 3, 1, "", "host_mod"], [68, 3, 1, "", "lib"], [68, 3, 1, "", "pass_configs"], [68, 3, 1, "", "target"], [68, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[70, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[70, 3, 1, "id0", "adapter"], [70, 3, 1, "id1", "artifact"], [70, 2, 1, "", "export_library"], [70, 2, 1, "", "from_database"], [70, 2, 1, "", "from_tilelang_function"], [70, 2, 1, "", "get_host_source"], [70, 2, 1, "", "get_kernel_source"], [70, 2, 1, "", "get_profiler"], [70, 5, 1, "", "host_source"], [70, 5, 1, "", "kernel_source"], [70, 5, 1, "", "out_idx"], [70, 5, 1, "", "params"], [70, 2, 1, "", "run_once"], [70, 3, 1, "id2", "torch_function"]], "tilelang.language": [[72, 0, 0, "-", "allocate"], [71, 4, 1, "", "annotate_layout"], [73, 0, 0, "-", "builtin"], [74, 0, 0, "-", "copy"], [75, 0, 0, "-", "customize"], [76, 0, 0, "-", "fill"], [77, 0, 0, "-", "frame"], [78, 0, 0, "-", "gemm"], [71, 4, 1, "", "import_source"], [79, 0, 0, "-", "kernel"], [80, 0, 0, "-", "memscope"], [81, 0, 0, "-", "parallel"], [82, 0, 0, "-", "pipeline"], [83, 0, 0, "-", "print"], [84, 0, 0, "-", "proxy"], [85, 0, 0, "-", "reduce"], [71, 4, 1, "", "symbolic"], [86, 0, 0, "-", "tir"], [71, 4, 1, "", "use_swizzle"]], "tilelang.language.allocate": [[72, 4, 1, "", "alloc_fragment"], [72, 4, 1, "", "alloc_local"], [72, 4, 1, "", "alloc_shared"], [72, 4, 1, "", "alloc_var"]], "tilelang.language.builtin": [[73, 4, 1, "", "CreateListofMBarrierOp"], [73, 4, 1, "", "CreateTMADescriptorOp"], [73, 4, 1, "", "FenceProxyAsyncOp"], [73, 4, 1, "", "GetMBarrierOp"], [73, 4, 1, "", "MBarrierExpectTX"], [73, 4, 1, "", "MBarrierWaitParity"], [73, 4, 1, "", "NoSetMaxNReg"], [73, 4, 1, "", "SetMaxNReg"], [73, 4, 1, "", "TMALoadOp"], [73, 4, 1, "", "TMAStoreArrive"], [73, 4, 1, "", "TMAStoreWait"], [73, 4, 1, "", "WaitWgmma"]], "tilelang.language.copy": [[74, 4, 1, "", "buffer_load_to_tile_region"], [74, 4, 1, "", "buffer_region_to_tile_region"], [74, 4, 1, "", "buffer_to_tile_region"], [74, 4, 1, "", "c2d_im2col"], [74, 4, 1, "", "copy"], [74, 4, 1, "", "region"]], "tilelang.language.customize": [[75, 4, 1, "", "atomic_add"], [75, 4, 1, "", "atomic_addx2"], [75, 4, 1, "", "clamp"], [75, 4, 1, "", "dp4a"], [75, 4, 1, "", "reshape"], [75, 4, 1, "", "view"]], "tilelang.language.fill": [[76, 4, 1, "", "clear"], [76, 4, 1, "", "fill"]], "tilelang.language.frame": [[77, 1, 1, "", "FrameStack"], [77, 1, 1, "", "LetFrame"], [77, 4, 1, "", "get_let_value"], [77, 4, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[77, 2, 1, "", "get_value"], [77, 2, 1, "", "has_value"], [77, 2, 1, "", "pop"], [77, 2, 1, "", "push"], [77, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[77, 2, 1, "", "Current"], [77, 2, 1, "", "get_value"], [77, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[78, 4, 1, "", "gemm"]], "tilelang.language.kernel": [[79, 1, 1, "", "FrameStack"], [79, 4, 1, "", "Kernel"], [79, 1, 1, "", "KernelLaunchFrame"], [79, 4, 1, "", "get_block_binding"], [79, 4, 1, "", "get_block_bindings"], [79, 4, 1, "", "get_thread_binding"], [79, 4, 1, "", "get_thread_bindings"]], "tilelang.language.kernel.FrameStack": [[79, 2, 1, "", "pop"], [79, 2, 1, "", "push"], [79, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[79, 2, 1, "", "Current"], [79, 5, 1, "", "blocks"], [79, 2, 1, "", "get_block_binding"], [79, 2, 1, "", "get_block_bindings"], [79, 2, 1, "", "get_block_extent"], [79, 2, 1, "", "get_num_threads"], [79, 2, 1, "", "get_thread_binding"], [79, 2, 1, "", "get_thread_bindings"], [79, 2, 1, "", "get_thread_extent"], [79, 5, 1, "", "num_threads"], [79, 5, 1, "", "threads"]], "tilelang.language.parallel": [[81, 4, 1, "", "Parallel"]], "tilelang.language.pipeline": [[82, 4, 1, "", "Pipelined"]], "tilelang.language.print": [[83, 4, 1, "", "print"]], "tilelang.language.proxy": [[84, 1, 1, "", "BaseTensorProxy"], [84, 1, 1, "", "BufferProxy"], [84, 1, 1, "", "FragmentBufferProxy"], [84, 1, 1, "", "LocalBufferProxy"], [84, 1, 1, "", "SharedBufferProxy"], [84, 1, 1, "", "TensorProxy"], [84, 4, 1, "", "make_tensor"], [84, 4, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[84, 3, 1, "", "default_align"], [84, 3, 1, "", "default_offset_factor"], [84, 3, 1, "", "default_scope"], [84, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[84, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[84, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[84, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[84, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[85, 4, 1, "", "reduce"], [85, 4, 1, "", "reduce_absmax"], [85, 4, 1, "", "reduce_abssum"], [85, 4, 1, "", "reduce_max"], [85, 4, 1, "", "reduce_min"], [85, 4, 1, "", "reduce_sum"]], "tilelang.language.tir": [[87, 0, 0, "-", "entry"], [88, 0, 0, "-", "ir"], [89, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[87, 4, 1, "", "macro"], [87, 4, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[88, 4, 1, "", "grid"], [88, 4, 1, "", "parallel"], [88, 4, 1, "", "serial"], [88, 4, 1, "", "thread_binding"], [88, 4, 1, "", "unroll"], [88, 4, 1, "", "vectorized"]], "tilelang.language.tir.op": [[89, 4, 1, "", "TVMBackendAllocWorkspace"], [89, 4, 1, "", "TVMBackendFreeWorkspace"], [89, 4, 1, "", "abs"], [89, 4, 1, "", "acos"], [89, 4, 1, "", "acosh"], [89, 4, 1, "", "address_of"], [89, 4, 1, "", "all"], [89, 4, 1, "", "any"], [89, 4, 1, "", "anylist_getitem"], [89, 4, 1, "", "anylist_resetitem"], [89, 4, 1, "", "anylist_setitem_call_cpacked"], [89, 4, 1, "", "anylist_setitem_call_packed"], [89, 4, 1, "", "asin"], [89, 4, 1, "", "asinh"], [89, 4, 1, "", "assume"], [89, 4, 1, "", "atan"], [89, 4, 1, "", "atan2"], [89, 4, 1, "", "atanh"], [89, 4, 1, "", "bitwise_and"], [89, 4, 1, "", "bitwise_not"], [89, 4, 1, "", "bitwise_or"], [89, 4, 1, "", "bitwise_xor"], [89, 4, 1, "", "call_cpacked"], [89, 4, 1, "", "call_cpacked_lowered"], [89, 4, 1, "", "call_extern"], [89, 4, 1, "", "call_intrin"], [89, 4, 1, "", "call_llvm_intrin"], [89, 4, 1, "", "call_llvm_pure_intrin"], [89, 4, 1, "", "call_packed"], [89, 4, 1, "", "call_packed_lowered"], [89, 4, 1, "", "call_pure_extern"], [89, 4, 1, "", "call_tir"], [89, 4, 1, "", "ceil"], [89, 4, 1, "", "ceildiv"], [89, 4, 1, "", "clz"], [89, 4, 1, "", "comm_reducer"], [89, 4, 1, "", "copysign"], [89, 4, 1, "", "cos"], [89, 4, 1, "", "cosh"], [89, 4, 1, "", "create_barriers"], [89, 4, 1, "", "div"], [89, 4, 1, "", "end_profile_intrinsic"], [89, 4, 1, "", "erf"], [89, 4, 1, "", "exp"], [89, 4, 1, "", "exp10"], [89, 4, 1, "", "exp2"], [89, 4, 1, "", "floor"], [89, 4, 1, "", "floordiv"], [89, 4, 1, "", "floormod"], [89, 4, 1, "", "fmod"], [89, 4, 1, "", "hypot"], [89, 4, 1, "", "if_then_else"], [89, 4, 1, "", "indexdiv"], [89, 4, 1, "", "indexmod"], [89, 4, 1, "", "infinity"], [89, 4, 1, "", "isfinite"], [89, 4, 1, "", "isinf"], [89, 4, 1, "", "isnan"], [89, 4, 1, "", "isnullptr"], [89, 4, 1, "", "ldexp"], [89, 4, 1, "", "likely"], [89, 4, 1, "", "log"], [89, 4, 1, "", "log10"], [89, 4, 1, "", "log1p"], [89, 4, 1, "", "log2"], [89, 4, 1, "", "lookup_param"], [89, 4, 1, "", "max_value"], [89, 4, 1, "", "min_value"], [89, 4, 1, "", "mma_fill"], [89, 4, 1, "", "mma_store"], [89, 4, 1, "", "nearbyint"], [89, 4, 1, "", "nextafter"], [89, 4, 1, "", "popcount"], [89, 4, 1, "", "pow"], [89, 4, 1, "", "power"], [89, 4, 1, "", "ptx_arrive_barrier"], [89, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [89, 4, 1, "", "ptx_commit_group"], [89, 4, 1, "", "ptx_cp_async"], [89, 4, 1, "", "ptx_cp_async_barrier"], [89, 4, 1, "", "ptx_cp_async_bulk"], [89, 4, 1, "", "ptx_init_barrier_thread_count"], [89, 4, 1, "", "ptx_ldmatrix"], [89, 4, 1, "", "ptx_mma"], [89, 4, 1, "", "ptx_mma_sp"], [89, 4, 1, "", "ptx_wait_barrier"], [89, 4, 1, "", "ptx_wait_group"], [89, 4, 1, "", "q_multiply_shift"], [89, 4, 1, "", "q_multiply_shift_per_axis"], [89, 4, 1, "", "reinterpret"], [89, 4, 1, "", "ret"], [89, 4, 1, "", "round"], [89, 4, 1, "", "rsqrt"], [89, 4, 1, "", "shift_left"], [89, 4, 1, "", "shift_right"], [89, 4, 1, "", "sigmoid"], [89, 4, 1, "", "sin"], [89, 4, 1, "", "sinh"], [89, 4, 1, "", "sqrt"], [89, 4, 1, "", "start_profile_intrinsic"], [89, 4, 1, "", "tan"], [89, 4, 1, "", "tanh"], [89, 4, 1, "", "trace"], [89, 4, 1, "", "trunc"], [89, 4, 1, "", "truncdiv"], [89, 4, 1, "", "truncmod"], [89, 4, 1, "", "tvm_access_ptr"], [89, 4, 1, "", "tvm_bmma_sync"], [89, 4, 1, "", "tvm_check_return"], [89, 4, 1, "", "tvm_fill_fragment"], [89, 4, 1, "", "tvm_load_matrix_sync"], [89, 4, 1, "", "tvm_mfma"], [89, 4, 1, "", "tvm_mfma_store"], [89, 4, 1, "", "tvm_mma_sync"], [89, 4, 1, "", "tvm_rdna_wmma"], [89, 4, 1, "", "tvm_rdna_wmma_store"], [89, 4, 1, "", "tvm_stack_alloca"], [89, 4, 1, "", "tvm_stack_make_array"], [89, 4, 1, "", "tvm_stack_make_shape"], [89, 4, 1, "", "tvm_storage_sync"], [89, 4, 1, "", "tvm_store_matrix_sync"], [89, 4, 1, "", "tvm_struct_get"], [89, 4, 1, "", "tvm_struct_set"], [89, 4, 1, "", "tvm_thread_allreduce"], [89, 4, 1, "", "tvm_thread_invariant"], [89, 4, 1, "", "tvm_throw_last_error"], [89, 4, 1, "", "tvm_tuple"], [89, 4, 1, "", "tvm_warp_activemask"], [89, 4, 1, "", "tvm_warp_shuffle"], [89, 4, 1, "", "tvm_warp_shuffle_down"], [89, 4, 1, "", "tvm_warp_shuffle_up"], [89, 4, 1, "", "type_annotation"], [89, 4, 1, "", "undef"], [89, 4, 1, "", "vectorcombine"], [89, 4, 1, "", "vectorhigh"], [89, 4, 1, "", "vectorlow"], [89, 4, 1, "", "vscale"]], "tilelang.layout": [[91, 0, 0, "-", "fragment"], [92, 0, 0, "-", "layout"], [93, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[91, 1, 1, "", "Fragment"], [91, 4, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[91, 2, 1, "", "condense_rep_var"], [91, 2, 1, "", "get_thread_size"], [91, 2, 1, "", "map_forward_thread"], [91, 2, 1, "", "repeat"], [91, 2, 1, "", "replicate"], [91, 5, 1, "", "thread"]], "tilelang.layout.layout": [[92, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[92, 2, 1, "", "get_forward_vars"], [92, 2, 1, "", "get_input_shape"], [92, 2, 1, "", "get_output_shape"], [92, 5, 1, "", "index"], [92, 2, 1, "", "inverse"], [92, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[93, 4, 1, "", "make_swizzled_layout"]], "tilelang.math": [[94, 4, 1, "", "cdiv"], [94, 4, 1, "", "next_power_of_2"]], "tilelang.primitives": [[96, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[97, 0, 0, "-", "base"], [96, 4, 1, "", "gemm"], [98, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[97, 1, 1, "", "GemmBaseParams"], [97, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[97, 3, 1, "", "A"], [97, 3, 1, "", "B"], [97, 3, 1, "", "C"], [97, 3, 1, "", "block_col_warps"], [97, 3, 1, "", "block_row_warps"], [97, 3, 1, "", "chunk"], [97, 5, 1, "", "class_attributes"], [97, 2, 1, "", "get_warp_size"], [97, 2, 1, "", "infer_block_partition"], [97, 3, 1, "", "k_pack"], [97, 2, 1, "", "params_as_dict"], [97, 3, 1, "", "policy"], [97, 3, 1, "", "transpose_A"], [97, 3, 1, "", "transpose_B"], [97, 3, 1, "", "warp_col_tiles"], [97, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[97, 3, 1, "", "FullCol"], [97, 3, 1, "", "FullRow"], [97, 3, 1, "", "Square"], [97, 2, 1, "", "compute_warp_partition"], [97, 2, 1, "", "from_warp_partition"], [97, 2, 1, "", "is_full_col"], [97, 2, 1, "", "is_full_row"], [97, 2, 1, "", "is_square"], [97, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[98, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[98, 5, 1, "", "accum_dtype"], [98, 2, 1, "", "gemm_rrr"], [98, 2, 1, "", "gemm_rsr"], [98, 2, 1, "", "gemm_srr"], [98, 2, 1, "", "gemm_ssr"], [98, 5, 1, "", "in_dtype"], [98, 2, 1, "", "invoke"]], "tilelang.profiler": [[99, 1, 1, "", "Profiler"], [100, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[99, 3, 1, "id0", "adapter"], [99, 2, 1, "", "assert_allclose"], [99, 2, 1, "", "assert_consistent"], [99, 2, 1, "", "determine_profiler"], [99, 2, 1, "", "do_bench"], [99, 5, 1, "", "func"], [99, 3, 1, "id1", "params"], [99, 3, 1, "id2", "result_idx"], [99, 2, 1, "", "run_once"], [99, 3, 1, "id3", "supply_type"], [99, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[100, 4, 1, "", "do_bench"]], "tilelang.testing": [[101, 4, 1, "", "main"], [101, 4, 1, "", "set_random_seed"]], "tilelang.tools": [[103, 0, 0, "-", "Analyzer"], [104, 0, 0, "-", "plot_layout"]], "tilelang.tools.Analyzer": [[103, 1, 1, "", "AnalysisResult"], [103, 1, 1, "", "Analyzer"]], "tilelang.tools.Analyzer.AnalysisResult": [[103, 3, 1, "", "bandwidth_GBps"], [103, 3, 1, "id0", "estimated_time"], [103, 3, 1, "", "expected_bandwidth_GBps"], [103, 3, 1, "", "expected_tflops"], [103, 3, 1, "", "tflops"], [103, 3, 1, "", "total_flops"], [103, 3, 1, "id1", "total_global_bytes"]], "tilelang.tools.Analyzer.Analyzer": [[103, 2, 1, "", "analysis"], [103, 2, 1, "", "calculate"], [103, 2, 1, "", "ir_pass"]], "tilelang.tools.plot_layout": [[104, 4, 1, "", "plot_layout"]], "tilelang.transform": [[105, 4, 1, "", "AnnotateDeviceRegions"], [105, 4, 1, "", "ClusterPlanning"], [105, 4, 1, "", "FrontendLegalize"], [105, 4, 1, "", "IfStmtBinding"], [105, 4, 1, "", "InjectFenceProxy"], [105, 4, 1, "", "InjectPTXAsyncCopy"], [105, 4, 1, "", "InjectSoftwarePipeline"], [105, 4, 1, "", "LayoutInference"], [105, 4, 1, "", "LegalizeSafeMemoryAccess"], [105, 4, 1, "", "LegalizeVectorizedLoop"], [105, 4, 1, "", "LoopVectorizeDynamic"], [105, 4, 1, "", "LowerDeviceStorageAccessInfo"], [105, 4, 1, "", "LowerHopperIntrin"], [105, 4, 1, "", "LowerTileOp"], [105, 4, 1, "", "MakePackedAPI"], [105, 4, 1, "", "MergeIfStmt"], [105, 4, 1, "", "MultiVersionBuffer"], [105, 4, 1, "", "PipelinePlanning"], [105, 4, 1, "", "RewriteWgmmaSync"], [105, 4, 1, "", "ThreadPartialSync"], [105, 4, 1, "", "ThreadSync"], [105, 4, 1, "", "VectorizeLoop"], [105, 4, 1, "", "WarpSpecialized"], [105, 4, 1, "", "WarpSpecializedPipeline"], [106, 0, 0, "-", "simplify"]], "tilelang.transform.simplify": [[106, 4, 1, "", "Simplify"], [106, 4, 1, "", "apply_simplify"], [106, 4, 1, "", "simplify_prim_func"]], "tilelang.utils": [[108, 0, 0, "-", "deprecated"], [109, 0, 0, "-", "language"], [110, 0, 0, "-", "target"], [111, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[108, 4, 1, "", "deprecated"]], "tilelang.utils.language": [[109, 4, 1, "", "array_reduce"], [109, 4, 1, "", "is_fragment"], [109, 4, 1, "", "is_global"], [109, 4, 1, "", "is_local"], [109, 4, 1, "", "is_shared"], [109, 4, 1, "", "is_shared_dynamic"], [109, 4, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[110, 4, 1, "", "check_cuda_availability"], [110, 4, 1, "", "check_hip_availability"], [110, 4, 1, "", "determine_target"]], "tilelang.utils.tensor": [[111, 1, 1, "", "TensorSupplyType"], [111, 4, 1, "", "adapt_torch2tvm"], [111, 4, 1, "", "get_tensor_supply"], [111, 4, 1, "", "map_torch_type"], [111, 4, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[111, 3, 1, "", "Auto"], [111, 3, 1, "", "Integer"], [111, 3, 1, "", "Normal"], [111, 3, 1, "", "One"], [111, 3, 1, "", "Randn"], [111, 3, 1, "", "Uniform"], [111, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 122], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116], "packag": [1, 2, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 45, 51, 57, 58, 60, 62, 71, 86, 90, 94, 95, 96, 99, 101, 102, 105, 107], "subpackag": [1, 5, 7, 16, 57, 58, 71, 95], "submodul": [1, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 45, 51, 57, 58, 60, 62, 71, 86, 90, 96, 99, 102, 105, 107, 120], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "content": [1, 2, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 45, 51, 57, 58, 60, 62, 71, 86, 90, 94, 95, 96, 99, 101, 102, 105, 107], "autotun": [2, 116], "cach": [3, 4], "kernel_cach": 4, "carver": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 128], "analysi": 6, "arch": [7, 8, 9, 10, 11, 12, 13], "arch_bas": 8, "cdna": 9, "cpu": 10, "cuda": [11, 113], "driver": [12, 13], "cuda_driv": 13, "common_schedul": 14, "matmul_analysi": 15, "roller": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "bestfit": 17, "hint": 18, "node": 19, "polici": [20, 21, 22, 23], "common": [21, 26, 37, 38], "default": 22, "tensorcor": 23, "raster": 24, "shape_infer": [25, 26, 27], "tir": [27, 86, 87, 88, 89], "templat": [28, 29, 30, 31, 32, 33, 34, 35], "base": [29, 59, 97, 119, 121], "conv": 30, "elementwis": [31, 113], "flashattent": 32, "gemv": [33, 116], "general_reduc": 34, "matmul": 35, "util": [36, 56, 67, 107, 108, 109, 110, 111], "transform_kind": 38, "contrib": [39, 40, 41, 42, 43, 44], "cc": 40, "dlpack": [41, 65], "hipcc": 42, "nvcc": 43, "rocm": 44, "engin": [45, 46, 47, 48, 49], "callback": [46, 129], "lower": 47, "param": 48, "phase": 49, "env": [50, 69], "intrins": [51, 52, 53, 54, 55, 56], "mfma_layout": 52, "mfma_macro_gener": 53, "mma_layout": 54, "mma_macro_gener": 55, "jit": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "adapt": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "ctype": [60, 61], "cython": [62, 63, 64], "cython_wrapp": 64, "libgen": 66, "wrapper": 68, "kernel": [70, 79, 125, 132, 133], "languag": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 109, 121, 122, 123, 124, 125, 129], "alloc": [72, 121], "builtin": 73, "copi": [74, 125], "custom": [75, 116], "fill": [76, 125], "frame": 77, "gemm": [78, 96, 97, 98, 125], "memscop": 80, "parallel": [81, 116, 125], "pipelin": [82, 125, 131], "print": [83, 129], "proxi": 84, "reduc": 85, "entri": 87, "ir": 88, "op": 89, "layout": [90, 91, 92, 93, 127], "fragment": 91, "swizzl": 93, "math": 94, "primit": [95, 96, 97, 98, 124, 132], "gemm_mma": 98, "profil": [99, 100], "bench": 100, "test": 101, "tool": [102, 103, 104], "analyz": 103, "plot_layout": 104, "transform": [105, 106], "simplifi": 106, "deprec": 108, "target": 110, "tensor": 111, "convolut": 112, "oper": [113, 122], "add": 113, "how": 113, "compil": [113, 121, 128, 130], "dynam": 113, "shape": 113, "address": 113, "boundari": 113, "relat": 113, "issu": [113, 129], "comparison": [113, 117], "cute": 113, "conclus": [113, 116, 117, 129], "flash": [114, 115], "attent": [114, 115], "linear": 115, "gener": [116, 117, 118, 128, 129], "matrix": [116, 117, 118, 128, 129], "vector": 116, "multipl": [116, 117, 118, 128, 129], "triton": 116, "implement": [116, 128], "naiv": 116, "more": 116, "concurr": 116, "k": 116, "dimens": 116, "read": 116, "tvm_thread_allreduc": 116, "instead": 116, "atomicadd": 116, "benchmark": [116, 128], "tabl": [116, 119], "hopper": 116, "gpu": [116, 117], "tile": [117, 121, 122, 123, 124, 125, 129, 133], "librari": [117, 133], "why": 117, "anoth": 117, "dsl": 117, "exampl": [117, 128, 129], "basic": 117, "structur": 117, "kei": 117, "concept": 117, "other": 117, "perform": [117, 128, 132, 133], "differ": 117, "platform": 117, "further": 117, "resourc": 117, "dequant": 118, "tmac": 119, "look": 119, "up": 119, "mix": 119, "precis": 119, "comput": [119, 131], "instal": 120, "guid": 120, "pip": 120, "build": 120, "from": 120, "sourc": [120, 129], "method": 120, "1": [120, 128], "us": [120, 128], "your": 120, "own": 120, "tvm": 120, "2": [120, 128], "bundl": 120, "3": [120, 128], "provid": 120, "script": 120, "nightli": 120, "version": 120, "The": 121, "A": 121, "brief": 121, "introduct": 121, "program": [121, 129], "interfac": 121, "flow": 121, "model": 121, "declar": 121, "explicit": 121, "hardwar": 121, "memori": [121, 127], "welcom": 122, "get": 122, "start": 122, "tutori": 122, "deep": 122, "learn": 122, "refer": 122, "privaci": [122, 126], "ast": 123, "tilelibrari": 125, "t": [125, 129], "alloc_shar": 125, "alloc_frag": 125, "reduce_max": 125, "reduce_sum": 125, "clear": 125, "use_swizzl": 125, "annot": 127, "auto": 128, "tune": 128, "techniqu": 128, "optim": 128, "overview": [128, 129], "step": 128, "reserv": 128, "paramet": 128, "candid": 128, "configur": 128, "debug": 129, "correct": 129, "post": 129, "process": 129, "runtim": 129, "just": 130, "In": 130, "time": 130, "data": 131, "movement": 131, "write": [132, 133], "high": [132, 133], "thread": 132}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [5, "subpackages"], [7, "subpackages"], [16, "subpackages"], [57, "subpackages"], [58, "subpackages"], [71, "subpackages"], [95, "subpackages"]], "Submodules": [[1, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [12, "submodules"], [16, "submodules"], [20, "submodules"], [25, "submodules"], [28, "submodules"], [37, "submodules"], [39, "submodules"], [45, "submodules"], [51, "submodules"], [57, "submodules"], [58, "submodules"], [60, "submodules"], [62, "submodules"], [71, "submodules"], [86, "submodules"], [90, "submodules"], [96, "submodules"], [99, "submodules"], [102, "submodules"], [105, "submodules"], [107, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [5, "module-tilelang.carver"], [7, "module-tilelang.carver.arch"], [12, "module-tilelang.carver.arch.driver"], [16, "module-tilelang.carver.roller"], [20, "module-tilelang.carver.roller.policy"], [25, "module-tilelang.carver.roller.shape_inference"], [28, "module-tilelang.carver.template"], [37, "module-tilelang.common"], [39, "module-tilelang.contrib"], [45, "module-tilelang.engine"], [51, "module-tilelang.intrinsics"], [57, "module-tilelang.jit"], [58, "module-tilelang.jit.adapter"], [60, "module-tilelang.jit.adapter.ctypes"], [62, "module-tilelang.jit.adapter.cython"], [71, "module-tilelang.language"], [86, "module-tilelang.language.tir"], [90, "module-tilelang.layout"], [94, "module-tilelang.math"], [95, "module-tilelang.primitives"], [96, "module-tilelang.primitives.gemm"], [99, "module-tilelang.profiler"], [101, "module-tilelang.testing"], [102, "module-tilelang.tools"], [105, "module-tilelang.transform"], [107, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.cache package": [[3, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver package": [[5, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[6, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[7, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[8, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[9, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[10, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver package": [[12, "tilelang-carver-arch-driver-package"]], "tilelang.carver.arch.driver.cuda_driver module": [[13, "module-tilelang.carver.arch.driver.cuda_driver"]], "tilelang.carver.common_schedules module": [[14, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[15, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[16, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[17, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[18, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[19, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[20, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[21, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[22, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[23, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[24, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[25, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[26, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[27, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[28, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[29, "module-tilelang.carver.template.base"]], "tilelang.carver.template.conv module": [[30, "module-tilelang.carver.template.conv"]], "tilelang.carver.template.elementwise module": [[31, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[32, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[33, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[34, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[35, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[36, "module-tilelang.carver.utils"]], "tilelang.common package": [[37, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[38, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[39, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[40, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[41, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[42, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[43, "module-tilelang.contrib.nvcc"]], "tilelang.contrib.rocm module": [[44, "module-tilelang.contrib.rocm"]], "tilelang.engine package": [[45, "tilelang-engine-package"]], "tilelang.engine.callback module": [[46, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[47, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[48, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[49, "module-tilelang.engine.phase"]], "tilelang.env module": [[50, "module-tilelang.env"]], "tilelang.intrinsics package": [[51, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[52, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[53, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[54, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[55, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[56, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[57, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[58, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[59, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[60, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[61, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[62, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[63, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[64, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[65, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[66, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.utils module": [[67, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[68, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[69, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[70, "module-tilelang.jit.kernel"]], "tilelang.language package": [[71, "tilelang-language-package"]], "tilelang.language.allocate module": [[72, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[73, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[74, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[75, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[76, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[77, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[78, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[79, "module-tilelang.language.kernel"]], "tilelang.language.memscope module": [[80, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[81, "module-tilelang.language.parallel"]], "tilelang.language.pipeline module": [[82, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[83, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[84, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[85, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[86, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[87, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[88, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[89, "module-tilelang.language.tir.op"]], "tilelang.layout package": [[90, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[91, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[92, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[93, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[94, "tilelang-math-package"]], "tilelang.primitives package": [[95, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[96, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[97, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[98, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[99, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[100, "module-tilelang.profiler.bench"]], "tilelang.testing package": [[101, "tilelang-testing-package"]], "tilelang.tools package": [[102, "tilelang-tools-package"]], "tilelang.tools.Analyzer module": [[103, "module-tilelang.tools.Analyzer"]], "tilelang.tools.plot_layout module": [[104, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[105, "tilelang-transform-package"]], "tilelang.transform.simplify module": [[106, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[107, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[108, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[109, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[110, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[111, "module-tilelang.utils.tensor"]], "Convolution": [[112, "convolution"]], "ElementWise Operators": [[113, "elementwise-operators"]], "Elementwise add in TileLang": [[113, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[113, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[113, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[113, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[113, "conclusion"], [116, "conclusion"], [117, "conclusion"], [129, "conclusion"]], "Flash Attention": [[114, "flash-attention"]], "Flash Linear Attention": [[115, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[116, "general-matrix-vector-multiplication-gemv"]], "Triton implementation": [[116, "triton-implementation"]], "Naive Implementation in TileLang": [[116, "naive-implementation-in-tilelang"]], "More concurrency": [[116, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[116, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[116, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[116, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[116, "autotune"]], "Benchmark Table on Hopper GPU": [[116, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[117, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[117, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[117, "matrix-multiplication-example"], [128, "matrix-multiplication-example"], [129, "matrix-multiplication-example"]], "Basic Structure": [[117, "basic-structure"]], "Key Concepts": [[117, "key-concepts"]], "Comparison with Other DSLs": [[117, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[117, "performance-on-different-platforms"]], "Further Resources": [[117, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[118, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[119, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[120, "installation-guide"]], "Installing with pip": [[120, "installing-with-pip"]], "Building from Source": [[120, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[120, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[120, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[120, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[120, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[121, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[121, "programming-interface"]], "Programming Interfaces": [[121, "programming-interfaces"]], "Compilation Flow": [[121, "compilation-flow"]], "Tile-based Programming Model": [[121, "tile-based-programming-model"]], "Tile declarations": [[121, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[121, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[122, "welcome-to-tile-language"]], "GET STARTED": [[122, null]], "TUTORIALS": [[122, null]], "DEEP LEARNING OPERATORS": [[122, null]], "LANGUAGE REFERENCE": [[122, null]], "API Reference": [[122, null]], "Privacy": [[122, null], [126, "privacy"]], "Tile Language AST": [[123, "tile-language-ast"]], "Tile Language: Primitives": [[124, "tile-language-primitives"]], "Tile Language: TileLibrary": [[125, "tile-language-tilelibrary"]], "T.Kernel": [[125, "t-kernel"]], "T.alloc_shared": [[125, "t-alloc-shared"]], "T.alloc_fragment": [[125, "t-alloc-fragment"]], "T.copy": [[125, "t-copy"]], "T.gemm": [[125, "t-gemm"]], "T.reduce_max T.reduce_sum": [[125, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[125, "t-parallel"]], "T.Pipelined": [[125, "t-pipelined"]], "T.clear T.fill": [[125, "t-clear-t-fill"]], "T.use_swizzle": [[125, "t-use-swizzle"]], "Annotate Memory Layout": [[127, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[128, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[128, "overview"], [129, "overview"]], "Step 1: Implement with Reserved Parameters": [[128, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[128, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[128, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[128, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[129, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[129, "debugging-generation-issues"]], "Debugging Correctness Issues": [[129, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[129, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[129, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[130, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[131, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[132, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[133, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [4, "module-tilelang.cache.kernel_cache"], [5, "module-tilelang.carver"], [6, "module-tilelang.carver.analysis"], [7, "module-tilelang.carver.arch"], [8, "module-tilelang.carver.arch.arch_base"], [9, "module-tilelang.carver.arch.cdna"], [10, "module-tilelang.carver.arch.cpu"], [11, "module-tilelang.carver.arch.cuda"], [12, "module-tilelang.carver.arch.driver"], [13, "module-tilelang.carver.arch.driver.cuda_driver"], [14, "module-tilelang.carver.common_schedules"], [15, "module-tilelang.carver.matmul_analysis"], [16, "module-tilelang.carver.roller"], [17, "module-tilelang.carver.roller.bestfit"], [18, "module-tilelang.carver.roller.hint"], [19, "module-tilelang.carver.roller.node"], [20, "module-tilelang.carver.roller.policy"], [21, "module-tilelang.carver.roller.policy.common"], [22, "module-tilelang.carver.roller.policy.default"], [23, "module-tilelang.carver.roller.policy.tensorcore"], [24, "module-tilelang.carver.roller.rasterization"], [25, "module-tilelang.carver.roller.shape_inference"], [26, "module-tilelang.carver.roller.shape_inference.common"], [27, "module-tilelang.carver.roller.shape_inference.tir"], [28, "module-tilelang.carver.template"], [29, "module-tilelang.carver.template.base"], [30, "module-tilelang.carver.template.conv"], [31, "module-tilelang.carver.template.elementwise"], [32, "module-tilelang.carver.template.flashattention"], [33, "module-tilelang.carver.template.gemv"], [34, "module-tilelang.carver.template.general_reduce"], [35, "module-tilelang.carver.template.matmul"], [36, "module-tilelang.carver.utils"], [37, "module-tilelang.common"], [38, "module-tilelang.common.transform_kind"], [39, "module-tilelang.contrib"], [40, "module-tilelang.contrib.cc"], [41, "module-tilelang.contrib.dlpack"], [42, "module-tilelang.contrib.hipcc"], [43, "module-tilelang.contrib.nvcc"], [44, "module-tilelang.contrib.rocm"], [45, "module-tilelang.engine"], [46, "module-tilelang.engine.callback"], [47, "module-tilelang.engine.lower"], [48, "module-tilelang.engine.param"], [49, "module-tilelang.engine.phase"], [50, "module-tilelang.env"], [51, "module-tilelang.intrinsics"], [52, "module-tilelang.intrinsics.mfma_layout"], [53, "module-tilelang.intrinsics.mfma_macro_generator"], [54, "module-tilelang.intrinsics.mma_layout"], [55, "module-tilelang.intrinsics.mma_macro_generator"], [56, "module-tilelang.intrinsics.utils"], [57, "module-tilelang.jit"], [58, "module-tilelang.jit.adapter"], [59, "module-tilelang.jit.adapter.base"], [60, "module-tilelang.jit.adapter.ctypes"], [61, "module-tilelang.jit.adapter.ctypes.adapter"], [62, "module-tilelang.jit.adapter.cython"], [63, "module-tilelang.jit.adapter.cython.adapter"], [64, "module-tilelang.jit.adapter.cython.cython_wrapper"], [65, "module-tilelang.jit.adapter.dlpack"], [66, "module-tilelang.jit.adapter.libgen"], [67, "module-tilelang.jit.adapter.utils"], [68, "module-tilelang.jit.adapter.wrapper"], [69, "module-tilelang.jit.env"], [70, "module-tilelang.jit.kernel"], [71, "module-tilelang.language"], [72, "module-tilelang.language.allocate"], [73, "module-tilelang.language.builtin"], [74, "module-tilelang.language.copy"], [75, "module-tilelang.language.customize"], [76, "module-tilelang.language.fill"], [77, "module-tilelang.language.frame"], [78, "module-tilelang.language.gemm"], [79, "module-tilelang.language.kernel"], [80, "module-tilelang.language.memscope"], [81, "module-tilelang.language.parallel"], [82, "module-tilelang.language.pipeline"], [83, "module-tilelang.language.print"], [84, "module-tilelang.language.proxy"], [85, "module-tilelang.language.reduce"], [86, "module-tilelang.language.tir"], [87, "module-tilelang.language.tir.entry"], [88, "module-tilelang.language.tir.ir"], [89, "module-tilelang.language.tir.op"], [90, "module-tilelang.layout"], [91, "module-tilelang.layout.fragment"], [92, "module-tilelang.layout.layout"], [93, "module-tilelang.layout.swizzle"], [94, "module-tilelang.math"], [95, "module-tilelang.primitives"], [96, "module-tilelang.primitives.gemm"], [97, "module-tilelang.primitives.gemm.base"], [98, "module-tilelang.primitives.gemm.gemm_mma"], [99, "module-tilelang.profiler"], [100, "module-tilelang.profiler.bench"], [101, "module-tilelang.testing"], [102, "module-tilelang.tools"], [103, "module-tilelang.tools.Analyzer"], [104, "module-tilelang.tools.plot_layout"], [105, "module-tilelang.transform"], [106, "module-tilelang.transform.simplify"], [107, "module-tilelang.utils"], [108, "module-tilelang.utils.deprecated"], [109, "module-tilelang.utils.language"], [110, "module-tilelang.utils.target"], [111, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "autotuner (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutoTuner"]], "autotuneresult (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutotuneResult"]], "jitcontext (class in tilelang.autotuner)": [[2, "tilelang.autotuner.JITContext"]], "atol (tilelang.autotuner.jitcontext attribute)": [[2, "id6"], [2, "tilelang.autotuner.JITContext.atol"]], "autotune() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.autotune"]], "cache_input_tensors (tilelang.autotuner.jitcontext attribute)": [[2, "id7"], [2, "tilelang.autotuner.JITContext.cache_input_tensors"]], "check_tensor_list_compatibility() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.check_tensor_list_compatibility"]], "config (tilelang.autotuner.autotuneresult attribute)": [[2, "id0"], [2, "tilelang.autotuner.AutotuneResult.config"]], "from_kernel() (tilelang.autotuner.autotuner class method)": [[2, "tilelang.autotuner.AutoTuner.from_kernel"]], "func (tilelang.autotuner.autotuneresult attribute)": [[2, "id1"], [2, "tilelang.autotuner.AutotuneResult.func"]], "jit() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.jit"]], "kernel (tilelang.autotuner.autotuneresult attribute)": [[2, "id2"], [2, "tilelang.autotuner.AutotuneResult.kernel"]], "latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id3"], [2, "tilelang.autotuner.AutotuneResult.latency"]], "libcode (tilelang.autotuner.autotuneresult attribute)": [[2, "id4"], [2, "tilelang.autotuner.AutotuneResult.libcode"]], "max_mismatched_ratio (tilelang.autotuner.jitcontext attribute)": [[2, "id8"], [2, "tilelang.autotuner.JITContext.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.jitcontext attribute)": [[2, "id9"], [2, "tilelang.autotuner.JITContext.out_idx"]], "profiler (tilelang.autotuner.jitcontext attribute)": [[2, "id10"], [2, "tilelang.autotuner.JITContext.profiler"]], "ref_latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id5"], [2, "tilelang.autotuner.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id11"], [2, "tilelang.autotuner.JITContext.ref_prog"]], "rtol (tilelang.autotuner.jitcontext attribute)": [[2, "id12"], [2, "tilelang.autotuner.JITContext.rtol"]], "run() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.run"]], "set_compile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_compile_args"]], "skip_check (tilelang.autotuner.jitcontext attribute)": [[2, "id13"], [2, "tilelang.autotuner.JITContext.skip_check"]], "supply_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id14"], [2, "tilelang.autotuner.JITContext.supply_prog"]], "target (tilelang.autotuner.jitcontext attribute)": [[2, "id15"], [2, "tilelang.autotuner.JITContext.target"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "cached() (in module tilelang.cache)": [[3, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[3, "tilelang.cache.clear_cache"]], "tilelang.cache": [[3, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[4, "tilelang.cache.kernel_cache.KernelCache"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "tilelang.cache.kernel_cache": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver": [[5, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[6, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[6, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[7, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[8, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[8, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[8, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[9, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[10, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[11, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver": [[12, "module-tilelang.carver.arch.driver"]], "eccenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.ECCEnabled"]], "asyncenginecount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.asyncEngineCount"]], "canmaphostmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.canMapHostMemory"]], "clockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.clockRate"]], "computemode (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.computeMode"]], "concurrentkernels (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.concurrentKernels"]], "cudadeviceprop (class in tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp"]], "deviceoverlap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.deviceOverlap"]], "get_cuda_device_properties() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_cuda_device_properties"]], "get_device_attribute() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_device_attribute"]], "get_device_name() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_device_name"]], "get_max_dynamic_shared_size_bytes() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_max_dynamic_shared_size_bytes"]], "get_shared_memory_per_block() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_shared_memory_per_block"]], "globall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.globalL1CacheSupported"]], "integrated (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.integrated"]], "ismultigpuboard (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.isMultiGpuBoard"]], "kernelexectimeoutenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.kernelExecTimeoutEnabled"]], "l2cachesize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.l2CacheSize"]], "locall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.localL1CacheSupported"]], "luid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luid"]], "luiddevicenodemask (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luidDeviceNodeMask"]], "major (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.major"]], "managedmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.managedMemory"]], "maxgridsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxGridSize"]], "maxsurface1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1D"]], "maxsurface1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1DLayered"]], "maxsurface2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2D"]], "maxsurface2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2DLayered"]], "maxsurface3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface3D"]], "maxsurfacecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemap"]], "maxsurfacecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemapLayered"]], "maxtexture1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1D"]], "maxtexture1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLayered"]], "maxtexture1dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLinear"]], "maxtexture1dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DMipmap"]], "maxtexture2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2D"]], "maxtexture2dgather (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DGather"]], "maxtexture2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLayered"]], "maxtexture2dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLinear"]], "maxtexture2dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DMipmap"]], "maxtexture3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3D"]], "maxtexture3dalt (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3DAlt"]], "maxtexturecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemap"]], "maxtexturecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemapLayered"]], "maxthreadsdim (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsDim"]], "maxthreadsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerBlock"]], "maxthreadspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerMultiProcessor"]], "mempitch (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memPitch"]], "memorybuswidth (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryBusWidth"]], "memoryclockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryClockRate"]], "minor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.minor"]], "multigpuboardgroupid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiGpuBoardGroupID"]], "multiprocessorcount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiProcessorCount"]], "name (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.name"]], "pcibusid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciBusID"]], "pcideviceid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDeviceID"]], "pcidomainid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDomainID"]], "persistingl2cachemaxsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.persistingL2CacheMaxSize"]], "regsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerBlock"]], "regspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerMultiprocessor"]], "reserved (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved"]], "reserved1 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved1"]], "reserved2 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved2"]], "sharedmemperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerBlock"]], "sharedmempermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerMultiprocessor"]], "streamprioritiessupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.streamPrioritiesSupported"]], "surfacealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.surfaceAlignment"]], "tccdriver (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.tccDriver"]], "texturealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.textureAlignment"]], "texturepitchalignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.texturePitchAlignment"]], "tilelang.carver.arch.driver.cuda_driver": [[13, "module-tilelang.carver.arch.driver.cuda_driver"]], "totalconstmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalConstMem"]], "totalglobalmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalGlobalMem"]], "unifiedaddressing (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.unifiedAddressing"]], "uuid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.uuid"]], "warpsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.warpSize"]], "get_block() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[14, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[15, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[15, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[15, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[16, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[17, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[17, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[17, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[17, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[17, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[17, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[17, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[18, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[18, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[18, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[18, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[18, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[18, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[18, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[18, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[18, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[19, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[19, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[19, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[19, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[19, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[19, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[19, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[20, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[21, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[22, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[23, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[24, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[24, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[24, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[24, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[24, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[25, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[26, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[26, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[27, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[27, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[28, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[29, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[29, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[29, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[29, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "c (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id0"], [30, "tilelang.carver.template.conv.ConvTemplate.C"]], "convtemplate (class in tilelang.carver.template.conv)": [[30, "tilelang.carver.template.conv.ConvTemplate"]], "d (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id1"], [30, "tilelang.carver.template.conv.ConvTemplate.D"]], "f (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id2"], [30, "tilelang.carver.template.conv.ConvTemplate.F"]], "h (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id3"], [30, "tilelang.carver.template.conv.ConvTemplate.H"]], "k (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id4"], [30, "tilelang.carver.template.conv.ConvTemplate.K"]], "n (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id5"], [30, "tilelang.carver.template.conv.ConvTemplate.N"]], "p (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id6"], [30, "tilelang.carver.template.conv.ConvTemplate.P"]], "s (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id7"], [30, "tilelang.carver.template.conv.ConvTemplate.S"]], "w (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id8"], [30, "tilelang.carver.template.conv.ConvTemplate.W"]], "accum_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id9"], [30, "tilelang.carver.template.conv.ConvTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.conv.convtemplate property)": [[30, "tilelang.carver.template.conv.ConvTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id10"], [30, "tilelang.carver.template.conv.ConvTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id11"], [30, "tilelang.carver.template.conv.ConvTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.params_as_dict"]], "tilelang.carver.template.conv": [[30, "module-tilelang.carver.template.conv"]], "with_bias (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id12"], [30, "tilelang.carver.template.conv.ConvTemplate.with_bias"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[31, "id0"], [31, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[31, "id1"], [31, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[31, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[32, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[33, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[33, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[34, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id0"], [35, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id1"], [35, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[35, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id2"], [35, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id3"], [35, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id4"], [35, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id5"], [35, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[35, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id6"], [35, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id7"], [35, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id8"], [35, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[36, "module-tilelang.carver.utils"]], "tilelang.common": [[37, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[38, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[38, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[39, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[40, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[41, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[41, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[41, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[42, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[42, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.get_cuda_version"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[43, "module-tilelang.contrib.nvcc"]], "find_lld() (in module tilelang.contrib.rocm)": [[44, "tilelang.contrib.rocm.find_lld"]], "find_rocm_path() (in module tilelang.contrib.rocm)": [[44, "tilelang.contrib.rocm.find_rocm_path"]], "have_matrixcore() (in module tilelang.contrib.rocm)": [[44, "tilelang.contrib.rocm.have_matrixcore"]], "parse_compute_version() (in module tilelang.contrib.rocm)": [[44, "tilelang.contrib.rocm.parse_compute_version"]], "rocm_link() (in module tilelang.contrib.rocm)": [[44, "tilelang.contrib.rocm.rocm_link"]], "tilelang.contrib.rocm": [[44, "module-tilelang.contrib.rocm"]], "tilelang.engine": [[45, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[46, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[46, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[46, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[46, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[46, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[47, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[47, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[48, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[48, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[48, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[48, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[48, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[48, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[48, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[48, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[48, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[48, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[48, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[48, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[48, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[48, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[48, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[48, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[49, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[49, "tilelang.engine.phase.OptimizeForTarget"]], "tilelang.engine.phase": [[49, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[50, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[50, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[50, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[50, "module-tilelang.env"]], "tilelang.intrinsics": [[51, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[52, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[52, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[53, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[53, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[54, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[54, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[55, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[55, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[55, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[55, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[55, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[56, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[56, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[57, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[57, "tilelang.jit.jit"]], "tilelang.jit": [[57, "module-tilelang.jit"]], "tilelang.jit.adapter": [[58, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[59, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[59, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[59, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[59, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[60, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[61, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[61, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[62, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[63, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[63, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[63, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[63, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[63, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[64, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[64, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[65, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[65, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[66, "module-tilelang.jit.adapter.libgen"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[66, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[67, "tilelang.jit.adapter.utils.match_global_kernel"]], "tilelang.jit.adapter.utils": [[67, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[68, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[68, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_init_func"]], "get_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_stream_type"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[68, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[68, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[68, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[69, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[70, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[70, "id0"], [70, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[70, "id1"], [70, "tilelang.jit.kernel.JITKernel.artifact"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[70, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[70, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[70, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[70, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[70, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[70, "tilelang.jit.kernel.JITKernel.get_profiler"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[70, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[70, "tilelang.jit.kernel.JITKernel.kernel_source"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[70, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[70, "tilelang.jit.kernel.JITKernel.params"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[70, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[70, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[70, "id2"], [70, "tilelang.jit.kernel.JITKernel.torch_function"]], "annotate_layout() (in module tilelang.language)": [[71, "tilelang.language.annotate_layout"]], "import_source() (in module tilelang.language)": [[71, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[71, "tilelang.language.symbolic"]], "tilelang.language": [[71, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[71, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[72, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[72, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[72, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[72, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[72, "module-tilelang.language.allocate"]], "createlistofmbarrierop() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.CreateListofMBarrierOp"]], "createtmadescriptorop() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.CreateTMADescriptorOp"]], "fenceproxyasyncop() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.FenceProxyAsyncOp"]], "getmbarrierop() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.GetMBarrierOp"]], "mbarrierexpecttx() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.MBarrierExpectTX"]], "mbarrierwaitparity() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.MBarrierWaitParity"]], "nosetmaxnreg() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.NoSetMaxNReg"]], "setmaxnreg() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.SetMaxNReg"]], "tmaloadop() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.TMALoadOp"]], "tmastorearrive() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.TMAStoreArrive"]], "tmastorewait() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.TMAStoreWait"]], "waitwgmma() (in module tilelang.language.builtin)": [[73, "tilelang.language.builtin.WaitWgmma"]], "tilelang.language.builtin": [[73, "module-tilelang.language.builtin"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[74, "tilelang.language.copy.region"]], "tilelang.language.copy": [[74, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.atomic_addx2"]], "clamp() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[75, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[75, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[76, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[76, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[76, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[77, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[77, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[77, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[77, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[77, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[77, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[77, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[77, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[77, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[77, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[77, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[77, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[77, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[78, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[78, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[79, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[79, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[79, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[79, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[79, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[79, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[79, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[79, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[79, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[79, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[79, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[79, "tilelang.language.kernel.FrameStack.push"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[79, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[79, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[79, "tilelang.language.kernel.FrameStack.top"]], "tilelang.language.memscope": [[80, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[81, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[81, "module-tilelang.language.parallel"]], "pipelined() (in module tilelang.language.pipeline)": [[82, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[82, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[83, "tilelang.language.print.print"]], "tilelang.language.print": [[83, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[84, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[84, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[84, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[84, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[84, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[84, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[84, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[84, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[84, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[84, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[84, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[84, "module-tilelang.language.proxy"]], "reduce() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce"]], "reduce_absmax() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce_absmax"]], "reduce_abssum() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[85, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[85, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[86, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[87, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[87, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[87, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[88, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[88, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.pow"]], "power() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[89, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[89, "tilelang.language.tir.op.vscale"]], "tilelang.layout": [[90, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[91, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[91, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[91, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[91, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[91, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[91, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[91, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[91, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[91, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[92, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[92, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[92, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[92, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[92, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[92, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[92, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[92, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[93, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[93, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[94, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[94, "tilelang.math.next_power_of_2"]], "tilelang.math": [[94, "module-tilelang.math"]], "tilelang.primitives": [[95, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[96, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[96, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[97, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[97, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[97, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[98, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[98, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[99, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[99, "id0"], [99, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[99, "tilelang.profiler.Profiler.func"]], "params (tilelang.profiler.profiler attribute)": [[99, "id1"], [99, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[99, "id2"], [99, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[99, "id3"], [99, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[99, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[99, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[100, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[100, "module-tilelang.profiler.bench"]], "main() (in module tilelang.testing)": [[101, "tilelang.testing.main"]], "set_random_seed() (in module tilelang.testing)": [[101, "tilelang.testing.set_random_seed"]], "tilelang.testing": [[101, "module-tilelang.testing"]], "tilelang.tools": [[102, "module-tilelang.tools"]], "analysisresult (class in tilelang.tools.analyzer)": [[103, "tilelang.tools.Analyzer.AnalysisResult"]], "analyzer (class in tilelang.tools.analyzer)": [[103, "tilelang.tools.Analyzer.Analyzer"]], "analysis() (tilelang.tools.analyzer.analyzer class method)": [[103, "tilelang.tools.Analyzer.Analyzer.analysis"]], "bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[103, "tilelang.tools.Analyzer.AnalysisResult.bandwidth_GBps"]], "calculate() (tilelang.tools.analyzer.analyzer method)": [[103, "tilelang.tools.Analyzer.Analyzer.calculate"]], "estimated_time (tilelang.tools.analyzer.analysisresult attribute)": [[103, "id0"], [103, "tilelang.tools.Analyzer.AnalysisResult.estimated_time"]], "expected_bandwidth_gbps (tilelang.tools.analyzer.analysisresult attribute)": [[103, "tilelang.tools.Analyzer.AnalysisResult.expected_bandwidth_GBps"]], "expected_tflops (tilelang.tools.analyzer.analysisresult attribute)": [[103, "tilelang.tools.Analyzer.AnalysisResult.expected_tflops"]], "ir_pass() (tilelang.tools.analyzer.analyzer method)": [[103, "tilelang.tools.Analyzer.Analyzer.ir_pass"]], "tflops (tilelang.tools.analyzer.analysisresult attribute)": [[103, "tilelang.tools.Analyzer.AnalysisResult.tflops"]], "tilelang.tools.analyzer": [[103, "module-tilelang.tools.Analyzer"]], "total_flops (tilelang.tools.analyzer.analysisresult attribute)": [[103, "tilelang.tools.Analyzer.AnalysisResult.total_flops"]], "total_global_bytes (tilelang.tools.analyzer.analysisresult attribute)": [[103, "id1"], [103, "tilelang.tools.Analyzer.AnalysisResult.total_global_bytes"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[104, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[104, "module-tilelang.tools.plot_layout"]], "annotatedeviceregions() (in module tilelang.transform)": [[105, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[105, "tilelang.transform.ClusterPlanning"]], "frontendlegalize() (in module tilelang.transform)": [[105, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[105, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[105, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[105, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[105, "tilelang.transform.InjectSoftwarePipeline"]], "layoutinference() (in module tilelang.transform)": [[105, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[105, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[105, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[105, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[105, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[105, "tilelang.transform.LowerHopperIntrin"]], "lowertileop() (in module tilelang.transform)": [[105, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[105, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[105, "tilelang.transform.MergeIfStmt"]], "multiversionbuffer() (in module tilelang.transform)": [[105, "tilelang.transform.MultiVersionBuffer"]], "pipelineplanning() (in module tilelang.transform)": [[105, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[105, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[105, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[105, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[105, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[105, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[105, "tilelang.transform.WarpSpecializedPipeline"]], "tilelang.transform": [[105, "module-tilelang.transform"]], "simplify() (in module tilelang.transform.simplify)": [[106, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[106, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[106, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[106, "module-tilelang.transform.simplify"]], "tilelang.utils": [[107, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[108, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[108, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.array_reduce"]], "is_fragment() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[109, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[109, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[110, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[110, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[110, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[110, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[111, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[111, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[111, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[111, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[111, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[111, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[111, "tilelang.utils.tensor.torch_assert_close"]]}})