Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.arch.driver", "api/tilelang.carver.arch.driver.cuda_driver", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.conv", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.arch.driver.rst", "api/tilelang.carver.arch.driver.cuda_driver.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.conv.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.arch.driver package", "tilelang.carver.arch.driver.cuda_driver module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.conv module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 115, 118, 119, 120, 127], "packag": [0, 118], "subpackag": 0, "autotun": [0, 1, 120, 126], "modul": [0, 118], "content": [0, 75, 88, 127], "cach": [0, 1, 2, 24, 49, 62, 99, 114, 115, 119, 123], "submodul": [0, 94], "carver": [0, 1], "common": [0, 1, 14, 16, 20, 25, 111, 126], "contrib": [0, 1], "engin": [0, 1, 98, 127], "intrins": [0, 1, 18, 75, 88, 115, 119], "jit": [0, 1, 2, 46, 98, 114, 115, 126], "languag": [0, 1, 94, 105, 111, 114, 115, 126], "layout": [0, 1, 15, 54, 88, 102, 103, 115, 119, 120], "math": [0, 1, 88], "primit": [0, 1, 82, 114, 115, 119, 120, 127], "profil": [0, 1, 2, 47, 58, 60, 62, 64, 69, 88, 105, 115, 127], "test": [0, 1, 2, 88, 111, 115, 118], "tool": [0, 1, 78, 80, 81, 114, 127], "transform": [0, 1, 15, 54, 73, 90, 91, 126, 127], "util": [0, 1, 3, 4, 5, 40, 42, 43, 47, 50, 56, 57, 58, 60, 62, 64, 71, 82, 98, 99, 111, 119], "env": [0, 1, 43, 56], "disable_cach": [0, 1, 49], "enable_cach": [0, 1, 49], "is_cache_en": [0, 1, 49], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "from_kernel": [1, 2, 126], "run": [1, 2, 78, 98, 99, 103, 115, 118, 119, 126, 127], "set_compile_arg": [1, 2, 126], "autotuneresult": [1, 2], "latenc": [1, 2, 114, 115, 119], "config": [1, 2, 114, 118, 126], "ref_lat": [1, 2], "libcod": [1, 2], "func": [1, 2, 3, 4, 6, 15, 18, 19, 20, 22, 29, 45, 46, 56, 57, 58, 69, 86, 98, 104, 115, 127], "kernel": [1, 2, 3, 4, 15, 30, 46, 47, 49, 56, 60, 62, 70, 73, 83, 98, 111, 114, 115, 119, 120, 126, 127], "jitcontext": [1, 2], "out_idx": [1, 2, 3, 4, 56, 69, 111, 114, 115, 126], "ref_prog": [1, 2, 114, 126], "supply_prog": [1, 2], "rtol": [1, 2, 98, 109, 115], "atol": [1, 2, 98, 109, 115], "max_mismatched_ratio": [1, 2, 98, 109], "skip_check": [1, 2, 114, 126], "cache_input_tensor": [1, 2], "target": [1, 2, 3, 4, 6, 7, 9, 10, 11, 14, 15, 19, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 56, 57, 59, 60, 61, 62, 65, 66, 67, 69, 88, 99, 103, 105, 111, 114, 115, 119, 126, 127], "check_tensor_list_compat": [1, 2], "kernel_cach": [1, 3], "kernelcach": [1, 3, 4], "clear_cach": [1, 3, 4], "arch": [1, 5, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 126], "roller": [1, 5, 32], "templat": [1, 5, 111, 126], "analysi": [1, 5, 15, 27, 103, 127], "blockinfo": [1, 5, 6, 14, 19], "iterinfo": [1, 5, 6], "check_func_with_dynam": [1, 5, 6], "collect_block_iter_vars_used_in_access_region": [1, 5, 6], "collect_vars_used_in_prim_expr": [1, 5, 6], "detect_dominant_read": [1, 5, 6], "find_var_from_func": [1, 5, 6], "get_coalesced_veclen": [1, 5, 6], "get_max_shared_memory_per_block": [1, 5, 6], "get_max_threads_per_block": [1, 5, 6], "get_reduction_block": [1, 5, 6], "get_root_block": [1, 5, 6], "is_broadcast_epilogu": [1, 5, 6], "normalize_prim_func": [1, 5, 6], "common_schedul": [1, 5], "get_block": [1, 5, 14], "get_output_block": [1, 5, 14], "try_inlin": [1, 5, 14], "try_inline_contiguous_spati": [1, 5, 14], "matmul_analysi": [1, 5], "iterkind": [1, 5, 15], "itertrait": [1, 5, 15], "auto_inline_consumer_chain": [1, 5, 15], "auto_inline_consum": [1, 5, 15], "auto_inline_produc": [1, 5, 15], "collect_vars_from_expr": [1, 5, 15], "detect_iter_trait": [1, 5, 15], "find_arg_idx_from_buffer_chain": [1, 5, 15], "find_first_similar_buff": [1, 5, 15], "find_first_similar_region": [1, 5, 15], "find_last_producer_from_buff": [1, 5, 15], "get_dequantize_block": [1, 5, 15], "get_in_out_dtyp": [1, 5, 15], "get_index_map": [1, 5, 15], "get_ladder_stage3_map": [1, 5, 15], "get_propagate_map": [1, 5, 15], "get_tensorized_func_and_tag": [1, 5, 15], "inline_transpose_block": [1, 5, 15], "is_identity_block": [1, 5, 15], "is_identity_or_transpose_block": [1, 5, 15], "is_transpose_block": [1, 5, 15], "layout_propagate_chain": [1, 5, 15], "make_iter_fusion_index_map": [1, 5, 15], "normalize_to_matmul": [1, 5, 15], "get_rasterization_cod": [1, 5, 36], "get_roller_hints_from_func": [1, 5, 36], "get_roller_hints_from_output_nod": [1, 5, 36], "retrieve_func_from_modul": [1, 5, 36, 105, 107], "transform_kind": [1, 37], "transformkind": [1, 37, 38, 54], "cc": [1, 39, 127], "create_execut": [1, 39, 40], "create_shar": [1, 39, 40], "create_staticlib": [1, 39, 40], "cross_compil": [1, 39, 40], "get_cc": [1, 39, 40], "get_cplus_compil": [1, 39, 40], "get_global_symbol_section_map": [1, 39, 40], "get_target_by_dump_machin": [1, 39, 40], "dlpack": [1, 3, 4, 39, 56, 57, 69], "convert_func": [1, 39, 41], "to_pytorch_func": [1, 39, 41], "hipcc": [1, 39], "compile_hip": [1, 39, 42], "nvcc": [1, 39, 127], "callback_libdevice_path": [1, 39, 43], "compile_cuda": [1, 39, 43], "find_cuda_path": [1, 39, 43], "get_cuda_vers": [1, 39, 43], "have_cudagraph": [1, 39, 43], "have_fp16": [1, 39, 43], "have_int8": [1, 39, 43], "have_tensorcor": [1, 39, 43], "parse_compute_vers": [1, 39, 43], "callback": [1, 44, 88], "register_cuda_postproc": [1, 44, 45], "register_cuda_postproc_callback": [1, 44, 45, 127], "register_hip_postproc": [1, 44, 45], "register_hip_postproc_callback": [1, 44, 45], "lower": [1, 44, 88, 90, 103, 115, 119, 127], "canon_target_host": [1, 44, 46], "device_codegen": [1, 44, 46], "device_codegen_without_compil": [1, 44, 46], "extrac_param": [1, 44, 46], "get_device_cal": [1, 44, 46], "get_host_cal": [1, 44, 46], "has_device_kernel_launch": [1, 44, 46], "host_codegen": [1, 44, 46], "is_cpu_device_backend": [1, 44, 46], "is_device_cal": [1, 44, 46, 127], "is_device_call_c_devic": [1, 44, 46], "param": [1, 4, 44, 56, 58, 60, 62, 64, 69, 88, 98, 123], "compiledartifact": [1, 44, 46, 47, 69], "kernelparam": [1, 44, 46, 47, 58, 62, 64, 69, 98], "phase": [1, 44, 114], "lowerandleg": [1, 44, 48], "optimizefortarget": [1, 44, 48], "mfma_layout": [1, 50], "make_mfma_swizzle_layout": [1, 50, 51], "shared_16x16_to_ldmatrix_64x4_layout": [1, 50, 51], "shared_16x16_to_local_64x4_layout_a": [1, 50, 51], "shared_16x16_to_local_64x4_layout_b": [1, 50, 51], "shared_16x16_to_local_64x4_layout_c": [1, 50, 51], "shared_16x32_to_local_64x8_layout_a": [1, 50, 51], "shared_16x32_to_local_64x8_layout_b": [1, 50, 51], "shared_16x4_to_local_64x1_layout_a": [1, 50, 51], "shared_4x16_to_local_64x1_layout_b": [1, 50, 51], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 50, 51], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 50, 51], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 50, 51], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 50, 51], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 50, 51], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 50, 51], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 50, 51], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 50, 51], "mfma_macro_gener": [1, 50], "matrixcoreintrinemitt": [1, 50, 52], "mma_layout": [1, 50], "get_swizzle_layout": [1, 50, 53], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 50, 53], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 50, 53], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 50, 53], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 50, 53], "ldmatrix_32x8_to_shared_16x16_layout": [1, 50, 53], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 50, 53], "make_mma_swizzle_layout": [1, 50, 53, 115], "mma_32x8_to_shared_16x16_layout": [1, 50, 53], "mma_store_32x8_to_shared_16x16_layout": [1, 50, 53], "shared_16x16_to_mma_32x8_layout": [1, 50, 53, 55], "shared_16x16_to_mma_32x8_layout_r": [1, 50, 53], "shared_16x16_to_mma_32x8_layout_sr": [1, 50, 53], "shared_16x16_to_mma_32x8_layout_tran": [1, 50, 53], "shared_16x16_to_mma_32x8_smoothlayout": [1, 50, 53], "shared_16x32_to_mma_32x16_layout": [1, 50, 53, 55], "shared_16x32_to_mma_32x16_smoothlayout": [1, 50, 53], "shared_32x16_to_mma_32x16_layout": [1, 50, 53, 55], "shared_32x16_to_mma_32x16_smoothlayout": [1, 50, 53], "mma_macro_gener": [1, 50], "int4tensorcoreintrinemitt": [1, 50, 54], "int4tensorcoreintrinemitterwithladdertransform": [1, 50, 54], "tensorcoreintrinemitt": [1, 50, 54, 97], "tensorcoreintrinemitterwithladdertransform": [1, 50, 54], "get_ldmatrix_offset": [1, 50, 55], "get_mma_micro_s": [1, 50, 55], "index_to_coordin": [1, 50, 55], "mfma_store_index_map": [1, 50, 55], "mma_store_index_map": [1, 50, 55], "adapt": [1, 56, 69, 98, 114], "jitkernel": [1, 3, 4, 56, 69], "compil": [1, 2, 3, 4, 40, 42, 43, 46, 47, 56, 60, 62, 69, 108, 114, 115, 120, 123, 127], "tir": [1, 6, 14, 15, 16, 25, 52, 54, 60, 62, 69, 70, 72, 73, 76, 77, 82, 83, 84, 96, 97, 127], "alloc": [1, 70, 72, 88, 111, 115, 123], "alloc_frag": [1, 70, 71, 111, 115, 119, 120], "alloc_loc": [1, 70, 71, 114], "alloc_shar": [1, 70, 71, 114, 115, 119, 120], "alloc_var": [1, 70, 71], "builtin": [1, 70], "createlistofmbarrierop": [1, 70, 72], "createtmadescriptorop": [1, 70, 72], "fenceproxyasyncop": [1, 70, 72], "getmbarrierop": [1, 70, 72], "mbarrierexpecttx": [1, 70, 72], "mbarrierwaitpar": [1, 70, 72], "nosetmaxnreg": [1, 70, 72], "setmaxnreg": [1, 70, 72], "tmaloadop": [1, 70, 72], "tmastorearr": [1, 70, 72], "tmastorewait": [1, 70, 72], "waitwgmma": [1, 70, 72], "copi": [1, 70, 88, 103, 111, 115, 118, 119, 120, 127], "buffer_load_to_tile_region": [1, 70, 73], "buffer_region_to_tile_region": [1, 70, 73], "buffer_to_tile_region": [1, 70, 73], "c2d_im2col": [1, 70, 73], "region": [1, 6, 15, 70, 73, 75, 123], "custom": [1, 70, 78, 109], "atomic_add": [1, 70, 74, 114], "atomic_addx2": [1, 70, 74], "clamp": [1, 70, 74], "dp4a": [1, 70, 74], "reshap": [1, 70, 74], "view": [1, 70, 74, 114], "fill": [1, 70, 88, 119, 120], "clear": [1, 3, 4, 70, 75, 77, 84, 99, 114, 115, 119, 120], "frame": [1, 70, 78, 80, 81, 87], "framestack": [1, 70, 76, 78], "letfram": [1, 70, 76], "get_let_valu": [1, 70, 76], "has_let_valu": [1, 70, 76], "gemm": [1, 6, 15, 70, 94, 114, 115, 119, 120, 126, 127], "kernellaunchfram": [1, 70, 78], "get_block_bind": [1, 70, 78], "get_thread_bind": [1, 70, 78, 114], "memscop": [1, 70], "parallel": [1, 22, 70, 85, 87, 88, 103, 111, 115, 119, 120, 126, 127], "pipelin": [1, 70, 115, 119, 120], "print": [1, 70, 76, 102, 115, 118], "proxi": [1, 70, 72], "basetensorproxi": [1, 70, 83], "bufferproxi": [1, 70, 83], "fragmentbufferproxi": [1, 70, 83], "localbufferproxi": [1, 70, 83], "sharedbufferproxi": [1, 70, 83], "tensorproxi": [1, 70, 83], "make_tensor": [1, 70, 83, 111], "ptr": [1, 70, 83, 88], "reduc": [1, 34, 70, 88, 90, 107, 111, 114, 119, 123], "reduce_abssum": [1, 70, 84], "reduce_max": [1, 70, 84, 120], "reduce_min": [1, 70, 84], "reduce_sum": [1, 70, 84, 120], "annotate_layout": [1, 70, 115], "import_sourc": [1, 70], "symbol": [1, 40, 70, 86, 88, 111], "use_swizzl": [1, 70, 115, 120], "fragment": [1, 54, 71, 83, 88, 89, 97, 103, 107, 115, 119, 123, 127], "make_swizzled_layout": [1, 89, 90, 92], "swizzl": [1, 89, 115], "cdiv": [1, 93], "next_power_of_2": [1, 93], "bench": [1, 98], "do_bench": [1, 98, 99, 115], "result_idx": [1, 58, 60, 62, 64, 98], "supply_typ": [1, 2, 98, 109, 114, 126], "assert_allclos": [1, 98], "assert_consist": [1, 98], "determine_profil": [1, 98], "run_onc": [1, 56, 69, 98], "with_default_adapt": [1, 98], "main": [1, 6, 83, 100, 111, 114, 115, 126, 127], "set_random_se": [1, 100], "plot_layout": [1, 101], "simplifi": [1, 15, 103, 114, 115, 118, 126, 127], "apply_simplifi": [1, 103, 104], "simplify_prim_func": [1, 103, 104], "annotatedeviceregion": [1, 103], "clusterplan": [1, 103], "frontendleg": [1, 103], "ifstmtbind": [1, 103], "injectfenceproxi": [1, 103], "injectptxasynccopi": [1, 103], "injectsoftwarepipelin": [1, 103], "layoutinfer": [1, 103], "legalizesafememoryaccess": [1, 103], "legalizevectorizedloop": [1, 103], "loopvectorizedynam": [1, 103], "lowerdevicestorageaccessinfo": [1, 103], "lowerhopperintrin": [1, 103], "lowertileop": [1, 103, 127], "makepackedapi": [1, 103], "mergeifstmt": [1, 103], "multiversionbuff": [1, 103], "pipelineplan": [1, 103], "rewritewgmmasync": [1, 103], "threadpartialsync": [1, 103], "threadsync": [1, 103], "vectorizeloop": [1, 103], "warpspeci": [1, 103], "warpspecializedpipelin": [1, 103], "deprec": [1, 105], "array_reduc": [1, 105, 107], "is_frag": [1, 105, 107], "is_glob": [1, 105, 107], "is_loc": [1, 105, 107], "is_shar": [1, 105, 107], "is_shared_dynam": [1, 105, 107], "check_cuda_avail": [1, 105, 108], "check_hip_avail": [1, 105, 108], "determine_target": [1, 105, 108], "tensor": [1, 2, 18, 21, 22, 23, 27, 31, 41, 47, 60, 62, 69, 72, 80, 83, 88, 97, 98, 99, 105, 111, 115, 127], "tensorsupplytyp": [1, 2, 69, 98, 105, 109, 114, 126], "adapt_torch2tvm": [1, 105, 109], "get_tensor_suppli": [1, 105, 109], "map_torch_typ": [1, 105, 109], "torch_assert_clos": [1, 105, 109], "class": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 47, 52, 54, 58, 60, 62, 63, 64, 65, 67, 69, 76, 78, 83, 90, 91, 96, 97, 98, 109, 119], "level": [1, 88, 111, 114, 115, 119, 120, 127], "0": [1, 2, 13, 15, 18, 19, 38, 43, 52, 54, 67, 77, 78, 81, 82, 83, 88, 96, 97, 98, 99, 109, 111, 114, 115, 118, 123, 126, 127], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 47, 52, 54, 56, 57, 60, 62, 63, 64, 65, 67, 69, 76, 78, 83, 90, 91, 94, 95, 97, 98, 102, 109, 111, 115, 118, 120, 127], "handler": 1, "log": [1, 70, 85, 88], "direct": [1, 119], "output": [1, 2, 4, 14, 16, 19, 22, 23, 26, 29, 30, 35, 40, 42, 43, 56, 73, 77, 84, 88, 91, 98, 102, 114, 115, 118, 127], "tqdm": 1, "progress": [1, 119, 127], "bar": 1, "avoid": [1, 4], "interfer": 1, "record": 1, "messag": [1, 76, 82, 127], "ar": [1, 2, 6, 15, 22, 23, 30, 32, 35, 40, 54, 56, 76, 86, 88, 96, 98, 102, 109, 111, 114, 115, 119, 127], "written": [1, 111, 115], "ensur": [1, 111, 118], "isn": [1, 43], "t": [1, 4, 15, 43, 54, 71, 77, 86, 88, 102, 111, 114, 115, 118, 119, 120, 126], "corrupt": 1, "set": [1, 2, 6, 29, 30, 32, 33, 35, 40, 56, 71, 72, 75, 84, 88, 90, 91, 96, 111, 115, 118, 126], "": [1, 6, 15, 22, 28, 30, 31, 32, 33, 35, 71, 86, 88, 91, 111, 114, 115, 119, 123, 127], "logger": 1, "paramet": [1, 2, 4, 14, 15, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 54, 56, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 96, 97, 98, 99, 102, 103, 106, 107, 108, 111, 114], "str": [1, 2, 3, 4, 6, 7, 9, 11, 13, 14, 15, 18, 19, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 45, 46, 47, 52, 53, 54, 56, 58, 60, 62, 65, 66, 67, 69, 70, 71, 73, 74, 78, 82, 83, 84, 87, 88, 97, 98, 102, 103, 106, 108, 109, 114], "int": [1, 2, 3, 4, 6, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 43, 47, 52, 54, 56, 58, 60, 62, 64, 66, 69, 70, 73, 77, 78, 80, 81, 84, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 107, 111, 114], "can": [1, 15, 40, 45, 56, 68, 69, 77, 78, 80, 82, 88, 111, 114, 115, 118, 119, 123, 126, 127], "string": [1, 40, 43, 56, 88, 108, 127], "name": [1, 5, 6, 11, 12, 13, 14, 19, 22, 23, 27, 70, 86, 88, 102, 106, 114, 127], "e": [1, 6, 15, 34, 43, 71, 88, 96, 98, 107, 111, 114, 115, 118, 119, 120, 123, 126, 127], "g": [1, 15, 34, 40, 43, 71, 96, 98, 107, 111, 114, 115, 118, 119, 120, 123, 126, 127], "info": [1, 68, 88], "actual": [1, 40, 111], "option": [1, 2, 3, 4, 6, 13, 15, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 45, 46, 47, 52, 54, 56, 58, 60, 62, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 95, 96, 97, 98, 99, 102, 109, 115, 118], "debug": [1, 82, 120], "warn": 1, "error": [1, 88, 127], "critic": [1, 114, 119], "The": [2, 3, 4, 6, 14, 15, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 54, 56, 58, 60, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 118, 120, 123, 126, 127], "auto": [2, 3, 4, 15, 46, 56, 66, 69, 98, 105, 108, 109, 111, 114, 115, 120, 127], "tune": [2, 56, 114, 115, 119, 120, 127], "program": [2, 15, 46, 56, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 111, 114, 115, 120, 126], "thi": [2, 18, 22, 23, 29, 30, 32, 33, 35, 40, 54, 56, 60, 62, 68, 71, 76, 77, 80, 82, 83, 88, 90, 99, 103, 111, 114, 115, 118, 119, 123, 127], "provid": [2, 29, 41, 43, 56, 71, 76, 78, 82, 83, 88, 90, 91, 96, 97, 111, 115, 119, 126, 127], "function": [2, 4, 6, 15, 22, 23, 29, 31, 33, 40, 41, 43, 45, 54, 56, 60, 62, 69, 71, 76, 77, 82, 83, 86, 88, 97, 98, 99, 107, 109, 111, 115, 123, 127], "includ": [2, 4, 56, 82, 111, 115, 118, 119, 127], "perform": [2, 40, 72, 73, 74, 75, 77, 84, 88, 97, 99, 111, 114, 119, 120, 123, 127], "optim": [2, 22, 29, 30, 31, 32, 33, 35, 111, 114, 115, 119, 120, 123, 127], "through": [2, 115, 126, 127], "configur": [2, 18, 22, 23, 29, 30, 31, 32, 33, 34, 35, 72, 83, 111, 114, 115, 118], "search": [2, 114, 126], "fn": [2, 99], "callabl": [2, 40, 45, 46, 56, 58, 60, 62, 69, 86, 98, 99, 104], "object": [2, 4, 6, 8, 11, 15, 17, 18, 19, 22, 23, 24, 26, 27, 40, 47, 52, 54, 56, 63, 65, 67, 69, 71, 76, 78, 82, 83, 88, 90, 91, 96, 97, 98, 102, 108, 119, 126], "tuner": [2, 115], "handl": [2, 60, 62, 72, 73, 74, 77, 78, 82, 83, 84, 88, 99, 111, 114, 115], "process": [2, 30, 45, 111, 114, 118, 119], "differ": [2, 71, 83, 88, 98, 111, 119, 126], "find": [2, 15, 27, 43, 118], "execut": [2, 40, 47, 56, 77, 82, 88, 98, 111, 119, 127], "list": [2, 3, 4, 6, 11, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 46, 47, 56, 58, 60, 62, 64, 69, 72, 73, 74, 78, 81, 86, 88, 90, 91, 96, 98, 99, 107, 114, 126], "try": [2, 14, 62, 88, 103], "dure": [2, 88, 111, 114, 119, 127], "classmethod": [2, 18, 22, 47, 60, 62, 69, 76, 78, 96], "creat": [2, 40, 47, 54, 69, 72, 73, 80, 83, 88, 97, 115, 118], "an": [2, 29, 31, 38, 40, 47, 56, 69, 74, 75, 76, 78, 82, 86, 88, 90, 107, 109, 111, 114, 115, 119, 120, 127], "instanc": [2, 29, 47, 56, 69, 111, 127], "from": [2, 4, 14, 15, 22, 27, 40, 41, 43, 47, 56, 60, 62, 68, 69, 73, 76, 78, 83, 86, 88, 97, 107, 111, 114, 115, 119, 120, 123, 127], "return": [2, 4, 14, 15, 22, 23, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 49, 54, 56, 60, 62, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 96, 97, 98, 99, 102, 103, 104, 107, 108, 111, 114, 115, 123, 126, 127], "A": [2, 15, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 45, 54, 55, 56, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 88, 90, 91, 95, 96, 97, 98, 106, 111, 114, 115, 120, 123, 126, 127], "new": [2, 74, 83, 88, 90, 91, 106, 111, 118], "type": [2, 4, 14, 15, 22, 23, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 47, 54, 56, 62, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 96, 97, 98, 99, 102, 103, 104, 107, 108], "warmup": [2, 98, 99, 114, 126], "25": [2, 98, 99], "rep": [2, 98, 99, 114, 126], "100": [2, 98, 99], "timeout": [2, 65], "number": [2, 22, 23, 29, 30, 31, 32, 33, 34, 35, 43, 72, 77, 78, 81, 88, 90, 96, 98, 99, 109, 111, 114, 119, 123], "iter": [2, 5, 6, 15, 22, 80, 81, 87, 90, 91, 98, 99, 114], "repetit": [2, 98, 99], "time": [2, 86, 90, 98, 99, 114, 115, 118, 120], "maximum": [2, 22, 72, 74, 81, 87, 88, 98, 109, 119], "per": [2, 111, 114], "result": [2, 54, 77, 78, 84, 88, 97, 99, 103, 104, 111, 114, 115, 126, 127], "none": [2, 3, 4, 15, 17, 19, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 45, 46, 47, 52, 54, 56, 58, 60, 62, 65, 66, 67, 69, 70, 73, 74, 76, 78, 80, 81, 83, 86, 87, 88, 90, 95, 96, 97, 98, 99, 100, 102, 114, 118, 126], "float": [2, 22, 43, 65, 88, 98, 99, 109, 111, 114, 115, 126, 127], "01": [2, 98, 109, 118], "bool": [2, 3, 4, 6, 9, 10, 11, 15, 18, 22, 23, 27, 29, 30, 32, 33, 35, 36, 45, 46, 47, 49, 52, 53, 54, 55, 56, 60, 62, 65, 66, 67, 69, 76, 77, 78, 83, 84, 86, 88, 90, 95, 96, 97, 99, 102, 103, 107, 108, 109], "fals": [2, 3, 4, 6, 15, 19, 22, 23, 29, 30, 32, 33, 35, 36, 42, 43, 45, 46, 47, 52, 53, 54, 55, 56, 60, 62, 69, 76, 77, 78, 83, 86, 88, 90, 95, 96, 97, 102, 107, 108, 109, 114, 126], "true": [2, 15, 19, 22, 23, 29, 33, 35, 45, 47, 52, 54, 65, 70, 76, 84, 86, 88, 90, 96, 99, 102, 103, 107, 108, 109, 114, 115, 126], "liter": [2, 3, 4, 6, 54, 55, 56, 66, 69, 88, 99, 108], "cuda": [2, 5, 7, 22, 43, 45, 60, 62, 88, 103, 108, 114, 115, 118, 119, 126, 127], "hip": [2, 42, 45, 67, 108, 115, 119], "argument": [2, 4, 56, 69, 72, 73, 86, 88, 90, 115], "indic": [2, 4, 6, 46, 54, 56, 60, 62, 78, 88, 90, 91, 98, 102, 106, 115, 127], "suppli": [2, 69, 98], "mechan": 2, "ignor": [2, 88], "i": [2, 6, 15, 18, 19, 22, 23, 24, 29, 31, 43, 46, 47, 51, 52, 53, 54, 55, 56, 68, 76, 78, 81, 82, 86, 88, 90, 96, 102, 106, 107, 108, 109, 111, 114, 115, 118, 119, 120, 123, 124, 126, 127], "refer": [2, 98, 111, 115, 119, 127], "valid": [2, 22, 23, 88, 98, 108, 115, 127], "input": [2, 16, 19, 30, 31, 32, 33, 35, 40, 45, 63, 69, 73, 74, 77, 82, 84, 88, 91, 97, 98, 115, 119], "rel": [2, 22, 88, 98, 109], "toler": [2, 98, 109], "absolut": [2, 84, 88, 98, 109], "allow": [2, 86, 88, 98, 109, 114, 115, 119, 120, 127], "mismatch": [2, 98, 109], "ratio": [2, 98, 109], "whether": [2, 6, 15, 29, 30, 35, 45, 46, 60, 62, 77, 78, 83, 84, 86, 88, 99, 108], "skip": [2, 78], "platform": [2, 4], "self": [2, 34], "method": [2, 22, 29, 30, 32, 33, 34, 35, 76, 78, 86, 96, 106, 111], "chain": 2, "dict": [2, 3, 4, 15, 18, 19, 22, 23, 26, 27, 30, 31, 32, 33, 35, 40, 56, 60, 62, 67, 69, 87], "best": [2, 119, 126], "achiev": [2, 114, 115], "produc": [2, 81, 88, 111, 114, 123, 127], "implement": [2, 22, 23, 29, 34, 46, 55, 76, 83, 98, 111, 119, 120, 123, 127], "gener": [2, 22, 23, 33, 45, 55, 77, 78, 82, 88, 97, 98, 111, 118, 119, 120], "librari": [2, 4, 40, 60, 62, 68, 69, 119, 120, 127], "code": [2, 4, 42, 43, 45, 47, 60, 62, 67, 69, 78, 88, 111, 114, 115, 118, 119, 126, 127], "context": [2, 22, 23, 115, 119], "just": [2, 111, 115, 120], "In": [2, 15, 111, 114, 115, 119, 120, 127], "correct": [2, 97, 115], "element": [2, 30, 31, 71, 74, 80, 88, 98, 109, 111, 114, 123], "check": [2, 6, 22, 23, 29, 46, 47, 76, 88, 96, 98, 107, 108, 111, 127], "each": [2, 22, 23, 24, 30, 40, 71, 111, 114, 115, 119, 123], "measur": [2, 40, 99, 115], "ani": [2, 19, 56, 60, 62, 67, 69, 70, 76, 82, 85, 87, 88, 96, 118], "decor": [2, 45, 56, 86, 106], "space": [2, 22, 30, 88, 90, 115, 119], "explor": [2, 111, 115, 126], "befor": [2, 35, 77, 78, 84, 111, 118, 127], "second": [2, 74, 77, 88, 109], "list1": 2, "torch": [2, 47, 58, 60, 62, 64, 98, 99, 105, 109, 114, 115, 127], "list2": 2, "two": [2, 22, 88, 109, 111, 127], "compat": [2, 69, 118], "1": [2, 15, 18, 22, 23, 31, 32, 38, 43, 52, 54, 55, 60, 62, 63, 77, 78, 88, 90, 95, 96, 97, 98, 109, 111, 114, 115, 119, 127], "have": [2, 46, 86, 88, 96, 97, 111, 114, 118, 119], "same": [2, 88, 97, 111, 119], "length": [2, 22, 123], "2": [2, 15, 22, 23, 38, 52, 54, 55, 60, 62, 78, 88, 96, 109, 111, 114, 115, 119, 123, 127], "correspond": [2, 78, 88, 91, 96, 111, 114, 119], "shape": [2, 11, 18, 19, 22, 23, 26, 27, 28, 31, 34, 44, 47, 55, 60, 62, 71, 74, 83, 88, 90, 91, 96, 103, 119, 123], "first": [2, 22, 23, 74, 77, 82, 84, 88, 90, 109, 111, 114, 119, 127], "databas": [3, 4, 69], "persist": [3, 4], "init": [3, 67, 88], "file": [3, 4, 40, 42, 43, 68, 69, 102, 118, 119, 127], "primfunc": [3, 4, 6, 15, 19, 22, 29, 36, 46, 56, 60, 62, 66, 69, 86, 88, 104, 107], "arg": [3, 4, 15, 27, 67, 72, 73, 86, 88, 109, 123], "union": [3, 4, 6, 7, 9, 11, 13, 15, 34, 36, 40, 45, 46, 47, 53, 54, 56, 60, 62, 66, 69, 73, 74, 75, 77, 78, 86, 88, 99, 104, 108], "target_host": [3, 4, 46, 56, 66, 69], "execution_backend": [3, 4, 56, 69, 111], "ctype": [3, 4, 56, 57, 62, 69], "cython": [3, 4, 56, 57, 69, 111], "verbos": [3, 4, 42, 43, 56, 60, 62, 69, 102, 109], "pass_config": [3, 4, 56, 57, 59, 60, 61, 62, 67, 69], "reus": [3, 4], "kern": 3, "l": [3, 88], "us": [3, 4, 6, 14, 15, 18, 22, 23, 30, 31, 32, 33, 35, 40, 43, 45, 47, 54, 56, 60, 62, 68, 72, 76, 80, 81, 83, 86, 88, 90, 97, 98, 99, 102, 106, 111, 114, 115, 119, 123, 127], "entir": [3, 4, 73, 115, 119, 127], "cache_dir": 4, "home": 4, "leiwang": 4, "redund": [4, 22], "cu": 4, "sourc": [4, 27, 40, 41, 60, 62, 66, 67, 69, 70, 73, 88, 119, 120], "warpped_kernel": 4, "wrap": [4, 41, 57, 60, 62, 67, 69, 71, 89, 90, 91, 92, 103], "kernel_lib": 4, "so": [4, 111, 118], "pkl": 4, "prepar": [4, 115], "specifi": [4, 29, 34, 43, 56, 72, 73, 74, 75, 84, 86, 88, 96, 98, 108, 109, 111, 114, 115, 118], "which": [4, 22, 23, 30, 52, 54, 56, 72, 84, 88, 90, 97, 98, 111, 114, 115, 118, 119, 126, 127], "host": [4, 46, 47, 66, 69, 118], "pass": [4, 40, 43, 69, 72, 99, 103, 104, 115, 119, 127], "either": [4, 43, 75, 82, 123], "freshli": 4, "both": [4, 47, 82, 97, 111, 115], "memori": [4, 22, 23, 71, 72, 73, 83, 88, 97, 103, 107, 111, 114, 115, 120, 123, 127], "disk": 4, "driver": [5, 7], "arch_bas": [5, 7], "tiledevic": [5, 7, 8, 9, 10, 11, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36], "cdna": [5, 7, 29], "is_cdna_arch": [5, 7, 9, 28, 29], "cpu": [5, 7, 78, 115, 120, 126, 127], "is_cpu_arch": [5, 7, 10], "tensorinstruct": [5, 7, 11], "check_sm_vers": [5, 7, 11], "has_mma_support": [5, 7, 11], "is_ada_arch": [5, 7, 11], "is_ampere_arch": [5, 7, 11, 28, 29], "is_cuda_arch": [5, 7, 11], "is_hopper_arch": [5, 7, 11], "is_tensorcore_supported_precis": [5, 7, 11], "is_volta_arch": [5, 7, 11, 28, 29], "auto_infer_current_arch": [5, 7], "get_arch": [5, 7], "polici": [5, 16, 77, 95, 96, 97, 123], "shape_infer": [5, 16], "bestfit": [5, 16], "block": [5, 6, 14, 15, 16, 17, 19, 22, 27, 70, 78, 96, 97, 111, 114, 115, 119, 126], "hint": [5, 16, 22, 29, 30, 31, 32, 33, 34, 35, 36, 111, 115, 126], "intrininfo": [5, 16, 18], "stride": [5, 16, 18, 22, 23, 55, 73, 88], "tensorcoreextraconfig": [5, 16, 18], "tiledict": [5, 16, 18, 22, 23], "node": [5, 16, 18, 20, 22, 23, 27, 29, 32, 88, 91], "blockanalyz": [5, 16, 19], "edg": [5, 16, 19], "outputnod": [5, 16, 19, 22, 29, 32, 36], "placeholdernod": [5, 16, 19], "primfuncnod": [5, 16, 18, 19, 22, 23], "find_topo_sort": [5, 16, 19], "find_topo_sort_prior": [5, 16, 19], "pre_order_travers": [5, 16, 19], "topo_ord": [5, 16, 19], "raster": [5, 16, 22, 23, 115], "noraster": [5, 16, 24, 126], "rasterization2dcolumn": [5, 16, 24], "rasterization2drow": [5, 16, 24], "basetempl": [5, 28, 29, 30, 31, 32, 33, 34, 35], "conv": [5, 28], "convtempl": [5, 28, 30], "elementwis": [5, 6, 28, 120, 126], "elementwisetempl": [5, 28, 31], "flashattent": [5, 28, 120], "flashattentiontempl": [5, 28, 32], "gemv": [5, 6, 28, 120], "gemvtempl": [5, 28, 33], "general_reduc": [5, 28], "generalreductiontempl": [5, 28, 34], "matmul": [5, 15, 28, 115, 119, 126, 127], "matmultempl": [5, 28, 35, 126], "block_rv": [5, 6], "dom": [5, 6, 22, 23], "dom_kind": [5, 6], "is_elementwis": [5, 6], "is_gemm": [5, 6], "is_gemv": [5, 6], "is_inject": [5, 6], "is_reduct": [5, 6], "kind": [5, 6, 15], "loop_rv": [5, 6], "var": [5, 6, 47, 60, 62, 71, 75, 76, 77, 78, 83, 88], "kiter_i": [5, 15], "kiter_j": [5, 15], "kiter_k": [5, 15], "kiter_": [5, 15], "kiter_t": [5, 15], "extent": [5, 15, 22, 23, 73, 78, 80, 87, 88, 90], "infra": 5, "loop": [6, 80, 81, 87, 97, 103, 111, 115, 119, 123, 126], "blockrv": [6, 14, 15, 19, 27], "reduction_block": 6, "inform": [6, 18, 19, 47, 68, 102, 103], "about": [6, 88, 102, 119], "primexpr": [6, 15, 27, 52, 54, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 97], "domain": [6, 22, 23, 115, 120], "exampl": [6, 40, 86, 88, 96, 111, 114, 119, 123], "ssss": 6, "sssr": 6, "sch": [6, 14, 15, 19], "schedul": [6, 14, 15, 17, 18, 22, 23, 115, 126], "trivial": [6, 15], "map": [6, 15, 22, 23, 30, 40, 54, 76, 90, 91, 102, 111, 115, 119, 123, 126], "between": [6, 30, 73, 74, 81, 88, 99, 103, 111, 119, 123], "read": [6, 15, 73, 88, 103, 119, 120], "write": [6, 15, 73, 88, 103, 111, 114, 115, 119, 120, 123, 127], "workload": [6, 96], "inject": [6, 78], "all": [6, 15, 22, 23, 47, 66, 70, 78, 83, 85, 86, 88, 96, 103, 111, 114, 118, 123, 124], "its": [6, 22, 82, 86, 111], "reduct": [6, 15, 22, 23, 84, 88, 97, 123, 126], "r": [6, 73, 88], "o": 6, "looprv": 6, "properti": [6, 18, 19, 24, 29, 30, 31, 32, 33, 34, 35, 60, 62, 67, 69, 78, 90, 91, 96, 97, 98], "rang": [6, 74, 90, 115], "collect": [6, 124], "variabl": [6, 22, 23, 40, 47, 71, 72, 75, 76, 82, 83, 87, 88, 90, 91, 118, 123, 127], "access": [6, 72, 73, 88, 103, 111, 118, 119], "buffer": [6, 15, 19, 47, 54, 71, 73, 74, 75, 77, 81, 82, 83, 84, 88, 90, 92, 95, 96, 97, 102, 103, 107, 114, 115, 119, 123, 126, 127], "expr": [6, 15, 27, 83, 88], "detect": [6, 15, 54, 98, 108, 123], "domin": 6, "block_stmt": [6, 15], "target_bit": 6, "128": [6, 86, 111, 114, 115, 126, 127], "func_nam": [6, 88], "epilogu": 6, "broadcast": 6, "pattern": [6, 15, 88, 115, 119, 127], "normal": [6, 105, 109], "form": [6, 30, 32, 33, 35, 52, 54], "cuda_driv": [7, 12], "cudadeviceprop": [7, 12, 13], "get_cuda_device_properti": [7, 12, 13], "get_device_attribut": [7, 12, 13], "get_device_nam": [7, 12, 13], "get_max_dynamic_shared_size_byt": [7, 12, 13], "get_shared_memory_per_block": [7, 12, 13], "get_avaliable_tensorintrin_shap": [7, 8, 11], "repres": [8, 15, 22, 47, 52, 54, 78, 83, 90, 91, 96, 97, 119, 123], "architectur": [8, 22, 29, 30, 31, 32, 33, 34, 35, 42, 43, 115, 119], "comput": [8, 15, 18, 22, 23, 27, 30, 31, 32, 33, 34, 35, 43, 77, 83, 88, 90, 91, 96, 99, 111, 114, 115, 119, 120, 127], "devic": [8, 46, 47, 62, 66, 88, 103, 115, 119, 124], "captur": [8, 119], "variou": [8, 18, 22, 68, 77, 111, 115, 119], "hardwar": [8, 29, 30, 31, 32, 33, 34, 35, 115, 127], "specif": [8, 29, 83, 88, 98, 111, 115, 118, 119, 120, 127], "in_dtyp": [11, 18, 28, 30, 32, 33, 35, 95, 97, 111, 126], "accum_dtyp": [11, 28, 30, 32, 33, 35, 52, 54, 95, 97, 114, 115, 126, 127], "eccen": [12, 13], "asyncenginecount": [12, 13], "canmaphostmemori": [12, 13], "clockrat": [12, 13], "computemod": [12, 13], "concurrentkernel": [12, 13], "deviceoverlap": [12, 13], "globall1cachesupport": [12, 13], "integr": [12, 13], "ismultigpuboard": [12, 13], "kernelexectimeouten": [12, 13], "l2caches": [12, 13], "locall1cachesupport": [12, 13], "luid": [12, 13], "luiddevicenodemask": [12, 13], "major": [12, 13, 43, 88], "managedmemori": [12, 13], "maxgrids": [12, 13], "maxsurface1d": [12, 13], "maxsurface1dlay": [12, 13], "maxsurface2d": [12, 13], "maxsurface2dlay": [12, 13], "maxsurface3d": [12, 13], "maxsurfacecubemap": [12, 13], "maxsurfacecubemaplay": [12, 13], "maxtexture1d": [12, 13], "maxtexture1dlay": [12, 13], "maxtexture1dlinear": [12, 13], "maxtexture1dmipmap": [12, 13], "maxtexture2d": [12, 13], "maxtexture2dgath": [12, 13], "maxtexture2dlay": [12, 13], "maxtexture2dlinear": [12, 13], "maxtexture2dmipmap": [12, 13], "maxtexture3d": [12, 13], "maxtexture3dalt": [12, 13], "maxtexturecubemap": [12, 13], "maxtexturecubemaplay": [12, 13], "maxthreadsdim": [12, 13], "maxthreadsperblock": [12, 13], "maxthreadspermultiprocessor": [12, 13], "mempitch": [12, 13], "memorybuswidth": [12, 13], "memoryclockr": [12, 13], "minor": [12, 13, 43], "multigpuboardgroupid": [12, 13], "multiprocessorcount": [12, 13], "pcibusid": [12, 13], "pcideviceid": [12, 13], "pcidomainid": [12, 13], "persistingl2cachemaxs": [12, 13], "regsperblock": [12, 13], "regspermultiprocessor": [12, 13], "reserv": [12, 13], "reserved1": [12, 13], "reserved2": [12, 13], "sharedmemperblock": [12, 13], "sharedmempermultiprocessor": [12, 13], "streamprioritiessupport": [12, 13], "surfacealign": [12, 13], "tccdriver": [12, 13], "texturealign": [12, 13], "texturepitchalign": [12, 13], "totalconstmem": [12, 13], "totalglobalmem": [12, 13], "unifiedaddress": [12, 13], "uuid": [12, 13], "warpsiz": [12, 13], "structur": [13, 28, 29, 34, 76, 88], "member": 13, "device_id": [13, 88], "attr": [13, 46, 114], "format": [13, 40, 42, 43, 88], "byte": [13, 88], "\u83b7\u53d6\u8bbe\u5907\u652f\u6301\u7684\u6700\u5927\u52a8\u6001\u5171\u4eab\u5185\u5b58\u5927\u5c0f": 13, "strategi": [14, 114, 126, 127], "get": [14, 15, 22, 40, 43, 62, 68, 76, 88, 90, 91, 114, 118, 127], "target_block": 14, "analyz": [14, 15, 25, 27, 111, 127], "output_block": 14, "inlin": [14, 115], "mani": [14, 114, 115], "possibl": [14, 22, 23], "remain": [14, 111], "cannot": [14, 73, 88], "block_info": 14, "contigu": 14, "spatial": [14, 15, 30, 34, 73], "rule": [15, 88], "gpu": [15, 42, 43, 78, 83, 118, 119, 120, 126, 127], "oper": [15, 31, 41, 47, 60, 62, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 88, 90, 107, 114, 115, 118, 119, 123, 126, 127], "valu": [15, 19, 30, 32, 33, 35, 38, 47, 74, 75, 76, 78, 81, 82, 83, 86, 87, 88, 96, 109, 111, 127], "enum": [15, 109], "like": [15, 70, 76, 78, 85, 86, 88, 111, 114, 115, 119, 127], "we": [15, 46, 78, 88, 111, 114, 115, 118, 119, 123, 127], "c": [15, 28, 30, 35, 40, 60, 62, 67, 74, 77, 78, 88, 95, 96, 97, 111, 114, 115, 118, 119, 123, 126, 127], "j": [15, 51, 53, 55, 111, 115, 118], "k": [15, 19, 28, 30, 32, 33, 35, 77, 88, 115, 126, 127], "b": [15, 31, 35, 54, 55, 74, 77, 86, 88, 93, 95, 96, 97, 111, 114, 115, 119, 123, 126], "where": [15, 31, 74, 77, 88, 90, 102, 111, 115, 127], "fundament": 15, "ax": [15, 16, 18, 22, 23, 34], "other": [15, 17, 22, 23, 41, 111, 114, 119, 123, 126, 127], "batch": [15, 30, 73], "3": [15, 38, 55, 60, 62, 78, 109, 114, 115, 123], "4": [15, 24, 55, 74, 96, 109, 114, 115, 118, 126, 127], "tvm": [15, 30, 31, 32, 33, 34, 35, 40, 41, 43, 47, 56, 60, 62, 66, 69, 71, 73, 75, 83, 86, 88, 96, 97, 98, 103, 104, 107, 115, 120, 127], "ir": [15, 60, 62, 66, 70, 83, 85, 97, 119, 127], "skip_block": 15, "prim_expr": 15, "tupl": [15, 18, 19, 22, 23, 27, 52, 54, 60, 62, 66, 71, 78, 83, 88, 96], "trait": 15, "doe": [15, 22, 23, 88, 111, 115], "match": [15, 77, 86, 115], "main_block": 15, "travers": [15, 111, 126], "index": [15, 55, 56, 88, 89, 90, 91, 119, 127], "bufferregion": [15, 73, 75, 123], "out": [15, 40, 54, 62, 84, 88, 114, 115, 123], "data": [15, 30, 31, 33, 35, 71, 73, 76, 83, 88, 90, 97, 111, 114, 115, 119, 120, 123, 124, 127], "given": [15, 18, 22, 23, 31, 56, 78, 83, 90, 91, 96, 98, 126], "indexmap": [15, 54], "n": [15, 21, 22, 28, 30, 32, 33, 35, 52, 54, 67, 88, 96, 111, 114, 115, 126, 127], "infer": [15, 22, 23, 25, 26, 27, 56, 96, 97, 103, 114, 115, 119, 123], "last": [15, 88, 114], "axi": [15, 18, 22, 23, 88, 114, 123], "index_map": 15, "dtype": [15, 19, 28, 31, 34, 44, 47, 53, 55, 60, 62, 70, 71, 74, 83, 88, 97, 109, 111, 114, 115, 123, 126, 127], "float16": [15, 30, 31, 32, 33, 34, 35, 52, 54, 55, 114, 115, 126, 127], "index_dtyp": 15, "int32": [15, 52, 54, 70, 71], "tran": [15, 88], "matrix_nam": 15, "skip_norm": 15, "allow_gemv": [15, 36], "necessari": [15, 47, 97, 114, 118, 119, 120], "conv2d": 15, "im2col": [15, 73], "start_block": 15, "start_buff": 15, "end_block": 15, "kind_ord": 15, "coalesced_factor": [16, 20, 21], "coalesced_tensor_shap": [16, 20, 21], "factor": [16, 20, 21, 22, 23, 83, 90, 96], "get_all_factor": [16, 20, 21], "default": [16, 20, 29, 31, 34, 40, 43, 45, 46, 69, 71, 73, 74, 77, 83, 84, 88, 102, 109, 115], "defaultpolici": [16, 20, 22, 23], "tensorcor": [16, 18, 20, 43], "tensorcorepolici": [16, 20, 23], "inputshapeinfer": [16, 25, 26, 27], "statement": [16, 25, 26, 27, 82, 87, 88, 123, 127], "dependencyanalysi": [16, 25, 27], "tensordepnod": [16, 25, 27], "get_analyzer_by_tir": [16, 25, 27], "region_exist_in_list": [16, 25, 27], "walk_indic": [16, 25, 27], "free": [16, 17, 88], "malloc": [16, 17], "merg": [16, 17], "size": [16, 17, 22, 23, 30, 73, 88, 90, 111, 115, 123], "complete_config": [16, 18], "from_dict": [16, 18], "raxis_ord": [16, 18], "step": [16, 18, 22, 23, 30, 73, 97, 114, 118], "tensorcore_leg": [16, 18], "to_dict": [16, 18], "inter_transform_a": [16, 18], "inter_transform_b": [16, 18], "is_input_8bit": [16, 18], "smooth_a": [16, 18], "smooth_b": [16, 18], "compute_elements_from_shap": [16, 18], "compute_strides_from_shap": [16, 18], "is_valid": [16, 18], "get_rstep": [16, 18], "get_til": [16, 18], "get_block_info": [16, 19], "get_block_nam": [16, 19], "get_buff": [16, 19], "get_consumer_block": [16, 19], "get_input_buff": [16, 19], "get_output_buff": [16, 19], "get_producer_block": [16, 19], "get_reduce_axi": [16, 19], "get_spatial_axi": [16, 19], "dst_id": [16, 19], "dst_node": [16, 19], "src_id": [16, 19], "src_node": [16, 19], "add_tag": [16, 19], "get_dtyp": [16, 19], "get_ir": [16, 19], "get_shap": [16, 19], "get_tag": [16, 19], "is_output": [16, 19], "is_placehold": [16, 19], "num_output": [16, 19], "set_dtyp": [16, 19], "set_input": [16, 19], "set_output": [16, 19], "set_shap": [16, 19], "set_tag": [16, 19], "update_tag": [16, 19], "extent_wrapp": [16, 19], "footprint": [16, 19], "get_buffer_dtyp": [16, 19], "get_opt_shap": [16, 19], "get_reduce_inputs_dtyp": [16, 19], "get_space_dim": [16, 19], "infer_tensorcore_axi": [16, 19], "propag": [16, 19], "propagate_input": [16, 19], "propagate_inputs_on_reduct": [16, 19], "propagate_output": [16, 19], "propagate_reduction_input": [16, 19], "get_cod": [16, 24], "panel_width": [16, 24], "panel_width_": [16, 24], "get_device_funct": [16, 24], "benefit": 17, "For": [17, 22, 23, 24, 27, 87, 88, 111, 115, 118, 119, 127], "align": [17, 83, 111], "32": [17, 54, 88, 111, 114, 115, 123, 126, 127], "start": [17, 27, 81, 87, 88, 114, 123], "end": [17, 88, 111], "is_fre": 17, "definit": [18, 34, 86], "central": 18, "manag": [18, 60, 62, 76, 78, 115, 119], "task": [18, 111], "dic": 18, "out_dtyp": [18, 28, 30, 32, 33, 35, 111, 126], "trans_b": [18, 28, 33, 35], "input_transform_kind": 18, "weight_transform_kind": 18, "relat": [18, 22], "as_shap": 18, "bs_shape": 18, "af_shap": 18, "bf_shape": 18, "tc_axi": 18, "store": [18, 29, 34, 47, 54, 72, 84, 88, 114, 123], "extra": [18, 22, 23, 88], "output_til": [18, 22], "tile": [18, 19, 22, 23, 71, 73, 94, 111, 114, 118, 126], "wrapper": [19, 56, 57, 69, 78], "analaysi": 19, "itervar": [19, 90, 91], "tag": [19, 20, 22, 23], "v": [19, 127], "id": [19, 88], "datatyp": [19, 53, 114], "overwrit": 19, "prim_func": [19, 57, 59, 60, 61, 62, 67, 70, 85, 86, 111, 114, 115, 126, 127], "rstep": [19, 26, 27, 126], "stride_map": 19, "output_node_list": 19, "block_analyz": [19, 27], "list_of_nod": 19, "assign_block_s": [20, 22], "check_tile_shape_isvalid": [20, 22, 23], "compute_node_stride_map": [20, 22, 23], "compute_tile_dict": [20, 22], "compute_workload_per_item": [20, 22], "dfs_smem_til": [20, 22], "emit_config": [20, 22], "from_output_nod": [20, 22], "from_prim_func": [20, 22], "get_base_til": [20, 22], "get_block_s": [20, 22], "get_node_reduce_step_candid": [20, 22, 23], "infer_node_smem_usag": [20, 22, 23], "plan_raster": [20, 22, 23], "recommend_block_s": [20, 22], "score_block_s": [20, 22], "block_reduction_depth": [20, 23], "pipeline_stag": [20, 23, 126], "use_async_copi": [20, 23], "wmma_k": [20, 23], "subtensor": 21, "transaction_s": 21, "core": [22, 83, 88, 97, 119], "fastdlight": 22, "heurist": 22, "plan": [22, 23, 24], "tri": 22, "minim": [22, 111, 119], "traffic": 22, "maxim": 22, "bitbla": [22, 115], "td": [22, 23], "topk": [22, 29, 30, 31, 32, 33, 34, 35, 36, 126], "assign": [22, 111, 114, 115, 119], "recommend": [22, 29, 34, 111, 118, 126], "top": [22, 29, 30, 31, 32, 33, 34, 35, 70, 76, 78, 120, 123, 126], "consid": [22, 30, 31, 32, 33, 35, 115, 123, 127], "yield": [22, 127], "primari": [22, 60, 62], "contain": [22, 23, 30, 31, 32, 33, 35, 47, 69, 75, 76, 107, 118, 119, 126], "otherwis": [22, 23, 29, 47, 52, 54, 56, 76, 96, 107, 108], "dictionari": [22, 23, 30, 31, 32, 33, 35], "rstep_map": 22, "share": [22, 23, 40, 69, 71, 83, 88, 97, 103, 107, 115, 119, 123], "cost": [22, 111], "grid": [22, 70, 85, 87, 111, 115, 123], "init_til": 22, "minimum": [22, 74, 81, 87, 88], "satisfi": [22, 88], "equal": 22, "dimens": [22, 30, 47, 73, 77, 78, 84, 88, 90, 96, 97, 111, 115, 123, 127], "determin": [22, 30, 43, 96, 98, 108, 119], "constraint": [22, 88, 123], "score": 22, "chosen": 22, "constrain": 22, "1024": [22, 111, 114, 115, 127], "calcul": [22, 23, 88, 99, 127], "candid": [22, 23], "idea": [22, 23, 115], "sinc": [22, 23, 111, 115, 123], "requir": [22, 23, 96, 111, 114, 115, 118, 127], "boundari": [22, 23, 123], "larg": [22, 23, 114], "prime": [22, 23, 96], "rare": [22, 23], "case": [22, 23, 111, 114, 123, 127], "power": [22, 23, 70, 85, 88, 114], "It": [22, 23, 29, 34, 56, 71, 76, 82, 83, 88, 114, 115, 123, 126], "raxi": [22, 23], "usag": [22, 23, 60, 62, 111, 115, 119], "estim": [22, 23], "amount": [22, 23], "yet": [22, 23, 115, 118, 119], "rais": [22, 23, 29, 30, 32, 35, 47, 54, 56, 73, 75, 76, 77, 82, 96, 97, 107, 108], "rasterrationplan": [22, 23], "sort": 22, "effici": [22, 111, 115, 119, 126], "fit": [22, 111], "warp": [22, 72, 77, 88, 96, 119], "sm": 22, "partit": [22, 96, 97, 123], "respect": [22, 88, 111, 127], "16": [23, 52, 54, 114, 118, 127], "l2": [24, 99, 123], "local": [24, 54, 71, 83, 88, 107, 115, 119], "column": [24, 35, 73, 88, 96], "line": [24, 115, 127], "width": [24, 30, 73, 74, 80, 88], "_": [24, 127], "row": [24, 35, 70, 88, 96], "_________": 24, "__________": 24, "get_input_expr": [25, 26, 27], "find_path_from_sourc": [25, 27], "get_or_create_nod": [25, 27], "print_depend": [25, 27], "traverse_depend": [25, 27], "construct_dependency_target": [25, 27], "make_revers": [25, 27], "add_next": [25, 27], "add_prev": [25, 27], "dedupl": [25, 27], "dep": [26, 27], "output_expr": [26, 27], "dependent_region": 26, "var_map": 26, "ordereddict": 26, "range_map": 26, "start_nam": 27, "target_nam": 27, "path": [27, 40, 43, 60, 62, 69, 108, 118], "exist": [27, 45, 78, 90, 118, 126, 127], "constintbound": 27, "input_nam": 27, "input_it": 27, "depend": [27, 115, 118, 119], "lst": 27, "equivalent_funct": [28, 29], "get_hardware_aware_config": [28, 29, 30, 31, 32, 33, 34, 35], "has_arch": [28, 29], "initialize_funct": [28, 29, 30, 31, 32, 33, 34, 35], "output_nod": [28, 29, 36], "recommend_hint": [28, 29, 126], "set_funct": [28, 29], "set_output_nod": [28, 29], "with_arch": [28, 29, 126], "h": [28, 30, 127], "w": [28, 30, 73, 88, 111], "f": [28, 30, 88, 115, 118, 127], "d": [28, 30], "p": [28, 30, 111], "with_bia": [28, 30, 33, 35], "class_attribut": [28, 30, 31, 32, 33, 34, 35, 95, 96], "params_as_dict": [28, 30, 31, 32, 33, 34, 35, 95, 96], "batch_siz": [28, 32], "head_dim": [28, 32], "is_caus": [28, 32], "num_head": [28, 32], "seq_kv_length": [28, 32], "seq_length": [28, 32], "m": [28, 32, 35, 52, 54, 88, 96, 111, 114, 115, 126, 127], "trans_a": [28, 35], "abc": [29, 58, 67], "awar": [29, 30, 31, 32, 33, 34, 35, 115, 119], "serv": [29, 83, 111], "abstract": [29, 34, 67, 115, 119], "defin": [29, 30, 31, 32, 33, 35, 40, 72, 73, 91, 98, 111, 115, 119, 126, 127], "subclass": [29, 34], "current": [29, 40, 49, 56, 62, 70, 76, 78, 88, 91, 118, 123], "associ": [29, 76, 91, 111], "10": [29, 30, 31, 32, 33, 34, 35, 36, 88, 98, 115, 118, 126], "must": [29, 34, 56, 96, 111, 123], "should": [29, 34, 86, 88, 99, 107, 114, 123], "placehold": [29, 30, 32, 33, 35, 88], "respons": [29, 97, 111], "initi": [29, 30, 31, 32, 33, 35, 84, 88, 111, 115, 119], "notimplementederror": 29, "If": [29, 30, 32, 35, 43, 47, 54, 56, 73, 75, 76, 77, 82, 84, 88, 90, 96, 97, 102, 107, 108, 109, 114, 118, 123], "amper": 29, "volta": 29, "itself": 29, "updat": [29, 76, 118, 123], "convolut": [30, 73, 120], "matrix": [30, 32, 33, 35, 54, 55, 72, 77, 88, 97, 107, 119, 120], "transposit": [30, 33, 35, 97], "bia": [30, 32, 33, 35], "addit": [30, 33, 35, 40, 42, 43, 69, 74, 88, 90, 102, 111, 119, 126], "sampl": 30, "simultan": 30, "featur": [30, 114, 118], "height": 30, "filter": [30, 127], "appli": [30, 32, 33, 35, 56, 104, 111], "depth": [30, 115, 119], "slide": 30, "across": [30, 90, 98, 114, 115], "control": [30, 90, 114, 115, 119], "recept": 30, "field": [30, 88], "expans": 30, "pixel": 30, "ad": [30, 74, 127], "border": 30, "matric": [30, 32, 33, 35, 77, 88, 119], "accumul": [30, 35, 72, 74, 77, 88, 97, 114, 115, 119], "add": [30, 35, 123], "term": [30, 35], "attribut": [30, 31, 32, 33, 35, 46, 86], "retriev": [30, 31, 32, 33, 35, 72, 76, 91, 107, 111], "acceler": [30, 32, 33, 35, 111, 119, 126], "up": [30, 32, 33, 35, 76, 88, 115, 120], "api": [30, 32, 33, 35], "cast": [30, 32, 33, 35, 83, 88, 114], "assertionerror": [30, 32, 35, 54, 56, 77, 96, 97, 107, 108, 109], "posit": [30, 32, 35, 88], "integ": [30, 32, 35, 47, 78, 88, 105, 107, 109, 114, 126], "wise": [31, 80, 88], "represent": [31, 119, 127], "simpl": [31, 78, 114, 127], "graph": [31, 43], "built": [31, 41, 115, 118, 126, 127], "express": [31, 73, 80, 82, 83, 88, 90, 91, 97, 115], "_output_nod": 32, "multipl": [32, 33, 35, 77, 88, 98, 99, 107, 119, 120, 123], "vector": [33, 70, 85, 87, 88, 103, 111, 120, 123, 127], "pars": [34, 43, 86], "ssr": [34, 97], "build": [34, 56, 88, 120], "appropri": [34, 56, 71, 108, 115], "_func": 34, "transpos": [35, 55, 77], "pannel_width": 36, "8": [36, 51, 52, 54, 111, 114, 118, 127], "func_or_modul": 36, "irmodul": [36, 46, 47, 48, 60, 62, 66, 67, 88, 104, 107, 119], "tensorcore_onli": 36, "extra_tag": 36, "ir_modul": [36, 59, 60, 61, 62, 107], "interwarptransform": [37, 38], "intrawarptransform": [37, 38], "ldmatrixtransform": [37, 38], "nontransform": [37, 38], "is_inter_warp_transform": [37, 38], "is_intra_warp_transform": [37, 38], "is_ld_matrix_transform": [37, 38], "is_non_transform": [37, 38], "intenum": [38, 96], "enumer": [38, 96, 109], "invok": [40, 42, 43, 69, 95, 97, 115], "system": [40, 42, 43, 108, 118, 119], "cwd": 40, "ccache_env": 40, "binari": [40, 88], "command": [40, 118], "urrent": 40, "work": [40, 111, 119], "directori": [40, 62, 102, 118], "environ": [40, 118], "ccach": 40, "disabl": [40, 49, 72], "static": [40, 76, 96], "tarbal": 40, "compile_func": 40, "output_format": 40, "get_target_tripl": 40, "add_fil": 40, "cross": 40, "special": [40, 71, 114, 119, 123, 127], "construct": [40, 78, 80, 81, 83, 119], "autotvm": 40, "export_librari": [40, 56, 69], "tripl": 40, "accord": [40, 88], "dumpmachin": 40, "part": [40, 115], "fcompil": 40, "import": [40, 78, 86, 111, 115, 118, 126, 127], "ndk": 40, "export": [40, 69, 118], "arm": 40, "gcc": [40, 118], "mod": [40, 48, 58, 64, 127], "build_runtime_modul": 40, "path_dso": 40, "linux": [40, 118], "gnueabihf": 40, "specialized_ndk": 40, "sysroot": 40, "fpic": 40, "lm": 40, "wa": [40, 62, 90, 111, 127], "found": [40, 62, 76, 114], "nm": 40, "global": [40, 49, 76, 83, 86, 88, 103, 107, 115, 119, 123], "via": [40, 88, 94, 114, 118, 119], "symbol_section_map": 40, "section": [40, 88, 111, 119], "functor": 40, "bridg": 41, "framework": [41, 118, 126], "support": [41, 43, 47, 56, 77, 90, 111, 115, 119, 123], "tvm_func": 41, "tensor_typ": 41, "to_dlpack_func": 41, "convert": [41, 47, 58, 60, 62, 64, 73, 98, 99, 105, 123], "one": [41, 56, 107, 111, 123, 127], "accept": [41, 88], "anoth": [41, 88], "arrai": [41, 88, 107], "pytorch": [41, 47, 60, 62, 69, 99, 115, 118], "wrapped_func": 41, "target_format": [42, 43], "hsaco": 42, "path_target": [42, 43], "amd": [42, 88, 115, 119], "bytearrai": [42, 43], "ptx": [43, 88, 115], "cubin": 43, "root": [43, 88, 127], "cuda_path": 43, "version": [43, 62, 88, 111, 114, 120, 127], "compute_vers": 43, "fp16": [43, 52, 54, 115, 123], "capabl": [43, 115], "6": [43, 109, 115], "int8": [43, 52, 54, 55], "7": [43, 109, 115, 118], "divid": [43, 88], "device_mod": [44, 46, 47, 57, 60, 62, 67, 127], "host_mod": [44, 46, 47, 57, 60, 62, 67], "kernel_sourc": [44, 47, 56, 69, 127], "rt_mod": [44, 47], "from_buff": [44, 47], "from_var": [44, 47], "is_boolean": [44, 47], "is_float8": [44, 47], "is_scalar": [44, 47], "is_unsign": [44, 47], "overrid": [45, 76, 99], "regist": [45, 72, 88, 111, 115, 119, 123, 127], "post": 45, "take": [45, 71, 88, 115, 118, 127], "without": [45, 56, 76, 78, 83, 86, 115, 119, 120], "parenthes": 45, "def": [45, 86, 111, 114, 115, 126, 127], "boolean": [45, 47, 70, 88], "flag": [45, 97, 118], "tl": [46, 56, 67, 70, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 114, 126], "is_device_c": 46, "launch": [46, 78, 111, 123], "func_or_mod": [46, 60, 62, 66], "runtime_onli": 46, "enable_host_codegen": 46, "enable_device_compil": 46, "enabl": [46, 49, 70, 81, 111, 115, 118, 119], "codegen": [46, 127], "our": [46, 114, 119], "own": [46, 119], "artifact": [47, 56, 69], "compon": 47, "runtim": [47, 69, 88, 99, 115, 118, 119], "describ": [47, 54, 102], "scalar": [47, 88, 127], "interop": 47, "valueerror": [47, 75, 82, 96, 107, 108, 127], "intimm": [47, 88], "empti": [47, 76, 78], "float8": 47, "ha": [47, 76, 86, 114, 115, 123, 126], "unsign": 47, "state": [49, 120], "m_dim": [50, 52, 54], "n_dim": [50, 52, 54], "warp_siz": [50, 52, 54, 88], "dtype_abbrv": [50, 52, 54], "extract_thread_bind": [50, 52, 54], "get_ldmatrix_index_map": [50, 52], "is_m_first": [50, 52, 54], "k_pack": [50, 52, 77, 95, 96, 97], "ldmatrix_a": [50, 52, 54], "ldmatrix_b": [50, 52, 54], "mfma": [50, 52, 88], "stmatrix": [50, 52, 54], "mma": [50, 54, 88, 97, 115], "get_store_index_map": [50, 54], "make_mma_load_layout": [50, 54], "make_mma_store_layout": [50, 54], "shared_buf": [51, 53], "vecsiz": 51, "ind": 51, "thread_id": [51, 52, 53, 54, 55], "local_id": [51, 53, 55], "a_dtyp": [52, 54, 88], "b_dtype": [52, 54, 88], "a_transpos": [52, 54], "b_transpos": [52, 54], "block_row_warp": [52, 54, 95, 96, 97], "block_col_warp": [52, 54, 95, 96, 97], "warp_row_til": [52, 54, 95, 96, 97], "warp_col_til": [52, 54, 95, 96, 97], "chunk": [52, 54, 95, 96, 97, 119], "reduce_k": [52, 54], "num_elems_per_byt": [52, 54, 55], "To": [52, 54, 111, 114, 118], "elimin": [52, 54], "python": [52, 54, 60, 62, 88, 115, 118, 119, 120, 127], "syntax": [52, 54, 119, 120], "within": [52, 54, 111, 114, 119, 123, 127], "macro": [52, 54, 70, 82, 85, 86, 97], "64": [52, 88, 114, 126], "bfloat16": [52, 54, 111], "bf16": [52, 54], "e4m3_float8": [52, 54], "e4m3": [52, 54], "e5m2_float8": [52, 54], "e5m2": [52, 54], "float32": [52, 54, 71, 83], "fp32": [52, 54], "thread": [52, 54, 70, 71, 78, 82, 87, 88, 89, 90, 96, 111, 114, 115, 119, 120, 123, 127], "bind": [52, 54, 76, 78, 86, 87], "tx": [52, 54, 82, 88], "warp_n": [52, 54], "warp_m": [52, 54], "split": [52, 54, 88], "is_b": 52, "a_local_buf": [52, 54], "a_shared_buf": [52, 54], "ki": [52, 54], "rk": [52, 54], "b_local_buf": [52, 54], "b_shared_buf": [52, 54], "c_local_buf": [52, 54], "c_buf": [52, 54], "pid_m": [52, 54], "pid_n": [52, 54], "row_idx": [53, 55], "col_idx": [53, 55], "row_siz": 53, "is_smooth": 53, "transform_kind_a": 54, "transform_kind_b": 54, "invers": [54, 89, 91], "local_buf": 54, "conjunct": 54, "inverse_mma_store_layout": 54, "how": [54, 99, 102, 114, 115, 119, 127], "laid": 54, "k_inner": 54, "With": [54, 114, 115, 119], "ladder": 54, "plugin": 54, "vjj": 55, "micro_size_k": 55, "coordin": 55, "vii": 55, "micro_size_i": 55, "vj": 55, "block_k": [55, 114, 115, 119, 126, 127], "vi": 55, "block_n": [55, 111, 114, 115, 119, 126, 127], "basekerneladapt": [56, 57, 58, 60, 62, 64, 69, 98], "torchdlpackkerneladapt": [56, 57, 64], "libgen": [56, 57], "librarygener": [56, 57, 65], "get_annotated_mod": [56, 57, 66], "is_cpu_target": [56, 57, 66], "is_cuda_target": [56, 57, 66], "is_hip_target": [56, 57, 66], "match_declare_kernel": [56, 57, 66], "match_declare_kernel_cpu": [56, 57, 66], "match_global_kernel": [56, 57, 66], "basewrapp": [56, 57, 67], "tlcpusourcewrapp": [56, 57, 67], "tlcudasourcewrapp": [56, 57, 67], "tlhipsourcewrapp": [56, 57, 67], "tlwrapper": [56, 57, 67], "torch_funct": [56, 69], "from_databas": [56, 59, 60, 61, 62, 69], "from_tilelang_funct": [56, 69], "get_host_sourc": [56, 69], "get_kernel_sourc": [56, 57, 58, 59, 60, 61, 62, 69, 111, 115, 127], "get_profil": [56, 69, 115], "host_sourc": [56, 69], "infrastructur": [56, 120], "runnabl": 56, "pass_config_kwarg": 56, "factori": 56, "call": [56, 67, 72, 73, 75, 77, 84, 88, 111, 115, 119, 127], "directli": [56, 69, 82, 108, 111, 118, 119, 126, 127], "expect": [56, 72, 88, 127], "onli": [56, 82, 88, 111, 114, 123], "automat": [56, 96, 98, 99, 108, 111, 114, 115, 119], "avaliable_target": 56, "encapsul": [56, 90, 119], "invalid": [56, 75, 96, 108], "present": [56, 88, 111], "ctypeskerneladapt": [57, 59, 60], "cythonkerneladapt": [57, 61, 62], "get_cache_dir": [57, 61, 62], "get_cached_lib": [57, 61, 62], "get_cython_compil": [57, 61, 62], "cython_wrapp": [57, 61], "cythonkernelwrapp": [57, 61, 63], "compile_lib": [57, 65], "get_lib_path": [57, 65], "get_source_path": [57, 65], "lib_cod": [57, 59, 60, 61, 62, 65], "libpath": [57, 59, 60, 61, 62, 65], "load_lib": [57, 65], "remove_lib": [57, 65], "set_lib_path": [57, 65], "set_src_path": [57, 65], "srcpath": [57, 59, 60, 61, 62, 65], "update_lib_cod": [57, 65, 67], "call_prefix": [57, 67], "init_func": [57, 67], "backend": [57, 67, 88, 98, 115, 118, 119, 126], "create_call_func": [57, 67], "get_cpu_init_func": [57, 67], "get_dynamic_symbolic_set": [57, 67], "parse_source_inform": [57, 67], "create_dispatch_func": [57, 67], "generate_tma_descriptor_arg": [57, 67], "get_cuda_init_func": [57, 67], "is_tma_descriptor_arg": [57, 67], "get_hip_init_func": [57, 67], "get_stream_typ": [57, 67], "assign_device_modul": [57, 67], "assign_host_modul": [57, 67], "assign_optimized_modul": [57, 67], "assign_pass_config": [57, 67], "lib": [57, 59, 60, 61, 62, 67], "dynamic_symbolic_map": [59, 60, 61, 62, 63], "is_dynam": [59, 60, 61, 62], "kernel_global_sourc": [59, 60, 61, 62, 69], "param_dtyp": [59, 60], "param_shap": [59, 60], "wrapped_sourc": [59, 60, 61, 62], "tensortyp": [60, 62], "dynam": [60, 62, 83, 103, 107, 123], "kernel_lib_path": [60, 62, 69], "kernel_onli": [60, 62], "cdll": [60, 62], "buffer_device_map": [61, 62, 63], "buffer_dtype_map": [61, 62, 63], "ptr_map": [61, 62, 63], "static_shape_map": [61, 62, 63], "forward": [61, 63, 91], "set_buffer_device_map": [61, 63], "set_buffer_dtype_map": [61, 63], "set_dynamic_symbolic_map": [61, 63], "set_ptr_map": [61, 63], "set_static_shape_map": [61, 63], "source_cod": 62, "load": [62, 72, 73, 88, 97, 111, 114, 115, 119, 123], "stream": 63, "with_tl": 65, "lib_path": 65, "model_typ": 66, "annot": [66, 87, 88, 115, 120], "__global__": [66, 111, 114], "int32_t": 66, "kwarg": [67, 69], "scheduled_ir_modul": 67, "ifdef": 67, "__cplusplu": 67, "nextern": 67, "endif": 67, "nint32_t": 67, "function_inform": 67, "desc_name_map": 67, "arg_nam": 67, "function_arg": 67, "c_sourc": 67, "standalon": 68, "modifi": [68, 74, 127], "flashinf": 68, "kernel_fil": 69, "altern": [69, 118], "constructor": 69, "torchfunct": 69, "tilelang_func": 69, "keyword": 69, "tensor_supply_typ": 69, "benchmark": [69, 98, 99, 115], "entri": [70, 78, 85, 97], "serial": [70, 85, 87, 114], "thread_bind": [70, 85, 87], "unrol": [70, 85, 87, 111], "op": [70, 85], "tvmbackendallocworkspac": [70, 85, 88], "tvmbackendfreeworkspac": [70, 85, 88], "ab": [70, 85, 88], "aco": [70, 85, 88], "acosh": [70, 85, 88], "address_of": [70, 85, 88], "anylist_getitem": [70, 85, 88], "anylist_resetitem": [70, 85, 88], "anylist_setitem_call_cpack": [70, 85, 88], "anylist_setitem_call_pack": [70, 85, 88], "asin": [70, 85, 88], "asinh": [70, 85, 88], "assum": [70, 85, 88, 97, 114], "atan": [70, 85, 88], "atan2": [70, 85, 88], "atanh": [70, 85, 88], "bitwise_and": [70, 85, 88], "bitwise_not": [70, 85, 88], "bitwise_or": [70, 85, 88], "bitwise_xor": [70, 85, 88], "call_cpack": [70, 85, 88], "call_cpacked_low": [70, 85, 88], "call_extern": [70, 85, 88], "call_intrin": [70, 85, 88], "call_llvm_intrin": [70, 85, 88], "call_llvm_pure_intrin": [70, 85, 88], "call_pack": [70, 85, 88], "call_packed_low": [70, 85, 88], "call_pure_extern": [70, 85, 88], "call_tir": [70, 85, 88], "ceil": [70, 85, 88], "ceildiv": [70, 85, 88, 111, 114, 115], "clz": [70, 85, 88], "comm_reduc": [70, 85, 88, 114], "copysign": [70, 85, 88], "co": [70, 85, 88], "cosh": [70, 85, 88], "create_barri": [70, 85, 88], "div": [70, 85, 88], "end_profile_intrins": [70, 85, 88], "erf": [70, 85, 88], "exp": [70, 85, 88], "exp10": [70, 85, 88], "exp2": [70, 85, 88], "floor": [70, 85, 88], "floordiv": [70, 85, 88], "floormod": [70, 85, 88], "fmod": [70, 85, 88], "hypot": [70, 85, 88], "if_then_els": [70, 85, 88], "indexdiv": [70, 85, 88], "indexmod": [70, 85, 88], "infin": [70, 85, 88], "isfinit": [70, 85, 88], "isinf": [70, 85, 88], "isnan": [70, 85, 88], "isnullptr": [70, 85, 88], "ldexp": [70, 85, 88], "log10": [70, 85, 88], "log1p": [70, 85, 88], "log2": [70, 85, 88], "lookup_param": [70, 85, 88], "max_valu": [70, 85, 88], "min_valu": [70, 85, 88], "mma_fil": [70, 85, 88], "mma_stor": [70, 85, 88], "nearbyint": [70, 85, 88], "nextaft": [70, 85, 88], "popcount": [70, 85, 88], "pow": [70, 85, 88], "ptx_arrive_barri": [70, 85, 88], "ptx_arrive_barrier_expect_tx": [70, 85, 88], "ptx_commit_group": [70, 85, 88], "ptx_cp_async": [70, 85, 88], "ptx_cp_async_barri": [70, 85, 88], "ptx_cp_async_bulk": [70, 85, 88], "ptx_init_barrier_thread_count": [70, 85, 88], "ptx_ldmatrix": [70, 85, 88], "ptx_mma": [70, 85, 88], "ptx_mma_sp": [70, 85, 88], "ptx_wait_barri": [70, 85, 88], "ptx_wait_group": [70, 85, 88], "q_multiply_shift": [70, 85, 88], "q_multiply_shift_per_axi": [70, 85, 88], "reinterpret": [70, 85, 88, 114], "ret": [70, 85, 88], "round": [70, 85, 88], "rsqrt": [70, 85, 88], "shift_left": [70, 85, 88], "shift_right": [70, 85, 88], "sigmoid": [70, 85, 88], "sin": [70, 85, 88], "sinh": [70, 85, 88], "sqrt": [70, 85, 88], "start_profile_intrins": [70, 85, 88], "tan": [70, 85, 88], "tanh": [70, 85, 88], "trace": [70, 85, 88], "trunc": [70, 85, 88], "truncdiv": [70, 85, 88], "truncmod": [70, 85, 88], "tvm_access_ptr": [70, 85, 88], "tvm_bmma_sync": [70, 85, 88], "tvm_check_return": [70, 85, 88], "tvm_fill_frag": [70, 85, 88], "tvm_load_matrix_sync": [70, 85, 88], "tvm_mfma": [70, 85, 88], "tvm_mfma_stor": [70, 85, 88], "tvm_mma_sync": [70, 85, 88], "tvm_rdna_wmma": [70, 85, 88], "tvm_rdna_wmma_stor": [70, 85, 88], "tvm_stack_alloca": [70, 85, 88], "tvm_stack_make_arrai": [70, 85, 88], "tvm_stack_make_shap": [70, 85, 88], "tvm_storage_sync": [70, 85, 88], "tvm_store_matrix_sync": [70, 85, 88], "tvm_struct_get": [70, 85, 88], "tvm_struct_set": [70, 85, 88], "tvm_thread_allreduc": [70, 85, 88, 120], "tvm_thread_invari": [70, 85, 88], "tvm_throw_last_error": [70, 85, 88], "tvm_tupl": [70, 85, 88], "tvm_warp_activemask": [70, 85, 88], "tvm_warp_shuffl": [70, 85, 88], "tvm_warp_shuffle_down": [70, 85, 88], "tvm_warp_shuffle_up": [70, 85, 88], "type_annot": [70, 85, 88], "undef": [70, 85, 88], "vectorcombin": [70, 85, 88], "vectorhigh": [70, 85, 88], "vectorlow": [70, 85, 88], "vscale": [70, 85, 88], "get_valu": [70, 76], "has_valu": [70, 76], "pop": [70, 76, 78], "push": [70, 76, 78], "get_block_ext": [70, 78], "get_num_thread": [70, 78], "get_thread_ext": [70, 78], "num_thread": [70, 78, 123], "default_align": [70, 83], "default_offset_factor": [70, 83], "default_scop": [70, 83], "from_ptr": [70, 83], "interfac": [70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 98, 120], "layout_map": 70, "panel_s": [70, 115], "order": [70, 81], "ai": [71, 118], "conveni": [71, 78], "scope": [71, 76, 78, 83, 88, 103, 107, 111, 123], "avail": [71, 96, 108, 115, 118], "inter": 71, "commun": [71, 88, 127], "privat": [71, 86], "storag": [71, 83, 88, 103, 119, 123], "singl": [71, 77, 97, 107, 111, 114, 115, 123], "dyn": [71, 83], "barrier": [72, 88], "creation": 72, "tma": 72, "descriptor": [72, 73], "fenc": 72, "asynchron": [72, 103, 115], "request": [72, 88], "transact": [72, 88], "count": [72, 77, 88, 99], "wait": [72, 77, 88], "pariti": 72, "condit": [72, 88, 111, 127], "limit": [72, 119, 127], "signal": 72, "arriv": [72, 88], "complet": [72, 88, 126, 127], "wgmma": 72, "group": [72, 77, 81, 88, 111], "multipli": [72, 97, 115], "bufferload": [73, 88, 123], "access_typ": 73, "rw": 73, "area": 73, "buffer_region": 73, "cover": [73, 111, 127], "img": 73, "col": [73, 88], "nhw_step": 73, "c_step": 73, "dilat": 73, "pad": [73, 123], "2d": 73, "imag": [73, 102], "channel": 73, "rate": 73, "src": [73, 74, 123, 127], "dst": [73, 74, 123], "coalesced_width": [73, 80], "destin": [73, 74, 88], "coalesc": [73, 80, 111, 119], "typeerror": 73, "deduc": 73, "atom": 74, "doubl": [74, 123], "operand": [74, 88], "min_val": 74, "max_val": 74, "dot": [74, 114], "product": [74, 114, 120, 126], "zero": [75, 88, 98, 105, 109, 123], "when": [76, 88, 111, 114, 115, 119, 123, 127], "enter": 76, "stack": [76, 78, 88], "dequ": [76, 78], "maintain": 76, "lookup": 76, "look": [76, 114, 120], "remov": [76, 78], "item": [76, 78, 88], "indexerror": 76, "onto": [76, 78], "applic": 76, "tirfram": [76, 78], "let": [76, 111, 115, 119], "track": [76, 88], "extend": [76, 111, 119], "activ": [76, 88, 111], "topmost": [76, 78], "bound": [76, 88], "transpose_a": [77, 95, 96, 97, 123], "transpose_b": [77, 95, 96, 97, 123], "gemmwarppolici": [77, 94, 95, 96, 97], "squar": [77, 88, 95, 96, 97], "clear_accum": 77, "wg_wait": 77, "mode": [77, 88, 99, 115, 118], "pack": [77, 88], "don": 77, "around": [78, 114], "is_cpu": 78, "prelud": 78, "quickli": [78, 127], "griddim": 78, "x": [78, 88, 93, 111, 114, 115, 123], "y": [78, 88, 111, 114, 118, 123], "z": [78, 88, 111], "blockdim": [78, 111], "Or": 78, "threadidx": [78, 111, 114, 127], "thu": [78, 115], "blockidx": [78, 111, 114, 123, 127], "re": [78, 80, 81, 83, 86, 87, 88, 118], "launchthreadfram": 78, "exit": 78, "dim": [78, 84, 123], "three": [78, 115, 118, 119, 126, 127], "total": [78, 96, 109], "nest": 80, "forfram": [80, 81, 87], "stop": [81, 87, 123], "num_stag": [81, 115, 123, 126], "stage": [81, 115, 127], "sync": [81, 103], "max": [81, 84, 99], "consum": [81, 114, 123], "condition": 82, "obj": 82, "msg": [82, 127], "ty": 82, "tz": 82, "unsupport": [82, 127], "foundat": 83, "customiz": 83, "offset": [83, 88, 111], "pointer_var": 83, "pointer": [83, 88], "0x7f966237b5b0": 83, "typic": [83, 111], "temporari": 83, "commonli": 83, "inherit": [83, 97], "modif": 83, "storage_scop": [83, 88, 103], "is_size_var": 83, "sizevar": 83, "instead": [83, 88, 106, 120, 127], "reduce_typ": 84, "along": [84, 114, 115], "min": [84, 99], "sum": [84, 114, 119], "abssum": 84, "inf": 84, "hygien": 86, "bodi": 86, "resolv": [86, 127], "locat": [86, 88, 108], "non": [86, 88], "script": 86, "x_valu": 86, "static_captur": 86, "dynamic_captur": 86, "check_well_form": 86, "prim": [86, 123], "treat": 86, "device_typ": 88, "nbyte": 88, "dtype_code_hint": 88, "dtype_bits_hint": 88, "tempor": 88, "workspac": [88, 118], "certain": [88, 118], "opengl": 88, "bit": [88, 114], "span": 88, "buffer_load": 88, "address": [88, 127], "intersect": 88, "list_handl": 88, "anylist": 88, "reset": 88, "cond": 88, "simplif": 88, "x1": 88, "x2": 88, "arctan2": 88, "bitwis": 88, "left": 88, "right": [88, 127], "xor": 88, "extern": [88, 111, 114], "except": [88, 111], "resourc": 88, "te": 88, "overload": 88, "translat": [88, 127], "llvm": [88, 118, 119, 127], "pure": [88, 115, 119], "pod": 88, "packedfunc": 88, "receiv": 88, "tvmarrayhandl": 88, "whose": [88, 99], "period": 88, "ndarrai": 88, "global_var": 88, "globalvar": 88, "lh": 88, "rh": 88, "lead": [88, 111], "undefin": 88, "fcombin": 88, "fident": 88, "commut": 88, "const": [88, 111, 127], "over": [88, 90, 115], "There": [88, 123], "wai": [88, 114, 118, 123], "simpli": [88, 111], "mysum": 88, "lambda": [88, 114], "reduce_axi": 88, "chang": [88, 118], "sign": 88, "barrier_count": 88, "semant": [88, 111], "hand": [88, 115, 119], "known": [88, 126], "neg": 88, "gauss": 88, "exponenti": 88, "primexprwithop": 88, "remaind": 88, "equival": [88, 119], "select": [88, 108], "unlik": [88, 111], "branch": 88, "you": [88, 111, 114, 115, 118, 123, 126, 127], "guard": 88, "against": [88, 98, 115], "some": [88, 115, 118, 123, 127], "lane": [88, 127], "mai": [88, 90, 111, 114, 115, 118, 119, 127], "advantag": 88, "finit": 88, "infinit": 88, "nan": 88, "nullptr": 88, "mark": [88, 115], "param_nam": 88, "local_s": 88, "local_ptr": 88, "dst_ptr": 88, "src_ptr": 88, "src_offset": 88, "dst_stride": 88, "nearest": 88, "faster": [88, 99, 114, 119], "notabl": 88, "wherea": [88, 119], "see": [88, 115, 126, 127], "http": [88, 111, 118], "en": 88, "cpprefer": 88, "com": [88, 111, 118], "cpp": 88, "numer": 88, "next": [88, 111], "point": [88, 97, 123], "after": [88, 103, 111, 114, 115, 118, 119, 123, 127], "toward": 88, "expon": 88, "barrier_id": 88, "mbarrier": 88, "doc": 88, "nvidia": [88, 115, 118, 119, 127], "html": 88, "synchron": [88, 114, 119, 127], "instruct": [88, 97, 115, 118], "byte_count": 88, "expect_tx": 88, "increas": [88, 114], "async": [88, 123], "commit": 88, "movement": [88, 111, 119, 120], "convers": 88, "cp": [88, 118], "shared_ptr": 88, "shared_offset": 88, "global_ptr": 88, "global_offset": 88, "bulk": 88, "thread_count": 88, "num": [88, 96], "local_offset": 88, "smem_ptr": 88, "smem_offset": 88, "ldmatrix": [88, 97], "b16": 88, "memort": 88, "a_layout": 88, "b_layout": 88, "c_dtype": 88, "multiplicand_a": 88, "a_index": 88, "multiplicand_b": 88, "b_index": 88, "c_index": 88, "satur": 88, "multiplicand": [88, 123], "metadata": 88, "meta_index": 88, "sparse_selector": 88, "spars": 88, "selector": 88, "try_wait": 88, "most": [88, 118], "recent": [88, 118], "uncommit": 88, "pend": 88, "q": [88, 127], "follow": [88, 97, 111, 118, 119, 126], "shift": 88, "mathemat": 88, "more": [88, 107, 111, 115, 119, 120, 127], "here": [88, 114, 119, 127], "wikipedia": 88, "org": 88, "wiki": 88, "q_": 88, "number_format": 88, "half": 88, "5": [88, 109, 115, 126], "fraction": 88, "need": [88, 90, 115, 118, 119, 123, 127], "is_lshift_requir": 88, "is_rshift_requir": 88, "do": [88, 97, 115, 127], "val": 88, "void": [88, 111, 114], "reciproc": 88, "quick": 88, "hyperbol": 88, "trace_act": 88, "default_trace_act": 88, "come": [88, 111], "action": 88, "truncat": 88, "closer": 88, "than": [88, 107, 114, 115, 118, 119, 127], "divis": [88, 96], "behavior": [88, 111, 115, 119, 127], "ptype": 88, "rw_mask": 88, "head": 88, "mask": [88, 114], "fragment_d": 88, "index_d": 88, "fragment_a": 88, "index_a": 88, "fragment_b": 88, "index_b": 88, "fragment_c": 88, "index_c": 88, "bmma_sync": 88, "bwmma": 88, "return_unexpect": 88, "nested_cal": 88, "unexpect": 88, "fill_frag": 88, "wmma": [88, 115], "uintimm": 88, "buffer_ptr": 88, "row_major": 88, "column_major": 88, "mma_sync": 88, "dtype_str": 88, "ndim": 88, "arr_dtyp": 88, "elem_offset": 88, "dltensor": 88, "elem_offs": 88, "arr": 88, "struct": 88, "date": 88, "structtyp": 88, "freduce_arg": 88, "allreduc": 88, "insid": [88, 111, 119, 123, 127], "threadblock": 88, "invari": 88, "throw": 88, "tvmgetlasterror": 88, "attrstmt": 88, "warp_id": 88, "exchang": 88, "fetch": [88, 118], "sub": 88, "shuffl": 88, "higher": 88, "caller": 88, "src_lane_idx": 88, "dst_lane_idx": 88, "arbitrari": [88, 123], "vec1": 88, "vec2": 88, "concat": 88, "vec": 88, "high": [88, 111, 114, 115, 119, 120], "low": [88, 114, 115, 119, 120], "langref": 88, "rtype": [88, 97, 108], "condense_rep_var": [89, 90], "get_thread_s": [89, 90], "map_forward_thread": [89, 90], "repeat": [89, 90, 98, 99], "replic": [89, 90], "get_forward_var": [89, 91], "get_input_shap": [89, 91], "get_output_shap": [89, 91], "map_forward_index": [89, 91], "forward_fn": [90, 91], "forward_thread_fn": 90, "forward_index_fn": 90, "forward_var": 90, "forward_thread": 90, "forward_index": 90, "thread_repl": 90, "fine": [90, 114, 115, 119], "grain": [90, 114, 115, 119], "multi": [90, 119], "dimension": [90, 111], "condens": 90, "fold": 90, "longer": [90, 115], "separ": [90, 115], "reflect": 90, "repeat_on_thread": 90, "lower_dim_first": 90, "happen": [90, 111], "gemmbaseparam": [94, 95, 96, 97], "gemm_mma": [94, 95], "gemmprimitivemma": [94, 95, 97], "bootstrap": 94, "get_warp_s": [95, 96], "infer_block_partit": [95, 96], "fullcol": [95, 96], "fullrow": [95, 96], "compute_warp_partit": [95, 96], "from_warp_partit": [95, 96], "is_full_col": [95, 96], "is_full_row": [95, 96], "is_squar": [95, 96], "to_prime_factor": [95, 96], "gemm_rrr": [95, 97], "gemm_rsr": [95, 97], "gemm_srr": [95, 97], "gemm_ssr": [95, 97], "alreadi": [96, 118], "attempt": 96, "them": [96, 97, 111, 127], "miss": 96, "inconsist": 96, "num_warp": 96, "m_warp": 96, "n_warp": 96, "fail": [96, 127], "from_block_row_col": 96, "balanc": [96, 115], "distribut": [96, 123], "full": [96, 115], "basic": [97, 114, 119], "mma_emitt": 97, "helper": 97, "etc": [97, 98, 115, 127], "final": [97, 111, 114, 119, 127], "random": 98, "reference_program": 98, "input_tensor": 98, "compar": [98, 109, 111, 114, 115], "pre": [98, 118, 126], "comparison": [98, 109], "consist": [98, 99], "explicitli": [98, 111, 115, 119], "n_warmup": 98, "n_repeat": 98, "millisecond": [98, 99], "averag": 98, "_n_warmup": 99, "_n_repeat": 99, "grad_to_non": 99, "quantil": 99, "fast_flush": 99, "return_mod": 99, "mean": 99, "median": 99, "flush": 99, "gradient": 99, "backward": 99, "percentil": 99, "aggreg": 99, "seed": 100, "42": 100, "save_directori": 102, "tmp": 102, "colormap": 102, "rdpu": 102, "plot": 102, "save": 102, "visual": 102, "fpass": [103, 104], "rewrit": 103, "legalizeloopvector": 103, "attach": 103, "finish": [103, 114, 127], "insert": [103, 114], "partial": [103, 114, 115, 119], "enable_vector": 103, "stmt": 104, "One": [105, 109, 114], "randn": [105, 109, 115], "uniform": [105, 109], "method_nam": 106, "new_method_nam": 106, "allow_dynam": 107, "extract": 107, "exactli": 107, "rocm": [108, 118], "return_object": 108, "manual": [108, 115, 119, 126], "user": [108, 114, 115, 118, 119, 124, 126, 127], "intyp": 109, "tensor_a": 109, "tensor_b": 109, "001": 109, "equal_nan": 109, "check_devic": 109, "check_dtyp": 109, "check_layout": 109, "check_strid": 109, "assert": 109, "close": [109, 111, 114], "enough": [109, 115], "percentag": 109, "1e": [109, 115], "exce": 109, "author": [111, 115, 126, 127], "chenghua": 111, "wang": [111, 115, 127], "document": [111, 114, 115, 127], "still": [111, 114, 115], "experiment": [111, 114, 115], "incomplet": [111, 114, 115], "suggest": [111, 114, 115], "improv": [111, 114, 115, 118, 119], "highli": [111, 114, 115, 119], "encourag": [111, 114, 115], "pleas": [111, 114, 115, 118], "submit": [111, 114, 115], "pr": [111, 114, 115], "wide": 111, "deep": [111, 114], "learn": [111, 114], "often": [111, 127], "encount": [111, 127], "those": [111, 127], "begin": 111, "tutori": [111, 114, 115, 127], "sever": [111, 127], "By": [111, 114, 115, 119, 120, 127], "similar": [111, 115], "note": [111, 118, 119, 123], "delv": 111, "deepli": 111, "design": [111, 114, 115, 119, 120], "principl": 111, "broader": 111, "understand": [111, 114, 119], "consult": 111, "overview": [111, 115, 119], "elementwise_add": 111, "256": [111, 114, 126], "b_x": 111, "logic": [111, 115, 119, 127], "bx": [111, 115, 119], "familiar": 111, "might": [111, 114, 119, 127], "wonder": 111, "your": [111, 114, 115], "focu": [111, 119, 120], "sole": 111, "further": [111, 114, 119, 127], "carefulli": [111, 127], "handcraft": 111, "demonstr": [111, 114, 115, 119, 126, 127], "concret": 111, "while": [111, 115, 126], "also": [111, 115, 119, 126], "subsequ": [111, 119], "discuss": [111, 119], "straightforward": [111, 114], "practic": 111, "below": [111, 114, 115, 119, 127], "reader": 111, "block_m": [111, 115, 119, 126, 127], "start_x": 111, "start_i": 111, "local_i": 111, "local_x": 111, "abov": 111, "fix": 111, "howev": [111, 114, 115], "want": [111, 115, 118], "replac": 111, "make": [111, 114, 118, 119], "illustr": [111, 119, 127], "bfloat16_t": 111, "__restrict__": [111, 114], "incorpor": [111, 119], "These": [111, 115, 119], "prevent": 111, "advanc": [111, 115, 127], "introduc": [111, 114, 115, 127], "involv": [111, 126], "review": 111, "paragraph": 111, "clearer": 111, "2047": 111, "num_per_thread": 111, "__launch_bounds__": [111, 114], "main_kernel": [111, 114], "pragma": 111, "observ": 111, "did": 111, "fact": 111, "tail": 111, "could": 111, "simplic": 111, "breviti": 111, "style": 111, "idx": 111, "evid": 111, "ineffici": 111, "techniqu": [111, 120], "beginn": [111, 119], "addition": [111, 119], "transpar": 111, "uint4": [111, 114], "__1": 111, "v_": 111, "v__1": 111, "nv_bfloat162": 111, "aforement": 111, "sometim": [111, 127], "appear": 111, "counterintuit": [111, 119], "effect": [111, 114], "interestingli": 111, "retain": [111, 115], "origin": [111, 119], "scenario": 111, "help": [111, 119, 126, 127], "guid": [111, 120], "intend": [111, 119, 127], "aha": 111, "convent": 111, "intuit": 111, "But": 111, "what": 111, "previou": 111, "num_ele_per_thread": 111, "a_regist": 111, "b_regist": 111, "c_regist": 111, "s_start": 111, "s_end": 111, "ldg": 111, "tid": 111, "stg": 111, "individu": 111, "reson": 111, "develop": [111, 118, 119, 120], "u": 111, "now": [111, 114], "8192": 111, "2048": [111, 114], "emerg": [111, 115], "reassign": 111, "evalu": [111, 114], "complex": [111, 115], "nv_bfloat16": 111, "namespac": 111, "t_c": 111, "make_gmem_ptr": 111, "make_shap": 111, "t_a": 111, "t_b": 111, "t_c_tile": 111, "local_til": 111, "make_coord": 111, "t_a_til": 111, "t_b_tile": 111, "reg_buffer_a": 111, "make_tensor_lik": 111, "reg_buffer_b": 111, "reg_buffer_c": 111, "reg_c_vector": 111, "recast": 111, "reg_a_vector": 111, "reg_b_vector": 111, "vec_idx": 111, "reg_c_flat": 111, "showcas": [111, 119], "approach": [111, 114, 115, 119, 127], "significantli": [111, 119, 127], "nevertheless": 111, "demand": [111, 115, 119], "care": 111, "attent": [111, 115, 120], "detail": [111, 115, 119], "essenti": [111, 118, 127], "thoroughli": 111, "examin": [111, 115, 127], "draw": 111, "inspir": 111, "blog": 111, "zhuanlan": 111, "zhihu": 111, "690703999": 111, "contributor": 114, "botbw": 114, "example_gemv": 114, "py": [114, 126, 127], "plai": 114, "role": 114, "especi": 114, "model": [114, 115, 120], "perspect": 114, "_gemv_naiv": 114, "x_ptr": 114, "a_ptr": 114, "y_ptr": 114, "block_size_k": 114, "constexpr": 114, "program_id": 114, "offs_k": 114, "arang": 114, "a_val": 114, "x_val": 114, "expos": [114, 119], "natur": 114, "think": 114, "naive_gemv": 114, "bn": 114, "tn": 114, "a_shar": [114, 115], "b_share": [114, 115], "c_reg": 114, "bk": 114, "tk": 114, "astyp": 114, "And": 114, "half_t": 114, "__shared__": 114, "__align__": 114, "uchar": 114, "buf_dyn_shmem": 114, "uint64_t": 114, "_mbarrier": 114, "mbarrier_init": 114, "__syncthread": 114, "warpgroup_reg_dealloc": 114, "24": 114, "mbarrier_wait": 114, "16256": 114, "131072": 114, "fence_proxy_async": 114, "mbarrier_cp_async_arr": 114, "mbarrier_arr": 114, "els": 114, "warpgroup_reg_alloc": 114, "240": 114, "000000e": 114, "00f": 114, "bk_1": 114, "tk_1": 114, "act": 114, "1d": [114, 127], "At": [114, 119], "gain": 114, "veri": [114, 115], "littl": 114, "17": 114, "cubla": [114, 115], "008": 114, "20x": 114, "slower": 114, "exploit": 114, "finer": [114, 115], "combin": 114, "naive_splitk_gemv": 114, "a_loc": 114, "b_local": 114, "c_accum": 114, "c_share": 114, "024": 114, "par": [114, 115], "reduce_thread": 114, "splitk_gemv": 114, "tile_k": 114, "less": [114, 118], "intens": 114, "throuput": 114, "bottleneck": 114, "float2": 114, "float4": 114, "splitk_gemv_vector": 114, "max_transaction_size_in_bit": 114, "0084": 114, "outperfrom": 114, "plain": 114, "smem": 114, "atomidadd": 114, "splitk_gemv_vectorized_tvm": 114, "c_reduc": 114, "reduce_scop": 114, "uint64": 114, "uint32": 114, "0069": 114, "hyperparamet": 114, "get_best_config": 114, "get_config": [114, 126], "_config": [114, 126], "itertool": [114, 126], "kei": 114, "20": [114, 118, 126], "ref_program": [114, 126], "0067": 114, "red_buf0": 114, "00784": 114, "00773": 114, "16607": 114, "02419": 114, "00809": 114, "00675": 114, "0077344514429569244": 114, "lei": [115, 127], "knowledg": 115, "concern": 115, "conceptu": 115, "behind": 115, "necessarili": [115, 127], "drop": 115, "down": 115, "lowest": 115, "explicit": 115, "somewhat": 115, "triton": [115, 120], "almost": 115, "expert": [115, 119], "who": [115, 118, 119], "everi": 115, "assembli": 115, "figur": [115, 119], "flow": [115, 120], "walk": 115, "show": [115, 127], "flexibl": [115, 119], "divers": 115, "comfort": 115, "incur": 115, "fusion": 115, "flash": [115, 120], "easili": 115, "give": 115, "effort": 115, "raw": 115, "strike": 115, "portabl": 115, "reason": [115, 119], "concis": [115, 119, 120], "snippet": [115, 119, 127], "softwar": 115, "c_local": 115, "comment": 115, "ko": 115, "jit_kernel": 115, "ref_c": 115, "assert_clos": 115, "inspect": [115, 127], "cuda_sourc": 115, "though": 115, "slice": 115, "arrang": 115, "overlap": 115, "arithmet": 115, "under": 115, "hood": 115, "cutlass": 115, "cute": 115, "On": 115, "compos": [115, 119], "back": 115, "mix": [115, 119, 120], "keep": [115, 119], "rest": 115, "better": 115, "vendor": [115, 127], "intern": 115, "4090": 115, "a100": 115, "h100": 115, "mi300x": 115, "shown": 115, "1x": 115, "speedup": 115, "rtx": 115, "97x": 115, "0x": 115, "04x": 115, "08x": 115, "25x": 115, "vari": 115, "few": 115, "dispatch": 115, "verifi": [115, 118], "abil": [115, 119], "friendli": [115, 119], "tunabl": 115, "experi": 115, "scale": 115, "meanwhil": 115, "github": [115, 118, 120], "pycuda": 115, "prerequisit": 118, "wheel": 118, "pypi": 118, "ubuntu": 118, "04": 118, "later": [118, 123], "11": 118, "easiest": 118, "lang": [118, 120], "latest": 118, "termin": 118, "choos": [118, 119], "prebuilt": 118, "releas": 118, "page": 118, "dev0": 118, "cu120": 118, "py3": 118, "whl": 118, "repositori": 118, "git": 118, "__version__": 118, "docker": 118, "rm": 118, "ipc": 118, "nvcr": 118, "io": 118, "23": 118, "requisit": 118, "apach": 118, "debian": 118, "sudo": 118, "apt": 118, "python3": 118, "dev": 118, "setuptool": 118, "libtinfo": 118, "zlib1g": 118, "cmake": 118, "libedit": 118, "libxml2": 118, "clone": 118, "recurs": 118, "cd": 118, "patient": 118, "mkdir": 118, "dtvm_prebuild_path": 118, "pythonpath": 118, "tvm_import_python_path": 118, "3rd": 118, "parti": 118, "prefer": 118, "desir": [118, 119, 127], "3rdparti": 118, "echo": 118, "use_llvm": 118, "ON": 118, "use_cuda": 118, "use_rocm": 118, "libtilelang": 118, "libtvm": 118, "libtvm_runtim": 118, "bash": 118, "install_cuda": 118, "sh": 118, "install_amd": 118, "offici": 118, "cu121": 118, "link": 118, "stabl": 118, "thei": [118, 119, 123], "ideal": [118, 119], "bugfix": 118, "hasn": 118, "been": [118, 126], "depict": 119, "descript": 119, "resid": 119, "whichev": 119, "suit": 119, "unawar": 119, "independ": 119, "goal": 119, "worri": 119, "hierarchi": 119, "fulli": 119, "consider": 119, "predefin": 119, "leverag": [119, 127], "readi": 119, "made": 119, "dive": [119, 127], "experienc": 119, "characterist": 119, "offer": 119, "grant": 119, "tailor": 119, "expertis": 119, "expand": [119, 127], "intermedi": [119, 127], "emploi": [119, 120], "placement": 119, "particular": 119, "bandwidth": [119, 127], "overal": 119, "heart": 119, "notion": 119, "portion": 119, "manipul": 119, "unit": 119, "easier": 119, "hallmark": 119, "place": 119, "rather": 119, "leav": 119, "opaqu": 119, "face": 119, "physic": 119, "fast": 119, "chip": 119, "seem": 119, "abund": 119, "becaus": 119, "deriv": 119, "transfer": 119, "furthermor": 119, "streamlin": 120, "dequant": 120, "linearattent": 120, "underli": [120, 127], "sacrif": 120, "art": 120, "instal": 120, "pip": 120, "nightli": 120, "brief": 120, "introduct": 120, "naiv": 120, "concurr": [120, 127], "atomicadd": 120, "conclus": 120, "linear": 120, "tmac": 120, "tabl": 120, "precis": 120, "ast": 120, "tilelibrari": 120, "sequenti": 123, "whole": 123, "know": 123, "reorder": 123, "noth": 123, "serpentin": 123, "stai": 124, "app": 124, "yyttt6": 126, "identifi": 126, "readabl": 126, "example_gemm": 126, "thread_num": 126, "enable_raster": 126, "combinatori": 126, "with_rol": 126, "out_c": 126, "lightweight": 126, "rank": 126, "scheme": 126, "orient": 126, "carve_templ": 126, "roller_hint": 126, "block_row": 126, "block_col": 126, "rasterization_plan": 126, "hereaft": 127, "undergo": 127, "roughli": 127, "categori": 127, "incorrect": 127, "theoret": 127, "focus": 127, "problem": 127, "nsight": 127, "rocprof": 127, "futur": 127, "materi": 127, "again": 127, "eventu": 127, "occur": 127, "jump": 127, "caus": 127, "35": 127, "shape_q": 127, "codegen_cuda": 127, "1257": 127, "ramp": 127, "somewher": 127, "rt_mod_cuda": 127, "std": 127, "cg": 127, "registri": 127, "tilelang_callback_cuda_postproc": 127, "henc": 127, "intercept": 127, "cuda_runtim": 127, "Be": 127, "mind": 127, "debug_print_buff": 127, "debug_print_buffer_condit": 127, "debug_print_value_condit": 127, "debug_print_register_fil": 127, "prefix": 127, "debug_print_msg": 127, "someth": 127, "hello": 127, "world": 127, "diagnos": 127, "deviat": 127, "prong": 127, "suffici": 127, "occup": 127, "aspect": 127}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [3, 0, 0, "-", "cache"], [5, 0, 0, "-", "carver"], [37, 0, 0, "-", "common"], [39, 0, 0, "-", "contrib"], [44, 0, 0, "-", "engine"], [49, 0, 0, "-", "env"], [50, 0, 0, "-", "intrinsics"], [56, 0, 0, "-", "jit"], [70, 0, 0, "-", "language"], [89, 0, 0, "-", "layout"], [93, 0, 0, "-", "math"], [94, 0, 0, "-", "primitives"], [98, 0, 0, "-", "profiler"], [1, 4, 1, "", "set_log_level"], [100, 0, 0, "-", "testing"], [101, 0, 0, "-", "tools"], [103, 0, 0, "-", "transform"], [105, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[2, 1, 1, "", "AutoTuner"], [2, 1, 1, "", "AutotuneResult"], [2, 1, 1, "", "JITContext"], [2, 4, 1, "", "autotune"], [2, 4, 1, "", "check_tensor_list_compatibility"], [2, 4, 1, "", "jit"]], "tilelang.autotuner.AutoTuner": [[2, 2, 1, "", "from_kernel"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_compile_args"]], "tilelang.autotuner.AutotuneResult": [[2, 3, 1, "id0", "config"], [2, 3, 1, "id1", "func"], [2, 3, 1, "id2", "kernel"], [2, 3, 1, "id3", "latency"], [2, 3, 1, "id4", "libcode"], [2, 3, 1, "id5", "ref_latency"]], "tilelang.autotuner.JITContext": [[2, 3, 1, "id6", "atol"], [2, 3, 1, "id7", "cache_input_tensors"], [2, 3, 1, "id8", "max_mismatched_ratio"], [2, 3, 1, "id9", "out_idx"], [2, 3, 1, "id10", "profiler"], [2, 3, 1, "id11", "ref_prog"], [2, 3, 1, "id12", "rtol"], [2, 3, 1, "id13", "skip_check"], [2, 3, 1, "id14", "supply_prog"], [2, 3, 1, "id15", "target"]], "tilelang.cache": [[3, 4, 1, "", "cached"], [3, 4, 1, "", "clear_cache"], [4, 0, 0, "-", "kernel_cache"]], "tilelang.cache.kernel_cache": [[4, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[4, 2, 1, "", "cached"], [4, 2, 1, "", "clear_cache"]], "tilelang.carver": [[6, 0, 0, "-", "analysis"], [7, 0, 0, "-", "arch"], [14, 0, 0, "-", "common_schedules"], [15, 0, 0, "-", "matmul_analysis"], [16, 0, 0, "-", "roller"], [28, 0, 0, "-", "template"], [36, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[6, 1, 1, "", "BlockInfo"], [6, 1, 1, "", "IterInfo"], [6, 4, 1, "", "check_func_with_dynamic"], [6, 4, 1, "", "collect_block_iter_vars_used_in_access_region"], [6, 4, 1, "", "collect_vars_used_in_prim_expr"], [6, 4, 1, "", "detect_dominant_read"], [6, 4, 1, "", "find_var_from_func"], [6, 4, 1, "", "get_coalesced_veclen"], [6, 4, 1, "", "get_max_shared_memory_per_block"], [6, 4, 1, "", "get_max_threads_per_block"], [6, 4, 1, "", "get_reduction_blocks"], [6, 4, 1, "", "get_root_block"], [6, 4, 1, "", "is_broadcast_epilogue"], [6, 4, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[6, 3, 1, "", "block_rv"], [6, 2, 1, "", "dom"], [6, 2, 1, "", "dom_kind"], [6, 2, 1, "", "is_elementwise"], [6, 2, 1, "", "is_gemm"], [6, 2, 1, "", "is_gemv"], [6, 2, 1, "", "is_injective"], [6, 2, 1, "", "is_reduction"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[6, 5, 1, "", "dom"], [6, 3, 1, "", "kind"], [6, 3, 1, "", "loop_rv"], [6, 3, 1, "", "var"]], "tilelang.carver.arch": [[8, 0, 0, "-", "arch_base"], [7, 4, 1, "", "auto_infer_current_arch"], [9, 0, 0, "-", "cdna"], [10, 0, 0, "-", "cpu"], [11, 0, 0, "-", "cuda"], [12, 0, 0, "-", "driver"], [7, 4, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[8, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[8, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[9, 1, 1, "", "CDNA"], [9, 4, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[10, 1, 1, "", "CPU"], [10, 4, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[11, 1, 1, "", "CUDA"], [11, 1, 1, "", "TensorInstruction"], [11, 4, 1, "", "check_sm_version"], [11, 4, 1, "", "has_mma_support"], [11, 4, 1, "", "is_ada_arch"], [11, 4, 1, "", "is_ampere_arch"], [11, 4, 1, "", "is_cuda_arch"], [11, 4, 1, "", "is_hopper_arch"], [11, 4, 1, "", "is_tensorcore_supported_precision"], [11, 4, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[11, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.driver": [[13, 0, 0, "-", "cuda_driver"]], "tilelang.carver.arch.driver.cuda_driver": [[13, 1, 1, "", "cudaDeviceProp"], [13, 4, 1, "", "get_cuda_device_properties"], [13, 4, 1, "", "get_device_attribute"], [13, 4, 1, "", "get_device_name"], [13, 4, 1, "", "get_max_dynamic_shared_size_bytes"], [13, 4, 1, "", "get_shared_memory_per_block"]], "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp": [[13, 3, 1, "", "ECCEnabled"], [13, 3, 1, "", "asyncEngineCount"], [13, 3, 1, "", "canMapHostMemory"], [13, 3, 1, "", "clockRate"], [13, 3, 1, "", "computeMode"], [13, 3, 1, "", "concurrentKernels"], [13, 3, 1, "", "deviceOverlap"], [13, 3, 1, "", "globalL1CacheSupported"], [13, 3, 1, "", "integrated"], [13, 3, 1, "", "isMultiGpuBoard"], [13, 3, 1, "", "kernelExecTimeoutEnabled"], [13, 3, 1, "", "l2CacheSize"], [13, 3, 1, "", "localL1CacheSupported"], [13, 3, 1, "", "luid"], [13, 3, 1, "", "luidDeviceNodeMask"], [13, 3, 1, "", "major"], [13, 3, 1, "", "managedMemory"], [13, 3, 1, "", "maxGridSize"], [13, 3, 1, "", "maxSurface1D"], [13, 3, 1, "", "maxSurface1DLayered"], [13, 3, 1, "", "maxSurface2D"], [13, 3, 1, "", "maxSurface2DLayered"], [13, 3, 1, "", "maxSurface3D"], [13, 3, 1, "", "maxSurfaceCubemap"], [13, 3, 1, "", "maxSurfaceCubemapLayered"], [13, 3, 1, "", "maxTexture1D"], [13, 3, 1, "", "maxTexture1DLayered"], [13, 3, 1, "", "maxTexture1DLinear"], [13, 3, 1, "", "maxTexture1DMipmap"], [13, 3, 1, "", "maxTexture2D"], [13, 3, 1, "", "maxTexture2DGather"], [13, 3, 1, "", "maxTexture2DLayered"], [13, 3, 1, "", "maxTexture2DLinear"], [13, 3, 1, "", "maxTexture2DMipmap"], [13, 3, 1, "", "maxTexture3D"], [13, 3, 1, "", "maxTexture3DAlt"], [13, 3, 1, "", "maxTextureCubemap"], [13, 3, 1, "", "maxTextureCubemapLayered"], [13, 3, 1, "", "maxThreadsDim"], [13, 3, 1, "", "maxThreadsPerBlock"], [13, 3, 1, "", "maxThreadsPerMultiProcessor"], [13, 3, 1, "", "memPitch"], [13, 3, 1, "", "memoryBusWidth"], [13, 3, 1, "", "memoryClockRate"], [13, 3, 1, "", "minor"], [13, 3, 1, "", "multiGpuBoardGroupID"], [13, 3, 1, "", "multiProcessorCount"], [13, 3, 1, "", "name"], [13, 3, 1, "", "pciBusID"], [13, 3, 1, "", "pciDeviceID"], [13, 3, 1, "", "pciDomainID"], [13, 3, 1, "", "persistingL2CacheMaxSize"], [13, 3, 1, "", "regsPerBlock"], [13, 3, 1, "", "regsPerMultiprocessor"], [13, 3, 1, "", "reserved"], [13, 3, 1, "", "reserved1"], [13, 3, 1, "", "reserved2"], [13, 3, 1, "", "sharedMemPerBlock"], [13, 3, 1, "", "sharedMemPerMultiprocessor"], [13, 3, 1, "", "streamPrioritiesSupported"], [13, 3, 1, "", "surfaceAlignment"], [13, 3, 1, "", "tccDriver"], [13, 3, 1, "", "textureAlignment"], [13, 3, 1, "", "texturePitchAlignment"], [13, 3, 1, "", "totalConstMem"], [13, 3, 1, "", "totalGlobalMem"], [13, 3, 1, "", "unifiedAddressing"], [13, 3, 1, "", "uuid"], [13, 3, 1, "", "warpSize"]], "tilelang.carver.common_schedules": [[14, 4, 1, "", "get_block"], [14, 4, 1, "", "get_output_blocks"], [14, 4, 1, "", "try_inline"], [14, 4, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[15, 1, 1, "", "IterKind"], [15, 1, 1, "", "IterTrait"], [15, 4, 1, "", "auto_inline_consumer_chain"], [15, 4, 1, "", "auto_inline_consumers"], [15, 4, 1, "", "auto_inline_producers"], [15, 4, 1, "", "collect_vars_from_expr"], [15, 4, 1, "", "detect_iter_traits"], [15, 4, 1, "", "find_arg_idx_from_buffer_chain"], [15, 4, 1, "", "find_first_similar_buffer"], [15, 4, 1, "", "find_first_similar_region"], [15, 4, 1, "", "find_last_producer_from_buffer"], [15, 4, 1, "", "get_dequantize_block"], [15, 4, 1, "", "get_in_out_dtypes"], [15, 4, 1, "", "get_index_map"], [15, 4, 1, "", "get_ladder_stage3_map"], [15, 4, 1, "", "get_propagate_map"], [15, 4, 1, "", "get_tensorized_func_and_tags"], [15, 4, 1, "", "inline_transpose_block"], [15, 4, 1, "", "is_identity_block"], [15, 4, 1, "", "is_identity_or_transpose_block"], [15, 4, 1, "", "is_transpose_block"], [15, 4, 1, "", "layout_propagate_chain"], [15, 4, 1, "", "make_iter_fusion_index_map"], [15, 4, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[15, 3, 1, "", "kIter_I"], [15, 3, 1, "", "kIter_J"], [15, 3, 1, "", "kIter_K"], [15, 3, 1, "", "kIter_S"], [15, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[15, 3, 1, "", "extent"], [15, 3, 1, "", "kind"]], "tilelang.carver.roller": [[17, 0, 0, "-", "bestfit"], [18, 0, 0, "-", "hint"], [19, 0, 0, "-", "node"], [20, 0, 0, "-", "policy"], [24, 0, 0, "-", "rasterization"], [25, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[17, 1, 1, "", "BestFit"], [17, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[17, 2, 1, "", "free"], [17, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[17, 2, 1, "", "merge"], [17, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[18, 1, 1, "", "Hint"], [18, 1, 1, "", "IntrinInfo"], [18, 1, 1, "", "Stride"], [18, 1, 1, "", "TensorCoreExtraConfig"], [18, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[18, 2, 1, "", "complete_config"], [18, 2, 1, "", "from_dict"], [18, 5, 1, "", "raxis_order"], [18, 5, 1, "", "step"], [18, 2, 1, "", "tensorcore_legalization"], [18, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[18, 5, 1, "", "inter_transform_a"], [18, 5, 1, "", "inter_transform_b"], [18, 2, 1, "", "is_input_8bit"], [18, 5, 1, "", "smooth_a"], [18, 5, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[18, 5, 1, "", "ax"], [18, 2, 1, "", "compute_elements_from_shape"], [18, 2, 1, "", "compute_strides_from_shape"], [18, 2, 1, "", "is_valid"], [18, 5, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[18, 2, 1, "", "get_rstep"], [18, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[19, 1, 1, "", "BlockAnalyzer"], [19, 1, 1, "", "Edge"], [19, 1, 1, "", "Node"], [19, 1, 1, "", "OutputNode"], [19, 1, 1, "", "PlaceHolderNode"], [19, 1, 1, "", "PrimFuncNode"], [19, 4, 1, "", "find_topo_sort"], [19, 4, 1, "", "find_topo_sort_priority"], [19, 4, 1, "", "pre_order_traverse"], [19, 4, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[19, 2, 1, "", "get_block_info"], [19, 2, 1, "", "get_block_name"], [19, 2, 1, "", "get_buffers"], [19, 2, 1, "", "get_consumer_blocks"], [19, 2, 1, "", "get_input_buffers"], [19, 2, 1, "", "get_output_buffers"], [19, 2, 1, "", "get_producer_blocks"], [19, 2, 1, "", "get_reduce_axis"], [19, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[19, 3, 1, "", "dst_id"], [19, 3, 1, "", "dst_node"], [19, 3, 1, "", "src_id"], [19, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[19, 2, 1, "", "add_tag"], [19, 2, 1, "", "get_dtype"], [19, 2, 1, "", "get_ir"], [19, 2, 1, "", "get_shape"], [19, 2, 1, "", "get_tag"], [19, 5, 1, "", "inputs"], [19, 2, 1, "", "is_output"], [19, 2, 1, "", "is_placeholder"], [19, 2, 1, "", "num_outputs"], [19, 5, 1, "", "outputs"], [19, 2, 1, "", "set_dtype"], [19, 2, 1, "", "set_inputs"], [19, 2, 1, "", "set_outputs"], [19, 2, 1, "", "set_shape"], [19, 2, 1, "", "set_tag"], [19, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[19, 2, 1, "", "get_ir"], [19, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[19, 2, 1, "", "get_ir"], [19, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[19, 2, 1, "", "extent_wrapper"], [19, 2, 1, "", "footprint"], [19, 2, 1, "", "get_buffer_dtype"], [19, 2, 1, "", "get_input_buffers"], [19, 2, 1, "", "get_opt_shape"], [19, 2, 1, "", "get_reduce_inputs_dtype"], [19, 2, 1, "", "get_space_dim"], [19, 2, 1, "", "infer_tensorcore_axis"], [19, 2, 1, "", "propagate"], [19, 2, 1, "", "propagate_inputs"], [19, 2, 1, "", "propagate_inputs_on_reduction"], [19, 2, 1, "", "propagate_outputs"], [19, 2, 1, "", "propagate_reduction_inputs"], [19, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[21, 0, 0, "-", "common"], [22, 0, 0, "-", "default"], [23, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[21, 4, 1, "", "coalesced_factor"], [21, 4, 1, "", "coalesced_tensor_shape"], [21, 4, 1, "", "factorize"], [21, 4, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[22, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[22, 3, 1, "", "arch"], [22, 2, 1, "", "assign_block_size"], [22, 2, 1, "", "check_tile_shape_isvalid"], [22, 2, 1, "", "compute_node_stride_map"], [22, 2, 1, "", "compute_tile_dict"], [22, 2, 1, "", "compute_workload_per_item"], [22, 2, 1, "", "dfs_smem_tile"], [22, 2, 1, "", "emit_config"], [22, 2, 1, "", "from_output_nodes"], [22, 2, 1, "", "from_prim_func"], [22, 3, 1, "", "func"], [22, 2, 1, "", "get_base_tile"], [22, 2, 1, "", "get_block_size"], [22, 2, 1, "", "get_node_reduce_step_candidates"], [22, 2, 1, "", "infer_node_smem_usage"], [22, 3, 1, "", "nodes"], [22, 2, 1, "", "plan_rasterization"], [22, 2, 1, "", "recommend_block_size"], [22, 2, 1, "", "score_block_size"], [22, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[23, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[23, 3, 1, "", "block_reduction_depth"], [23, 2, 1, "", "check_tile_shape_isvalid"], [23, 2, 1, "", "compute_node_stride_map"], [23, 2, 1, "", "get_node_reduce_step_candidates"], [23, 2, 1, "", "infer_node_smem_usage"], [23, 3, 1, "", "pipeline_stage"], [23, 2, 1, "", "plan_rasterization"], [23, 3, 1, "", "use_async_copy"], [23, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[24, 1, 1, "", "NoRasterization"], [24, 1, 1, "", "Rasterization"], [24, 1, 1, "", "Rasterization2DColumn"], [24, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[24, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[24, 2, 1, "", "get_code"], [24, 5, 1, "", "panel_width"], [24, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[24, 2, 1, "", "get_code"], [24, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[24, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[26, 0, 0, "-", "common"], [27, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[26, 1, 1, "", "InputShapeInference"], [26, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[26, 2, 1, "", "get_input_exprs"], [26, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[27, 1, 1, "", "DependencyAnalysis"], [27, 1, 1, "", "InputShapeInference"], [27, 1, 1, "", "Statement"], [27, 1, 1, "", "TensorDepNode"], [27, 4, 1, "", "get_analyzer_by_tir"], [27, 4, 1, "", "region_exist_in_list"], [27, 4, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[27, 2, 1, "", "analyze"], [27, 2, 1, "", "find_path_from_source"], [27, 2, 1, "", "get_or_create_node"], [27, 2, 1, "", "print_dependencies"], [27, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[27, 2, 1, "", "construct_dependency_target"], [27, 2, 1, "", "get_input_exprs"], [27, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[27, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[27, 2, 1, "", "add_next"], [27, 2, 1, "", "add_prev"], [27, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[29, 0, 0, "-", "base"], [30, 0, 0, "-", "conv"], [31, 0, 0, "-", "elementwise"], [32, 0, 0, "-", "flashattention"], [33, 0, 0, "-", "gemv"], [34, 0, 0, "-", "general_reduce"], [35, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[29, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[29, 5, 1, "", "arch"], [29, 2, 1, "", "equivalent_function"], [29, 2, 1, "", "get_hardware_aware_configs"], [29, 2, 1, "", "has_arch"], [29, 2, 1, "", "initialize_function"], [29, 2, 1, "", "is_ampere_arch"], [29, 2, 1, "", "is_cdna_arch"], [29, 2, 1, "", "is_volta_arch"], [29, 5, 1, "", "output_nodes"], [29, 2, 1, "", "recommend_hints"], [29, 2, 1, "", "set_function"], [29, 2, 1, "", "set_output_nodes"], [29, 2, 1, "", "with_arch"]], "tilelang.carver.template.conv": [[30, 1, 1, "", "ConvTemplate"]], "tilelang.carver.template.conv.ConvTemplate": [[30, 3, 1, "id0", "C"], [30, 3, 1, "id1", "D"], [30, 3, 1, "id2", "F"], [30, 3, 1, "id3", "H"], [30, 3, 1, "id4", "K"], [30, 3, 1, "id5", "N"], [30, 3, 1, "id6", "P"], [30, 3, 1, "id7", "S"], [30, 3, 1, "id8", "W"], [30, 3, 1, "id9", "accum_dtype"], [30, 5, 1, "", "class_attributes"], [30, 2, 1, "", "get_hardware_aware_configs"], [30, 3, 1, "id10", "in_dtype"], [30, 2, 1, "", "initialize_function"], [30, 3, 1, "id11", "out_dtype"], [30, 2, 1, "", "params_as_dict"], [30, 3, 1, "id12", "with_bias"]], "tilelang.carver.template.elementwise": [[31, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[31, 5, 1, "", "class_attributes"], [31, 3, 1, "id0", "dtype"], [31, 2, 1, "", "get_hardware_aware_configs"], [31, 2, 1, "", "initialize_function"], [31, 2, 1, "", "params_as_dict"], [31, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[32, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[32, 3, 1, "", "accum_dtype"], [32, 3, 1, "", "batch_size"], [32, 5, 1, "", "class_attributes"], [32, 2, 1, "", "get_hardware_aware_configs"], [32, 3, 1, "", "head_dim"], [32, 3, 1, "", "in_dtype"], [32, 2, 1, "", "initialize_function"], [32, 3, 1, "", "is_causal"], [32, 3, 1, "", "num_heads"], [32, 3, 1, "", "out_dtype"], [32, 2, 1, "", "params_as_dict"], [32, 3, 1, "", "seq_kv_length"], [32, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[33, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[33, 3, 1, "", "K"], [33, 3, 1, "", "N"], [33, 3, 1, "", "accum_dtype"], [33, 5, 1, "", "class_attributes"], [33, 2, 1, "", "get_hardware_aware_configs"], [33, 3, 1, "", "in_dtype"], [33, 2, 1, "", "initialize_function"], [33, 3, 1, "", "out_dtype"], [33, 2, 1, "", "params_as_dict"], [33, 3, 1, "", "trans_B"], [33, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[34, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[34, 5, 1, "", "class_attributes"], [34, 3, 1, "", "dtype"], [34, 2, 1, "", "get_hardware_aware_configs"], [34, 2, 1, "", "initialize_function"], [34, 2, 1, "", "params_as_dict"], [34, 3, 1, "", "shape"], [34, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[35, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[35, 3, 1, "id0", "K"], [35, 3, 1, "id1", "M"], [35, 3, 1, "id2", "N"], [35, 3, 1, "id3", "accum_dtype"], [35, 5, 1, "", "class_attributes"], [35, 2, 1, "", "get_hardware_aware_configs"], [35, 3, 1, "id4", "in_dtype"], [35, 2, 1, "", "initialize_function"], [35, 3, 1, "id5", "out_dtype"], [35, 2, 1, "", "params_as_dict"], [35, 3, 1, "id6", "trans_A"], [35, 3, 1, "id7", "trans_B"], [35, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[36, 4, 1, "", "get_rasterization_code"], [36, 4, 1, "", "get_roller_hints_from_func"], [36, 4, 1, "", "get_roller_hints_from_output_nodes"], [36, 4, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[38, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[38, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[38, 3, 1, "", "InterWarpTransform"], [38, 3, 1, "", "IntraWarpTransform"], [38, 3, 1, "", "LDMatrixTransform"], [38, 3, 1, "", "NonTransform"], [38, 2, 1, "", "is_inter_warp_transform"], [38, 2, 1, "", "is_intra_warp_transform"], [38, 2, 1, "", "is_ld_matrix_transform"], [38, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[40, 0, 0, "-", "cc"], [41, 0, 0, "-", "dlpack"], [42, 0, 0, "-", "hipcc"], [43, 0, 0, "-", "nvcc"]], "tilelang.contrib.cc": [[40, 4, 1, "", "create_executable"], [40, 4, 1, "", "create_shared"], [40, 4, 1, "", "create_staticlib"], [40, 4, 1, "", "cross_compiler"], [40, 4, 1, "", "get_cc"], [40, 4, 1, "", "get_cplus_compiler"], [40, 4, 1, "", "get_global_symbol_section_map"], [40, 4, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[41, 4, 1, "", "convert_func"], [41, 4, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[42, 4, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[43, 4, 1, "", "callback_libdevice_path"], [43, 4, 1, "", "compile_cuda"], [43, 4, 1, "", "find_cuda_path"], [43, 4, 1, "", "get_cuda_version"], [43, 4, 1, "", "have_cudagraph"], [43, 4, 1, "", "have_fp16"], [43, 4, 1, "", "have_int8"], [43, 4, 1, "", "have_tensorcore"], [43, 4, 1, "", "parse_compute_version"]], "tilelang.engine": [[45, 0, 0, "-", "callback"], [46, 0, 0, "-", "lower"], [47, 0, 0, "-", "param"], [48, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[45, 4, 1, "", "register_cuda_postproc"], [45, 4, 1, "", "register_cuda_postproc_callback"], [45, 4, 1, "", "register_hip_postproc"], [45, 4, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[46, 4, 1, "", "canon_target_host"], [46, 4, 1, "", "device_codegen"], [46, 4, 1, "", "device_codegen_without_compile"], [46, 4, 1, "", "extrac_params"], [46, 4, 1, "", "get_device_call"], [46, 4, 1, "", "get_host_call"], [46, 4, 1, "", "has_device_kernel_launch"], [46, 4, 1, "", "host_codegen"], [46, 4, 1, "", "is_cpu_device_backend"], [46, 4, 1, "", "is_device_call"], [46, 4, 1, "", "is_device_call_c_device"], [46, 4, 1, "", "lower"]], "tilelang.engine.param": [[47, 1, 1, "", "CompiledArtifact"], [47, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[47, 3, 1, "", "device_mod"], [47, 3, 1, "", "host_mod"], [47, 3, 1, "", "kernel_source"], [47, 3, 1, "", "params"], [47, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[47, 3, 1, "", "dtype"], [47, 2, 1, "", "from_buffer"], [47, 2, 1, "", "from_var"], [47, 2, 1, "", "is_boolean"], [47, 2, 1, "", "is_float8"], [47, 2, 1, "", "is_scalar"], [47, 2, 1, "", "is_unsigned"], [47, 3, 1, "", "shape"]], "tilelang.engine.phase": [[48, 4, 1, "", "LowerAndLegalize"], [48, 4, 1, "", "OptimizeForTarget"]], "tilelang.env": [[49, 4, 1, "", "disable_cache"], [49, 4, 1, "", "enable_cache"], [49, 4, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[51, 0, 0, "-", "mfma_layout"], [52, 0, 0, "-", "mfma_macro_generator"], [53, 0, 0, "-", "mma_layout"], [54, 0, 0, "-", "mma_macro_generator"], [55, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[51, 4, 1, "", "make_mfma_swizzle_layout"], [51, 4, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [51, 4, 1, "", "shared_16x16_to_local_64x4_layout_A"], [51, 4, 1, "", "shared_16x16_to_local_64x4_layout_B"], [51, 4, 1, "", "shared_16x16_to_local_64x4_layout_C"], [51, 4, 1, "", "shared_16x32_to_local_64x8_layout_A"], [51, 4, 1, "", "shared_16x32_to_local_64x8_layout_B"], [51, 4, 1, "", "shared_16x4_to_local_64x1_layout_A"], [51, 4, 1, "", "shared_4x16_to_local_64x1_layout_B"], [51, 4, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [51, 4, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [51, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [51, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [51, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [51, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [51, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [51, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[52, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[52, 3, 1, "", "M_DIM"], [52, 3, 1, "", "N_DIM"], [52, 3, 1, "", "WARP_SIZE"], [52, 3, 1, "", "dtype_abbrv"], [52, 2, 1, "", "extract_thread_binding"], [52, 2, 1, "", "get_ldmatrix_index_map"], [52, 3, 1, "", "is_m_first"], [52, 3, 1, "", "k_pack"], [52, 2, 1, "", "ldmatrix_a"], [52, 2, 1, "", "ldmatrix_b"], [52, 2, 1, "", "mfma"], [52, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[53, 4, 1, "", "get_swizzle_layout"], [53, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [53, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [53, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [53, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [53, 4, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [53, 4, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [53, 4, 1, "", "make_mma_swizzle_layout"], [53, 4, 1, "", "mma_32x8_to_shared_16x16_layout"], [53, 4, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [53, 4, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [53, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [53, 4, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [53, 4, 1, "", "shared_32x16_to_mma_32x16_layout"], [53, 4, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[54, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [54, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [54, 1, 1, "", "TensorCoreIntrinEmitter"], [54, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[54, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[54, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[54, 3, 1, "", "M_DIM"], [54, 3, 1, "", "N_DIM"], [54, 3, 1, "", "WARP_SIZE"], [54, 3, 1, "", "dtype_abbrv"], [54, 2, 1, "", "extract_thread_binding"], [54, 2, 1, "", "get_store_index_map"], [54, 3, 1, "", "is_m_first"], [54, 2, 1, "", "ldmatrix_a"], [54, 2, 1, "", "ldmatrix_b"], [54, 2, 1, "", "make_mma_load_layout"], [54, 2, 1, "", "make_mma_store_layout"], [54, 2, 1, "", "mma"], [54, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[54, 2, 1, "", "ldmatrix_a"], [54, 2, 1, "", "ldmatrix_b"], [54, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[55, 4, 1, "", "get_ldmatrix_offset"], [55, 4, 1, "", "get_mma_micro_size"], [55, 4, 1, "", "index_to_coordinates"], [55, 4, 1, "", "mfma_store_index_map"], [55, 4, 1, "", "mma_store_index_map"], [55, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [55, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [55, 4, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[57, 0, 0, "-", "adapter"], [56, 4, 1, "", "compile"], [68, 0, 0, "-", "env"], [56, 4, 1, "", "jit"], [69, 0, 0, "-", "kernel"]], "tilelang.jit.adapter": [[58, 0, 0, "-", "base"], [59, 0, 0, "-", "ctypes"], [61, 0, 0, "-", "cython"], [64, 0, 0, "-", "dlpack"], [65, 0, 0, "-", "libgen"], [66, 0, 0, "-", "utils"], [67, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[58, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[58, 3, 1, "", "func"], [58, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[60, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[60, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[60, 3, 1, "", "dynamic_symbolic_map"], [60, 2, 1, "", "from_database"], [60, 2, 1, "", "get_kernel_source"], [60, 3, 1, "", "ir_module"], [60, 5, 1, "", "is_dynamic"], [60, 3, 1, "", "kernel_global_source"], [60, 3, 1, "", "lib"], [60, 5, 1, "", "lib_code"], [60, 5, 1, "", "libpath"], [60, 3, 1, "", "param_dtypes"], [60, 3, 1, "", "param_shapes"], [60, 3, 1, "", "pass_configs"], [60, 5, 1, "", "prim_func"], [60, 5, 1, "", "srcpath"], [60, 3, 1, "", "target"], [60, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[62, 0, 0, "-", "adapter"], [63, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[62, 1, 1, "", "CythonKernelAdapter"], [62, 4, 1, "", "get_cache_dir"], [62, 4, 1, "", "get_cached_lib"], [62, 4, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[62, 3, 1, "", "buffer_device_map"], [62, 3, 1, "", "buffer_dtype_map"], [62, 3, 1, "", "dynamic_symbolic_map"], [62, 2, 1, "", "from_database"], [62, 2, 1, "", "get_kernel_source"], [62, 3, 1, "", "ir_module"], [62, 5, 1, "", "is_dynamic"], [62, 3, 1, "", "kernel_global_source"], [62, 3, 1, "", "lib"], [62, 5, 1, "", "lib_code"], [62, 5, 1, "", "libpath"], [62, 3, 1, "", "pass_configs"], [62, 5, 1, "", "prim_func"], [62, 3, 1, "", "ptr_map"], [62, 5, 1, "", "srcpath"], [62, 3, 1, "", "static_shape_map"], [62, 3, 1, "", "target"], [62, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[63, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[63, 2, 1, "", "forward"], [63, 2, 1, "", "set_buffer_device_map"], [63, 2, 1, "", "set_buffer_dtype_map"], [63, 2, 1, "", "set_dynamic_symbolic_map"], [63, 2, 1, "", "set_ptr_map"], [63, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[64, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[65, 1, 1, "", "LibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[65, 2, 1, "", "compile_lib"], [65, 2, 1, "", "get_lib_path"], [65, 2, 1, "", "get_source_path"], [65, 3, 1, "", "lib_code"], [65, 3, 1, "", "libpath"], [65, 2, 1, "", "load_lib"], [65, 2, 1, "", "remove_lib"], [65, 2, 1, "", "set_lib_path"], [65, 2, 1, "", "set_src_path"], [65, 3, 1, "", "srcpath"], [65, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.utils": [[66, 4, 1, "", "get_annotated_mod"], [66, 4, 1, "", "is_cpu_target"], [66, 4, 1, "", "is_cuda_target"], [66, 4, 1, "", "is_hip_target"], [66, 4, 1, "", "match_declare_kernel"], [66, 4, 1, "", "match_declare_kernel_cpu"], [66, 4, 1, "", "match_global_kernel"]], "tilelang.jit.adapter.wrapper": [[67, 1, 1, "", "BaseWrapper"], [67, 1, 1, "", "TLCPUSourceWrapper"], [67, 1, 1, "", "TLCUDASourceWrapper"], [67, 1, 1, "", "TLHIPSourceWrapper"], [67, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[67, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[67, 3, 1, "", "CALL_PREFIX"], [67, 3, 1, "", "INIT_FUNC"], [67, 3, 1, "", "backend"], [67, 2, 1, "", "create_call_func"], [67, 3, 1, "", "device_mod"], [67, 2, 1, "", "get_cpu_init_func"], [67, 2, 1, "", "get_dynamic_symbolic_set"], [67, 3, 1, "", "host_mod"], [67, 2, 1, "", "parse_source_information"], [67, 3, 1, "", "pass_configs"], [67, 5, 1, "", "prim_func"], [67, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[67, 3, 1, "", "backend"], [67, 2, 1, "", "create_dispatch_func"], [67, 3, 1, "", "device_mod"], [67, 2, 1, "", "generate_tma_descriptor_args"], [67, 2, 1, "", "get_cuda_init_func"], [67, 2, 1, "", "get_dynamic_symbolic_set"], [67, 3, 1, "", "host_mod"], [67, 2, 1, "", "is_tma_descriptor_arg"], [67, 2, 1, "", "parse_source_information"], [67, 3, 1, "", "pass_configs"], [67, 5, 1, "", "prim_func"], [67, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[67, 2, 1, "", "get_hip_init_func"], [67, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[67, 2, 1, "", "assign_device_module"], [67, 2, 1, "", "assign_host_module"], [67, 2, 1, "", "assign_optimized_module"], [67, 2, 1, "", "assign_pass_configs"], [67, 3, 1, "", "device_mod"], [67, 3, 1, "", "host_mod"], [67, 3, 1, "", "lib"], [67, 3, 1, "", "pass_configs"], [67, 3, 1, "", "target"], [67, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[69, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[69, 3, 1, "id0", "adapter"], [69, 3, 1, "id1", "artifact"], [69, 2, 1, "", "export_library"], [69, 2, 1, "", "from_database"], [69, 2, 1, "", "from_tilelang_function"], [69, 2, 1, "", "get_host_source"], [69, 2, 1, "", "get_kernel_source"], [69, 2, 1, "", "get_profiler"], [69, 5, 1, "", "host_source"], [69, 5, 1, "", "kernel_source"], [69, 5, 1, "", "out_idx"], [69, 5, 1, "", "params"], [69, 2, 1, "", "run_once"], [69, 3, 1, "id2", "torch_function"]], "tilelang.language": [[71, 0, 0, "-", "allocate"], [70, 4, 1, "", "annotate_layout"], [72, 0, 0, "-", "builtin"], [73, 0, 0, "-", "copy"], [74, 0, 0, "-", "customize"], [75, 0, 0, "-", "fill"], [76, 0, 0, "-", "frame"], [77, 0, 0, "-", "gemm"], [70, 4, 1, "", "import_source"], [78, 0, 0, "-", "kernel"], [79, 0, 0, "-", "memscope"], [80, 0, 0, "-", "parallel"], [81, 0, 0, "-", "pipeline"], [82, 0, 0, "-", "print"], [83, 0, 0, "-", "proxy"], [84, 0, 0, "-", "reduce"], [70, 4, 1, "", "symbolic"], [85, 0, 0, "-", "tir"], [70, 4, 1, "", "use_swizzle"]], "tilelang.language.allocate": [[71, 4, 1, "", "alloc_fragment"], [71, 4, 1, "", "alloc_local"], [71, 4, 1, "", "alloc_shared"], [71, 4, 1, "", "alloc_var"]], "tilelang.language.builtin": [[72, 4, 1, "", "CreateListofMBarrierOp"], [72, 4, 1, "", "CreateTMADescriptorOp"], [72, 4, 1, "", "FenceProxyAsyncOp"], [72, 4, 1, "", "GetMBarrierOp"], [72, 4, 1, "", "MBarrierExpectTX"], [72, 4, 1, "", "MBarrierWaitParity"], [72, 4, 1, "", "NoSetMaxNReg"], [72, 4, 1, "", "SetMaxNReg"], [72, 4, 1, "", "TMALoadOp"], [72, 4, 1, "", "TMAStoreArrive"], [72, 4, 1, "", "TMAStoreWait"], [72, 4, 1, "", "WaitWgmma"]], "tilelang.language.copy": [[73, 4, 1, "", "buffer_load_to_tile_region"], [73, 4, 1, "", "buffer_region_to_tile_region"], [73, 4, 1, "", "buffer_to_tile_region"], [73, 4, 1, "", "c2d_im2col"], [73, 4, 1, "", "copy"], [73, 4, 1, "", "region"]], "tilelang.language.customize": [[74, 4, 1, "", "atomic_add"], [74, 4, 1, "", "atomic_addx2"], [74, 4, 1, "", "clamp"], [74, 4, 1, "", "dp4a"], [74, 4, 1, "", "reshape"], [74, 4, 1, "", "view"]], "tilelang.language.fill": [[75, 4, 1, "", "clear"], [75, 4, 1, "", "fill"]], "tilelang.language.frame": [[76, 1, 1, "", "FrameStack"], [76, 1, 1, "", "LetFrame"], [76, 4, 1, "", "get_let_value"], [76, 4, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[76, 2, 1, "", "get_value"], [76, 2, 1, "", "has_value"], [76, 2, 1, "", "pop"], [76, 2, 1, "", "push"], [76, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[76, 2, 1, "", "Current"], [76, 2, 1, "", "get_value"], [76, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[77, 4, 1, "", "gemm"]], "tilelang.language.kernel": [[78, 1, 1, "", "FrameStack"], [78, 4, 1, "", "Kernel"], [78, 1, 1, "", "KernelLaunchFrame"], [78, 4, 1, "", "get_block_binding"], [78, 4, 1, "", "get_block_bindings"], [78, 4, 1, "", "get_thread_binding"], [78, 4, 1, "", "get_thread_bindings"]], "tilelang.language.kernel.FrameStack": [[78, 2, 1, "", "pop"], [78, 2, 1, "", "push"], [78, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[78, 2, 1, "", "Current"], [78, 5, 1, "", "blocks"], [78, 2, 1, "", "get_block_binding"], [78, 2, 1, "", "get_block_bindings"], [78, 2, 1, "", "get_block_extent"], [78, 2, 1, "", "get_num_threads"], [78, 2, 1, "", "get_thread_binding"], [78, 2, 1, "", "get_thread_bindings"], [78, 2, 1, "", "get_thread_extent"], [78, 5, 1, "", "num_threads"], [78, 5, 1, "", "threads"]], "tilelang.language.parallel": [[80, 4, 1, "", "Parallel"]], "tilelang.language.pipeline": [[81, 4, 1, "", "Pipelined"]], "tilelang.language.print": [[82, 4, 1, "", "print"]], "tilelang.language.proxy": [[83, 1, 1, "", "BaseTensorProxy"], [83, 1, 1, "", "BufferProxy"], [83, 1, 1, "", "FragmentBufferProxy"], [83, 1, 1, "", "LocalBufferProxy"], [83, 1, 1, "", "SharedBufferProxy"], [83, 1, 1, "", "TensorProxy"], [83, 4, 1, "", "make_tensor"], [83, 4, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[83, 3, 1, "", "default_align"], [83, 3, 1, "", "default_offset_factor"], [83, 3, 1, "", "default_scope"], [83, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[83, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[83, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[83, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[83, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[84, 4, 1, "", "reduce"], [84, 4, 1, "", "reduce_abssum"], [84, 4, 1, "", "reduce_max"], [84, 4, 1, "", "reduce_min"], [84, 4, 1, "", "reduce_sum"]], "tilelang.language.tir": [[86, 0, 0, "-", "entry"], [87, 0, 0, "-", "ir"], [88, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[86, 4, 1, "", "macro"], [86, 4, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[87, 4, 1, "", "grid"], [87, 4, 1, "", "parallel"], [87, 4, 1, "", "serial"], [87, 4, 1, "", "thread_binding"], [87, 4, 1, "", "unroll"], [87, 4, 1, "", "vectorized"]], "tilelang.language.tir.op": [[88, 4, 1, "", "TVMBackendAllocWorkspace"], [88, 4, 1, "", "TVMBackendFreeWorkspace"], [88, 4, 1, "", "abs"], [88, 4, 1, "", "acos"], [88, 4, 1, "", "acosh"], [88, 4, 1, "", "address_of"], [88, 4, 1, "", "all"], [88, 4, 1, "", "any"], [88, 4, 1, "", "anylist_getitem"], [88, 4, 1, "", "anylist_resetitem"], [88, 4, 1, "", "anylist_setitem_call_cpacked"], [88, 4, 1, "", "anylist_setitem_call_packed"], [88, 4, 1, "", "asin"], [88, 4, 1, "", "asinh"], [88, 4, 1, "", "assume"], [88, 4, 1, "", "atan"], [88, 4, 1, "", "atan2"], [88, 4, 1, "", "atanh"], [88, 4, 1, "", "bitwise_and"], [88, 4, 1, "", "bitwise_not"], [88, 4, 1, "", "bitwise_or"], [88, 4, 1, "", "bitwise_xor"], [88, 4, 1, "", "call_cpacked"], [88, 4, 1, "", "call_cpacked_lowered"], [88, 4, 1, "", "call_extern"], [88, 4, 1, "", "call_intrin"], [88, 4, 1, "", "call_llvm_intrin"], [88, 4, 1, "", "call_llvm_pure_intrin"], [88, 4, 1, "", "call_packed"], [88, 4, 1, "", "call_packed_lowered"], [88, 4, 1, "", "call_pure_extern"], [88, 4, 1, "", "call_tir"], [88, 4, 1, "", "ceil"], [88, 4, 1, "", "ceildiv"], [88, 4, 1, "", "clz"], [88, 4, 1, "", "comm_reducer"], [88, 4, 1, "", "copysign"], [88, 4, 1, "", "cos"], [88, 4, 1, "", "cosh"], [88, 4, 1, "", "create_barriers"], [88, 4, 1, "", "div"], [88, 4, 1, "", "end_profile_intrinsic"], [88, 4, 1, "", "erf"], [88, 4, 1, "", "exp"], [88, 4, 1, "", "exp10"], [88, 4, 1, "", "exp2"], [88, 4, 1, "", "floor"], [88, 4, 1, "", "floordiv"], [88, 4, 1, "", "floormod"], [88, 4, 1, "", "fmod"], [88, 4, 1, "", "hypot"], [88, 4, 1, "", "if_then_else"], [88, 4, 1, "", "indexdiv"], [88, 4, 1, "", "indexmod"], [88, 4, 1, "", "infinity"], [88, 4, 1, "", "isfinite"], [88, 4, 1, "", "isinf"], [88, 4, 1, "", "isnan"], [88, 4, 1, "", "isnullptr"], [88, 4, 1, "", "ldexp"], [88, 4, 1, "", "likely"], [88, 4, 1, "", "log"], [88, 4, 1, "", "log10"], [88, 4, 1, "", "log1p"], [88, 4, 1, "", "log2"], [88, 4, 1, "", "lookup_param"], [88, 4, 1, "", "max_value"], [88, 4, 1, "", "min_value"], [88, 4, 1, "", "mma_fill"], [88, 4, 1, "", "mma_store"], [88, 4, 1, "", "nearbyint"], [88, 4, 1, "", "nextafter"], [88, 4, 1, "", "popcount"], [88, 4, 1, "", "pow"], [88, 4, 1, "", "power"], [88, 4, 1, "", "ptx_arrive_barrier"], [88, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [88, 4, 1, "", "ptx_commit_group"], [88, 4, 1, "", "ptx_cp_async"], [88, 4, 1, "", "ptx_cp_async_barrier"], [88, 4, 1, "", "ptx_cp_async_bulk"], [88, 4, 1, "", "ptx_init_barrier_thread_count"], [88, 4, 1, "", "ptx_ldmatrix"], [88, 4, 1, "", "ptx_mma"], [88, 4, 1, "", "ptx_mma_sp"], [88, 4, 1, "", "ptx_wait_barrier"], [88, 4, 1, "", "ptx_wait_group"], [88, 4, 1, "", "q_multiply_shift"], [88, 4, 1, "", "q_multiply_shift_per_axis"], [88, 4, 1, "", "reinterpret"], [88, 4, 1, "", "ret"], [88, 4, 1, "", "round"], [88, 4, 1, "", "rsqrt"], [88, 4, 1, "", "shift_left"], [88, 4, 1, "", "shift_right"], [88, 4, 1, "", "sigmoid"], [88, 4, 1, "", "sin"], [88, 4, 1, "", "sinh"], [88, 4, 1, "", "sqrt"], [88, 4, 1, "", "start_profile_intrinsic"], [88, 4, 1, "", "tan"], [88, 4, 1, "", "tanh"], [88, 4, 1, "", "trace"], [88, 4, 1, "", "trunc"], [88, 4, 1, "", "truncdiv"], [88, 4, 1, "", "truncmod"], [88, 4, 1, "", "tvm_access_ptr"], [88, 4, 1, "", "tvm_bmma_sync"], [88, 4, 1, "", "tvm_check_return"], [88, 4, 1, "", "tvm_fill_fragment"], [88, 4, 1, "", "tvm_load_matrix_sync"], [88, 4, 1, "", "tvm_mfma"], [88, 4, 1, "", "tvm_mfma_store"], [88, 4, 1, "", "tvm_mma_sync"], [88, 4, 1, "", "tvm_rdna_wmma"], [88, 4, 1, "", "tvm_rdna_wmma_store"], [88, 4, 1, "", "tvm_stack_alloca"], [88, 4, 1, "", "tvm_stack_make_array"], [88, 4, 1, "", "tvm_stack_make_shape"], [88, 4, 1, "", "tvm_storage_sync"], [88, 4, 1, "", "tvm_store_matrix_sync"], [88, 4, 1, "", "tvm_struct_get"], [88, 4, 1, "", "tvm_struct_set"], [88, 4, 1, "", "tvm_thread_allreduce"], [88, 4, 1, "", "tvm_thread_invariant"], [88, 4, 1, "", "tvm_throw_last_error"], [88, 4, 1, "", "tvm_tuple"], [88, 4, 1, "", "tvm_warp_activemask"], [88, 4, 1, "", "tvm_warp_shuffle"], [88, 4, 1, "", "tvm_warp_shuffle_down"], [88, 4, 1, "", "tvm_warp_shuffle_up"], [88, 4, 1, "", "type_annotation"], [88, 4, 1, "", "undef"], [88, 4, 1, "", "vectorcombine"], [88, 4, 1, "", "vectorhigh"], [88, 4, 1, "", "vectorlow"], [88, 4, 1, "", "vscale"]], "tilelang.layout": [[90, 0, 0, "-", "fragment"], [91, 0, 0, "-", "layout"], [92, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[90, 1, 1, "", "Fragment"], [90, 4, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[90, 2, 1, "", "condense_rep_var"], [90, 2, 1, "", "get_thread_size"], [90, 2, 1, "", "map_forward_thread"], [90, 2, 1, "", "repeat"], [90, 2, 1, "", "replicate"], [90, 5, 1, "", "thread"]], "tilelang.layout.layout": [[91, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[91, 2, 1, "", "get_forward_vars"], [91, 2, 1, "", "get_input_shape"], [91, 2, 1, "", "get_output_shape"], [91, 5, 1, "", "index"], [91, 2, 1, "", "inverse"], [91, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[92, 4, 1, "", "make_swizzled_layout"]], "tilelang.math": [[93, 4, 1, "", "cdiv"], [93, 4, 1, "", "next_power_of_2"]], "tilelang.primitives": [[95, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[96, 0, 0, "-", "base"], [95, 4, 1, "", "gemm"], [97, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[96, 1, 1, "", "GemmBaseParams"], [96, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[96, 3, 1, "", "A"], [96, 3, 1, "", "B"], [96, 3, 1, "", "C"], [96, 3, 1, "", "block_col_warps"], [96, 3, 1, "", "block_row_warps"], [96, 3, 1, "", "chunk"], [96, 5, 1, "", "class_attributes"], [96, 2, 1, "", "get_warp_size"], [96, 2, 1, "", "infer_block_partition"], [96, 3, 1, "", "k_pack"], [96, 2, 1, "", "params_as_dict"], [96, 3, 1, "", "policy"], [96, 3, 1, "", "transpose_A"], [96, 3, 1, "", "transpose_B"], [96, 3, 1, "", "warp_col_tiles"], [96, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[96, 3, 1, "", "FullCol"], [96, 3, 1, "", "FullRow"], [96, 3, 1, "", "Square"], [96, 2, 1, "", "compute_warp_partition"], [96, 2, 1, "", "from_warp_partition"], [96, 2, 1, "", "is_full_col"], [96, 2, 1, "", "is_full_row"], [96, 2, 1, "", "is_square"], [96, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[97, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[97, 5, 1, "", "accum_dtype"], [97, 2, 1, "", "gemm_rrr"], [97, 2, 1, "", "gemm_rsr"], [97, 2, 1, "", "gemm_srr"], [97, 2, 1, "", "gemm_ssr"], [97, 5, 1, "", "in_dtype"], [97, 2, 1, "", "invoke"]], "tilelang.profiler": [[98, 1, 1, "", "Profiler"], [99, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[98, 3, 1, "id0", "adapter"], [98, 2, 1, "", "assert_allclose"], [98, 2, 1, "", "assert_consistent"], [98, 2, 1, "", "determine_profiler"], [98, 2, 1, "", "do_bench"], [98, 5, 1, "", "func"], [98, 3, 1, "id1", "params"], [98, 3, 1, "id2", "result_idx"], [98, 2, 1, "", "run_once"], [98, 3, 1, "id3", "supply_type"], [98, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[99, 4, 1, "", "do_bench"]], "tilelang.testing": [[100, 4, 1, "", "main"], [100, 4, 1, "", "set_random_seed"]], "tilelang.tools": [[102, 0, 0, "-", "plot_layout"]], "tilelang.tools.plot_layout": [[102, 4, 1, "", "plot_layout"]], "tilelang.transform": [[103, 4, 1, "", "AnnotateDeviceRegions"], [103, 4, 1, "", "ClusterPlanning"], [103, 4, 1, "", "FrontendLegalize"], [103, 4, 1, "", "IfStmtBinding"], [103, 4, 1, "", "InjectFenceProxy"], [103, 4, 1, "", "InjectPTXAsyncCopy"], [103, 4, 1, "", "InjectSoftwarePipeline"], [103, 4, 1, "", "LayoutInference"], [103, 4, 1, "", "LegalizeSafeMemoryAccess"], [103, 4, 1, "", "LegalizeVectorizedLoop"], [103, 4, 1, "", "LoopVectorizeDynamic"], [103, 4, 1, "", "LowerDeviceStorageAccessInfo"], [103, 4, 1, "", "LowerHopperIntrin"], [103, 4, 1, "", "LowerTileOp"], [103, 4, 1, "", "MakePackedAPI"], [103, 4, 1, "", "MergeIfStmt"], [103, 4, 1, "", "MultiVersionBuffer"], [103, 4, 1, "", "PipelinePlanning"], [103, 4, 1, "", "RewriteWgmmaSync"], [103, 4, 1, "", "ThreadPartialSync"], [103, 4, 1, "", "ThreadSync"], [103, 4, 1, "", "VectorizeLoop"], [103, 4, 1, "", "WarpSpecialized"], [103, 4, 1, "", "WarpSpecializedPipeline"], [104, 0, 0, "-", "simplify"]], "tilelang.transform.simplify": [[104, 4, 1, "", "Simplify"], [104, 4, 1, "", "apply_simplify"], [104, 4, 1, "", "simplify_prim_func"]], "tilelang.utils": [[106, 0, 0, "-", "deprecated"], [107, 0, 0, "-", "language"], [108, 0, 0, "-", "target"], [109, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[106, 4, 1, "", "deprecated"]], "tilelang.utils.language": [[107, 4, 1, "", "array_reduce"], [107, 4, 1, "", "is_fragment"], [107, 4, 1, "", "is_global"], [107, 4, 1, "", "is_local"], [107, 4, 1, "", "is_shared"], [107, 4, 1, "", "is_shared_dynamic"], [107, 4, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[108, 4, 1, "", "check_cuda_availability"], [108, 4, 1, "", "check_hip_availability"], [108, 4, 1, "", "determine_target"]], "tilelang.utils.tensor": [[109, 1, 1, "", "TensorSupplyType"], [109, 4, 1, "", "adapt_torch2tvm"], [109, 4, 1, "", "get_tensor_supply"], [109, 4, 1, "", "map_torch_type"], [109, 4, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[109, 3, 1, "", "Auto"], [109, 3, 1, "", "Integer"], [109, 3, 1, "", "Normal"], [109, 3, 1, "", "One"], [109, 3, 1, "", "Randn"], [109, 3, 1, "", "Uniform"], [109, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 120], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114], "packag": [1, 2, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 44, 50, 56, 57, 59, 61, 70, 85, 89, 93, 94, 95, 98, 100, 101, 103, 105], "subpackag": [1, 5, 7, 16, 56, 57, 70, 94], "submodul": [1, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 44, 50, 56, 57, 59, 61, 70, 85, 89, 95, 98, 101, 103, 105, 118], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "content": [1, 2, 3, 5, 7, 12, 16, 20, 25, 28, 37, 39, 44, 50, 56, 57, 59, 61, 70, 85, 89, 93, 94, 95, 98, 100, 101, 103, 105], "autotun": [2, 114], "cach": [3, 4], "kernel_cach": 4, "carver": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 126], "analysi": 6, "arch": [7, 8, 9, 10, 11, 12, 13], "arch_bas": 8, "cdna": 9, "cpu": 10, "cuda": [11, 111], "driver": [12, 13], "cuda_driv": 13, "common_schedul": 14, "matmul_analysi": 15, "roller": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "bestfit": 17, "hint": 18, "node": 19, "polici": [20, 21, 22, 23], "common": [21, 26, 37, 38], "default": 22, "tensorcor": 23, "raster": 24, "shape_infer": [25, 26, 27], "tir": [27, 85, 86, 87, 88], "templat": [28, 29, 30, 31, 32, 33, 34, 35], "base": [29, 58, 96, 117, 119], "conv": 30, "elementwis": [31, 111], "flashattent": 32, "gemv": [33, 114], "general_reduc": 34, "matmul": 35, "util": [36, 55, 66, 105, 106, 107, 108, 109], "transform_kind": 38, "contrib": [39, 40, 41, 42, 43], "cc": 40, "dlpack": [41, 64], "hipcc": 42, "nvcc": 43, "engin": [44, 45, 46, 47, 48], "callback": [45, 127], "lower": 46, "param": 47, "phase": 48, "env": [49, 68], "intrins": [50, 51, 52, 53, 54, 55], "mfma_layout": 51, "mfma_macro_gener": 52, "mma_layout": 53, "mma_macro_gener": 54, "jit": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "adapt": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "ctype": [59, 60], "cython": [61, 62, 63], "cython_wrapp": 63, "libgen": 65, "wrapper": 67, "kernel": [69, 78, 123, 130, 131], "languag": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 107, 119, 120, 121, 122, 123, 127], "alloc": [71, 119], "builtin": 72, "copi": [73, 123], "custom": [74, 114], "fill": [75, 123], "frame": 76, "gemm": [77, 95, 96, 97, 123], "memscop": 79, "parallel": [80, 114, 123], "pipelin": [81, 123, 129], "print": [82, 127], "proxi": 83, "reduc": 84, "entri": 86, "ir": 87, "op": 88, "layout": [89, 90, 91, 92, 125], "fragment": 90, "swizzl": 92, "math": 93, "primit": [94, 95, 96, 97, 122, 130], "gemm_mma": 97, "profil": [98, 99], "bench": 99, "test": 100, "tool": [101, 102], "plot_layout": 102, "transform": [103, 104], "simplifi": 104, "deprec": 106, "target": 108, "tensor": 109, "convolut": 110, "oper": [111, 120], "add": 111, "how": 111, "compil": [111, 119, 126, 128], "dynam": 111, "shape": 111, "address": 111, "boundari": 111, "relat": 111, "issu": [111, 127], "comparison": [111, 115], "cute": 111, "conclus": [111, 114, 115, 127], "flash": [112, 113], "attent": [112, 113], "linear": 113, "gener": [114, 115, 116, 126, 127], "matrix": [114, 115, 116, 126, 127], "vector": 114, "multipl": [114, 115, 116, 126, 127], "triton": 114, "implement": [114, 126], "naiv": 114, "more": 114, "concurr": 114, "k": 114, "dimens": 114, "read": 114, "tvm_thread_allreduc": 114, "instead": 114, "atomicadd": 114, "benchmark": [114, 126], "tabl": [114, 117], "hopper": 114, "gpu": [114, 115], "tile": [115, 119, 120, 121, 122, 123, 127, 131], "librari": [115, 131], "why": 115, "anoth": 115, "dsl": 115, "exampl": [115, 126, 127], "basic": 115, "structur": 115, "kei": 115, "concept": 115, "other": 115, "perform": [115, 126, 130, 131], "differ": 115, "platform": 115, "further": 115, "resourc": 115, "dequant": 116, "tmac": 117, "look": 117, "up": 117, "mix": 117, "precis": 117, "comput": [117, 129], "instal": 118, "guid": 118, "pip": 118, "build": 118, "from": 118, "sourc": [118, 127], "method": 118, "1": [118, 126], "us": [118, 126], "your": 118, "own": 118, "tvm": 118, "2": [118, 126], "bundl": 118, "3": [118, 126], "provid": 118, "script": 118, "nightli": 118, "version": 118, "The": 119, "A": 119, "brief": 119, "introduct": 119, "program": [119, 127], "interfac": 119, "flow": 119, "model": 119, "declar": 119, "explicit": 119, "hardwar": 119, "memori": [119, 125], "welcom": 120, "get": 120, "start": 120, "tutori": 120, "deep": 120, "learn": 120, "refer": 120, "privaci": [120, 124], "ast": 121, "tilelibrari": 123, "t": [123, 127], "alloc_shar": 123, "alloc_frag": 123, "reduce_max": 123, "reduce_sum": 123, "clear": 123, "use_swizzl": 123, "annot": 125, "auto": 126, "tune": 126, "techniqu": 126, "optim": 126, "overview": [126, 127], "step": 126, "reserv": 126, "paramet": 126, "candid": 126, "configur": 126, "debug": 127, "correct": 127, "post": 127, "process": 127, "runtim": 127, "just": 128, "In": 128, "time": 128, "data": 129, "movement": 129, "write": [130, 131], "high": [130, 131], "thread": 130}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [5, "subpackages"], [7, "subpackages"], [16, "subpackages"], [56, "subpackages"], [57, "subpackages"], [70, "subpackages"], [94, "subpackages"]], "Submodules": [[1, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [12, "submodules"], [16, "submodules"], [20, "submodules"], [25, "submodules"], [28, "submodules"], [37, "submodules"], [39, "submodules"], [44, "submodules"], [50, "submodules"], [56, "submodules"], [57, "submodules"], [59, "submodules"], [61, "submodules"], [70, "submodules"], [85, "submodules"], [89, "submodules"], [95, "submodules"], [98, "submodules"], [101, "submodules"], [103, "submodules"], [105, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [5, "module-tilelang.carver"], [7, "module-tilelang.carver.arch"], [12, "module-tilelang.carver.arch.driver"], [16, "module-tilelang.carver.roller"], [20, "module-tilelang.carver.roller.policy"], [25, "module-tilelang.carver.roller.shape_inference"], [28, "module-tilelang.carver.template"], [37, "module-tilelang.common"], [39, "module-tilelang.contrib"], [44, "module-tilelang.engine"], [50, "module-tilelang.intrinsics"], [56, "module-tilelang.jit"], [57, "module-tilelang.jit.adapter"], [59, "module-tilelang.jit.adapter.ctypes"], [61, "module-tilelang.jit.adapter.cython"], [70, "module-tilelang.language"], [85, "module-tilelang.language.tir"], [89, "module-tilelang.layout"], [93, "module-tilelang.math"], [94, "module-tilelang.primitives"], [95, "module-tilelang.primitives.gemm"], [98, "module-tilelang.profiler"], [100, "module-tilelang.testing"], [101, "module-tilelang.tools"], [103, "module-tilelang.transform"], [105, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.cache package": [[3, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver package": [[5, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[6, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[7, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[8, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[9, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[10, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver package": [[12, "tilelang-carver-arch-driver-package"]], "tilelang.carver.arch.driver.cuda_driver module": [[13, "module-tilelang.carver.arch.driver.cuda_driver"]], "tilelang.carver.common_schedules module": [[14, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[15, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[16, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[17, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[18, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[19, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[20, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[21, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[22, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[23, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[24, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[25, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[26, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[27, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[28, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[29, "module-tilelang.carver.template.base"]], "tilelang.carver.template.conv module": [[30, "module-tilelang.carver.template.conv"]], "tilelang.carver.template.elementwise module": [[31, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[32, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[33, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[34, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[35, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[36, "module-tilelang.carver.utils"]], "tilelang.common package": [[37, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[38, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[39, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[40, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[41, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[42, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[43, "module-tilelang.contrib.nvcc"]], "tilelang.engine package": [[44, "tilelang-engine-package"]], "tilelang.engine.callback module": [[45, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[46, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[47, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[48, "module-tilelang.engine.phase"]], "tilelang.env module": [[49, "module-tilelang.env"]], "tilelang.intrinsics package": [[50, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[51, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[52, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[53, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[54, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[55, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[56, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[57, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[58, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[59, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[60, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[61, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[62, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[63, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[64, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[65, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.utils module": [[66, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[67, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[68, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[69, "module-tilelang.jit.kernel"]], "tilelang.language package": [[70, "tilelang-language-package"]], "tilelang.language.allocate module": [[71, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[72, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[73, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[74, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[75, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[76, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[77, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[78, "module-tilelang.language.kernel"]], "tilelang.language.memscope module": [[79, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[80, "module-tilelang.language.parallel"]], "tilelang.language.pipeline module": [[81, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[82, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[83, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[84, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[85, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[86, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[87, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[88, "module-tilelang.language.tir.op"]], "tilelang.layout package": [[89, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[90, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[91, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[92, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[93, "tilelang-math-package"]], "tilelang.primitives package": [[94, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[95, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[96, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[97, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[98, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[99, "module-tilelang.profiler.bench"]], "tilelang.testing package": [[100, "tilelang-testing-package"]], "tilelang.tools package": [[101, "tilelang-tools-package"]], "tilelang.tools.plot_layout module": [[102, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[103, "tilelang-transform-package"]], "tilelang.transform.simplify module": [[104, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[105, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[106, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[107, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[108, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[109, "module-tilelang.utils.tensor"]], "Convolution": [[110, "convolution"]], "ElementWise Operators": [[111, "elementwise-operators"]], "Elementwise add in TileLang": [[111, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[111, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[111, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[111, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[111, "conclusion"], [114, "conclusion"], [115, "conclusion"], [127, "conclusion"]], "Flash Attention": [[112, "flash-attention"]], "Flash Linear Attention": [[113, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[114, "general-matrix-vector-multiplication-gemv"]], "Triton implementation": [[114, "triton-implementation"]], "Naive Implementation in TileLang": [[114, "naive-implementation-in-tilelang"]], "More concurrency": [[114, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[114, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[114, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[114, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[114, "autotune"]], "Benchmark Table on Hopper GPU": [[114, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[115, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[115, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[115, "matrix-multiplication-example"], [126, "matrix-multiplication-example"], [127, "matrix-multiplication-example"]], "Basic Structure": [[115, "basic-structure"]], "Key Concepts": [[115, "key-concepts"]], "Comparison with Other DSLs": [[115, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[115, "performance-on-different-platforms"]], "Further Resources": [[115, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[116, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[117, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[118, "installation-guide"]], "Installing with pip": [[118, "installing-with-pip"]], "Building from Source": [[118, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[118, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[118, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[118, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[118, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[119, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[119, "programming-interface"]], "Programming Interfaces": [[119, "programming-interfaces"]], "Compilation Flow": [[119, "compilation-flow"]], "Tile-based Programming Model": [[119, "tile-based-programming-model"]], "Tile declarations": [[119, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[119, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[120, "welcome-to-tile-language"]], "GET STARTED": [[120, null]], "TUTORIALS": [[120, null]], "DEEP LEARNING OPERATORS": [[120, null]], "LANGUAGE REFERENCE": [[120, null]], "API Reference": [[120, null]], "Privacy": [[120, null], [124, "privacy"]], "Tile Language AST": [[121, "tile-language-ast"]], "Tile Language: Primitives": [[122, "tile-language-primitives"]], "Tile Language: TileLibrary": [[123, "tile-language-tilelibrary"]], "T.Kernel": [[123, "t-kernel"]], "T.alloc_shared": [[123, "t-alloc-shared"]], "T.alloc_fragment": [[123, "t-alloc-fragment"]], "T.copy": [[123, "t-copy"]], "T.gemm": [[123, "t-gemm"]], "T.reduce_max T.reduce_sum": [[123, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[123, "t-parallel"]], "T.Pipelined": [[123, "t-pipelined"]], "T.clear T.fill": [[123, "t-clear-t-fill"]], "T.use_swizzle": [[123, "t-use-swizzle"]], "Annotate Memory Layout": [[125, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[126, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[126, "overview"], [127, "overview"]], "Step 1: Implement with Reserved Parameters": [[126, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[126, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[126, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[126, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[127, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[127, "debugging-generation-issues"]], "Debugging Correctness Issues": [[127, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[127, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[127, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[128, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[129, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[130, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[131, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [4, "module-tilelang.cache.kernel_cache"], [5, "module-tilelang.carver"], [6, "module-tilelang.carver.analysis"], [7, "module-tilelang.carver.arch"], [8, "module-tilelang.carver.arch.arch_base"], [9, "module-tilelang.carver.arch.cdna"], [10, "module-tilelang.carver.arch.cpu"], [11, "module-tilelang.carver.arch.cuda"], [12, "module-tilelang.carver.arch.driver"], [13, "module-tilelang.carver.arch.driver.cuda_driver"], [14, "module-tilelang.carver.common_schedules"], [15, "module-tilelang.carver.matmul_analysis"], [16, "module-tilelang.carver.roller"], [17, "module-tilelang.carver.roller.bestfit"], [18, "module-tilelang.carver.roller.hint"], [19, "module-tilelang.carver.roller.node"], [20, "module-tilelang.carver.roller.policy"], [21, "module-tilelang.carver.roller.policy.common"], [22, "module-tilelang.carver.roller.policy.default"], [23, "module-tilelang.carver.roller.policy.tensorcore"], [24, "module-tilelang.carver.roller.rasterization"], [25, "module-tilelang.carver.roller.shape_inference"], [26, "module-tilelang.carver.roller.shape_inference.common"], [27, "module-tilelang.carver.roller.shape_inference.tir"], [28, "module-tilelang.carver.template"], [29, "module-tilelang.carver.template.base"], [30, "module-tilelang.carver.template.conv"], [31, "module-tilelang.carver.template.elementwise"], [32, "module-tilelang.carver.template.flashattention"], [33, "module-tilelang.carver.template.gemv"], [34, "module-tilelang.carver.template.general_reduce"], [35, "module-tilelang.carver.template.matmul"], [36, "module-tilelang.carver.utils"], [37, "module-tilelang.common"], [38, "module-tilelang.common.transform_kind"], [39, "module-tilelang.contrib"], [40, "module-tilelang.contrib.cc"], [41, "module-tilelang.contrib.dlpack"], [42, "module-tilelang.contrib.hipcc"], [43, "module-tilelang.contrib.nvcc"], [44, "module-tilelang.engine"], [45, "module-tilelang.engine.callback"], [46, "module-tilelang.engine.lower"], [47, "module-tilelang.engine.param"], [48, "module-tilelang.engine.phase"], [49, "module-tilelang.env"], [50, "module-tilelang.intrinsics"], [51, "module-tilelang.intrinsics.mfma_layout"], [52, "module-tilelang.intrinsics.mfma_macro_generator"], [53, "module-tilelang.intrinsics.mma_layout"], [54, "module-tilelang.intrinsics.mma_macro_generator"], [55, "module-tilelang.intrinsics.utils"], [56, "module-tilelang.jit"], [57, "module-tilelang.jit.adapter"], [58, "module-tilelang.jit.adapter.base"], [59, "module-tilelang.jit.adapter.ctypes"], [60, "module-tilelang.jit.adapter.ctypes.adapter"], [61, "module-tilelang.jit.adapter.cython"], [62, "module-tilelang.jit.adapter.cython.adapter"], [63, "module-tilelang.jit.adapter.cython.cython_wrapper"], [64, "module-tilelang.jit.adapter.dlpack"], [65, "module-tilelang.jit.adapter.libgen"], [66, "module-tilelang.jit.adapter.utils"], [67, "module-tilelang.jit.adapter.wrapper"], [68, "module-tilelang.jit.env"], [69, "module-tilelang.jit.kernel"], [70, "module-tilelang.language"], [71, "module-tilelang.language.allocate"], [72, "module-tilelang.language.builtin"], [73, "module-tilelang.language.copy"], [74, "module-tilelang.language.customize"], [75, "module-tilelang.language.fill"], [76, "module-tilelang.language.frame"], [77, "module-tilelang.language.gemm"], [78, "module-tilelang.language.kernel"], [79, "module-tilelang.language.memscope"], [80, "module-tilelang.language.parallel"], [81, "module-tilelang.language.pipeline"], [82, "module-tilelang.language.print"], [83, "module-tilelang.language.proxy"], [84, "module-tilelang.language.reduce"], [85, "module-tilelang.language.tir"], [86, "module-tilelang.language.tir.entry"], [87, "module-tilelang.language.tir.ir"], [88, "module-tilelang.language.tir.op"], [89, "module-tilelang.layout"], [90, "module-tilelang.layout.fragment"], [91, "module-tilelang.layout.layout"], [92, "module-tilelang.layout.swizzle"], [93, "module-tilelang.math"], [94, "module-tilelang.primitives"], [95, "module-tilelang.primitives.gemm"], [96, "module-tilelang.primitives.gemm.base"], [97, "module-tilelang.primitives.gemm.gemm_mma"], [98, "module-tilelang.profiler"], [99, "module-tilelang.profiler.bench"], [100, "module-tilelang.testing"], [101, "module-tilelang.tools"], [102, "module-tilelang.tools.plot_layout"], [103, "module-tilelang.transform"], [104, "module-tilelang.transform.simplify"], [105, "module-tilelang.utils"], [106, "module-tilelang.utils.deprecated"], [107, "module-tilelang.utils.language"], [108, "module-tilelang.utils.target"], [109, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "autotuner (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutoTuner"]], "autotuneresult (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutotuneResult"]], "jitcontext (class in tilelang.autotuner)": [[2, "tilelang.autotuner.JITContext"]], "atol (tilelang.autotuner.jitcontext attribute)": [[2, "id6"], [2, "tilelang.autotuner.JITContext.atol"]], "autotune() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.autotune"]], "cache_input_tensors (tilelang.autotuner.jitcontext attribute)": [[2, "id7"], [2, "tilelang.autotuner.JITContext.cache_input_tensors"]], "check_tensor_list_compatibility() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.check_tensor_list_compatibility"]], "config (tilelang.autotuner.autotuneresult attribute)": [[2, "id0"], [2, "tilelang.autotuner.AutotuneResult.config"]], "from_kernel() (tilelang.autotuner.autotuner class method)": [[2, "tilelang.autotuner.AutoTuner.from_kernel"]], "func (tilelang.autotuner.autotuneresult attribute)": [[2, "id1"], [2, "tilelang.autotuner.AutotuneResult.func"]], "jit() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.jit"]], "kernel (tilelang.autotuner.autotuneresult attribute)": [[2, "id2"], [2, "tilelang.autotuner.AutotuneResult.kernel"]], "latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id3"], [2, "tilelang.autotuner.AutotuneResult.latency"]], "libcode (tilelang.autotuner.autotuneresult attribute)": [[2, "id4"], [2, "tilelang.autotuner.AutotuneResult.libcode"]], "max_mismatched_ratio (tilelang.autotuner.jitcontext attribute)": [[2, "id8"], [2, "tilelang.autotuner.JITContext.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.jitcontext attribute)": [[2, "id9"], [2, "tilelang.autotuner.JITContext.out_idx"]], "profiler (tilelang.autotuner.jitcontext attribute)": [[2, "id10"], [2, "tilelang.autotuner.JITContext.profiler"]], "ref_latency (tilelang.autotuner.autotuneresult attribute)": [[2, "id5"], [2, "tilelang.autotuner.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id11"], [2, "tilelang.autotuner.JITContext.ref_prog"]], "rtol (tilelang.autotuner.jitcontext attribute)": [[2, "id12"], [2, "tilelang.autotuner.JITContext.rtol"]], "run() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.run"]], "set_compile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_compile_args"]], "skip_check (tilelang.autotuner.jitcontext attribute)": [[2, "id13"], [2, "tilelang.autotuner.JITContext.skip_check"]], "supply_prog (tilelang.autotuner.jitcontext attribute)": [[2, "id14"], [2, "tilelang.autotuner.JITContext.supply_prog"]], "target (tilelang.autotuner.jitcontext attribute)": [[2, "id15"], [2, "tilelang.autotuner.JITContext.target"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "cached() (in module tilelang.cache)": [[3, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[3, "tilelang.cache.clear_cache"]], "tilelang.cache": [[3, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[4, "tilelang.cache.kernel_cache.KernelCache"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "tilelang.cache.kernel_cache": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver": [[5, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[6, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[6, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[7, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[8, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[8, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[8, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[9, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[10, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[11, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.arch.driver": [[12, "module-tilelang.carver.arch.driver"]], "eccenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.ECCEnabled"]], "asyncenginecount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.asyncEngineCount"]], "canmaphostmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.canMapHostMemory"]], "clockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.clockRate"]], "computemode (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.computeMode"]], "concurrentkernels (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.concurrentKernels"]], "cudadeviceprop (class in tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp"]], "deviceoverlap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.deviceOverlap"]], "get_cuda_device_properties() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_cuda_device_properties"]], "get_device_attribute() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_device_attribute"]], "get_device_name() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_device_name"]], "get_max_dynamic_shared_size_bytes() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_max_dynamic_shared_size_bytes"]], "get_shared_memory_per_block() (in module tilelang.carver.arch.driver.cuda_driver)": [[13, "tilelang.carver.arch.driver.cuda_driver.get_shared_memory_per_block"]], "globall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.globalL1CacheSupported"]], "integrated (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.integrated"]], "ismultigpuboard (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.isMultiGpuBoard"]], "kernelexectimeoutenabled (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.kernelExecTimeoutEnabled"]], "l2cachesize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.l2CacheSize"]], "locall1cachesupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.localL1CacheSupported"]], "luid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luid"]], "luiddevicenodemask (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.luidDeviceNodeMask"]], "major (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.major"]], "managedmemory (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.managedMemory"]], "maxgridsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxGridSize"]], "maxsurface1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1D"]], "maxsurface1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface1DLayered"]], "maxsurface2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2D"]], "maxsurface2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface2DLayered"]], "maxsurface3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurface3D"]], "maxsurfacecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemap"]], "maxsurfacecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxSurfaceCubemapLayered"]], "maxtexture1d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1D"]], "maxtexture1dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLayered"]], "maxtexture1dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DLinear"]], "maxtexture1dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture1DMipmap"]], "maxtexture2d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2D"]], "maxtexture2dgather (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DGather"]], "maxtexture2dlayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLayered"]], "maxtexture2dlinear (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DLinear"]], "maxtexture2dmipmap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture2DMipmap"]], "maxtexture3d (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3D"]], "maxtexture3dalt (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTexture3DAlt"]], "maxtexturecubemap (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemap"]], "maxtexturecubemaplayered (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxTextureCubemapLayered"]], "maxthreadsdim (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsDim"]], "maxthreadsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerBlock"]], "maxthreadspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.maxThreadsPerMultiProcessor"]], "mempitch (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memPitch"]], "memorybuswidth (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryBusWidth"]], "memoryclockrate (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.memoryClockRate"]], "minor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.minor"]], "multigpuboardgroupid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiGpuBoardGroupID"]], "multiprocessorcount (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.multiProcessorCount"]], "name (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.name"]], "pcibusid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciBusID"]], "pcideviceid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDeviceID"]], "pcidomainid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.pciDomainID"]], "persistingl2cachemaxsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.persistingL2CacheMaxSize"]], "regsperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerBlock"]], "regspermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.regsPerMultiprocessor"]], "reserved (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved"]], "reserved1 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved1"]], "reserved2 (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.reserved2"]], "sharedmemperblock (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerBlock"]], "sharedmempermultiprocessor (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.sharedMemPerMultiprocessor"]], "streamprioritiessupported (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.streamPrioritiesSupported"]], "surfacealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.surfaceAlignment"]], "tccdriver (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.tccDriver"]], "texturealignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.textureAlignment"]], "texturepitchalignment (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.texturePitchAlignment"]], "tilelang.carver.arch.driver.cuda_driver": [[13, "module-tilelang.carver.arch.driver.cuda_driver"]], "totalconstmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalConstMem"]], "totalglobalmem (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.totalGlobalMem"]], "unifiedaddressing (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.unifiedAddressing"]], "uuid (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.uuid"]], "warpsize (tilelang.carver.arch.driver.cuda_driver.cudadeviceprop attribute)": [[13, "tilelang.carver.arch.driver.cuda_driver.cudaDeviceProp.warpSize"]], "get_block() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[14, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[14, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[15, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[15, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[15, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[15, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[15, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[16, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[17, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[17, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[17, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[17, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[17, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[17, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[17, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[18, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[18, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[18, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[18, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[18, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[18, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[18, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[18, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[18, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[18, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[18, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[18, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[18, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[19, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[19, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[19, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[19, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[19, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[19, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[19, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[19, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[19, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[19, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[19, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[19, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[20, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[21, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[21, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[22, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[22, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[23, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[23, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[24, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[24, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[24, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[24, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[24, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[24, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[25, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[26, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[26, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[26, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[27, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[27, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[27, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[27, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[27, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[27, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[28, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[29, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[29, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[29, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[29, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[29, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "c (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id0"], [30, "tilelang.carver.template.conv.ConvTemplate.C"]], "convtemplate (class in tilelang.carver.template.conv)": [[30, "tilelang.carver.template.conv.ConvTemplate"]], "d (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id1"], [30, "tilelang.carver.template.conv.ConvTemplate.D"]], "f (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id2"], [30, "tilelang.carver.template.conv.ConvTemplate.F"]], "h (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id3"], [30, "tilelang.carver.template.conv.ConvTemplate.H"]], "k (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id4"], [30, "tilelang.carver.template.conv.ConvTemplate.K"]], "n (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id5"], [30, "tilelang.carver.template.conv.ConvTemplate.N"]], "p (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id6"], [30, "tilelang.carver.template.conv.ConvTemplate.P"]], "s (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id7"], [30, "tilelang.carver.template.conv.ConvTemplate.S"]], "w (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id8"], [30, "tilelang.carver.template.conv.ConvTemplate.W"]], "accum_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id9"], [30, "tilelang.carver.template.conv.ConvTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.conv.convtemplate property)": [[30, "tilelang.carver.template.conv.ConvTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id10"], [30, "tilelang.carver.template.conv.ConvTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id11"], [30, "tilelang.carver.template.conv.ConvTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.conv.convtemplate method)": [[30, "tilelang.carver.template.conv.ConvTemplate.params_as_dict"]], "tilelang.carver.template.conv": [[30, "module-tilelang.carver.template.conv"]], "with_bias (tilelang.carver.template.conv.convtemplate attribute)": [[30, "id12"], [30, "tilelang.carver.template.conv.ConvTemplate.with_bias"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[31, "id0"], [31, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[31, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[31, "id1"], [31, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[31, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[32, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[32, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[33, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[33, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[33, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[34, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[34, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id0"], [35, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id1"], [35, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[35, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id2"], [35, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id3"], [35, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id4"], [35, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id5"], [35, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[35, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[35, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id6"], [35, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id7"], [35, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[35, "id8"], [35, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[36, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[36, "module-tilelang.carver.utils"]], "tilelang.common": [[37, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[38, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[38, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[38, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[38, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[39, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[40, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[40, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[41, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[41, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[41, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[42, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[42, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.get_cuda_version"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[43, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[43, "module-tilelang.contrib.nvcc"]], "tilelang.engine": [[44, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[45, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[45, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[45, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[45, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[45, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[46, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[46, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[47, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[47, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[47, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[47, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[47, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[47, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[47, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_boolean() (tilelang.engine.param.kernelparam method)": [[47, "tilelang.engine.param.KernelParam.is_boolean"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[47, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[47, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[47, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[47, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[47, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[47, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[47, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[47, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[48, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[48, "tilelang.engine.phase.OptimizeForTarget"]], "tilelang.engine.phase": [[48, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[49, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[49, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[49, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[49, "module-tilelang.env"]], "tilelang.intrinsics": [[50, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[51, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[51, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[52, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[52, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[53, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[53, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[54, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[54, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[54, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[54, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[54, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[55, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[55, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[56, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[56, "tilelang.jit.jit"]], "tilelang.jit": [[56, "module-tilelang.jit"]], "tilelang.jit.adapter": [[57, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[58, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[58, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[58, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[58, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[59, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[60, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[60, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[61, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[62, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[62, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[62, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[62, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[62, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[63, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[63, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[64, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[64, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[65, "module-tilelang.jit.adapter.libgen"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[65, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[66, "tilelang.jit.adapter.utils.match_global_kernel"]], "tilelang.jit.adapter.utils": [[66, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[67, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[67, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_cuda_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_cuda_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_hip_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_hip_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[67, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[67, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[67, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[68, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[69, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[69, "id0"], [69, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[69, "id1"], [69, "tilelang.jit.kernel.JITKernel.artifact"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[69, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[69, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[69, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[69, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[69, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[69, "tilelang.jit.kernel.JITKernel.get_profiler"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[69, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[69, "tilelang.jit.kernel.JITKernel.kernel_source"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[69, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[69, "tilelang.jit.kernel.JITKernel.params"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[69, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[69, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[69, "id2"], [69, "tilelang.jit.kernel.JITKernel.torch_function"]], "annotate_layout() (in module tilelang.language)": [[70, "tilelang.language.annotate_layout"]], "import_source() (in module tilelang.language)": [[70, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[70, "tilelang.language.symbolic"]], "tilelang.language": [[70, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[70, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[71, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[71, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[71, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[71, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[71, "module-tilelang.language.allocate"]], "createlistofmbarrierop() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.CreateListofMBarrierOp"]], "createtmadescriptorop() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.CreateTMADescriptorOp"]], "fenceproxyasyncop() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.FenceProxyAsyncOp"]], "getmbarrierop() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.GetMBarrierOp"]], "mbarrierexpecttx() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.MBarrierExpectTX"]], "mbarrierwaitparity() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.MBarrierWaitParity"]], "nosetmaxnreg() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.NoSetMaxNReg"]], "setmaxnreg() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.SetMaxNReg"]], "tmaloadop() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.TMALoadOp"]], "tmastorearrive() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.TMAStoreArrive"]], "tmastorewait() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.TMAStoreWait"]], "waitwgmma() (in module tilelang.language.builtin)": [[72, "tilelang.language.builtin.WaitWgmma"]], "tilelang.language.builtin": [[72, "module-tilelang.language.builtin"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[73, "tilelang.language.copy.region"]], "tilelang.language.copy": [[73, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.atomic_addx2"]], "clamp() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[74, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[74, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[75, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[75, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[75, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[76, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[76, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[76, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[76, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[76, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[76, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[76, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[76, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[76, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[76, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[76, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[76, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[76, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[77, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[77, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[78, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[78, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[78, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[78, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[78, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[78, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[78, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[78, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[78, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[78, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[78, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[78, "tilelang.language.kernel.FrameStack.push"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[78, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[78, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[78, "tilelang.language.kernel.FrameStack.top"]], "tilelang.language.memscope": [[79, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[80, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[80, "module-tilelang.language.parallel"]], "pipelined() (in module tilelang.language.pipeline)": [[81, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[81, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[82, "tilelang.language.print.print"]], "tilelang.language.print": [[82, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[83, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[83, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[83, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[83, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[83, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[83, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[83, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[83, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[83, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[83, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[83, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[83, "module-tilelang.language.proxy"]], "reduce() (in module tilelang.language.reduce)": [[84, "tilelang.language.reduce.reduce"]], "reduce_abssum() (in module tilelang.language.reduce)": [[84, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[84, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[84, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[84, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[84, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[85, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[86, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[86, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[86, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[87, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[87, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.pow"]], "power() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[88, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[88, "tilelang.language.tir.op.vscale"]], "tilelang.layout": [[89, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[90, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[90, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[90, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[90, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[90, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[90, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[90, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[90, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[90, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[91, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[91, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[91, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[91, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[91, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[91, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[91, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[91, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[92, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[92, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[93, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[93, "tilelang.math.next_power_of_2"]], "tilelang.math": [[93, "module-tilelang.math"]], "tilelang.primitives": [[94, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[95, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[95, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[96, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[96, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[96, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[97, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[97, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[98, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[98, "id0"], [98, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[98, "tilelang.profiler.Profiler.func"]], "params (tilelang.profiler.profiler attribute)": [[98, "id1"], [98, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[98, "id2"], [98, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[98, "id3"], [98, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[98, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[98, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[99, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[99, "module-tilelang.profiler.bench"]], "main() (in module tilelang.testing)": [[100, "tilelang.testing.main"]], "set_random_seed() (in module tilelang.testing)": [[100, "tilelang.testing.set_random_seed"]], "tilelang.testing": [[100, "module-tilelang.testing"]], "tilelang.tools": [[101, "module-tilelang.tools"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[102, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[102, "module-tilelang.tools.plot_layout"]], "annotatedeviceregions() (in module tilelang.transform)": [[103, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[103, "tilelang.transform.ClusterPlanning"]], "frontendlegalize() (in module tilelang.transform)": [[103, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[103, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[103, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[103, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[103, "tilelang.transform.InjectSoftwarePipeline"]], "layoutinference() (in module tilelang.transform)": [[103, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[103, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[103, "tilelang.transform.LegalizeVectorizedLoop"]], "loopvectorizedynamic() (in module tilelang.transform)": [[103, "tilelang.transform.LoopVectorizeDynamic"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[103, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[103, "tilelang.transform.LowerHopperIntrin"]], "lowertileop() (in module tilelang.transform)": [[103, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[103, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[103, "tilelang.transform.MergeIfStmt"]], "multiversionbuffer() (in module tilelang.transform)": [[103, "tilelang.transform.MultiVersionBuffer"]], "pipelineplanning() (in module tilelang.transform)": [[103, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[103, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[103, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[103, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[103, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[103, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[103, "tilelang.transform.WarpSpecializedPipeline"]], "tilelang.transform": [[103, "module-tilelang.transform"]], "simplify() (in module tilelang.transform.simplify)": [[104, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[104, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[104, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[104, "module-tilelang.transform.simplify"]], "tilelang.utils": [[105, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[106, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[106, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.array_reduce"]], "is_fragment() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[107, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[107, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[108, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[108, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[108, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[108, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[109, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[109, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[109, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[109, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[109, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[109, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[109, "tilelang.utils.tensor.torch_assert_close"]]}})