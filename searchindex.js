Search.setIndex({"docnames": ["api/modules", "api/tilelang", "api/tilelang.autotuner", "api/tilelang.cache", "api/tilelang.cache.kernel_cache", "api/tilelang.carver", "api/tilelang.carver.analysis", "api/tilelang.carver.arch", "api/tilelang.carver.arch.arch_base", "api/tilelang.carver.arch.cdna", "api/tilelang.carver.arch.cpu", "api/tilelang.carver.arch.cuda", "api/tilelang.carver.common_schedules", "api/tilelang.carver.matmul_analysis", "api/tilelang.carver.roller", "api/tilelang.carver.roller.bestfit", "api/tilelang.carver.roller.hint", "api/tilelang.carver.roller.node", "api/tilelang.carver.roller.policy", "api/tilelang.carver.roller.policy.common", "api/tilelang.carver.roller.policy.default", "api/tilelang.carver.roller.policy.tensorcore", "api/tilelang.carver.roller.rasterization", "api/tilelang.carver.roller.shape_inference", "api/tilelang.carver.roller.shape_inference.common", "api/tilelang.carver.roller.shape_inference.tir", "api/tilelang.carver.template", "api/tilelang.carver.template.base", "api/tilelang.carver.template.elementwise", "api/tilelang.carver.template.flashattention", "api/tilelang.carver.template.gemv", "api/tilelang.carver.template.general_reduce", "api/tilelang.carver.template.matmul", "api/tilelang.carver.utils", "api/tilelang.common", "api/tilelang.common.transform_kind", "api/tilelang.contrib", "api/tilelang.contrib.cc", "api/tilelang.contrib.dlpack", "api/tilelang.contrib.hipcc", "api/tilelang.contrib.nvcc", "api/tilelang.engine", "api/tilelang.engine.callback", "api/tilelang.engine.lower", "api/tilelang.engine.param", "api/tilelang.engine.phase", "api/tilelang.env", "api/tilelang.intrinsics", "api/tilelang.intrinsics.mfma_layout", "api/tilelang.intrinsics.mfma_macro_generator", "api/tilelang.intrinsics.mma_layout", "api/tilelang.intrinsics.mma_macro_generator", "api/tilelang.intrinsics.utils", "api/tilelang.jit", "api/tilelang.jit.adapter", "api/tilelang.jit.adapter.base", "api/tilelang.jit.adapter.ctypes", "api/tilelang.jit.adapter.ctypes.adapter", "api/tilelang.jit.adapter.cython", "api/tilelang.jit.adapter.cython.adapter", "api/tilelang.jit.adapter.cython.cython_wrapper", "api/tilelang.jit.adapter.dlpack", "api/tilelang.jit.adapter.libgen", "api/tilelang.jit.adapter.utils", "api/tilelang.jit.adapter.wrapper", "api/tilelang.jit.env", "api/tilelang.jit.kernel", "api/tilelang.language", "api/tilelang.language.allocate", "api/tilelang.language.builtin", "api/tilelang.language.copy", "api/tilelang.language.customize", "api/tilelang.language.fill", "api/tilelang.language.frame", "api/tilelang.language.gemm", "api/tilelang.language.kernel", "api/tilelang.language.memscope", "api/tilelang.language.parallel", "api/tilelang.language.pipeline", "api/tilelang.language.print", "api/tilelang.language.proxy", "api/tilelang.language.reduce", "api/tilelang.language.tir", "api/tilelang.language.tir.entry", "api/tilelang.language.tir.ir", "api/tilelang.language.tir.op", "api/tilelang.layout", "api/tilelang.layout.fragment", "api/tilelang.layout.layout", "api/tilelang.layout.swizzle", "api/tilelang.math", "api/tilelang.primitives", "api/tilelang.primitives.gemm", "api/tilelang.primitives.gemm.base", "api/tilelang.primitives.gemm.gemm_mma", "api/tilelang.profiler", "api/tilelang.profiler.bench", "api/tilelang.testing", "api/tilelang.tools", "api/tilelang.tools.plot_layout", "api/tilelang.transform", "api/tilelang.transform.simplify", "api/tilelang.utils", "api/tilelang.utils.deprecated", "api/tilelang.utils.language", "api/tilelang.utils.target", "api/tilelang.utils.tensor", "deeplearning_operators/convolution", "deeplearning_operators/elementwise", "deeplearning_operators/flash_attention", "deeplearning_operators/flash_linear_attention", "deeplearning_operators/gemv", "deeplearning_operators/matmul", "deeplearning_operators/matmul_dequant", "deeplearning_operators/tmac_gpu", "get_started/Installation", "get_started/overview", "index", "language_ref/ast", "language_ref/primitives", "language_ref/tilelibrary", "privacy", "tutorials/annotate_memory_layout", "tutorials/auto_tuning", "tutorials/debug_tools_for_tilelang", "tutorials/jit_compilation", "tutorials/pipelining_computations_and_data_movements", "tutorials/writing_kernels_with_thread_primitives", "tutorials/writing_kernels_with_tilelibrary"], "filenames": ["api/modules.rst", "api/tilelang.rst", "api/tilelang.autotuner.rst", "api/tilelang.cache.rst", "api/tilelang.cache.kernel_cache.rst", "api/tilelang.carver.rst", "api/tilelang.carver.analysis.rst", "api/tilelang.carver.arch.rst", "api/tilelang.carver.arch.arch_base.rst", "api/tilelang.carver.arch.cdna.rst", "api/tilelang.carver.arch.cpu.rst", "api/tilelang.carver.arch.cuda.rst", "api/tilelang.carver.common_schedules.rst", "api/tilelang.carver.matmul_analysis.rst", "api/tilelang.carver.roller.rst", "api/tilelang.carver.roller.bestfit.rst", "api/tilelang.carver.roller.hint.rst", "api/tilelang.carver.roller.node.rst", "api/tilelang.carver.roller.policy.rst", "api/tilelang.carver.roller.policy.common.rst", "api/tilelang.carver.roller.policy.default.rst", "api/tilelang.carver.roller.policy.tensorcore.rst", "api/tilelang.carver.roller.rasterization.rst", "api/tilelang.carver.roller.shape_inference.rst", "api/tilelang.carver.roller.shape_inference.common.rst", "api/tilelang.carver.roller.shape_inference.tir.rst", "api/tilelang.carver.template.rst", "api/tilelang.carver.template.base.rst", "api/tilelang.carver.template.elementwise.rst", "api/tilelang.carver.template.flashattention.rst", "api/tilelang.carver.template.gemv.rst", "api/tilelang.carver.template.general_reduce.rst", "api/tilelang.carver.template.matmul.rst", "api/tilelang.carver.utils.rst", "api/tilelang.common.rst", "api/tilelang.common.transform_kind.rst", "api/tilelang.contrib.rst", "api/tilelang.contrib.cc.rst", "api/tilelang.contrib.dlpack.rst", "api/tilelang.contrib.hipcc.rst", "api/tilelang.contrib.nvcc.rst", "api/tilelang.engine.rst", "api/tilelang.engine.callback.rst", "api/tilelang.engine.lower.rst", "api/tilelang.engine.param.rst", "api/tilelang.engine.phase.rst", "api/tilelang.env.rst", "api/tilelang.intrinsics.rst", "api/tilelang.intrinsics.mfma_layout.rst", "api/tilelang.intrinsics.mfma_macro_generator.rst", "api/tilelang.intrinsics.mma_layout.rst", "api/tilelang.intrinsics.mma_macro_generator.rst", "api/tilelang.intrinsics.utils.rst", "api/tilelang.jit.rst", "api/tilelang.jit.adapter.rst", "api/tilelang.jit.adapter.base.rst", "api/tilelang.jit.adapter.ctypes.rst", "api/tilelang.jit.adapter.ctypes.adapter.rst", "api/tilelang.jit.adapter.cython.rst", "api/tilelang.jit.adapter.cython.adapter.rst", "api/tilelang.jit.adapter.cython.cython_wrapper.rst", "api/tilelang.jit.adapter.dlpack.rst", "api/tilelang.jit.adapter.libgen.rst", "api/tilelang.jit.adapter.utils.rst", "api/tilelang.jit.adapter.wrapper.rst", "api/tilelang.jit.env.rst", "api/tilelang.jit.kernel.rst", "api/tilelang.language.rst", "api/tilelang.language.allocate.rst", "api/tilelang.language.builtin.rst", "api/tilelang.language.copy.rst", "api/tilelang.language.customize.rst", "api/tilelang.language.fill.rst", "api/tilelang.language.frame.rst", "api/tilelang.language.gemm.rst", "api/tilelang.language.kernel.rst", "api/tilelang.language.memscope.rst", "api/tilelang.language.parallel.rst", "api/tilelang.language.pipeline.rst", "api/tilelang.language.print.rst", "api/tilelang.language.proxy.rst", "api/tilelang.language.reduce.rst", "api/tilelang.language.tir.rst", "api/tilelang.language.tir.entry.rst", "api/tilelang.language.tir.ir.rst", "api/tilelang.language.tir.op.rst", "api/tilelang.layout.rst", "api/tilelang.layout.fragment.rst", "api/tilelang.layout.layout.rst", "api/tilelang.layout.swizzle.rst", "api/tilelang.math.rst", "api/tilelang.primitives.rst", "api/tilelang.primitives.gemm.rst", "api/tilelang.primitives.gemm.base.rst", "api/tilelang.primitives.gemm.gemm_mma.rst", "api/tilelang.profiler.rst", "api/tilelang.profiler.bench.rst", "api/tilelang.testing.rst", "api/tilelang.tools.rst", "api/tilelang.tools.plot_layout.rst", "api/tilelang.transform.rst", "api/tilelang.transform.simplify.rst", "api/tilelang.utils.rst", "api/tilelang.utils.deprecated.rst", "api/tilelang.utils.language.rst", "api/tilelang.utils.target.rst", "api/tilelang.utils.tensor.rst", "deeplearning_operators/convolution.md", "deeplearning_operators/elementwise.md", "deeplearning_operators/flash_attention.md", "deeplearning_operators/flash_linear_attention.md", "deeplearning_operators/gemv.md", "deeplearning_operators/matmul.md", "deeplearning_operators/matmul_dequant.md", "deeplearning_operators/tmac_gpu.md", "get_started/Installation.md", "get_started/overview.md", "index.md", "language_ref/ast.md", "language_ref/primitives.md", "language_ref/tilelibrary.md", "privacy.md", "tutorials/annotate_memory_layout.md", "tutorials/auto_tuning.md", "tutorials/debug_tools_for_tilelang.md", "tutorials/jit_compilation.md", "tutorials/pipelining_computations_and_data_movements.md", "tutorials/writing_kernels_with_thread_primitives.md", "tutorials/writing_kernels_with_tilelibrary.md"], "titles": ["Python API", "tilelang package", "tilelang.autotuner package", "tilelang.cache package", "tilelang.cache.kernel_cache module", "tilelang.carver package", "tilelang.carver.analysis module", "tilelang.carver.arch package", "tilelang.carver.arch.arch_base module", "tilelang.carver.arch.cdna module", "tilelang.carver.arch.cpu module", "tilelang.carver.arch.cuda module", "tilelang.carver.common_schedules module", "tilelang.carver.matmul_analysis module", "tilelang.carver.roller package", "tilelang.carver.roller.bestfit module", "tilelang.carver.roller.hint module", "tilelang.carver.roller.node module", "tilelang.carver.roller.policy package", "tilelang.carver.roller.policy.common module", "tilelang.carver.roller.policy.default module", "tilelang.carver.roller.policy.tensorcore module", "tilelang.carver.roller.rasterization module", "tilelang.carver.roller.shape_inference package", "tilelang.carver.roller.shape_inference.common module", "tilelang.carver.roller.shape_inference.tir module", "tilelang.carver.template package", "tilelang.carver.template.base module", "tilelang.carver.template.elementwise module", "tilelang.carver.template.flashattention module", "tilelang.carver.template.gemv module", "tilelang.carver.template.general_reduce module", "tilelang.carver.template.matmul module", "tilelang.carver.utils module", "tilelang.common package", "tilelang.common.transform_kind module", "tilelang.contrib package", "tilelang.contrib.cc module", "tilelang.contrib.dlpack module", "tilelang.contrib.hipcc module", "tilelang.contrib.nvcc module", "tilelang.engine package", "tilelang.engine.callback module", "tilelang.engine.lower module", "tilelang.engine.param module", "tilelang.engine.phase module", "tilelang.env module", "tilelang.intrinsics package", "tilelang.intrinsics.mfma_layout module", "tilelang.intrinsics.mfma_macro_generator module", "tilelang.intrinsics.mma_layout module", "tilelang.intrinsics.mma_macro_generator module", "tilelang.intrinsics.utils module", "tilelang.jit package", "tilelang.jit.adapter package", "tilelang.jit.adapter.base module", "tilelang.jit.adapter.ctypes package", "tilelang.jit.adapter.ctypes.adapter module", "tilelang.jit.adapter.cython package", "tilelang.jit.adapter.cython.adapter module", "tilelang.jit.adapter.cython.cython_wrapper module", "tilelang.jit.adapter.dlpack module", "tilelang.jit.adapter.libgen module", "tilelang.jit.adapter.utils module", "tilelang.jit.adapter.wrapper module", "tilelang.jit.env module", "tilelang.jit.kernel module", "tilelang.language package", "tilelang.language.allocate module", "tilelang.language.builtin module", "tilelang.language.copy module", "tilelang.language.customize module", "tilelang.language.fill module", "tilelang.language.frame module", "tilelang.language.gemm module", "tilelang.language.kernel module", "tilelang.language.memscope module", "tilelang.language.parallel module", "tilelang.language.pipeline module", "tilelang.language.print module", "tilelang.language.proxy module", "tilelang.language.reduce module", "tilelang.language.tir package", "tilelang.language.tir.entry module", "tilelang.language.tir.ir module", "tilelang.language.tir.op module", "tilelang.layout package", "tilelang.layout.fragment module", "tilelang.layout.layout module", "tilelang.layout.swizzle module", "tilelang.math package", "tilelang.primitives package", "tilelang.primitives.gemm package", "tilelang.primitives.gemm.base module", "tilelang.primitives.gemm.gemm_mma module", "tilelang.profiler package", "tilelang.profiler.bench module", "tilelang.testing package", "tilelang.tools package", "tilelang.tools.plot_layout module", "tilelang.transform package", "tilelang.transform.simplify module", "tilelang.utils package", "tilelang.utils.deprecated module", "tilelang.utils.language module", "tilelang.utils.target module", "tilelang.utils.tensor module", "Convolution", "ElementWise Operators", "Flash Attention", "Flash Linear Attention", "General Matrix-Vector Multiplication (GEMV)", "General Matrix-Matrix Multiplication with Tile Library", "General Matrix-Matrix Multiplication with Dequantization", "TMAC: Look Up Table Based Mixed Precision Computing", "Installation Guide", "The Tile Language: A Brief Introduction", "\ud83d\udc4b Welcome to Tile Language", "Tile Language AST", "Tile Language: Primitives", "Tile Language: TileLibrary", "Privacy", "Annotate Memory Layout", "Auto-Tuning Techniques for Performance Optimization", "Debugging Tile Language Programs", "Just In Time Compilation", "Pipelining Computation and Data Movement", "Writing High-Performance Kernels with Thread Primitives", "Writing High-Performance Kernels with the Tile Library"], "terms": {"tilelang": [0, 112, 115, 116, 117, 124], "packag": [0, 115], "subpackag": 0, "autotun": [0, 1, 117, 123], "modul": [0, 115], "content": [0, 72, 85, 124], "cach": [0, 1, 22, 46, 59, 96, 111, 112, 116, 120], "submodul": [0, 91], "carver": [0, 1], "common": [0, 1, 12, 14, 18, 23, 108, 123], "contrib": [0, 1], "engin": [0, 1, 95, 124], "intrins": [0, 1, 16, 72, 85, 112, 116], "jit": [0, 1, 2, 43, 95, 111, 112, 123], "languag": [0, 1, 91, 102, 108, 111, 112, 123], "layout": [0, 1, 13, 51, 85, 99, 100, 112, 116, 117], "math": [0, 1, 85], "primit": [0, 1, 79, 111, 112, 116, 117, 124], "profil": [0, 1, 2, 44, 55, 57, 59, 61, 66, 85, 102, 112, 124], "test": [0, 1, 85, 108, 112, 115], "tool": [0, 1, 75, 77, 78, 111, 124], "transform": [0, 1, 13, 51, 87, 88, 123, 124], "util": [0, 1, 2, 3, 4, 5, 37, 39, 40, 44, 47, 53, 54, 55, 57, 59, 61, 79, 95, 96, 108, 116], "env": [0, 1, 40, 53], "disable_cach": [0, 1, 46], "enable_cach": [0, 1, 46], "is_cache_en": [0, 1, 46], "tqdmlogginghandl": [0, 1], "emit": [0, 1], "set_log_level": [0, 1], "from_kernel": [1, 2, 123], "run": [1, 2, 75, 95, 96, 100, 112, 115, 116, 123, 124], "set_compile_arg": [1, 2, 123], "autotuneresult": [1, 2], "config": [1, 2, 111, 115, 123], "func": [1, 2, 3, 4, 6, 13, 16, 17, 18, 20, 27, 42, 43, 53, 54, 55, 66, 83, 95, 101, 112, 124], "kernel": [1, 2, 3, 4, 13, 43, 44, 46, 53, 57, 59, 67, 70, 80, 95, 108, 111, 112, 116, 117, 123, 124], "latenc": [1, 2, 111, 112, 116], "libcod": [1, 2], "ref_lat": [1, 2], "jitcontext": [1, 2], "atol": [1, 2, 95, 106, 112], "max_mismatched_ratio": [1, 2, 95, 106], "out_idx": [1, 2, 3, 4, 53, 66, 108, 111, 112, 123], "ref_prog": [1, 2, 111, 123], "rtol": [1, 2, 95, 106, 112], "skip_check": [1, 2, 111, 123], "supply_typ": [1, 2, 95, 106, 111, 123], "target": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 17, 25, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 45, 53, 54, 56, 57, 58, 59, 62, 63, 64, 66, 85, 96, 100, 102, 108, 111, 112, 116, 123, 124], "kernel_cach": [1, 3], "kernelcach": [1, 3, 4], "clear_cach": [1, 3, 4], "arch": [1, 5, 18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 123], "roller": [1, 5, 29], "templat": [1, 5, 108, 123], "analysi": [1, 5, 13, 25, 100, 124], "blockinfo": [1, 5, 6, 12, 17], "iterinfo": [1, 5, 6], "check_func_with_dynam": [1, 5, 6], "collect_block_iter_vars_used_in_access_region": [1, 5, 6], "collect_vars_used_in_prim_expr": [1, 5, 6], "detect_dominant_read": [1, 5, 6], "find_var_from_func": [1, 5, 6], "get_coalesced_veclen": [1, 5, 6], "get_max_shared_memory_per_block": [1, 5, 6], "get_max_threads_per_block": [1, 5, 6], "get_reduction_block": [1, 5, 6], "get_root_block": [1, 5, 6], "is_broadcast_epilogu": [1, 5, 6], "normalize_prim_func": [1, 5, 6], "common_schedul": [1, 5], "get_block": [1, 5, 12], "get_output_block": [1, 5, 12], "try_inlin": [1, 5, 12], "try_inline_contiguous_spati": [1, 5, 12], "matmul_analysi": [1, 5], "iterkind": [1, 5, 13], "itertrait": [1, 5, 13], "auto_inline_consumer_chain": [1, 5, 13], "auto_inline_consum": [1, 5, 13], "auto_inline_produc": [1, 5, 13], "collect_vars_from_expr": [1, 5, 13], "detect_iter_trait": [1, 5, 13], "find_arg_idx_from_buffer_chain": [1, 5, 13], "find_first_similar_buff": [1, 5, 13], "find_first_similar_region": [1, 5, 13], "find_last_producer_from_buff": [1, 5, 13], "get_dequantize_block": [1, 5, 13], "get_in_out_dtyp": [1, 5, 13], "get_index_map": [1, 5, 13], "get_ladder_stage3_map": [1, 5, 13], "get_propagate_map": [1, 5, 13], "get_tensorized_func_and_tag": [1, 5, 13], "inline_transpose_block": [1, 5, 13], "is_identity_block": [1, 5, 13], "is_identity_or_transpose_block": [1, 5, 13], "is_transpose_block": [1, 5, 13], "layout_propagate_chain": [1, 5, 13], "make_iter_fusion_index_map": [1, 5, 13], "normalize_to_matmul": [1, 5, 13], "get_rasterization_cod": [1, 5, 33], "get_roller_hints_from_func": [1, 5, 33], "get_roller_hints_from_output_nod": [1, 5, 33], "retrieve_func_from_modul": [1, 5, 33, 102, 104], "transform_kind": [1, 34], "transformkind": [1, 34, 35, 51], "cc": [1, 36, 124], "create_execut": [1, 36, 37], "create_shar": [1, 36, 37], "create_staticlib": [1, 36, 37], "cross_compil": [1, 36, 37], "get_cc": [1, 36, 37], "get_cplus_compil": [1, 36, 37], "get_global_symbol_section_map": [1, 36, 37], "get_target_by_dump_machin": [1, 36, 37], "dlpack": [1, 3, 4, 36, 53, 54, 66], "convert_func": [1, 36, 38], "to_pytorch_func": [1, 36, 38], "hipcc": [1, 36], "compile_hip": [1, 36, 39], "nvcc": [1, 36, 124], "callback_libdevice_path": [1, 36, 40], "compile_cuda": [1, 36, 40], "find_cuda_path": [1, 36, 40], "get_cuda_vers": [1, 36, 40], "have_cudagraph": [1, 36, 40], "have_fp16": [1, 36, 40], "have_int8": [1, 36, 40], "have_tensorcor": [1, 36, 40], "parse_compute_vers": [1, 36, 40], "callback": [1, 41, 85], "register_cuda_postproc": [1, 41, 42], "register_cuda_postproc_callback": [1, 41, 42, 124], "register_hip_postproc": [1, 41, 42], "register_hip_postproc_callback": [1, 41, 42], "lower": [1, 41, 85, 87, 100, 112, 116, 124], "canon_target_host": [1, 41, 43], "device_codegen": [1, 41, 43], "device_codegen_without_compil": [1, 41, 43], "extrac_param": [1, 41, 43], "get_device_cal": [1, 41, 43], "get_host_cal": [1, 41, 43], "has_device_kernel_launch": [1, 41, 43], "host_codegen": [1, 41, 43], "is_cpu_device_backend": [1, 41, 43], "is_device_cal": [1, 41, 43, 124], "is_device_call_c_devic": [1, 41, 43], "param": [1, 4, 41, 53, 55, 57, 59, 61, 66, 85, 95, 120], "compiledartifact": [1, 41, 43, 44, 66], "kernelparam": [1, 41, 43, 44, 55, 59, 61, 66, 95], "phase": [1, 41, 111], "lowerandleg": [1, 41, 45], "optimizefortarget": [1, 41, 45], "mfma_layout": [1, 47], "make_mfma_swizzle_layout": [1, 47, 48], "shared_16x16_to_ldmatrix_64x4_layout": [1, 47, 48], "shared_16x16_to_local_64x4_layout_a": [1, 47, 48], "shared_16x16_to_local_64x4_layout_b": [1, 47, 48], "shared_16x16_to_local_64x4_layout_c": [1, 47, 48], "shared_16x32_to_local_64x8_layout_a": [1, 47, 48], "shared_16x32_to_local_64x8_layout_b": [1, 47, 48], "shared_16x4_to_local_64x1_layout_a": [1, 47, 48], "shared_4x16_to_local_64x1_layout_b": [1, 47, 48], "thread_id_shared_access_64x1_to_16x4_layout_a": [1, 47, 48], "thread_id_shared_access_64x1_to_4x16_layout_b": [1, 47, 48], "thread_id_shared_access_64x4_to_16x16_layout_a": [1, 47, 48], "thread_id_shared_access_64x4_to_16x16_layout_b": [1, 47, 48], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n": [1, 47, 48], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m": [1, 47, 48], "thread_id_shared_access_64x8_to_16x32_layout_a": [1, 47, 48], "thread_id_shared_access_64x8_to_16x32_layout_b": [1, 47, 48], "mfma_macro_gener": [1, 47], "matrixcoreintrinemitt": [1, 47, 49], "mma_layout": [1, 47], "get_swizzle_layout": [1, 47, 50], "ldmatrix_16x32_to_shared_16x32_layout_a": [1, 47, 50], "ldmatrix_16x32_to_shared_16x32_layout_b": [1, 47, 50], "ldmatrix_32x16_to_shared_16x32_layout_a": [1, 47, 50], "ldmatrix_32x16_to_shared_16x32_layout_b": [1, 47, 50], "ldmatrix_32x8_to_shared_16x16_layout": [1, 47, 50], "ldmatrix_trans_32x8_to_shared_16x16_layout": [1, 47, 50], "make_mma_swizzle_layout": [1, 47, 50, 112], "mma_32x8_to_shared_16x16_layout": [1, 47, 50], "mma_store_32x8_to_shared_16x16_layout": [1, 47, 50], "shared_16x16_to_mma_32x8_layout": [1, 47, 50, 52], "shared_16x16_to_mma_32x8_layout_r": [1, 47, 50], "shared_16x16_to_mma_32x8_layout_sr": [1, 47, 50], "shared_16x16_to_mma_32x8_layout_tran": [1, 47, 50], "shared_16x16_to_mma_32x8_smoothlayout": [1, 47, 50], "shared_16x32_to_mma_32x16_layout": [1, 47, 50, 52], "shared_16x32_to_mma_32x16_smoothlayout": [1, 47, 50], "shared_32x16_to_mma_32x16_layout": [1, 47, 50, 52], "shared_32x16_to_mma_32x16_smoothlayout": [1, 47, 50], "mma_macro_gener": [1, 47], "int4tensorcoreintrinemitt": [1, 47, 51], "int4tensorcoreintrinemitterwithladdertransform": [1, 47, 51], "tensorcoreintrinemitt": [1, 47, 51, 94], "tensorcoreintrinemitterwithladdertransform": [1, 47, 51], "get_ldmatrix_offset": [1, 47, 52], "get_mma_micro_s": [1, 47, 52], "index_to_coordin": [1, 47, 52], "mfma_store_index_map": [1, 47, 52], "mma_store_index_map": [1, 47, 52], "adapt": [1, 53, 66, 95, 111], "jitkernel": [1, 3, 4, 53, 66], "compil": [1, 3, 4, 37, 39, 40, 43, 44, 53, 57, 59, 66, 105, 111, 112, 117, 120, 124], "tir": [1, 6, 12, 13, 14, 23, 49, 51, 57, 59, 66, 67, 79, 80, 93, 94, 124], "alloc": [1, 67, 85, 108, 112, 120], "alloc_frag": [1, 67, 68, 108, 112, 116, 117], "alloc_loc": [1, 67, 68, 111], "alloc_shar": [1, 67, 68, 111, 112, 116, 117], "alloc_var": [1, 67, 68], "builtin": [1, 67], "createlistofmbarrierop": [1, 67, 69], "createtmadescriptorop": [1, 67, 69], "fenceproxyasyncop": [1, 67, 69], "getmbarrierop": [1, 67, 69], "mbarrierexpecttx": [1, 67, 69], "mbarrierwaitpar": [1, 67, 69], "nosetmaxnreg": [1, 67, 69], "setmaxnreg": [1, 67, 69], "tmaloadop": [1, 67, 69], "tmastorearr": [1, 67, 69], "tmastorewait": [1, 67, 69], "waitwgmma": [1, 67, 69], "copi": [1, 67, 85, 100, 108, 112, 115, 116, 117, 124], "buffer_load_to_tile_region": [1, 67, 70], "buffer_region_to_tile_region": [1, 67, 70], "buffer_to_tile_region": [1, 67, 70], "c2d_im2col": [1, 67, 70], "region": [1, 6, 13, 67, 70, 72, 120], "custom": [1, 67, 75, 106], "atomic_add": [1, 67, 71, 111], "atomic_addx2": [1, 67, 71], "clamp": [1, 67, 71], "dp4a": [1, 67, 71], "reshap": [1, 67, 71], "view": [1, 67, 71, 111], "fill": [1, 67, 85, 116, 117], "clear": [1, 3, 4, 67, 72, 81, 96, 111, 112, 116, 117], "frame": [1, 67, 75, 77, 78, 84], "framestack": [1, 67, 73, 75], "letfram": [1, 67, 73], "get_let_valu": [1, 67, 73], "has_let_valu": [1, 67, 73], "gemm": [1, 6, 13, 67, 91, 111, 112, 116, 117, 123, 124], "kernellaunchfram": [1, 67, 75], "get_block_bind": [1, 67, 75], "get_thread_bind": [1, 67, 75, 111], "memscop": [1, 67], "parallel": [1, 20, 67, 82, 84, 85, 100, 108, 112, 116, 117, 123, 124], "pipelin": [1, 67, 112, 116, 117], "print": [1, 67, 73, 99, 112, 115], "proxi": [1, 67], "basetensorproxi": [1, 67, 80], "bufferproxi": [1, 67, 80], "fragmentbufferproxi": [1, 67, 80], "localbufferproxi": [1, 67, 80], "sharedbufferproxi": [1, 67, 80], "tensorproxi": [1, 67, 80], "make_tensor": [1, 67, 80, 108], "ptr": [1, 67, 80, 85], "reduc": [1, 31, 67, 85, 87, 104, 108, 111, 116, 120], "reduce_abssum": [1, 67, 81], "reduce_max": [1, 67, 81, 117], "reduce_min": [1, 67, 81], "reduce_sum": [1, 67, 81, 117], "annotate_layout": [1, 67, 112], "import_sourc": [1, 67], "symbol": [1, 37, 67, 83, 85, 108], "use_swizzl": [1, 67, 112, 117], "fragment": [1, 51, 68, 80, 85, 86, 94, 100, 104, 112, 116, 120, 124], "make_swizzled_layout": [1, 86, 87, 89], "swizzl": [1, 86, 112], "cdiv": [1, 90], "next_power_of_2": [1, 90], "bench": [1, 95], "do_bench": [1, 95, 96, 112], "result_idx": [1, 55, 57, 59, 61, 95], "assert_allclos": [1, 95], "assert_consist": [1, 95], "determine_profil": [1, 95], "run_onc": [1, 53, 66, 95], "with_default_adapt": [1, 95], "main": [1, 6, 80, 97, 108, 111, 112, 123, 124], "set_random_se": [1, 97], "plot_layout": [1, 98], "simplifi": [1, 13, 100, 111, 112, 115, 123, 124], "apply_simplifi": [1, 100, 101], "simplify_prim_func": [1, 100, 101], "annotatedeviceregion": [1, 100], "clusterplan": [1, 100], "frontendleg": [1, 100], "ifstmtbind": [1, 100], "injectfenceproxi": [1, 100], "injectptxasynccopi": [1, 100], "injectsoftwarepipelin": [1, 100], "layoutinfer": [1, 100], "legalizesafememoryaccess": [1, 100], "legalizevectorizedloop": [1, 100], "lowerdevicestorageaccessinfo": [1, 100], "lowerhopperintrin": [1, 100], "lowertileop": [1, 100, 124], "makepackedapi": [1, 100], "mergeifstmt": [1, 100], "multiversionbuff": [1, 100], "pipelineplan": [1, 100], "rewritewgmmasync": [1, 100], "threadpartialsync": [1, 100], "threadsync": [1, 100], "vectorizeloop": [1, 100], "warpspeci": [1, 100], "warpspecializedpipelin": [1, 100], "deprec": [1, 102], "array_reduc": [1, 102, 104], "is_frag": [1, 102, 104], "is_glob": [1, 102, 104], "is_loc": [1, 102, 104], "is_shar": [1, 102, 104], "is_shared_dynam": [1, 102, 104], "check_cuda_avail": [1, 102, 105], "check_hip_avail": [1, 102, 105], "determine_target": [1, 102, 105], "tensor": [1, 2, 16, 19, 20, 21, 25, 28, 38, 44, 57, 59, 66, 77, 80, 85, 94, 95, 96, 102, 108, 112, 124], "tensorsupplytyp": [1, 2, 66, 95, 102, 106, 111, 123], "adapt_torch2tvm": [1, 102, 106], "get_tensor_suppli": [1, 102, 106], "map_torch_typ": [1, 102, 106], "torch_assert_clos": [1, 102, 106], "class": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 44, 49, 51, 55, 57, 59, 60, 61, 62, 64, 66, 73, 75, 80, 87, 88, 93, 94, 95, 106, 116], "level": [1, 85, 108, 111, 112, 116, 117, 124], "0": [1, 2, 13, 16, 17, 35, 40, 49, 51, 64, 74, 75, 78, 79, 80, 85, 93, 94, 95, 96, 106, 108, 111, 112, 115, 120, 123, 124], "base": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 44, 49, 51, 53, 54, 57, 59, 60, 61, 62, 64, 66, 73, 75, 80, 87, 88, 91, 92, 94, 95, 99, 106, 108, 112, 115, 117, 124], "handler": 1, "log": [1, 67, 82, 85], "direct": [1, 116], "output": [1, 4, 12, 14, 17, 20, 21, 24, 27, 32, 37, 39, 40, 53, 81, 85, 88, 95, 99, 111, 112, 115, 124], "tqdm": 1, "progress": [1, 116, 124], "bar": 1, "avoid": [1, 4], "interfer": 1, "record": 1, "messag": [1, 73, 79, 124], "ar": [1, 6, 13, 20, 21, 29, 32, 37, 51, 53, 83, 85, 93, 95, 99, 106, 108, 111, 112, 116, 124], "written": [1, 108, 112], "ensur": [1, 108, 115], "isn": [1, 40], "t": [1, 4, 13, 40, 51, 83, 85, 99, 108, 111, 112, 115, 116, 117, 123], "corrupt": 1, "set": [1, 6, 27, 29, 30, 32, 37, 53, 72, 81, 85, 87, 88, 93, 108, 112, 115, 123], "": [1, 6, 13, 20, 28, 29, 30, 32, 83, 85, 88, 108, 111, 112, 116, 120, 124], "logger": 1, "paramet": [1, 4, 12, 13, 16, 20, 21, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 44, 51, 53, 66, 71, 72, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 93, 94, 95, 96, 99, 100, 103, 104, 105, 108, 111], "str": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 16, 17, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 37, 39, 40, 42, 43, 44, 49, 50, 51, 53, 55, 57, 59, 62, 63, 64, 66, 67, 70, 71, 75, 79, 80, 81, 84, 85, 94, 95, 99, 100, 103, 105, 106, 111], "int": [1, 2, 3, 4, 6, 11, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 40, 44, 49, 51, 53, 55, 57, 59, 61, 63, 66, 67, 70, 74, 75, 77, 78, 81, 85, 87, 88, 90, 92, 93, 94, 95, 96, 97, 104, 108, 111], "can": [1, 13, 37, 42, 53, 65, 66, 75, 77, 79, 85, 108, 111, 112, 115, 116, 120, 123, 124], "string": [1, 37, 40, 53, 85, 105, 124], "name": [1, 5, 6, 11, 12, 17, 20, 21, 25, 67, 83, 85, 99, 103, 111, 124], "e": [1, 6, 13, 31, 40, 85, 93, 95, 104, 108, 111, 112, 115, 116, 117, 120, 123, 124], "g": [1, 13, 31, 37, 40, 93, 95, 104, 108, 111, 112, 115, 116, 117, 120, 123, 124], "info": [1, 65, 85], "actual": [1, 37, 108], "option": [1, 2, 3, 4, 6, 13, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 42, 43, 44, 49, 51, 53, 55, 57, 59, 62, 63, 64, 66, 67, 70, 71, 73, 75, 77, 78, 79, 80, 83, 84, 85, 87, 92, 93, 94, 95, 96, 99, 106, 112, 115], "debug": [1, 79, 117], "warn": 1, "error": [1, 85, 124], "critic": [1, 111, 116], "The": [2, 3, 4, 6, 12, 13, 16, 20, 21, 27, 28, 29, 30, 31, 32, 37, 39, 40, 42, 43, 44, 51, 53, 55, 57, 59, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 115, 117, 120, 123, 124], "auto": [2, 3, 4, 13, 43, 53, 63, 66, 95, 102, 105, 106, 108, 111, 112, 117, 124], "tune": [2, 53, 111, 112, 116, 117, 124], "program": [2, 13, 43, 53, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 108, 111, 112, 117, 123], "fn": [2, 96], "callabl": [2, 37, 42, 43, 53, 55, 57, 59, 66, 83, 95, 96, 101], "object": [2, 4, 6, 8, 11, 13, 15, 16, 17, 20, 21, 22, 24, 25, 37, 44, 49, 51, 53, 60, 62, 64, 66, 73, 75, 79, 80, 85, 87, 88, 93, 94, 95, 99, 105, 116, 123], "classmethod": [2, 16, 20, 44, 57, 59, 66, 73, 75, 93], "warmup": [2, 95, 96, 111, 123], "25": [2, 95, 96], "rep": [2, 95, 96, 111, 123], "100": [2, 95, 96], "timeout": [2, 62], "list": [2, 3, 4, 6, 11, 12, 13, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 43, 44, 53, 55, 57, 59, 61, 66, 70, 71, 75, 78, 83, 85, 87, 88, 93, 95, 96, 104, 111, 123], "normal": [2, 6, 102, 106], "none": [2, 3, 4, 13, 15, 17, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 42, 43, 44, 49, 51, 53, 55, 57, 59, 62, 63, 64, 66, 67, 70, 71, 73, 75, 77, 78, 80, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 99, 111, 115, 123], "float": [2, 20, 40, 62, 85, 95, 96, 106, 108, 111, 112, 123, 124], "01": [2, 95, 106, 115], "bool": [2, 3, 4, 6, 9, 10, 11, 13, 16, 20, 21, 25, 27, 29, 30, 32, 33, 42, 43, 44, 46, 49, 50, 51, 52, 53, 57, 59, 62, 63, 64, 66, 73, 74, 75, 80, 81, 83, 85, 87, 92, 93, 94, 96, 99, 100, 104, 105, 106], "fals": [2, 3, 4, 6, 13, 17, 20, 21, 27, 29, 30, 32, 33, 39, 40, 42, 43, 44, 49, 50, 51, 52, 53, 57, 59, 66, 74, 75, 80, 83, 85, 87, 92, 93, 94, 99, 104, 105, 106, 111, 123], "liter": [2, 3, 4, 6, 51, 52, 53, 63, 66, 85, 96, 105], "cuda": [2, 5, 7, 20, 40, 42, 57, 59, 85, 100, 105, 111, 112, 115, 116, 123, 124], "hip": [2, 39, 42, 64, 105, 112, 116], "dict": [2, 3, 4, 13, 16, 17, 20, 21, 24, 25, 28, 29, 30, 32, 37, 53, 57, 59, 64, 66, 84], "ani": [2, 17, 53, 57, 59, 64, 66, 67, 79, 82, 84, 85, 93, 115], "decor": [2, 42, 53, 83, 103], "databas": [3, 4, 66], "persist": [3, 4], "init": [3, 64, 85], "file": [3, 4, 37, 39, 40, 65, 66, 99, 115, 116, 124], "primfunc": [3, 4, 6, 13, 17, 20, 27, 33, 43, 53, 57, 59, 63, 66, 83, 85, 101, 104], "arg": [3, 4, 13, 25, 64, 69, 70, 83, 85, 106, 120], "union": [3, 4, 6, 7, 9, 11, 13, 31, 33, 37, 42, 43, 44, 50, 51, 53, 57, 59, 63, 66, 70, 72, 74, 75, 83, 85, 96, 101, 105], "target_host": [3, 4, 43, 53, 63, 66], "execution_backend": [3, 4, 53, 66, 108], "ctype": [3, 4, 53, 54, 59, 66], "cython": [3, 4, 53, 54, 66, 108], "verbos": [3, 4, 39, 40, 53, 57, 59, 66, 99, 106], "pass_config": [3, 4, 53, 54, 56, 57, 58, 59, 64, 66], "reus": [3, 4], "kern": 3, "l": [3, 85], "us": [3, 4, 6, 12, 13, 16, 20, 21, 28, 29, 30, 32, 37, 40, 42, 44, 51, 53, 57, 59, 65, 77, 78, 80, 83, 85, 87, 94, 95, 96, 99, 103, 108, 111, 112, 116, 120, 124], "entir": [3, 4, 112, 116, 124], "cache_dir": 4, "home": 4, "leiwang": 4, "redund": [4, 20], "cu": 4, "sourc": [4, 25, 37, 38, 57, 59, 63, 64, 66, 67, 85, 116, 117], "code": [4, 39, 40, 42, 44, 57, 59, 64, 66, 75, 85, 108, 111, 112, 115, 116, 123, 124], "warpped_kernel": 4, "wrap": [4, 38, 54, 57, 59, 64, 66, 86, 87, 88, 89, 100], "kernel_lib": 4, "so": [4, 108, 115], "librari": [4, 37, 57, 59, 65, 66, 116, 117, 124], "pkl": 4, "function": [4, 6, 13, 20, 21, 27, 28, 30, 37, 38, 40, 42, 51, 53, 57, 59, 66, 73, 79, 80, 83, 85, 94, 95, 96, 104, 106, 108, 112, 120, 124], "prepar": [4, 112], "indic": [4, 6, 43, 51, 53, 57, 59, 75, 85, 87, 88, 95, 99, 103, 112, 124], "specifi": [4, 27, 31, 40, 53, 71, 72, 83, 85, 93, 95, 105, 106, 108, 111, 112, 115], "which": [4, 20, 21, 49, 51, 53, 85, 87, 94, 95, 108, 111, 112, 115, 116, 123, 124], "return": [4, 12, 13, 20, 21, 25, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 44, 46, 51, 53, 57, 59, 64, 66, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 104, 105, 108, 111, 112, 120, 123, 124], "platform": 4, "host": [4, 43, 44, 63, 66, 115], "argument": [4, 53, 66, 83, 85, 87, 112], "pass": [4, 37, 40, 66, 96, 100, 101, 112, 116, 124], "either": [4, 40, 72, 79, 120], "freshli": 4, "from": [4, 12, 13, 20, 25, 37, 38, 40, 44, 53, 57, 59, 65, 66, 73, 75, 80, 83, 85, 94, 104, 108, 111, 112, 116, 117, 120, 124], "type": [4, 12, 13, 20, 21, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 44, 51, 53, 59, 66, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 104, 105], "includ": [4, 53, 79, 108, 112, 115, 116, 124], "both": [4, 44, 79, 94, 108, 112], "memori": [4, 20, 21, 80, 85, 94, 100, 104, 108, 111, 112, 117, 120, 124], "disk": 4, "arch_bas": [5, 7], "tiledevic": [5, 7, 8, 9, 10, 11, 20, 21, 27, 28, 29, 30, 31, 32, 33], "cdna": [5, 7, 27], "is_cdna_arch": [5, 7, 9, 26, 27], "cpu": [5, 7, 75, 112, 117, 123, 124], "is_cpu_arch": [5, 7, 10], "tensorinstruct": [5, 7, 11], "check_sm_vers": [5, 7, 11], "has_mma_support": [5, 7, 11], "is_ada_arch": [5, 7, 11], "is_ampere_arch": [5, 7, 11, 26, 27], "is_cuda_arch": [5, 7, 11], "is_hopper_arch": [5, 7, 11], "is_tensorcore_supported_precis": [5, 7, 11], "is_volta_arch": [5, 7, 11, 26, 27], "auto_infer_current_arch": [5, 7], "get_arch": [5, 7], "polici": [5, 14, 74, 92, 93, 94, 120], "shape_infer": [5, 14], "bestfit": [5, 14], "block": [5, 6, 12, 13, 14, 15, 17, 20, 25, 67, 75, 93, 94, 108, 111, 112, 116, 123], "hint": [5, 14, 20, 27, 28, 29, 30, 31, 32, 33, 108, 112, 123], "intrininfo": [5, 14, 16], "stride": [5, 14, 16, 20, 21, 52, 70, 85], "tensorcoreextraconfig": [5, 14, 16], "tiledict": [5, 14, 16, 20, 21], "node": [5, 14, 16, 18, 20, 21, 25, 27, 29, 85, 88], "blockanalyz": [5, 14, 17], "edg": [5, 14, 17], "outputnod": [5, 14, 17, 20, 27, 29, 33], "placeholdernod": [5, 14, 17], "primfuncnod": [5, 14, 16, 17, 20, 21], "find_topo_sort": [5, 14, 17], "find_topo_sort_prior": [5, 14, 17], "pre_order_travers": [5, 14, 17], "topo_ord": [5, 14, 17], "raster": [5, 14, 20, 21, 112], "noraster": [5, 14, 22, 123], "rasterization2dcolumn": [5, 14, 22], "rasterization2drow": [5, 14, 22], "basetempl": [5, 26, 27, 28, 29, 30, 31, 32], "elementwis": [5, 6, 26, 117, 123], "elementwisetempl": [5, 26, 28], "flashattent": [5, 26, 117], "flashattentiontempl": [5, 26, 29], "gemv": [5, 6, 26, 117], "gemvtempl": [5, 26, 30], "general_reduc": [5, 26], "generalreductiontempl": [5, 26, 31], "matmul": [5, 13, 26, 112, 116, 123, 124], "matmultempl": [5, 26, 32, 123], "block_rv": [5, 6], "dom": [5, 6, 20, 21], "dom_kind": [5, 6], "is_elementwis": [5, 6], "is_gemm": [5, 6], "is_gemv": [5, 6], "is_inject": [5, 6], "is_reduct": [5, 6], "iter": [5, 6, 13, 20, 77, 78, 84, 87, 88, 95, 96, 111], "kind": [5, 6, 13], "loop_rv": [5, 6], "var": [5, 6, 44, 57, 59, 68, 72, 73, 74, 75, 80, 85], "kiter_i": [5, 13], "kiter_j": [5, 13], "kiter_k": [5, 13], "kiter_": [5, 13], "kiter_t": [5, 13], "extent": [5, 13, 20, 21, 70, 75, 77, 84, 85, 87], "infra": 5, "loop": [6, 77, 78, 84, 94, 108, 112, 116, 120, 123], "blockrv": [6, 12, 13, 17, 25], "reduction_block": 6, "inform": [6, 16, 17, 44, 65, 74, 99, 100], "about": [6, 85, 99, 116], "primexpr": [6, 13, 25, 49, 51, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 85, 87, 88, 94], "domain": [6, 20, 21, 112, 117], "exampl": [6, 37, 83, 85, 93, 108, 111, 116, 120], "ssss": 6, "sssr": 6, "sch": [6, 12, 13, 17], "schedul": [6, 12, 13, 15, 16, 20, 21, 112, 123], "whether": [6, 13, 27, 32, 42, 43, 57, 59, 75, 80, 83, 85, 96, 105], "i": [6, 13, 16, 17, 20, 21, 22, 27, 28, 40, 43, 44, 48, 49, 50, 51, 52, 53, 65, 73, 74, 75, 78, 79, 83, 85, 87, 93, 99, 103, 104, 105, 106, 108, 111, 112, 115, 116, 117, 120, 121, 123, 124], "trivial": [6, 13], "map": [6, 13, 20, 21, 37, 51, 73, 87, 88, 99, 108, 112, 116, 120, 123], "between": [6, 71, 78, 85, 96, 100, 108, 116, 120], "read": [6, 13, 85, 100, 116, 117], "write": [6, 13, 85, 100, 108, 111, 112, 116, 117, 120, 124], "workload": [6, 93], "inject": [6, 75], "all": [6, 13, 20, 21, 44, 63, 67, 75, 80, 82, 83, 85, 93, 100, 108, 111, 115, 120, 121], "its": [6, 20, 79, 83, 108], "reduct": [6, 13, 20, 21, 85, 94, 120, 123], "r": [6, 85], "o": 6, "looprv": 6, "properti": [6, 16, 17, 22, 27, 28, 29, 30, 31, 32, 57, 59, 64, 66, 75, 87, 88, 93, 94, 95], "rang": [6, 71, 87, 112], "collect": [6, 121], "variabl": [6, 20, 21, 37, 44, 72, 73, 79, 80, 84, 85, 87, 88, 115, 120, 124], "access": [6, 85, 100, 108, 115, 116], "buffer": [6, 13, 17, 44, 51, 70, 71, 72, 74, 78, 79, 80, 81, 85, 87, 89, 92, 93, 94, 99, 100, 104, 111, 112, 116, 120, 123, 124], "expr": [6, 13, 25, 80, 85], "detect": [6, 13, 51, 95, 105, 120], "domin": 6, "block_stmt": [6, 13], "target_bit": 6, "128": [6, 83, 108, 111, 112, 123, 124], "func_nam": [6, 85], "epilogu": 6, "check": [6, 20, 21, 27, 43, 44, 73, 85, 93, 95, 104, 105, 108, 124], "broadcast": 6, "pattern": [6, 13, 85, 112, 116, 124], "form": [6, 29, 30, 32, 49, 51], "get_avaliable_tensorintrin_shap": [7, 8, 11], "repres": [8, 13, 20, 44, 49, 51, 75, 80, 87, 88, 93, 94, 116, 120], "architectur": [8, 20, 27, 28, 29, 30, 31, 32, 39, 40, 112, 116], "comput": [8, 13, 16, 20, 21, 25, 28, 29, 30, 31, 32, 40, 80, 85, 87, 88, 93, 96, 108, 111, 112, 116, 117, 124], "devic": [8, 43, 44, 59, 63, 85, 100, 112, 116, 121], "captur": [8, 116], "variou": [8, 16, 20, 65, 108, 112, 116], "hardwar": [8, 27, 28, 29, 30, 31, 32, 112, 124], "specif": [8, 27, 80, 85, 95, 108, 112, 115, 116, 117, 124], "shape": [11, 16, 17, 20, 21, 24, 25, 26, 28, 31, 41, 44, 52, 57, 59, 68, 71, 80, 85, 87, 88, 93, 116, 120], "in_dtyp": [11, 16, 26, 29, 30, 32, 92, 94, 108, 123], "accum_dtyp": [11, 26, 29, 30, 32, 49, 51, 92, 94, 111, 112, 123, 124], "strategi": [12, 111, 123, 124], "get": [12, 13, 20, 37, 40, 59, 65, 73, 85, 87, 88, 111, 115, 124], "target_block": 12, "analyz": [12, 13, 23, 25, 108, 124], "output_block": 12, "try": [12, 59, 85], "inlin": [12, 112], "mani": [12, 111, 112], "possibl": [12, 20, 21], "remain": [12, 108], "cannot": [12, 85], "block_info": 12, "contigu": 12, "spatial": [12, 13, 31], "A": [13, 20, 21, 27, 28, 29, 30, 31, 32, 37, 42, 51, 52, 53, 64, 66, 71, 72, 73, 74, 75, 79, 80, 83, 85, 87, 88, 92, 93, 94, 95, 103, 108, 111, 112, 117, 120, 123, 124], "rule": [13, 85], "gpu": [13, 39, 40, 75, 80, 115, 116, 117, 123, 124], "oper": [13, 28, 38, 44, 57, 59, 72, 79, 80, 85, 87, 104, 111, 112, 115, 116, 120, 123, 124], "valu": [13, 17, 29, 30, 32, 35, 44, 71, 72, 73, 75, 78, 79, 80, 83, 84, 85, 93, 106, 108, 124], "enum": [13, 106], "like": [13, 67, 73, 75, 82, 83, 85, 108, 111, 112, 116, 124], "we": [13, 43, 75, 85, 108, 111, 112, 115, 116, 120, 124], "c": [13, 32, 37, 57, 59, 64, 71, 74, 75, 85, 92, 93, 94, 108, 111, 112, 115, 116, 120, 123, 124], "j": [13, 48, 50, 52, 108, 112, 115], "k": [13, 17, 26, 29, 30, 32, 74, 85, 112, 123, 124], "b": [13, 28, 32, 51, 52, 71, 74, 83, 85, 90, 92, 93, 94, 108, 111, 112, 116, 120, 123], "where": [13, 28, 85, 87, 99, 108, 112, 124], "fundament": 13, "ax": [13, 14, 16, 20, 21, 31], "other": [13, 15, 20, 21, 38, 108, 111, 116, 120, 123, 124], "batch": 13, "1": [13, 16, 20, 21, 28, 29, 35, 40, 49, 51, 52, 57, 59, 60, 74, 75, 85, 87, 92, 93, 94, 95, 106, 108, 111, 112, 116, 124], "2": [13, 20, 21, 35, 49, 51, 52, 57, 59, 75, 85, 93, 106, 108, 111, 112, 116, 120, 124], "3": [13, 35, 52, 57, 59, 75, 106, 111, 112, 120], "4": [13, 22, 52, 93, 106, 111, 112, 115, 123, 124], "tvm": [13, 28, 29, 30, 31, 32, 37, 38, 40, 44, 53, 57, 59, 63, 66, 72, 80, 83, 85, 93, 94, 95, 100, 101, 104, 112, 117, 124], "ir": [13, 57, 59, 63, 67, 80, 82, 94, 116, 124], "skip_block": 13, "prim_expr": 13, "tupl": [13, 16, 17, 20, 21, 25, 49, 51, 57, 59, 63, 75, 80, 85, 93], "trait": 13, "doe": [13, 20, 21, 85, 108, 112], "match": [13, 83, 112], "main_block": 13, "travers": [13, 108, 123], "find": [13, 25, 40, 115], "index": [13, 52, 53, 85, 86, 87, 88, 116, 124], "bufferregion": [13, 70, 72, 120], "In": [13, 108, 111, 112, 116, 117, 124], "out": [13, 37, 51, 59, 81, 85, 111, 112, 120], "data": [13, 28, 30, 32, 80, 85, 87, 94, 108, 111, 112, 116, 117, 120, 121, 124], "given": [13, 16, 20, 21, 28, 53, 75, 80, 87, 88, 93, 95, 123], "indexmap": [13, 51], "n": [13, 19, 20, 26, 29, 30, 32, 49, 51, 64, 85, 93, 108, 111, 112, 123, 124], "infer": [13, 20, 21, 23, 24, 25, 53, 93, 94, 100, 111, 112, 116, 120], "last": [13, 85, 111], "axi": [13, 16, 20, 21, 85, 111, 120], "index_map": 13, "dtype": [13, 17, 26, 28, 31, 41, 44, 50, 52, 57, 59, 67, 68, 71, 80, 85, 94, 106, 108, 111, 112, 120, 123, 124], "float16": [13, 28, 29, 30, 31, 32, 49, 51, 52, 111, 112, 123, 124], "index_dtyp": 13, "int32": [13, 49, 51, 67], "tran": [13, 85], "true": [13, 17, 20, 21, 27, 30, 32, 42, 44, 49, 51, 62, 67, 81, 83, 85, 87, 93, 96, 99, 100, 104, 105, 106, 111, 112, 123], "matrix_nam": 13, "skip_norm": 13, "allow_gemv": [13, 33], "necessari": [13, 44, 94, 111, 115, 116, 117], "conv2d": 13, "im2col": 13, "start_block": 13, "start_buff": 13, "end_block": 13, "kind_ord": 13, "coalesced_factor": [14, 18, 19], "coalesced_tensor_shap": [14, 18, 19], "factor": [14, 18, 19, 20, 21, 80, 87, 93], "get_all_factor": [14, 18, 19], "default": [14, 18, 27, 28, 31, 37, 40, 42, 43, 66, 80, 85, 99, 106, 112], "defaultpolici": [14, 18, 20, 21], "tensorcor": [14, 16, 18, 40], "tensorcorepolici": [14, 18, 21], "inputshapeinfer": [14, 23, 24, 25], "statement": [14, 23, 24, 25, 79, 84, 85, 120, 124], "dependencyanalysi": [14, 23, 25], "tensordepnod": [14, 23, 25], "get_analyzer_by_tir": [14, 23, 25], "region_exist_in_list": [14, 23, 25], "walk_indic": [14, 23, 25], "free": [14, 15, 85], "malloc": [14, 15], "merg": [14, 15], "size": [14, 15, 20, 21, 85, 87, 108, 112, 120], "complete_config": [14, 16], "from_dict": [14, 16], "raxis_ord": [14, 16], "step": [14, 16, 20, 21, 94, 111, 115], "tensorcore_leg": [14, 16], "to_dict": [14, 16], "inter_transform_a": [14, 16], "inter_transform_b": [14, 16], "is_input_8bit": [14, 16], "smooth_a": [14, 16], "smooth_b": [14, 16], "compute_elements_from_shap": [14, 16], "compute_strides_from_shap": [14, 16], "is_valid": [14, 16], "get_rstep": [14, 16], "get_til": [14, 16], "get_block_info": [14, 17], "get_block_nam": [14, 17], "get_buff": [14, 17], "get_consumer_block": [14, 17], "get_input_buff": [14, 17], "get_output_buff": [14, 17], "get_producer_block": [14, 17], "get_reduce_axi": [14, 17], "get_spatial_axi": [14, 17], "dst_id": [14, 17], "dst_node": [14, 17], "src_id": [14, 17], "src_node": [14, 17], "add_tag": [14, 17], "get_dtyp": [14, 17], "get_ir": [14, 17], "get_shap": [14, 17], "get_tag": [14, 17], "input": [14, 17, 28, 29, 30, 32, 37, 42, 60, 66, 71, 79, 81, 85, 88, 94, 95, 112, 116], "is_output": [14, 17], "is_placehold": [14, 17], "num_output": [14, 17], "set_dtyp": [14, 17], "set_input": [14, 17], "set_output": [14, 17], "set_shap": [14, 17], "set_tag": [14, 17], "update_tag": [14, 17], "extent_wrapp": [14, 17], "footprint": [14, 17], "get_buffer_dtyp": [14, 17], "get_opt_shap": [14, 17], "get_reduce_inputs_dtyp": [14, 17], "get_space_dim": [14, 17], "infer_tensorcore_axi": [14, 17], "propag": [14, 17], "propagate_input": [14, 17], "propagate_inputs_on_reduct": [14, 17], "propagate_output": [14, 17], "propagate_reduction_input": [14, 17], "get_cod": [14, 22], "panel_width": [14, 22], "panel_width_": [14, 22], "get_device_funct": [14, 22], "benefit": 15, "For": [15, 20, 21, 22, 25, 84, 85, 108, 112, 115, 116, 124], "align": [15, 80, 108], "32": [15, 51, 85, 108, 111, 112, 120, 123, 124], "start": [15, 25, 78, 84, 85, 111, 120], "end": [15, 85, 108], "is_fre": 15, "definit": [16, 31, 83], "central": 16, "configur": [16, 20, 21, 27, 28, 29, 30, 31, 32, 80, 108, 111, 112, 115], "manag": [16, 57, 59, 75, 112, 116], "task": [16, 108], "dic": 16, "out_dtyp": [16, 26, 29, 30, 32, 108, 123], "trans_b": [16, 26, 30, 32], "input_transform_kind": 16, "weight_transform_kind": 16, "relat": [16, 20], "as_shap": 16, "bs_shape": 16, "af_shap": 16, "bf_shape": 16, "tc_axi": 16, "thi": [16, 20, 21, 27, 29, 30, 32, 37, 51, 53, 57, 59, 65, 77, 79, 80, 85, 87, 96, 100, 108, 111, 112, 115, 116, 120, 124], "store": [16, 27, 31, 44, 51, 81, 85, 111, 120], "extra": [16, 20, 21, 85], "output_til": [16, 20], "tile": [16, 17, 20, 21, 91, 108, 111, 115, 123], "wrapper": [17, 53, 54, 66, 73, 75], "analaysi": 17, "itervar": [17, 87, 88], "tag": [17, 18, 20, 21], "v": [17, 124], "id": [17, 85], "datatyp": [17, 50, 111], "overwrit": 17, "prim_func": [17, 54, 56, 57, 58, 59, 64, 67, 82, 83, 108, 111, 112, 123, 124], "rstep": [17, 24, 25, 123], "stride_map": 17, "output_node_list": 17, "block_analyz": [17, 25], "list_of_nod": 17, "assign_block_s": [18, 20], "check_tile_shape_isvalid": [18, 20, 21], "compute_node_stride_map": [18, 20, 21], "compute_tile_dict": [18, 20], "compute_workload_per_item": [18, 20], "dfs_smem_til": [18, 20], "emit_config": [18, 20], "from_output_nod": [18, 20], "from_prim_func": [18, 20], "get_base_til": [18, 20], "get_block_s": [18, 20], "get_node_reduce_step_candid": [18, 20, 21], "infer_node_smem_usag": [18, 20, 21], "plan_raster": [18, 20, 21], "recommend_block_s": [18, 20], "score_block_s": [18, 20], "block_reduction_depth": [18, 21], "pipeline_stag": [18, 21, 123], "use_async_copi": [18, 21], "wmma_k": [18, 21], "subtensor": 19, "transaction_s": 19, "core": [20, 80, 85, 94, 116], "fastdlight": 20, "heurist": 20, "plan": [20, 21, 22], "tri": 20, "minim": [20, 108, 116], "traffic": 20, "maxim": 20, "bitbla": [20, 112], "td": [20, 21], "topk": [20, 27, 28, 29, 30, 31, 32, 33, 123], "assign": [20, 108, 111, 112, 116], "recommend": [20, 27, 31, 108, 115, 123], "number": [20, 21, 27, 28, 29, 30, 31, 32, 40, 74, 75, 78, 85, 87, 93, 95, 96, 106, 108, 111, 116, 120], "top": [20, 27, 28, 29, 30, 31, 32, 67, 73, 75, 117, 120, 123], "consid": [20, 28, 29, 30, 32, 112, 120, 124], "yield": [20, 124], "primari": [20, 57, 59], "valid": [20, 21, 85, 95, 105, 112, 124], "context": [20, 21, 112, 116], "contain": [20, 21, 28, 29, 30, 32, 44, 66, 72, 104, 115, 116, 123], "otherwis": [20, 21, 27, 44, 49, 51, 53, 93, 104, 105], "dictionari": [20, 21, 28, 29, 30, 32], "rstep_map": 20, "share": [20, 21, 37, 66, 68, 80, 85, 94, 100, 104, 112, 116, 120], "cost": [20, 108], "grid": [20, 67, 82, 84, 108, 112, 120], "init_til": 20, "minimum": [20, 71, 78, 84, 85], "satisfi": [20, 85], "equal": 20, "length": [20, 120], "space": [20, 85, 87, 112, 116], "dimens": [20, 44, 74, 75, 81, 85, 87, 93, 94, 108, 112, 120, 124], "determin": [20, 40, 93, 95, 105, 116], "optim": [20, 27, 28, 29, 30, 32, 108, 111, 112, 116, 117, 120, 124], "constraint": [20, 85, 120], "score": 20, "chosen": 20, "constrain": 20, "maximum": [20, 71, 78, 84, 85, 95, 106, 116], "1024": [20, 108, 111, 112, 124], "method": [20, 27, 29, 30, 31, 32, 73, 75, 83, 93, 103, 108], "calcul": [20, 21, 85, 96, 124], "candid": [20, 21], "each": [20, 21, 22, 37, 108, 111, 112, 116, 120], "gener": [20, 21, 30, 42, 52, 74, 75, 79, 85, 94, 95, 108, 115, 116, 117], "idea": [20, 21, 112], "first": [20, 21, 79, 81, 85, 87, 106, 108, 111, 116, 124], "sinc": [20, 21, 108, 112, 120], "requir": [20, 21, 93, 108, 111, 112, 115, 124], "boundari": [20, 21, 120], "larg": [20, 21, 111], "prime": [20, 21, 93], "rare": [20, 21], "case": [20, 21, 108, 111, 120, 124], "power": [20, 21, 67, 82, 85, 111], "It": [20, 21, 27, 31, 53, 79, 80, 85, 111, 112, 120, 123], "raxi": [20, 21], "usag": [20, 21, 57, 59, 108, 112, 116], "estim": [20, 21], "amount": [20, 21], "implement": [20, 21, 27, 31, 43, 52, 80, 95, 108, 116, 117, 120, 124], "yet": [20, 21, 112, 115, 116], "rais": [20, 21, 27, 29, 32, 44, 51, 53, 72, 73, 79, 93, 94, 104, 105], "rasterrationplan": [20, 21], "sort": 20, "effici": [20, 108, 112, 116, 123], "fit": [20, 108], "rel": [20, 85, 95, 106], "warp": [20, 74, 85, 93, 116], "sm": 20, "partit": [20, 93, 94, 120], "two": [20, 85, 106, 108, 124], "respect": [20, 85, 108, 124], "16": [21, 49, 51, 111, 115, 124], "l2": [22, 96, 120], "local": [22, 51, 68, 80, 85, 104, 112, 116], "column": [22, 32, 85, 93], "line": [22, 112, 124], "width": [22, 77, 85], "_": [22, 124], "row": [22, 32, 67, 85, 93], "_________": 22, "__________": 22, "get_input_expr": [23, 24, 25], "find_path_from_sourc": [23, 25], "get_or_create_nod": [23, 25], "print_depend": [23, 25], "traverse_depend": [23, 25], "construct_dependency_target": [23, 25], "make_revers": [23, 25], "add_next": [23, 25], "add_prev": [23, 25], "dedupl": [23, 25], "dep": [24, 25], "output_expr": [24, 25], "dependent_region": 24, "var_map": 24, "ordereddict": 24, "range_map": 24, "start_nam": 25, "target_nam": 25, "path": [25, 37, 40, 57, 59, 66, 105, 115], "exist": [25, 42, 73, 75, 87, 115, 123, 124], "constintbound": 25, "input_nam": 25, "input_it": 25, "depend": [25, 112, 115, 116], "lst": 25, "equivalent_funct": [26, 27], "get_hardware_aware_config": [26, 27, 28, 29, 30, 31, 32], "has_arch": [26, 27], "initialize_funct": [26, 27, 28, 29, 30, 31, 32], "output_nod": [26, 27, 33], "recommend_hint": [26, 27, 123], "set_funct": [26, 27], "set_output_nod": [26, 27], "with_arch": [26, 27, 123], "class_attribut": [26, 28, 29, 30, 31, 32, 92, 93], "params_as_dict": [26, 28, 29, 30, 31, 32, 92, 93], "batch_siz": [26, 29], "head_dim": [26, 29], "is_caus": [26, 29], "num_head": [26, 29], "seq_kv_length": [26, 29], "seq_length": [26, 29], "with_bia": [26, 30, 32], "structur": [26, 27, 31, 85], "m": [26, 29, 32, 49, 51, 85, 93, 108, 111, 112, 123, 124], "trans_a": [26, 32], "abc": [27, 55, 64], "awar": [27, 28, 29, 30, 31, 32, 112, 116], "serv": [27, 80, 108], "an": [27, 28, 35, 37, 44, 53, 66, 72, 73, 75, 79, 83, 85, 87, 104, 106, 108, 111, 112, 116, 117, 124], "abstract": [27, 31, 64, 112, 116], "defin": [27, 28, 29, 30, 32, 37, 88, 95, 108, 112, 116, 123, 124], "subclass": [27, 31], "current": [27, 37, 46, 53, 59, 67, 73, 75, 85, 88, 115, 120], "associ": [27, 73, 88, 108], "10": [27, 28, 29, 30, 31, 32, 33, 85, 95, 112, 115, 123], "must": [27, 31, 53, 93, 108, 120], "should": [27, 31, 83, 85, 96, 104, 111, 120], "placehold": [27, 29, 30, 32, 85], "respons": [27, 94, 108], "initi": [27, 28, 29, 30, 32, 81, 85, 108, 112, 116], "notimplementederror": 27, "If": [27, 29, 32, 40, 44, 51, 53, 72, 79, 81, 85, 87, 93, 94, 99, 104, 105, 106, 111, 115, 120], "amper": 27, "volta": 27, "provid": [27, 38, 40, 53, 73, 75, 79, 80, 85, 87, 88, 93, 94, 108, 112, 116, 123, 124], "itself": 27, "instanc": [27, 44, 53, 66, 108, 124], "updat": [27, 115, 120], "element": [28, 77, 85, 95, 106, 108, 111, 120], "wise": [28, 77, 85], "attribut": [28, 29, 30, 32, 43, 83], "represent": [28, 116, 124], "retriev": [28, 29, 30, 32, 88, 104, 108], "simpl": [28, 75, 111, 124], "graph": [28, 40], "built": [28, 38, 112, 115, 123, 124], "express": [28, 77, 79, 80, 85, 87, 88, 94, 112], "_output_nod": 29, "acceler": [29, 30, 32, 108, 116, 123], "matrix": [29, 30, 32, 51, 52, 85, 94, 104, 116, 117], "multipl": [29, 30, 32, 85, 95, 96, 104, 116, 117, 120], "up": [29, 30, 32, 85, 112, 117], "matric": [29, 30, 32, 85, 116], "api": [29, 30, 32], "appli": [29, 30, 32, 53, 101, 108], "bia": [29, 30, 32], "cast": [29, 30, 32, 80, 85, 111], "assertionerror": [29, 32, 51, 53, 93, 94, 104, 105, 106], "posit": [29, 32, 85], "integ": [29, 32, 44, 75, 85, 102, 104, 106, 111, 123], "vector": [30, 67, 82, 84, 85, 108, 117, 120, 124], "transposit": [30, 32, 94], "addit": [30, 32, 37, 39, 40, 66, 85, 87, 99, 108, 116, 123], "pars": [31, 40, 83], "ssr": [31, 94], "build": [31, 53, 85, 117], "appropri": [31, 53, 105, 112], "self": 31, "_func": 31, "transpos": [32, 52], "befor": [32, 75, 108, 115, 124], "accumul": [32, 85, 94, 111, 112, 116], "add": [32, 120], "term": 32, "pannel_width": 33, "8": [33, 48, 49, 51, 108, 111, 115, 124], "func_or_modul": 33, "irmodul": [33, 43, 44, 45, 57, 59, 63, 64, 85, 101, 104, 116], "tensorcore_onli": 33, "extra_tag": 33, "ir_modul": [33, 56, 57, 58, 59, 104], "interwarptransform": [34, 35], "intrawarptransform": [34, 35], "ldmatrixtransform": [34, 35], "nontransform": [34, 35], "is_inter_warp_transform": [34, 35], "is_intra_warp_transform": [34, 35], "is_ld_matrix_transform": [34, 35], "is_non_transform": [34, 35], "intenum": [35, 93], "enumer": [35, 93, 106], "invok": [37, 39, 40, 66, 92, 94, 112], "system": [37, 39, 40, 105, 115, 116], "cwd": 37, "ccache_env": 37, "creat": [37, 44, 51, 66, 77, 80, 85, 94, 112, 115], "execut": [37, 44, 53, 79, 85, 95, 108, 116, 124], "binari": [37, 85], "command": [37, 115], "urrent": 37, "work": [37, 108, 116], "directori": [37, 59, 99, 115], "environ": [37, 115], "ccach": 37, "disabl": [37, 46], "static": [37, 73, 93], "tarbal": 37, "compile_func": 37, "output_format": 37, "get_target_tripl": 37, "add_fil": 37, "cross": 37, "special": [37, 111, 116, 120, 124], "construct": [37, 75, 77, 78, 80, 116], "autotvm": 37, "measur": [37, 96, 112], "export_librari": [37, 53, 66], "perform": [37, 72, 81, 85, 94, 96, 108, 111, 116, 117, 120, 124], "format": [37, 39, 40, 85], "tripl": 37, "accord": [37, 85], "dumpmachin": 37, "part": [37, 112], "fcompil": 37, "import": [37, 75, 83, 108, 112, 115, 123, 124], "ndk": 37, "export": [37, 66, 115], "arm": 37, "gcc": [37, 115], "mod": [37, 45, 55, 61, 124], "build_runtime_modul": 37, "path_dso": 37, "linux": [37, 115], "gnueabihf": 37, "specialized_ndk": 37, "sysroot": 37, "fpic": 37, "lm": 37, "wa": [37, 59, 87, 108, 124], "found": [37, 59, 73, 111], "nm": 37, "global": [37, 46, 80, 83, 85, 100, 104, 112, 116, 120], "via": [37, 85, 91, 111, 115, 116], "symbol_section_map": 37, "section": [37, 85, 108, 116], "functor": 37, "bridg": 38, "framework": [38, 115, 123], "support": [38, 40, 44, 53, 87, 108, 112, 116, 120], "tvm_func": 38, "tensor_typ": 38, "to_dlpack_func": 38, "convert": [38, 44, 55, 57, 59, 61, 95, 96, 102, 120], "one": [38, 53, 104, 108, 120, 124], "accept": [38, 85], "anoth": [38, 85], "arrai": [38, 85, 104], "pytorch": [38, 44, 57, 59, 66, 96, 112, 115], "wrapped_func": 38, "target_format": [39, 40], "hsaco": 39, "path_target": [39, 40], "amd": [39, 85, 112, 116], "bytearrai": [39, 40], "ptx": [40, 85, 112], "cubin": 40, "root": [40, 85, 124], "cuda_path": 40, "version": [40, 59, 85, 108, 111, 117, 124], "compute_vers": 40, "fp16": [40, 49, 51, 112, 120], "capabl": [40, 112], "6": [40, 106, 112], "int8": [40, 49, 51, 52], "7": [40, 106, 112, 115], "divid": [40, 85], "major": [40, 85], "minor": 40, "device_mod": [41, 43, 44, 54, 57, 59, 64, 124], "host_mod": [41, 43, 44, 54, 57, 59, 64], "kernel_sourc": [41, 44, 53, 66, 124], "rt_mod": [41, 44], "from_buff": [41, 44], "from_var": [41, 44], "is_float8": [41, 44], "is_scalar": [41, 44], "is_unsign": [41, 44], "overrid": [42, 73, 96], "regist": [42, 85, 108, 112, 116, 120, 124], "post": 42, "process": [42, 108, 111, 115, 116], "take": [42, 85, 112, 115, 124], "without": [42, 53, 73, 75, 80, 83, 112, 116, 117], "parenthes": 42, "def": [42, 83, 108, 111, 112, 123, 124], "boolean": [42, 67, 85], "flag": [42, 94, 115], "tl": [43, 53, 64, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 111, 123], "is_device_c": 43, "attr": [43, 111], "launch": [43, 75, 108, 120], "func_or_mod": [43, 57, 59, 63], "runtime_onli": 43, "enable_host_codegen": 43, "enable_device_compil": 43, "enabl": [43, 46, 67, 78, 108, 112, 115, 116], "codegen": [43, 124], "have": [43, 83, 85, 93, 94, 108, 111, 115, 116], "our": [43, 111, 116], "own": [43, 116], "torch": [44, 55, 57, 59, 61, 95, 96, 102, 106, 111, 112, 124], "artifact": [44, 53, 66], "compon": 44, "runtim": [44, 66, 85, 96, 112, 115, 116], "describ": [44, 51, 99], "scalar": [44, 85, 124], "interop": 44, "valueerror": [44, 72, 79, 93, 104, 105, 124], "intimm": [44, 85], "empti": [44, 73, 75], "float8": 44, "ha": [44, 73, 83, 111, 112, 120, 123], "unsign": 44, "state": [46, 117], "m_dim": [47, 49, 51], "n_dim": [47, 49, 51], "warp_siz": [47, 49, 51, 85], "dtype_abbrv": [47, 49, 51], "extract_thread_bind": [47, 49, 51], "get_ldmatrix_index_map": [47, 49], "is_m_first": [47, 49, 51], "k_pack": [47, 49, 74, 92, 93, 94], "ldmatrix_a": [47, 49, 51], "ldmatrix_b": [47, 49, 51], "mfma": [47, 49, 74, 85], "stmatrix": [47, 49, 51], "mma": [47, 51, 85, 94, 112], "get_store_index_map": [47, 51], "make_mma_load_layout": [47, 51], "make_mma_store_layout": [47, 51], "shared_buf": [48, 50], "vecsiz": 48, "ind": 48, "thread_id": [48, 49, 50, 51, 52], "local_id": [48, 50, 52], "a_dtyp": [49, 51, 85], "b_dtype": [49, 51, 85], "a_transpos": [49, 51], "b_transpos": [49, 51], "block_row_warp": [49, 51, 92, 93, 94], "block_col_warp": [49, 51, 92, 93, 94], "warp_row_til": [49, 51, 92, 93, 94], "warp_col_til": [49, 51, 92, 93, 94], "chunk": [49, 51, 92, 93, 94, 116], "reduce_k": [49, 51], "num_elems_per_byt": [49, 51, 52], "To": [49, 51, 108, 111, 115], "elimin": [49, 51], "python": [49, 51, 57, 59, 85, 112, 115, 116, 117, 124], "syntax": [49, 51, 116, 117], "within": [49, 51, 108, 111, 116, 120, 124], "macro": [49, 51, 67, 74, 79, 82, 83, 94], "64": [49, 85, 111, 123], "bfloat16": [49, 51, 108], "bf16": [49, 51], "e4m3_float8": [49, 51], "e4m3": [49, 51], "e5m2_float8": [49, 51], "e5m2": [49, 51], "float32": [49, 51, 80], "fp32": [49, 51], "thread": [49, 51, 67, 75, 79, 84, 85, 86, 87, 93, 108, 111, 112, 116, 117, 120, 124], "bind": [49, 51, 75, 83, 84], "tx": [49, 51, 79, 85], "warp_n": [49, 51], "warp_m": [49, 51], "split": [49, 51, 85], "is_b": 49, "a_local_buf": [49, 51], "a_shared_buf": [49, 51], "ki": [49, 51], "rk": [49, 51], "b_local_buf": [49, 51], "b_shared_buf": [49, 51], "c_local_buf": [49, 51], "c_buf": [49, 51], "pid_m": [49, 51], "pid_n": [49, 51], "row_idx": [50, 52], "col_idx": [50, 52], "row_siz": 50, "is_smooth": 50, "transform_kind_a": 51, "transform_kind_b": 51, "invers": [51, 86, 88], "local_buf": 51, "result": [51, 75, 81, 85, 94, 96, 100, 101, 108, 111, 112, 123, 124], "conjunct": 51, "inverse_mma_store_layout": 51, "how": [51, 96, 99, 111, 112, 116, 124], "laid": 51, "k_inner": 51, "With": [51, 111, 112, 116], "ladder": 51, "plugin": 51, "vjj": 52, "micro_size_k": 52, "coordin": 52, "vii": 52, "micro_size_i": 52, "vj": 52, "block_k": [52, 111, 112, 116, 123, 124], "vi": 52, "block_n": [52, 108, 111, 112, 116, 123, 124], "basekerneladapt": [53, 54, 55, 57, 59, 61, 66, 95], "torchdlpackkerneladapt": [53, 54, 61], "libgen": [53, 54], "librarygener": [53, 54, 62], "get_annotated_mod": [53, 54, 63], "is_cpu_target": [53, 54, 63], "is_cuda_target": [53, 54, 63], "is_hip_target": [53, 54, 63], "match_declare_kernel": [53, 54, 63], "match_declare_kernel_cpu": [53, 54, 63], "match_global_kernel": [53, 54, 63], "basewrapp": [53, 54, 64], "tlcpusourcewrapp": [53, 54, 64], "tlcudasourcewrapp": [53, 54, 64], "tlhipsourcewrapp": [53, 54, 64], "tlwrapper": [53, 54, 64], "torch_funct": [53, 66], "from_databas": [53, 56, 57, 58, 59, 66], "from_tilelang_funct": [53, 66], "get_host_sourc": [53, 66], "get_kernel_sourc": [53, 54, 55, 56, 57, 58, 59, 66, 108, 112, 124], "get_profil": [53, 66, 112], "host_sourc": [53, 66], "infrastructur": [53, 117], "runnabl": 53, "pass_config_kwarg": 53, "factori": 53, "call": [53, 64, 72, 85, 108, 112, 116, 124], "directli": [53, 66, 79, 105, 108, 115, 116, 123, 124], "expect": [53, 85, 124], "onli": [53, 79, 85, 108, 111, 120], "automat": [53, 93, 95, 96, 105, 108, 111, 112, 116], "avaliable_target": 53, "encapsul": [53, 87, 116], "invalid": [53, 72, 93, 105], "present": [53, 85, 108], "ctypeskerneladapt": [54, 56, 57], "cythonkerneladapt": [54, 58, 59], "get_cache_dir": [54, 58, 59], "get_cached_lib": [54, 58, 59], "get_cython_compil": [54, 58, 59], "cython_wrapp": [54, 58], "cythonkernelwrapp": [54, 58, 60], "compile_lib": [54, 62], "get_lib_path": [54, 62], "get_source_path": [54, 62], "lib_cod": [54, 56, 57, 58, 59, 62], "libpath": [54, 56, 57, 58, 59, 62], "load_lib": [54, 62], "remove_lib": [54, 62], "set_lib_path": [54, 62], "set_src_path": [54, 62], "srcpath": [54, 56, 57, 58, 59, 62], "update_lib_cod": [54, 62, 64], "call_prefix": [54, 64], "init_func": [54, 64], "backend": [54, 64, 85, 95, 112, 115, 116, 123], "create_call_func": [54, 64], "get_cpu_init_func": [54, 64], "get_dynamic_symbolic_set": [54, 64], "parse_source_inform": [54, 64], "create_dispatch_func": [54, 64], "generate_tma_descriptor_arg": [54, 64], "get_cuda_init_func": [54, 64], "is_tma_descriptor_arg": [54, 64], "get_hip_init_func": [54, 64], "get_stream_typ": [54, 64], "assign_device_modul": [54, 64], "assign_host_modul": [54, 64], "assign_optimized_modul": [54, 64], "assign_pass_config": [54, 64], "lib": [54, 56, 57, 58, 59, 64], "dynamic_symbolic_map": [56, 57, 58, 59, 60], "is_dynam": [56, 57, 58, 59], "kernel_global_sourc": [56, 57, 58, 59, 66], "param_dtyp": [56, 57], "param_shap": [56, 57], "wrapped_sourc": [56, 57, 58, 59], "tensortyp": [57, 59], "handl": [57, 59, 75, 79, 80, 81, 85, 96, 108, 111, 112], "dynam": [57, 59, 80, 104, 120], "kernel_lib_path": [57, 59, 66], "kernel_onli": [57, 59], "cdll": [57, 59], "buffer_device_map": [58, 59, 60], "buffer_dtype_map": [58, 59, 60], "ptr_map": [58, 59, 60], "static_shape_map": [58, 59, 60], "forward": [58, 60, 88], "set_buffer_device_map": [58, 60], "set_buffer_dtype_map": [58, 60], "set_dynamic_symbolic_map": [58, 60], "set_ptr_map": [58, 60], "set_static_shape_map": [58, 60], "source_cod": 59, "load": [59, 70, 85, 94, 108, 111, 112, 116, 120], "stream": 60, "with_tl": 62, "lib_path": 62, "model_typ": 63, "annot": [63, 84, 85, 112, 117], "__global__": [63, 108, 111], "int32_t": 63, "kwarg": [64, 66], "scheduled_ir_modul": 64, "ifdef": 64, "__cplusplu": 64, "nextern": 64, "endif": 64, "nint32_t": 64, "function_inform": 64, "desc_name_map": 64, "arg_nam": 64, "function_arg": 64, "c_sourc": 64, "standalon": 65, "modifi": [65, 124], "flashinf": 65, "compat": [66, 115], "kernel_fil": 66, "altern": [66, 115], "constructor": 66, "torchfunct": 66, "tilelang_func": 66, "keyword": 66, "tensor_supply_typ": 66, "benchmark": [66, 95, 96, 112], "suppli": [66, 95], "entri": [67, 75, 82, 94], "serial": [67, 82, 84, 111], "thread_bind": [67, 82, 84], "unrol": [67, 82, 84, 108], "op": [67, 82], "tvmbackendallocworkspac": [67, 82, 85], "tvmbackendfreeworkspac": [67, 82, 85], "ab": [67, 82, 85], "aco": [67, 82, 85], "acosh": [67, 82, 85], "address_of": [67, 82, 85], "anylist_getitem": [67, 82, 85], "anylist_resetitem": [67, 82, 85], "anylist_setitem_call_cpack": [67, 82, 85], "anylist_setitem_call_pack": [67, 82, 85], "asin": [67, 82, 85], "asinh": [67, 82, 85], "assum": [67, 82, 85, 94, 111], "atan": [67, 82, 85], "atan2": [67, 82, 85], "atanh": [67, 82, 85], "bitwise_and": [67, 82, 85], "bitwise_not": [67, 82, 85], "bitwise_or": [67, 82, 85], "bitwise_xor": [67, 82, 85], "call_cpack": [67, 82, 85], "call_cpacked_low": [67, 82, 85], "call_extern": [67, 82, 85], "call_intrin": [67, 82, 85], "call_llvm_intrin": [67, 82, 85], "call_llvm_pure_intrin": [67, 82, 85], "call_pack": [67, 82, 85], "call_packed_low": [67, 82, 85], "call_pure_extern": [67, 82, 85], "call_tir": [67, 82, 85], "ceil": [67, 82, 85], "ceildiv": [67, 82, 85, 108, 111, 112], "clz": [67, 82, 85], "comm_reduc": [67, 82, 85, 111], "copysign": [67, 82, 85], "co": [67, 82, 85], "cosh": [67, 82, 85], "create_barri": [67, 82, 85], "div": [67, 82, 85], "end_profile_intrins": [67, 82, 85], "erf": [67, 82, 85], "exp": [67, 82, 85], "exp10": [67, 82, 85], "exp2": [67, 82, 85], "floor": [67, 82, 85], "floordiv": [67, 82, 85], "floormod": [67, 82, 85], "fmod": [67, 82, 85], "hypot": [67, 82, 85], "if_then_els": [67, 82, 85], "indexdiv": [67, 82, 85], "indexmod": [67, 82, 85], "infin": [67, 82, 85], "isfinit": [67, 82, 85], "isinf": [67, 82, 85], "isnan": [67, 82, 85], "isnullptr": [67, 82, 85], "ldexp": [67, 82, 85], "log10": [67, 82, 85], "log1p": [67, 82, 85], "log2": [67, 82, 85], "lookup_param": [67, 82, 85], "max_valu": [67, 82, 85], "min_valu": [67, 82, 85], "mma_fil": [67, 82, 85], "mma_stor": [67, 82, 85], "nearbyint": [67, 82, 85], "nextaft": [67, 82, 85], "popcount": [67, 82, 85], "pow": [67, 82, 85], "ptx_arrive_barri": [67, 82, 85], "ptx_arrive_barrier_expect_tx": [67, 82, 85], "ptx_commit_group": [67, 82, 85], "ptx_cp_async": [67, 82, 85], "ptx_cp_async_barri": [67, 82, 85], "ptx_cp_async_bulk": [67, 82, 85], "ptx_init_barrier_thread_count": [67, 82, 85], "ptx_ldmatrix": [67, 82, 85], "ptx_mma": [67, 82, 85], "ptx_mma_sp": [67, 82, 85], "ptx_wait_barri": [67, 82, 85], "ptx_wait_group": [67, 82, 85], "q_multiply_shift": [67, 82, 85], "q_multiply_shift_per_axi": [67, 82, 85], "reinterpret": [67, 82, 85, 111], "ret": [67, 82, 85], "round": [67, 82, 85], "rsqrt": [67, 82, 85], "shift_left": [67, 82, 85], "shift_right": [67, 82, 85], "sigmoid": [67, 82, 85], "sin": [67, 82, 85], "sinh": [67, 82, 85], "sqrt": [67, 82, 85], "start_profile_intrins": [67, 82, 85], "tan": [67, 82, 85], "tanh": [67, 82, 85], "trace": [67, 82, 85], "trunc": [67, 82, 85], "truncdiv": [67, 82, 85], "truncmod": [67, 82, 85], "tvm_access_ptr": [67, 82, 85], "tvm_bmma_sync": [67, 82, 85], "tvm_check_return": [67, 82, 85], "tvm_fill_frag": [67, 82, 85], "tvm_load_matrix_sync": [67, 82, 85], "tvm_mfma": [67, 82, 85], "tvm_mfma_stor": [67, 82, 85], "tvm_mma_sync": [67, 82, 85], "tvm_rdna_wmma": [67, 82, 85], "tvm_rdna_wmma_stor": [67, 82, 85], "tvm_stack_alloca": [67, 82, 85], "tvm_stack_make_arrai": [67, 82, 85], "tvm_stack_make_shap": [67, 82, 85], "tvm_storage_sync": [67, 82, 85], "tvm_store_matrix_sync": [67, 82, 85], "tvm_struct_get": [67, 82, 85], "tvm_struct_set": [67, 82, 85], "tvm_thread_allreduc": [67, 82, 85, 117], "tvm_thread_invari": [67, 82, 85], "tvm_throw_last_error": [67, 82, 85], "tvm_tupl": [67, 82, 85], "tvm_warp_activemask": [67, 82, 85], "tvm_warp_shuffl": [67, 82, 85], "tvm_warp_shuffle_down": [67, 82, 85], "tvm_warp_shuffle_up": [67, 82, 85], "type_annot": [67, 82, 85], "undef": [67, 82, 85], "vectorcombin": [67, 82, 85], "vectorhigh": [67, 82, 85], "vectorlow": [67, 82, 85], "vscale": [67, 82, 85], "get_valu": [67, 73], "has_valu": [67, 73], "pop": [67, 73, 75], "push": [67, 73, 75], "get_block_ext": [67, 75], "get_num_thread": [67, 75], "get_thread_ext": [67, 75], "num_thread": [67, 75, 120], "default_align": [67, 80], "default_offset_factor": [67, 80], "default_scop": [67, 80], "from_ptr": [67, 80], "interfac": [67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 80, 81, 95, 117], "layout_map": 67, "panel_s": [67, 112], "order": [67, 78], "scope": [68, 75, 80, 85, 100, 104, 108, 120], "dyn": [68, 80], "bufferload": [70, 85, 120], "access_typ": 70, "buffer_region": 70, "img": 70, "col": [70, 85], "nhw_step": 70, "c_step": 70, "dilat": 70, "pad": [70, 120], "src": [70, 71, 120, 124], "dst": [70, 71, 120], "coalesced_width": [70, 77], "min_val": 71, "max_val": 71, "new": [71, 80, 85, 87, 88, 103, 108, 115], "zero": [72, 85, 95, 102, 106, 120], "when": [73, 85, 108, 111, 112, 116, 120, 124], "enter": 73, "stack": [73, 75, 85], "around": [73, 75, 111], "dequ": [73, 75], "along": [73, 111, 112], "item": [73, 75, 85], "onto": [73, 75], "remov": [73, 75], "tirfram": [73, 75], "topmost": [73, 75], "indexerror": 73, "let": [73, 108, 112, 116], "transpose_a": [74, 92, 93, 94, 120], "transpose_b": [74, 92, 93, 94, 120], "gemmwarppolici": [74, 91, 92, 93, 94], "squar": [74, 85, 92, 93, 94], "clear_accum": 74, "wg_wait": 74, "pack": [74, 85], "singl": [74, 94, 104, 108, 111, 112, 120], "pleas": [74, 108, 111, 112, 115], "ref": 74, "detail": [74, 108, 112, 116], "conveni": 75, "is_cpu": 75, "prelud": 75, "quickli": [75, 124], "griddim": 75, "x": [75, 85, 90, 108, 111, 112, 120], "y": [75, 85, 108, 111, 115, 120], "z": [75, 85, 108], "blockdim": [75, 108], "Or": 75, "skip": 75, "threadidx": [75, 108, 111, 124], "thu": [75, 112], "blockidx": [75, 108, 111, 120, 124], "re": [75, 77, 78, 80, 83, 84, 85, 115], "launchthreadfram": 75, "exit": 75, "dim": [75, 81, 120], "correspond": [75, 85, 88, 93, 108, 111, 116], "three": [75, 112, 115, 116, 123, 124], "total": [75, 93, 106], "nest": 77, "coalesc": [77, 108, 116], "forfram": [77, 78, 84], "stop": [78, 84, 120], "num_stag": [78, 112, 120, 123], "stage": [78, 112, 124], "sync": [78, 100], "group": [78, 85, 108], "max": [78, 81, 96], "produc": [78, 85, 108, 111, 120, 124], "consum": [78, 111, 120], "condition": 79, "obj": 79, "msg": [79, 124], "ty": 79, "tz": 79, "unsupport": [79, 124], "foundat": 80, "differ": [80, 85, 95, 108, 116, 123], "customiz": 80, "offset": [80, 85, 108], "pointer_var": 80, "pointer": [80, 85], "0x7f60d9f55090": 80, "typic": [80, 108], "temporari": 80, "commonli": 80, "inherit": [80, 94], "modif": 80, "storage_scop": [80, 85, 100], "is_size_var": 80, "storag": [80, 85, 100, 116, 120], "sizevar": 80, "instead": [80, 85, 103, 117, 124], "reduce_typ": 81, "inf": 81, "hygien": 83, "bodi": 83, "resolv": [83, 124], "locat": [83, 85, 105], "non": [83, 85], "time": [83, 87, 95, 96, 111, 112, 115, 117], "script": 83, "x_valu": 83, "static_captur": 83, "dynamic_captur": 83, "privat": 83, "check_well_form": 83, "prim": [83, 120], "allow": [83, 85, 95, 106, 111, 112, 116, 117, 124], "treat": 83, "device_typ": 85, "device_id": 85, "nbyte": 85, "dtype_code_hint": 85, "dtype_bits_hint": 85, "tempor": 85, "workspac": [85, 115], "request": 85, "certain": [85, 115], "opengl": 85, "bit": [85, 111], "span": 85, "absolut": [85, 95, 106], "buffer_load": 85, "address": [85, 124], "intersect": 85, "condit": [85, 108, 124], "list_handl": 85, "anylist": 85, "reset": 85, "cond": 85, "simplif": 85, "x1": 85, "x2": 85, "arctan2": 85, "bitwis": 85, "left": 85, "operand": 85, "right": [85, 124], "xor": 85, "extern": [85, 108, 111], "same": [85, 94, 108, 116], "except": [85, 108], "resourc": 85, "te": 85, "overload": 85, "translat": [85, 124], "llvm": [85, 115, 116, 124], "pure": [85, 112, 116], "pod": 85, "packedfunc": 85, "receiv": 85, "tvmarrayhandl": 85, "whose": [85, 96], "dure": [85, 108, 111, 116, 124], "period": 85, "ndarrai": 85, "global_var": 85, "globalvar": 85, "lh": 85, "rh": 85, "count": [85, 96], "lead": [85, 108], "undefin": 85, "fcombin": 85, "fident": 85, "commut": 85, "const": [85, 108, 124], "over": [85, 87, 112], "There": [85, 120], "wai": [85, 111, 115, 120], "simpli": [85, 108], "mysum": 85, "lambda": [85, 111], "reduce_axi": 85, "chang": [85, 115], "sign": 85, "barrier_count": 85, "barrier": 85, "semant": [85, 108], "hand": [85, 112, 116], "known": [85, 123], "neg": 85, "gauss": 85, "exponenti": 85, "primexprwithop": 85, "remaind": 85, "equival": [85, 116], "f": [85, 112, 115, 124], "select": [85, 105], "unlik": [85, 108], "branch": 85, "you": [85, 108, 111, 112, 115, 120, 123, 124], "guard": 85, "against": [85, 95, 112], "bound": 85, "some": [85, 112, 115, 120, 124], "lane": [85, 124], "mai": [85, 87, 108, 111, 112, 115, 116, 124], "advantag": 85, "finit": 85, "infinit": 85, "nan": 85, "nullptr": 85, "mark": [85, 112], "param_nam": 85, "local_s": 85, "local_ptr": 85, "destin": 85, "dst_ptr": 85, "src_ptr": 85, "src_offset": 85, "dst_stride": 85, "nearest": 85, "faster": [85, 96, 111, 116], "notabl": 85, "mode": [85, 96, 112, 115], "wherea": [85, 116], "ignor": 85, "see": [85, 112, 123, 124], "http": [85, 108, 115], "en": 85, "cpprefer": 85, "com": [85, 108, 115], "w": [85, 108], "cpp": 85, "numer": 85, "next": [85, 108], "point": [85, 94, 120], "after": [85, 100, 108, 111, 112, 115, 116, 120, 124], "toward": 85, "expon": 85, "barrier_id": 85, "arriv": 85, "mbarrier": 85, "doc": 85, "nvidia": [85, 112, 115, 116, 124], "html": 85, "synchron": [85, 111, 116, 124], "commun": [85, 124], "instruct": [85, 94, 112, 115], "byte_count": 85, "expect_tx": 85, "increas": [85, 111], "track": 85, "complet": [85, 123, 124], "async": [85, 120], "transact": 85, "commit": 85, "movement": [85, 108, 116, 117], "convers": 85, "cp": [85, 115], "shared_ptr": 85, "shared_offset": 85, "global_ptr": 85, "global_offset": 85, "byte": 85, "bulk": 85, "thread_count": 85, "num": [85, 93], "local_offset": 85, "smem_ptr": 85, "smem_offset": 85, "ldmatrix": [85, 94], "b16": 85, "memort": 85, "a_layout": 85, "b_layout": 85, "c_dtype": 85, "multiplicand_a": 85, "a_index": 85, "multiplicand_b": 85, "b_index": 85, "c_index": 85, "satur": 85, "multiplicand": [85, 120], "metadata": 85, "meta_index": 85, "sparse_selector": 85, "spars": 85, "selector": 85, "wait": 85, "try_wait": 85, "most": [85, 115], "recent": [85, 115], "uncommit": 85, "pend": 85, "q": [85, 124], "follow": [85, 94, 108, 115, 116, 123], "shift": 85, "mathemat": 85, "more": [85, 104, 108, 112, 116, 117, 124], "here": [85, 111, 116, 124], "wikipedia": 85, "org": 85, "wiki": 85, "q_": 85, "number_format": 85, "half": 85, "5": [85, 106, 112, 123], "second": [85, 106], "fraction": 85, "need": [85, 87, 112, 115, 116, 120, 124], "is_lshift_requir": 85, "is_rshift_requir": 85, "do": [85, 94, 112, 124], "val": 85, "void": [85, 108, 111], "reciproc": 85, "quick": 85, "hyperbol": 85, "trace_act": 85, "default_trace_act": 85, "come": [85, 108], "action": 85, "truncat": 85, "closer": 85, "than": [85, 104, 111, 112, 115, 116, 124], "divis": [85, 93], "behavior": [85, 108, 112, 116, 124], "ptype": 85, "rw_mask": 85, "head": 85, "mask": [85, 111], "fragment_d": 85, "index_d": 85, "fragment_a": 85, "index_a": 85, "fragment_b": 85, "index_b": 85, "fragment_c": 85, "index_c": 85, "bmma_sync": 85, "bwmma": 85, "return_unexpect": 85, "nested_cal": 85, "unexpect": 85, "fill_frag": 85, "wmma": [85, 112], "uintimm": 85, "buffer_ptr": 85, "row_major": 85, "column_major": 85, "mma_sync": 85, "dtype_str": 85, "ndim": 85, "arr_dtyp": 85, "elem_offset": 85, "dltensor": 85, "elem_offs": 85, "arr": 85, "field": 85, "struct": 85, "date": 85, "structtyp": 85, "freduce_arg": 85, "allreduc": 85, "insid": [85, 108, 116, 120, 124], "threadblock": 85, "invari": 85, "throw": 85, "tvmgetlasterror": 85, "attrstmt": 85, "activ": [85, 108], "warp_id": 85, "exchang": 85, "fetch": [85, 115], "sub": 85, "shuffl": 85, "higher": 85, "caller": 85, "src_lane_idx": 85, "dst_lane_idx": 85, "arbitrari": [85, 120], "vec1": 85, "vec2": 85, "concat": 85, "vec": 85, "high": [85, 108, 111, 112, 116, 117], "low": [85, 111, 112, 116, 117], "langref": 85, "rtype": [85, 94, 105], "condense_rep_var": [86, 87], "get_thread_s": [86, 87], "map_forward_thread": [86, 87], "repeat": [86, 87, 95, 96], "replic": [86, 87], "get_forward_var": [86, 88], "get_input_shap": [86, 88], "get_output_shap": [86, 88], "map_forward_index": [86, 88], "forward_fn": [87, 88], "forward_thread_fn": 87, "forward_index_fn": 87, "forward_var": 87, "forward_thread": 87, "forward_index": 87, "thread_repl": 87, "fine": [87, 111, 112, 116], "grain": [87, 111, 112, 116], "control": [87, 111, 112, 116], "multi": [87, 116], "dimension": [87, 108], "condens": 87, "fold": 87, "longer": [87, 112], "separ": [87, 112], "reflect": 87, "repeat_on_thread": 87, "lower_dim_first": 87, "happen": [87, 108], "across": [87, 95, 111, 112], "gemmbaseparam": [91, 92, 93, 94], "gemm_mma": [91, 92], "gemmprimitivemma": [91, 92, 94], "bootstrap": 91, "get_warp_s": [92, 93], "infer_block_partit": [92, 93], "fullcol": [92, 93], "fullrow": [92, 93], "compute_warp_partit": [92, 93], "from_warp_partit": [92, 93], "is_full_col": [92, 93], "is_full_row": [92, 93], "is_squar": [92, 93], "to_prime_factor": [92, 93], "gemm_rrr": [92, 94], "gemm_rsr": [92, 94], "gemm_srr": [92, 94], "gemm_ssr": [92, 94], "alreadi": [93, 115], "attempt": 93, "them": [93, 94, 108, 124], "miss": 93, "inconsist": 93, "num_warp": 93, "m_warp": 93, "n_warp": 93, "avail": [93, 105, 112, 115], "fail": [93, 124], "from_block_row_col": 93, "balanc": [93, 112], "distribut": [93, 120], "full": [93, 112], "multipli": [94, 112], "basic": [94, 111, 116], "mma_emitt": 94, "helper": 94, "etc": [94, 95, 112, 124], "correct": [94, 112], "final": [94, 108, 111, 116, 124], "random": 95, "reference_program": 95, "refer": [95, 108, 112, 116, 124], "compar": [95, 106, 108, 111, 112], "toler": [95, 106], "comparison": [95, 106], "ratio": [95, 106], "mismatch": [95, 106], "consist": [95, 96], "explicitli": [95, 108, 112, 116], "n_warmup": 95, "n_repeat": 95, "input_tensor": 95, "millisecond": [95, 96], "repetit": [95, 96], "pre": [95, 115, 123], "averag": 95, "_n_warmup": 96, "_n_repeat": 96, "grad_to_non": 96, "quantil": 96, "fast_flush": 96, "return_mod": 96, "min": 96, "mean": 96, "median": 96, "flush": 96, "gradient": 96, "backward": 96, "percentil": 96, "aggreg": 96, "seed": 97, "42": 97, "save_directori": 99, "tmp": 99, "colormap": 99, "rdpu": 99, "plot": 99, "imag": 99, "save": 99, "visual": 99, "fpass": [100, 101], "rewrit": 100, "asynchron": [100, 112], "legalizeloopvector": 100, "attach": 100, "finish": [100, 111, 124], "insert": [100, 111], "partial": [100, 111, 112, 116], "enable_vector": 100, "stmt": 101, "One": [102, 106, 111], "randn": [102, 106, 112], "uniform": [102, 106], "method_nam": 103, "new_method_nam": 103, "allow_dynam": 104, "extract": 104, "exactli": 104, "rocm": [105, 115], "return_object": 105, "manual": [105, 112, 116, 123], "user": [105, 111, 112, 115, 116, 121, 123, 124], "intyp": 106, "tensor_a": 106, "tensor_b": 106, "001": 106, "equal_nan": 106, "check_devic": 106, "check_dtyp": 106, "check_layout": 106, "check_strid": 106, "assert": 106, "close": [106, 108, 111], "enough": [106, 112], "percentag": 106, "1e": [106, 112], "exce": 106, "author": [108, 112, 123, 124], "chenghua": 108, "wang": [108, 112, 124], "document": [108, 111, 112, 124], "still": [108, 111, 112], "experiment": [108, 111, 112], "incomplet": [108, 111, 112], "suggest": [108, 111, 112], "improv": [108, 111, 112, 115, 116], "highli": [108, 111, 112, 116], "encourag": [108, 111, 112], "submit": [108, 111, 112], "pr": [108, 111, 112], "wide": 108, "deep": [108, 111], "learn": [108, 111], "often": [108, 124], "encount": [108, 124], "those": [108, 124], "begin": 108, "explor": [108, 112, 123], "tutori": [108, 111, 112, 124], "sever": [108, 124], "By": [108, 111, 112, 116, 117, 124], "similar": [108, 112], "note": [108, 115, 116, 120], "delv": 108, "deepli": 108, "design": [108, 111, 112, 116, 117], "principl": 108, "broader": 108, "understand": [108, 111, 116], "consult": 108, "overview": [108, 112, 116], "elementwise_add": 108, "256": [108, 111, 123], "b_x": 108, "logic": [108, 112, 116, 124], "per": [108, 111], "bx": [108, 112, 116], "familiar": 108, "might": [108, 111, 116, 124], "wonder": 108, "your": [108, 111, 112], "focu": [108, 116, 117], "sole": 108, "further": [108, 111, 116, 124], "carefulli": [108, 124], "handcraft": 108, "demonstr": [108, 111, 112, 116, 123, 124], "concret": 108, "while": [108, 112, 123], "also": [108, 112, 116, 123], "cover": [108, 124], "subsequ": [108, 116], "discuss": [108, 116], "straightforward": [108, 111], "just": [108, 112, 117], "extend": [108, 116], "practic": 108, "below": [108, 111, 112, 116, 124], "reader": 108, "block_m": [108, 112, 116, 123, 124], "start_x": 108, "start_i": 108, "local_i": 108, "local_x": 108, "abov": 108, "fix": 108, "howev": [108, 111, 112], "want": [108, 112, 115], "replac": 108, "make": [108, 111, 115, 116], "illustr": [108, 116, 124], "bfloat16_t": 108, "__restrict__": [108, 111], "incorpor": [108, 116], "These": [108, 112, 116], "prevent": 108, "advanc": [108, 112, 124], "introduc": [108, 111, 112, 124], "involv": [108, 123], "review": 108, "paragraph": 108, "clearer": 108, "2047": 108, "num_per_thread": 108, "__launch_bounds__": [108, 111], "main_kernel": [108, 111], "pragma": 108, "observ": 108, "did": 108, "fact": 108, "tail": 108, "could": 108, "simplic": 108, "breviti": 108, "style": 108, "idx": 108, "evid": 108, "ineffici": 108, "techniqu": [108, 117], "beginn": [108, 116], "addition": [108, 116], "transpar": 108, "uint4": [108, 111], "__1": 108, "v_": 108, "v__1": 108, "nv_bfloat162": 108, "aforement": 108, "sometim": [108, 124], "appear": 108, "counterintuit": [108, 116], "effect": [108, 111], "interestingli": 108, "retain": [108, 112], "origin": [108, 116], "scenario": 108, "help": [108, 116, 123, 124], "guid": [108, 117], "intend": [108, 116, 124], "aha": 108, "convent": 108, "intuit": 108, "But": 108, "what": 108, "previou": 108, "num_ele_per_thread": 108, "a_regist": 108, "b_regist": 108, "c_regist": 108, "s_start": 108, "s_end": 108, "ldg": 108, "tid": 108, "stg": 108, "individu": 108, "reson": 108, "develop": [108, 115, 116, 117], "u": 108, "now": [108, 111], "8192": 108, "2048": [108, 111], "emerg": [108, 112], "reassign": 108, "evalu": [108, 111], "complex": [108, 112], "nv_bfloat16": 108, "namespac": 108, "t_c": 108, "make_gmem_ptr": 108, "make_shap": 108, "t_a": 108, "t_b": 108, "t_c_tile": 108, "local_til": 108, "make_coord": 108, "t_a_til": 108, "t_b_tile": 108, "reg_buffer_a": 108, "make_tensor_lik": 108, "reg_buffer_b": 108, "reg_buffer_c": 108, "reg_c_vector": 108, "recast": 108, "reg_a_vector": 108, "reg_b_vector": 108, "vec_idx": 108, "reg_c_flat": 108, "showcas": [108, 116], "approach": [108, 111, 112, 116, 124], "significantli": [108, 116, 124], "nevertheless": 108, "demand": [108, 112, 116], "care": 108, "attent": [108, 112, 117], "essenti": [108, 115, 124], "thoroughli": 108, "examin": [108, 112, 124], "draw": 108, "inspir": 108, "blog": 108, "zhuanlan": 108, "zhihu": 108, "p": 108, "690703999": 108, "contributor": 111, "botbw": 111, "example_gemv": 111, "py": [111, 123, 124], "plai": 111, "role": 111, "especi": 111, "model": [111, 112, 117], "perspect": 111, "look": [111, 117], "_gemv_naiv": 111, "x_ptr": 111, "a_ptr": 111, "y_ptr": 111, "block_size_k": 111, "constexpr": 111, "program_id": 111, "offs_k": 111, "arang": 111, "a_val": 111, "x_val": 111, "dot": 111, "sum": [111, 116], "expos": [111, 116], "natur": 111, "think": 111, "naive_gemv": 111, "bn": 111, "tn": 111, "a_shar": [111, 112], "b_share": [111, 112], "c_reg": 111, "bk": 111, "tk": 111, "astyp": 111, "And": 111, "half_t": 111, "__shared__": 111, "__align__": 111, "uchar": 111, "buf_dyn_shmem": 111, "uint64_t": 111, "_mbarrier": 111, "mbarrier_init": 111, "__syncthread": 111, "warpgroup_reg_dealloc": 111, "24": 111, "mbarrier_wait": 111, "16256": 111, "131072": 111, "fence_proxy_async": 111, "mbarrier_cp_async_arr": 111, "mbarrier_arr": 111, "els": 111, "warpgroup_reg_alloc": 111, "240": 111, "000000e": 111, "00f": 111, "bk_1": 111, "tk_1": 111, "act": 111, "1d": [111, 124], "At": [111, 116], "gain": 111, "veri": [111, 112], "littl": 111, "17": 111, "cubla": [111, 112], "008": 111, "20x": 111, "slower": 111, "exploit": 111, "finer": [111, 112], "combin": 111, "naive_splitk_gemv": 111, "a_loc": 111, "b_local": 111, "c_accum": 111, "c_share": 111, "achiev": [111, 112], "024": 111, "par": [111, 112], "reduce_thread": 111, "splitk_gemv": 111, "tile_k": 111, "less": [111, 115], "intens": 111, "throuput": 111, "bottleneck": 111, "float2": 111, "float4": 111, "splitk_gemv_vector": 111, "max_transaction_size_in_bit": 111, "0084": 111, "outperfrom": 111, "plain": 111, "smem": 111, "atomidadd": 111, "splitk_gemv_vectorized_tvm": 111, "c_reduc": 111, "reduce_scop": 111, "uint64": 111, "uint32": 111, "0069": 111, "hyperparamet": 111, "featur": [111, 115], "search": [111, 123], "get_best_config": 111, "get_config": [111, 123], "_config": [111, 123], "itertool": [111, 123], "product": [111, 117, 123], "kei": 111, "20": [111, 115, 123], "ref_program": [111, 123], "0067": 111, "red_buf0": 111, "00784": 111, "00773": 111, "16607": 111, "02419": 111, "00809": 111, "00675": 111, "0077344514429569244": 111, "lei": [112, 124], "knowledg": 112, "concern": 112, "conceptu": 112, "behind": 112, "necessarili": [112, 124], "drop": 112, "down": 112, "lowest": 112, "explicit": 112, "somewhat": 112, "triton": [112, 117], "almost": 112, "expert": [112, 116], "who": [112, 115, 116], "everi": 112, "assembli": 112, "figur": [112, 116], "flow": [112, 117], "walk": 112, "through": [112, 123, 124], "show": [112, 124], "flexibl": [112, 116], "divers": 112, "comfort": 112, "incur": 112, "fusion": 112, "flash": [112, 117], "easili": 112, "give": 112, "effort": 112, "raw": 112, "strike": 112, "portabl": 112, "reason": [112, 116], "concis": [112, 116, 117], "snippet": [112, 116, 124], "softwar": 112, "c_local": 112, "comment": 112, "ko": 112, "jit_kernel": 112, "ref_c": 112, "assert_clos": 112, "inspect": [112, 124], "cuda_sourc": 112, "though": 112, "slice": 112, "arrang": 112, "overlap": 112, "arithmet": 112, "depth": [112, 116], "under": 112, "hood": 112, "cutlass": 112, "cute": 112, "On": 112, "compos": [112, 116], "back": 112, "mix": [112, 116, 117], "keep": [112, 116], "rest": 112, "tuner": 112, "better": 112, "vendor": [112, 124], "intern": 112, "4090": 112, "a100": 112, "h100": 112, "mi300x": 112, "shown": 112, "1x": 112, "speedup": 112, "rtx": 112, "97x": 112, "0x": 112, "04x": 112, "08x": 112, "25x": 112, "vari": 112, "few": 112, "dispatch": 112, "verifi": [112, 115], "abil": [112, 116], "friendli": [112, 116], "tunabl": 112, "experi": 112, "scale": 112, "meanwhil": 112, "github": [112, 115, 117], "pycuda": 112, "prerequisit": 115, "wheel": 115, "pypi": 115, "ubuntu": 115, "04": 115, "later": [115, 120], "11": 115, "easiest": 115, "lang": [115, 117], "latest": 115, "termin": 115, "choos": [115, 116], "prebuilt": 115, "releas": 115, "page": 115, "dev0": 115, "cu120": 115, "py3": 115, "whl": 115, "repositori": 115, "git": 115, "ai": 115, "__version__": 115, "docker": 115, "rm": 115, "ipc": 115, "nvcr": 115, "io": 115, "23": 115, "requisit": 115, "apach": 115, "debian": 115, "sudo": 115, "apt": 115, "python3": 115, "dev": 115, "setuptool": 115, "libtinfo": 115, "zlib1g": 115, "cmake": 115, "libedit": 115, "libxml2": 115, "clone": 115, "recurs": 115, "cd": 115, "patient": 115, "mkdir": 115, "dtvm_prebuild_path": 115, "pythonpath": 115, "tvm_import_python_path": 115, "3rd": 115, "parti": 115, "prefer": 115, "desir": [115, 116, 124], "3rdparti": 115, "echo": 115, "use_llvm": 115, "ON": 115, "use_cuda": 115, "use_rocm": 115, "libtilelang": 115, "libtvm": 115, "libtvm_runtim": 115, "bash": 115, "install_cuda": 115, "sh": 115, "install_amd": 115, "offici": 115, "cu121": 115, "link": 115, "stabl": 115, "thei": [115, 116, 120], "ideal": [115, 116], "bugfix": 115, "hasn": 115, "been": [115, 123], "depict": 116, "descript": 116, "resid": 116, "whichev": 116, "best": [116, 123], "suit": 116, "unawar": 116, "independ": 116, "goal": 116, "worri": 116, "hierarchi": 116, "fulli": 116, "consider": 116, "predefin": 116, "leverag": [116, 124], "readi": 116, "made": 116, "dive": [116, 124], "experienc": 116, "characterist": 116, "offer": 116, "grant": 116, "tailor": 116, "expertis": 116, "expand": [116, 124], "intermedi": [116, 124], "emploi": [116, 117], "placement": 116, "particular": 116, "bandwidth": [116, 124], "overal": 116, "heart": 116, "notion": 116, "portion": 116, "manipul": 116, "unit": 116, "easier": 116, "hallmark": 116, "place": 116, "rather": 116, "leav": 116, "opaqu": 116, "face": 116, "physic": 116, "fast": 116, "chip": 116, "seem": 116, "abund": 116, "limit": [116, 124], "becaus": 116, "deriv": 116, "transfer": 116, "furthermor": 116, "streamlin": 117, "dequant": 117, "linearattent": 117, "underli": [117, 124], "sacrif": 117, "art": 117, "instal": 117, "pip": 117, "nightli": 117, "brief": 117, "introduct": 117, "naiv": 117, "concurr": [117, 124], "atomicadd": 117, "conclus": 117, "linear": 117, "convolut": 117, "tmac": 117, "tabl": 117, "precis": 117, "ast": 117, "tilelibrari": 117, "sequenti": 120, "whole": 120, "know": 120, "reorder": 120, "doubl": 120, "noth": 120, "serpentin": 120, "stai": 121, "app": 121, "yyttt6": 123, "identifi": 123, "readabl": 123, "example_gemm": 123, "thread_num": 123, "enable_raster": 123, "combinatori": 123, "with_rol": 123, "out_c": 123, "lightweight": 123, "rank": 123, "scheme": 123, "orient": 123, "carve_templ": 123, "roller_hint": 123, "block_row": 123, "block_col": 123, "rasterization_plan": 123, "hereaft": 124, "undergo": 124, "roughli": 124, "categori": 124, "incorrect": 124, "theoret": 124, "focus": 124, "problem": 124, "nsight": 124, "rocprof": 124, "futur": 124, "materi": 124, "again": 124, "eventu": 124, "occur": 124, "jump": 124, "caus": 124, "35": 124, "shape_q": 124, "codegen_cuda": 124, "1257": 124, "ramp": 124, "somewher": 124, "filter": 124, "rt_mod_cuda": 124, "std": 124, "cg": 124, "registri": 124, "tilelang_callback_cuda_postproc": 124, "henc": 124, "intercept": 124, "cuda_runtim": 124, "h": 124, "Be": 124, "mind": 124, "debug_print_buff": 124, "debug_print_buffer_condit": 124, "debug_print_value_condit": 124, "debug_print_register_fil": 124, "ad": 124, "prefix": 124, "debug_print_msg": 124, "someth": 124, "hello": 124, "world": 124, "diagnos": 124, "deviat": 124, "prong": 124, "suffici": 124, "occup": 124, "aspect": 124}, "objects": {"": [[1, 0, 0, "-", "tilelang"]], "tilelang": [[1, 1, 1, "", "TqdmLoggingHandler"], [2, 0, 0, "-", "autotuner"], [3, 0, 0, "-", "cache"], [5, 0, 0, "-", "carver"], [34, 0, 0, "-", "common"], [36, 0, 0, "-", "contrib"], [41, 0, 0, "-", "engine"], [46, 0, 0, "-", "env"], [47, 0, 0, "-", "intrinsics"], [53, 0, 0, "-", "jit"], [67, 0, 0, "-", "language"], [86, 0, 0, "-", "layout"], [90, 0, 0, "-", "math"], [91, 0, 0, "-", "primitives"], [95, 0, 0, "-", "profiler"], [1, 4, 1, "", "set_log_level"], [97, 0, 0, "-", "testing"], [98, 0, 0, "-", "tools"], [100, 0, 0, "-", "transform"], [102, 0, 0, "-", "utils"]], "tilelang.TqdmLoggingHandler": [[1, 2, 1, "", "emit"]], "tilelang.autotuner": [[2, 1, 1, "", "AutoTuner"], [2, 1, 1, "", "AutotuneResult"], [2, 1, 1, "", "JITContext"], [2, 4, 1, "", "autotune"], [2, 4, 1, "", "jit"]], "tilelang.autotuner.AutoTuner": [[2, 2, 1, "", "from_kernel"], [2, 2, 1, "", "run"], [2, 2, 1, "", "set_compile_args"]], "tilelang.autotuner.AutotuneResult": [[2, 3, 1, "", "config"], [2, 3, 1, "", "func"], [2, 3, 1, "", "kernel"], [2, 3, 1, "", "latency"], [2, 3, 1, "", "libcode"], [2, 3, 1, "", "ref_latency"]], "tilelang.autotuner.JITContext": [[2, 3, 1, "", "atol"], [2, 3, 1, "", "max_mismatched_ratio"], [2, 3, 1, "", "out_idx"], [2, 3, 1, "", "profiler"], [2, 3, 1, "", "ref_prog"], [2, 3, 1, "", "rtol"], [2, 3, 1, "", "skip_check"], [2, 3, 1, "", "supply_type"], [2, 3, 1, "", "target"]], "tilelang.cache": [[3, 4, 1, "", "cached"], [3, 4, 1, "", "clear_cache"], [4, 0, 0, "-", "kernel_cache"]], "tilelang.cache.kernel_cache": [[4, 1, 1, "", "KernelCache"]], "tilelang.cache.kernel_cache.KernelCache": [[4, 2, 1, "", "cached"], [4, 2, 1, "", "clear_cache"]], "tilelang.carver": [[6, 0, 0, "-", "analysis"], [7, 0, 0, "-", "arch"], [12, 0, 0, "-", "common_schedules"], [13, 0, 0, "-", "matmul_analysis"], [14, 0, 0, "-", "roller"], [26, 0, 0, "-", "template"], [33, 0, 0, "-", "utils"]], "tilelang.carver.analysis": [[6, 1, 1, "", "BlockInfo"], [6, 1, 1, "", "IterInfo"], [6, 4, 1, "", "check_func_with_dynamic"], [6, 4, 1, "", "collect_block_iter_vars_used_in_access_region"], [6, 4, 1, "", "collect_vars_used_in_prim_expr"], [6, 4, 1, "", "detect_dominant_read"], [6, 4, 1, "", "find_var_from_func"], [6, 4, 1, "", "get_coalesced_veclen"], [6, 4, 1, "", "get_max_shared_memory_per_block"], [6, 4, 1, "", "get_max_threads_per_block"], [6, 4, 1, "", "get_reduction_blocks"], [6, 4, 1, "", "get_root_block"], [6, 4, 1, "", "is_broadcast_epilogue"], [6, 4, 1, "", "normalize_prim_func"]], "tilelang.carver.analysis.BlockInfo": [[6, 3, 1, "", "block_rv"], [6, 2, 1, "", "dom"], [6, 2, 1, "", "dom_kind"], [6, 2, 1, "", "is_elementwise"], [6, 2, 1, "", "is_gemm"], [6, 2, 1, "", "is_gemv"], [6, 2, 1, "", "is_injective"], [6, 2, 1, "", "is_reduction"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "name"]], "tilelang.carver.analysis.IterInfo": [[6, 5, 1, "", "dom"], [6, 3, 1, "", "kind"], [6, 3, 1, "", "loop_rv"], [6, 3, 1, "", "var"]], "tilelang.carver.arch": [[8, 0, 0, "-", "arch_base"], [7, 4, 1, "", "auto_infer_current_arch"], [9, 0, 0, "-", "cdna"], [10, 0, 0, "-", "cpu"], [11, 0, 0, "-", "cuda"], [7, 4, 1, "", "get_arch"]], "tilelang.carver.arch.arch_base": [[8, 1, 1, "", "TileDevice"]], "tilelang.carver.arch.arch_base.TileDevice": [[8, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.cdna": [[9, 1, 1, "", "CDNA"], [9, 4, 1, "", "is_cdna_arch"]], "tilelang.carver.arch.cpu": [[10, 1, 1, "", "CPU"], [10, 4, 1, "", "is_cpu_arch"]], "tilelang.carver.arch.cuda": [[11, 1, 1, "", "CUDA"], [11, 1, 1, "", "TensorInstruction"], [11, 4, 1, "", "check_sm_version"], [11, 4, 1, "", "has_mma_support"], [11, 4, 1, "", "is_ada_arch"], [11, 4, 1, "", "is_ampere_arch"], [11, 4, 1, "", "is_cuda_arch"], [11, 4, 1, "", "is_hopper_arch"], [11, 4, 1, "", "is_tensorcore_supported_precision"], [11, 4, 1, "", "is_volta_arch"]], "tilelang.carver.arch.cuda.CUDA": [[11, 2, 1, "", "get_avaliable_tensorintrin_shapes"]], "tilelang.carver.common_schedules": [[12, 4, 1, "", "get_block"], [12, 4, 1, "", "get_output_blocks"], [12, 4, 1, "", "try_inline"], [12, 4, 1, "", "try_inline_contiguous_spatial"]], "tilelang.carver.matmul_analysis": [[13, 1, 1, "", "IterKind"], [13, 1, 1, "", "IterTrait"], [13, 4, 1, "", "auto_inline_consumer_chain"], [13, 4, 1, "", "auto_inline_consumers"], [13, 4, 1, "", "auto_inline_producers"], [13, 4, 1, "", "collect_vars_from_expr"], [13, 4, 1, "", "detect_iter_traits"], [13, 4, 1, "", "find_arg_idx_from_buffer_chain"], [13, 4, 1, "", "find_first_similar_buffer"], [13, 4, 1, "", "find_first_similar_region"], [13, 4, 1, "", "find_last_producer_from_buffer"], [13, 4, 1, "", "get_dequantize_block"], [13, 4, 1, "", "get_in_out_dtypes"], [13, 4, 1, "", "get_index_map"], [13, 4, 1, "", "get_ladder_stage3_map"], [13, 4, 1, "", "get_propagate_map"], [13, 4, 1, "", "get_tensorized_func_and_tags"], [13, 4, 1, "", "inline_transpose_block"], [13, 4, 1, "", "is_identity_block"], [13, 4, 1, "", "is_identity_or_transpose_block"], [13, 4, 1, "", "is_transpose_block"], [13, 4, 1, "", "layout_propagate_chain"], [13, 4, 1, "", "make_iter_fusion_index_map"], [13, 4, 1, "", "normalize_to_matmul"]], "tilelang.carver.matmul_analysis.IterKind": [[13, 3, 1, "", "kIter_I"], [13, 3, 1, "", "kIter_J"], [13, 3, 1, "", "kIter_K"], [13, 3, 1, "", "kIter_S"], [13, 3, 1, "", "kIter_T"]], "tilelang.carver.matmul_analysis.IterTrait": [[13, 3, 1, "", "extent"], [13, 3, 1, "", "kind"]], "tilelang.carver.roller": [[15, 0, 0, "-", "bestfit"], [16, 0, 0, "-", "hint"], [17, 0, 0, "-", "node"], [18, 0, 0, "-", "policy"], [22, 0, 0, "-", "rasterization"], [23, 0, 0, "-", "shape_inference"]], "tilelang.carver.roller.bestfit": [[15, 1, 1, "", "BestFit"], [15, 1, 1, "", "Block"]], "tilelang.carver.roller.bestfit.BestFit": [[15, 2, 1, "", "free"], [15, 2, 1, "", "malloc"]], "tilelang.carver.roller.bestfit.Block": [[15, 2, 1, "", "merge"], [15, 2, 1, "", "size"]], "tilelang.carver.roller.hint": [[16, 1, 1, "", "Hint"], [16, 1, 1, "", "IntrinInfo"], [16, 1, 1, "", "Stride"], [16, 1, 1, "", "TensorCoreExtraConfig"], [16, 1, 1, "", "TileDict"]], "tilelang.carver.roller.hint.Hint": [[16, 2, 1, "", "complete_config"], [16, 2, 1, "", "from_dict"], [16, 5, 1, "", "raxis_order"], [16, 5, 1, "", "step"], [16, 2, 1, "", "tensorcore_legalization"], [16, 2, 1, "", "to_dict"]], "tilelang.carver.roller.hint.IntrinInfo": [[16, 5, 1, "", "inter_transform_a"], [16, 5, 1, "", "inter_transform_b"], [16, 2, 1, "", "is_input_8bit"], [16, 5, 1, "", "smooth_a"], [16, 5, 1, "", "smooth_b"]], "tilelang.carver.roller.hint.Stride": [[16, 5, 1, "", "ax"], [16, 2, 1, "", "compute_elements_from_shape"], [16, 2, 1, "", "compute_strides_from_shape"], [16, 2, 1, "", "is_valid"], [16, 5, 1, "", "stride"]], "tilelang.carver.roller.hint.TileDict": [[16, 2, 1, "", "get_rstep"], [16, 2, 1, "", "get_tile"]], "tilelang.carver.roller.node": [[17, 1, 1, "", "BlockAnalyzer"], [17, 1, 1, "", "Edge"], [17, 1, 1, "", "Node"], [17, 1, 1, "", "OutputNode"], [17, 1, 1, "", "PlaceHolderNode"], [17, 1, 1, "", "PrimFuncNode"], [17, 4, 1, "", "find_topo_sort"], [17, 4, 1, "", "find_topo_sort_priority"], [17, 4, 1, "", "pre_order_traverse"], [17, 4, 1, "", "topo_order"]], "tilelang.carver.roller.node.BlockAnalyzer": [[17, 2, 1, "", "get_block_info"], [17, 2, 1, "", "get_block_name"], [17, 2, 1, "", "get_buffers"], [17, 2, 1, "", "get_consumer_blocks"], [17, 2, 1, "", "get_input_buffers"], [17, 2, 1, "", "get_output_buffers"], [17, 2, 1, "", "get_producer_blocks"], [17, 2, 1, "", "get_reduce_axis"], [17, 2, 1, "", "get_spatial_axis"]], "tilelang.carver.roller.node.Edge": [[17, 3, 1, "", "dst_id"], [17, 3, 1, "", "dst_node"], [17, 3, 1, "", "src_id"], [17, 3, 1, "", "src_node"]], "tilelang.carver.roller.node.Node": [[17, 2, 1, "", "add_tag"], [17, 2, 1, "", "get_dtype"], [17, 2, 1, "", "get_ir"], [17, 2, 1, "", "get_shape"], [17, 2, 1, "", "get_tag"], [17, 5, 1, "", "inputs"], [17, 2, 1, "", "is_output"], [17, 2, 1, "", "is_placeholder"], [17, 2, 1, "", "num_outputs"], [17, 5, 1, "", "outputs"], [17, 2, 1, "", "set_dtype"], [17, 2, 1, "", "set_inputs"], [17, 2, 1, "", "set_outputs"], [17, 2, 1, "", "set_shape"], [17, 2, 1, "", "set_tag"], [17, 2, 1, "", "update_tags"]], "tilelang.carver.roller.node.OutputNode": [[17, 2, 1, "", "get_ir"], [17, 2, 1, "", "is_output"]], "tilelang.carver.roller.node.PlaceHolderNode": [[17, 2, 1, "", "get_ir"], [17, 2, 1, "", "is_placeholder"]], "tilelang.carver.roller.node.PrimFuncNode": [[17, 2, 1, "", "extent_wrapper"], [17, 2, 1, "", "footprint"], [17, 2, 1, "", "get_buffer_dtype"], [17, 2, 1, "", "get_input_buffers"], [17, 2, 1, "", "get_opt_shape"], [17, 2, 1, "", "get_reduce_inputs_dtype"], [17, 2, 1, "", "get_space_dim"], [17, 2, 1, "", "infer_tensorcore_axis"], [17, 2, 1, "", "propagate"], [17, 2, 1, "", "propagate_inputs"], [17, 2, 1, "", "propagate_inputs_on_reduction"], [17, 2, 1, "", "propagate_outputs"], [17, 2, 1, "", "propagate_reduction_inputs"], [17, 2, 1, "", "set_dtype"]], "tilelang.carver.roller.policy": [[19, 0, 0, "-", "common"], [20, 0, 0, "-", "default"], [21, 0, 0, "-", "tensorcore"]], "tilelang.carver.roller.policy.common": [[19, 4, 1, "", "coalesced_factor"], [19, 4, 1, "", "coalesced_tensor_shape"], [19, 4, 1, "", "factorize"], [19, 4, 1, "", "get_all_factors"]], "tilelang.carver.roller.policy.default": [[20, 1, 1, "", "DefaultPolicy"]], "tilelang.carver.roller.policy.default.DefaultPolicy": [[20, 3, 1, "", "arch"], [20, 2, 1, "", "assign_block_size"], [20, 2, 1, "", "check_tile_shape_isvalid"], [20, 2, 1, "", "compute_node_stride_map"], [20, 2, 1, "", "compute_tile_dict"], [20, 2, 1, "", "compute_workload_per_item"], [20, 2, 1, "", "dfs_smem_tile"], [20, 2, 1, "", "emit_config"], [20, 2, 1, "", "from_output_nodes"], [20, 2, 1, "", "from_prim_func"], [20, 3, 1, "", "func"], [20, 2, 1, "", "get_base_tile"], [20, 2, 1, "", "get_block_size"], [20, 2, 1, "", "get_node_reduce_step_candidates"], [20, 2, 1, "", "infer_node_smem_usage"], [20, 3, 1, "", "nodes"], [20, 2, 1, "", "plan_rasterization"], [20, 2, 1, "", "recommend_block_size"], [20, 2, 1, "", "score_block_size"], [20, 3, 1, "", "tags"]], "tilelang.carver.roller.policy.tensorcore": [[21, 1, 1, "", "TensorCorePolicy"]], "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy": [[21, 3, 1, "", "block_reduction_depth"], [21, 2, 1, "", "check_tile_shape_isvalid"], [21, 2, 1, "", "compute_node_stride_map"], [21, 2, 1, "", "get_node_reduce_step_candidates"], [21, 2, 1, "", "infer_node_smem_usage"], [21, 3, 1, "", "pipeline_stage"], [21, 2, 1, "", "plan_rasterization"], [21, 3, 1, "", "use_async_copy"], [21, 3, 1, "", "wmma_k"]], "tilelang.carver.roller.rasterization": [[22, 1, 1, "", "NoRasterization"], [22, 1, 1, "", "Rasterization"], [22, 1, 1, "", "Rasterization2DColumn"], [22, 1, 1, "", "Rasterization2DRow"]], "tilelang.carver.roller.rasterization.NoRasterization": [[22, 2, 1, "", "get_code"]], "tilelang.carver.roller.rasterization.Rasterization": [[22, 2, 1, "", "get_code"], [22, 5, 1, "", "panel_width"], [22, 3, 1, "", "panel_width_"]], "tilelang.carver.roller.rasterization.Rasterization2DColumn": [[22, 2, 1, "", "get_code"], [22, 2, 1, "", "get_device_function"]], "tilelang.carver.roller.rasterization.Rasterization2DRow": [[22, 2, 1, "", "get_code"]], "tilelang.carver.roller.shape_inference": [[24, 0, 0, "-", "common"], [25, 0, 0, "-", "tir"]], "tilelang.carver.roller.shape_inference.common": [[24, 1, 1, "", "InputShapeInference"], [24, 1, 1, "", "Statement"]], "tilelang.carver.roller.shape_inference.common.InputShapeInference": [[24, 2, 1, "", "get_input_exprs"], [24, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir": [[25, 1, 1, "", "DependencyAnalysis"], [25, 1, 1, "", "InputShapeInference"], [25, 1, 1, "", "Statement"], [25, 1, 1, "", "TensorDepNode"], [25, 4, 1, "", "get_analyzer_by_tir"], [25, 4, 1, "", "region_exist_in_list"], [25, 4, 1, "", "walk_indice"]], "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis": [[25, 2, 1, "", "analyze"], [25, 2, 1, "", "find_path_from_source"], [25, 2, 1, "", "get_or_create_node"], [25, 2, 1, "", "print_dependencies"], [25, 2, 1, "", "traverse_dependencies"]], "tilelang.carver.roller.shape_inference.tir.InputShapeInference": [[25, 2, 1, "", "construct_dependency_target"], [25, 2, 1, "", "get_input_exprs"], [25, 2, 1, "", "infer"]], "tilelang.carver.roller.shape_inference.tir.Statement": [[25, 2, 1, "", "make_reverse"]], "tilelang.carver.roller.shape_inference.tir.TensorDepNode": [[25, 2, 1, "", "add_next"], [25, 2, 1, "", "add_prev"], [25, 2, 1, "", "deduplicate"]], "tilelang.carver.template": [[27, 0, 0, "-", "base"], [28, 0, 0, "-", "elementwise"], [29, 0, 0, "-", "flashattention"], [30, 0, 0, "-", "gemv"], [31, 0, 0, "-", "general_reduce"], [32, 0, 0, "-", "matmul"]], "tilelang.carver.template.base": [[27, 1, 1, "", "BaseTemplate"]], "tilelang.carver.template.base.BaseTemplate": [[27, 5, 1, "", "arch"], [27, 2, 1, "", "equivalent_function"], [27, 2, 1, "", "get_hardware_aware_configs"], [27, 2, 1, "", "has_arch"], [27, 2, 1, "", "initialize_function"], [27, 2, 1, "", "is_ampere_arch"], [27, 2, 1, "", "is_cdna_arch"], [27, 2, 1, "", "is_volta_arch"], [27, 5, 1, "", "output_nodes"], [27, 2, 1, "", "recommend_hints"], [27, 2, 1, "", "set_function"], [27, 2, 1, "", "set_output_nodes"], [27, 2, 1, "", "with_arch"]], "tilelang.carver.template.elementwise": [[28, 1, 1, "", "ElementwiseTemplate"]], "tilelang.carver.template.elementwise.ElementwiseTemplate": [[28, 5, 1, "", "class_attributes"], [28, 3, 1, "id0", "dtype"], [28, 2, 1, "", "get_hardware_aware_configs"], [28, 2, 1, "", "initialize_function"], [28, 2, 1, "", "params_as_dict"], [28, 3, 1, "id1", "shape"]], "tilelang.carver.template.flashattention": [[29, 1, 1, "", "FlashAttentionTemplate"]], "tilelang.carver.template.flashattention.FlashAttentionTemplate": [[29, 3, 1, "", "accum_dtype"], [29, 3, 1, "", "batch_size"], [29, 5, 1, "", "class_attributes"], [29, 2, 1, "", "get_hardware_aware_configs"], [29, 3, 1, "", "head_dim"], [29, 3, 1, "", "in_dtype"], [29, 2, 1, "", "initialize_function"], [29, 3, 1, "", "is_causal"], [29, 3, 1, "", "num_heads"], [29, 3, 1, "", "out_dtype"], [29, 2, 1, "", "params_as_dict"], [29, 3, 1, "", "seq_kv_length"], [29, 3, 1, "", "seq_length"]], "tilelang.carver.template.gemv": [[30, 1, 1, "", "GEMVTemplate"]], "tilelang.carver.template.gemv.GEMVTemplate": [[30, 3, 1, "", "K"], [30, 3, 1, "", "N"], [30, 3, 1, "", "accum_dtype"], [30, 5, 1, "", "class_attributes"], [30, 2, 1, "", "get_hardware_aware_configs"], [30, 3, 1, "", "in_dtype"], [30, 2, 1, "", "initialize_function"], [30, 3, 1, "", "out_dtype"], [30, 2, 1, "", "params_as_dict"], [30, 3, 1, "", "trans_B"], [30, 3, 1, "", "with_bias"]], "tilelang.carver.template.general_reduce": [[31, 1, 1, "", "GeneralReductionTemplate"]], "tilelang.carver.template.general_reduce.GeneralReductionTemplate": [[31, 5, 1, "", "class_attributes"], [31, 3, 1, "", "dtype"], [31, 2, 1, "", "get_hardware_aware_configs"], [31, 2, 1, "", "initialize_function"], [31, 2, 1, "", "params_as_dict"], [31, 3, 1, "", "shape"], [31, 3, 1, "", "structure"]], "tilelang.carver.template.matmul": [[32, 1, 1, "", "MatmulTemplate"]], "tilelang.carver.template.matmul.MatmulTemplate": [[32, 3, 1, "id0", "K"], [32, 3, 1, "id1", "M"], [32, 3, 1, "id2", "N"], [32, 3, 1, "id3", "accum_dtype"], [32, 5, 1, "", "class_attributes"], [32, 2, 1, "", "get_hardware_aware_configs"], [32, 3, 1, "id4", "in_dtype"], [32, 2, 1, "", "initialize_function"], [32, 3, 1, "id5", "out_dtype"], [32, 2, 1, "", "params_as_dict"], [32, 3, 1, "id6", "trans_A"], [32, 3, 1, "id7", "trans_B"], [32, 3, 1, "id8", "with_bias"]], "tilelang.carver.utils": [[33, 4, 1, "", "get_rasterization_code"], [33, 4, 1, "", "get_roller_hints_from_func"], [33, 4, 1, "", "get_roller_hints_from_output_nodes"], [33, 4, 1, "", "retrieve_func_from_module"]], "tilelang.common": [[35, 0, 0, "-", "transform_kind"]], "tilelang.common.transform_kind": [[35, 1, 1, "", "TransformKind"]], "tilelang.common.transform_kind.TransformKind": [[35, 3, 1, "", "InterWarpTransform"], [35, 3, 1, "", "IntraWarpTransform"], [35, 3, 1, "", "LDMatrixTransform"], [35, 3, 1, "", "NonTransform"], [35, 2, 1, "", "is_inter_warp_transform"], [35, 2, 1, "", "is_intra_warp_transform"], [35, 2, 1, "", "is_ld_matrix_transform"], [35, 2, 1, "", "is_non_transform"]], "tilelang.contrib": [[37, 0, 0, "-", "cc"], [38, 0, 0, "-", "dlpack"], [39, 0, 0, "-", "hipcc"], [40, 0, 0, "-", "nvcc"]], "tilelang.contrib.cc": [[37, 4, 1, "", "create_executable"], [37, 4, 1, "", "create_shared"], [37, 4, 1, "", "create_staticlib"], [37, 4, 1, "", "cross_compiler"], [37, 4, 1, "", "get_cc"], [37, 4, 1, "", "get_cplus_compiler"], [37, 4, 1, "", "get_global_symbol_section_map"], [37, 4, 1, "", "get_target_by_dump_machine"]], "tilelang.contrib.dlpack": [[38, 4, 1, "", "convert_func"], [38, 4, 1, "", "to_pytorch_func"]], "tilelang.contrib.hipcc": [[39, 4, 1, "", "compile_hip"]], "tilelang.contrib.nvcc": [[40, 4, 1, "", "callback_libdevice_path"], [40, 4, 1, "", "compile_cuda"], [40, 4, 1, "", "find_cuda_path"], [40, 4, 1, "", "get_cuda_version"], [40, 4, 1, "", "have_cudagraph"], [40, 4, 1, "", "have_fp16"], [40, 4, 1, "", "have_int8"], [40, 4, 1, "", "have_tensorcore"], [40, 4, 1, "", "parse_compute_version"]], "tilelang.engine": [[42, 0, 0, "-", "callback"], [43, 0, 0, "-", "lower"], [44, 0, 0, "-", "param"], [45, 0, 0, "-", "phase"]], "tilelang.engine.callback": [[42, 4, 1, "", "register_cuda_postproc"], [42, 4, 1, "", "register_cuda_postproc_callback"], [42, 4, 1, "", "register_hip_postproc"], [42, 4, 1, "", "register_hip_postproc_callback"]], "tilelang.engine.lower": [[43, 4, 1, "", "canon_target_host"], [43, 4, 1, "", "device_codegen"], [43, 4, 1, "", "device_codegen_without_compile"], [43, 4, 1, "", "extrac_params"], [43, 4, 1, "", "get_device_call"], [43, 4, 1, "", "get_host_call"], [43, 4, 1, "", "has_device_kernel_launch"], [43, 4, 1, "", "host_codegen"], [43, 4, 1, "", "is_cpu_device_backend"], [43, 4, 1, "", "is_device_call"], [43, 4, 1, "", "is_device_call_c_device"], [43, 4, 1, "", "lower"]], "tilelang.engine.param": [[44, 1, 1, "", "CompiledArtifact"], [44, 1, 1, "", "KernelParam"]], "tilelang.engine.param.CompiledArtifact": [[44, 3, 1, "", "device_mod"], [44, 3, 1, "", "host_mod"], [44, 3, 1, "", "kernel_source"], [44, 3, 1, "", "params"], [44, 3, 1, "", "rt_mod"]], "tilelang.engine.param.KernelParam": [[44, 3, 1, "", "dtype"], [44, 2, 1, "", "from_buffer"], [44, 2, 1, "", "from_var"], [44, 2, 1, "", "is_float8"], [44, 2, 1, "", "is_scalar"], [44, 2, 1, "", "is_unsigned"], [44, 3, 1, "", "shape"]], "tilelang.engine.phase": [[45, 4, 1, "", "LowerAndLegalize"], [45, 4, 1, "", "OptimizeForTarget"]], "tilelang.env": [[46, 4, 1, "", "disable_cache"], [46, 4, 1, "", "enable_cache"], [46, 4, 1, "", "is_cache_enabled"]], "tilelang.intrinsics": [[48, 0, 0, "-", "mfma_layout"], [49, 0, 0, "-", "mfma_macro_generator"], [50, 0, 0, "-", "mma_layout"], [51, 0, 0, "-", "mma_macro_generator"], [52, 0, 0, "-", "utils"]], "tilelang.intrinsics.mfma_layout": [[48, 4, 1, "", "make_mfma_swizzle_layout"], [48, 4, 1, "", "shared_16x16_to_ldmatrix_64x4_layout"], [48, 4, 1, "", "shared_16x16_to_local_64x4_layout_A"], [48, 4, 1, "", "shared_16x16_to_local_64x4_layout_B"], [48, 4, 1, "", "shared_16x16_to_local_64x4_layout_C"], [48, 4, 1, "", "shared_16x32_to_local_64x8_layout_A"], [48, 4, 1, "", "shared_16x32_to_local_64x8_layout_B"], [48, 4, 1, "", "shared_16x4_to_local_64x1_layout_A"], [48, 4, 1, "", "shared_4x16_to_local_64x1_layout_B"], [48, 4, 1, "", "thread_id_shared_access_64x1_to_16x4_layout_A"], [48, 4, 1, "", "thread_id_shared_access_64x1_to_4x16_layout_B"], [48, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_A"], [48, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_B"], [48, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_m_n"], [48, 4, 1, "", "thread_id_shared_access_64x4_to_16x16_layout_C_n_m"], [48, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_A"], [48, 4, 1, "", "thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_macro_generator": [[49, 1, 1, "", "MatrixCoreIntrinEmitter"]], "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter": [[49, 3, 1, "", "M_DIM"], [49, 3, 1, "", "N_DIM"], [49, 3, 1, "", "WARP_SIZE"], [49, 3, 1, "", "dtype_abbrv"], [49, 2, 1, "", "extract_thread_binding"], [49, 2, 1, "", "get_ldmatrix_index_map"], [49, 3, 1, "", "is_m_first"], [49, 3, 1, "", "k_pack"], [49, 2, 1, "", "ldmatrix_a"], [49, 2, 1, "", "ldmatrix_b"], [49, 2, 1, "", "mfma"], [49, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_layout": [[50, 4, 1, "", "get_swizzle_layout"], [50, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_a"], [50, 4, 1, "", "ldmatrix_16x32_to_shared_16x32_layout_b"], [50, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_a"], [50, 4, 1, "", "ldmatrix_32x16_to_shared_16x32_layout_b"], [50, 4, 1, "", "ldmatrix_32x8_to_shared_16x16_layout"], [50, 4, 1, "", "ldmatrix_trans_32x8_to_shared_16x16_layout"], [50, 4, 1, "", "make_mma_swizzle_layout"], [50, 4, 1, "", "mma_32x8_to_shared_16x16_layout"], [50, 4, 1, "", "mma_store_32x8_to_shared_16x16_layout"], [50, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [50, 4, 1, "", "shared_16x16_to_mma_32x8_layout_rs"], [50, 4, 1, "", "shared_16x16_to_mma_32x8_layout_sr"], [50, 4, 1, "", "shared_16x16_to_mma_32x8_layout_trans"], [50, 4, 1, "", "shared_16x16_to_mma_32x8_smoothlayout"], [50, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [50, 4, 1, "", "shared_16x32_to_mma_32x16_smoothlayout"], [50, 4, 1, "", "shared_32x16_to_mma_32x16_layout"], [50, 4, 1, "", "shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_macro_generator": [[51, 1, 1, "", "INT4TensorCoreIntrinEmitter"], [51, 1, 1, "", "INT4TensorCoreIntrinEmitterWithLadderTransform"], [51, 1, 1, "", "TensorCoreIntrinEmitter"], [51, 1, 1, "", "TensorCoreIntrinEmitterWithLadderTransform"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter": [[51, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform": [[51, 2, 1, "", "mma"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter": [[51, 3, 1, "", "M_DIM"], [51, 3, 1, "", "N_DIM"], [51, 3, 1, "", "WARP_SIZE"], [51, 3, 1, "", "dtype_abbrv"], [51, 2, 1, "", "extract_thread_binding"], [51, 2, 1, "", "get_store_index_map"], [51, 3, 1, "", "is_m_first"], [51, 2, 1, "", "ldmatrix_a"], [51, 2, 1, "", "ldmatrix_b"], [51, 2, 1, "", "make_mma_load_layout"], [51, 2, 1, "", "make_mma_store_layout"], [51, 2, 1, "", "mma"], [51, 2, 1, "", "stmatrix"]], "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform": [[51, 2, 1, "", "ldmatrix_a"], [51, 2, 1, "", "ldmatrix_b"], [51, 2, 1, "", "mma"]], "tilelang.intrinsics.utils": [[52, 4, 1, "", "get_ldmatrix_offset"], [52, 4, 1, "", "get_mma_micro_size"], [52, 4, 1, "", "index_to_coordinates"], [52, 4, 1, "", "mfma_store_index_map"], [52, 4, 1, "", "mma_store_index_map"], [52, 4, 1, "", "shared_16x16_to_mma_32x8_layout"], [52, 4, 1, "", "shared_16x32_to_mma_32x16_layout"], [52, 4, 1, "", "shared_32x16_to_mma_32x16_layout"]], "tilelang.jit": [[54, 0, 0, "-", "adapter"], [53, 4, 1, "", "compile"], [65, 0, 0, "-", "env"], [53, 4, 1, "", "jit"], [66, 0, 0, "-", "kernel"]], "tilelang.jit.adapter": [[55, 0, 0, "-", "base"], [56, 0, 0, "-", "ctypes"], [58, 0, 0, "-", "cython"], [61, 0, 0, "-", "dlpack"], [62, 0, 0, "-", "libgen"], [63, 0, 0, "-", "utils"], [64, 0, 0, "-", "wrapper"]], "tilelang.jit.adapter.base": [[55, 1, 1, "", "BaseKernelAdapter"]], "tilelang.jit.adapter.base.BaseKernelAdapter": [[55, 3, 1, "", "func"], [55, 2, 1, "", "get_kernel_source"]], "tilelang.jit.adapter.ctypes": [[57, 0, 0, "-", "adapter"]], "tilelang.jit.adapter.ctypes.adapter": [[57, 1, 1, "", "CtypesKernelAdapter"]], "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter": [[57, 3, 1, "", "dynamic_symbolic_map"], [57, 2, 1, "", "from_database"], [57, 2, 1, "", "get_kernel_source"], [57, 3, 1, "", "ir_module"], [57, 5, 1, "", "is_dynamic"], [57, 3, 1, "", "kernel_global_source"], [57, 3, 1, "", "lib"], [57, 5, 1, "", "lib_code"], [57, 5, 1, "", "libpath"], [57, 3, 1, "", "param_dtypes"], [57, 3, 1, "", "param_shapes"], [57, 3, 1, "", "pass_configs"], [57, 5, 1, "", "prim_func"], [57, 5, 1, "", "srcpath"], [57, 3, 1, "", "target"], [57, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython": [[59, 0, 0, "-", "adapter"], [60, 0, 0, "-", "cython_wrapper"]], "tilelang.jit.adapter.cython.adapter": [[59, 1, 1, "", "CythonKernelAdapter"], [59, 4, 1, "", "get_cache_dir"], [59, 4, 1, "", "get_cached_lib"], [59, 4, 1, "", "get_cython_compiler"]], "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter": [[59, 3, 1, "", "buffer_device_map"], [59, 3, 1, "", "buffer_dtype_map"], [59, 3, 1, "", "dynamic_symbolic_map"], [59, 2, 1, "", "from_database"], [59, 2, 1, "", "get_kernel_source"], [59, 3, 1, "", "ir_module"], [59, 5, 1, "", "is_dynamic"], [59, 3, 1, "", "kernel_global_source"], [59, 3, 1, "", "lib"], [59, 5, 1, "", "lib_code"], [59, 5, 1, "", "libpath"], [59, 3, 1, "", "pass_configs"], [59, 5, 1, "", "prim_func"], [59, 3, 1, "", "ptr_map"], [59, 5, 1, "", "srcpath"], [59, 3, 1, "", "static_shape_map"], [59, 3, 1, "", "target"], [59, 3, 1, "", "wrapped_source"]], "tilelang.jit.adapter.cython.cython_wrapper": [[60, 1, 1, "", "CythonKernelWrapper"]], "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper": [[60, 2, 1, "", "forward"], [60, 2, 1, "", "set_buffer_device_map"], [60, 2, 1, "", "set_buffer_dtype_map"], [60, 2, 1, "", "set_dynamic_symbolic_map"], [60, 2, 1, "", "set_ptr_map"], [60, 2, 1, "", "set_static_shape_map"]], "tilelang.jit.adapter.dlpack": [[61, 1, 1, "", "TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.libgen": [[62, 1, 1, "", "LibraryGenerator"]], "tilelang.jit.adapter.libgen.LibraryGenerator": [[62, 2, 1, "", "compile_lib"], [62, 2, 1, "", "get_lib_path"], [62, 2, 1, "", "get_source_path"], [62, 3, 1, "", "lib_code"], [62, 3, 1, "", "libpath"], [62, 2, 1, "", "load_lib"], [62, 2, 1, "", "remove_lib"], [62, 2, 1, "", "set_lib_path"], [62, 2, 1, "", "set_src_path"], [62, 3, 1, "", "srcpath"], [62, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.utils": [[63, 4, 1, "", "get_annotated_mod"], [63, 4, 1, "", "is_cpu_target"], [63, 4, 1, "", "is_cuda_target"], [63, 4, 1, "", "is_hip_target"], [63, 4, 1, "", "match_declare_kernel"], [63, 4, 1, "", "match_declare_kernel_cpu"], [63, 4, 1, "", "match_global_kernel"]], "tilelang.jit.adapter.wrapper": [[64, 1, 1, "", "BaseWrapper"], [64, 1, 1, "", "TLCPUSourceWrapper"], [64, 1, 1, "", "TLCUDASourceWrapper"], [64, 1, 1, "", "TLHIPSourceWrapper"], [64, 1, 1, "", "TLWrapper"]], "tilelang.jit.adapter.wrapper.BaseWrapper": [[64, 2, 1, "", "wrap"]], "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper": [[64, 3, 1, "", "CALL_PREFIX"], [64, 3, 1, "", "INIT_FUNC"], [64, 3, 1, "", "backend"], [64, 2, 1, "", "create_call_func"], [64, 3, 1, "", "device_mod"], [64, 2, 1, "", "get_cpu_init_func"], [64, 2, 1, "", "get_dynamic_symbolic_set"], [64, 3, 1, "", "host_mod"], [64, 2, 1, "", "parse_source_information"], [64, 3, 1, "", "pass_configs"], [64, 5, 1, "", "prim_func"], [64, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper": [[64, 3, 1, "", "backend"], [64, 2, 1, "", "create_dispatch_func"], [64, 3, 1, "", "device_mod"], [64, 2, 1, "", "generate_tma_descriptor_args"], [64, 2, 1, "", "get_cuda_init_func"], [64, 2, 1, "", "get_dynamic_symbolic_set"], [64, 3, 1, "", "host_mod"], [64, 2, 1, "", "is_tma_descriptor_arg"], [64, 2, 1, "", "parse_source_information"], [64, 3, 1, "", "pass_configs"], [64, 5, 1, "", "prim_func"], [64, 2, 1, "", "update_lib_code"]], "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper": [[64, 2, 1, "", "get_hip_init_func"], [64, 2, 1, "", "get_stream_type"]], "tilelang.jit.adapter.wrapper.TLWrapper": [[64, 2, 1, "", "assign_device_module"], [64, 2, 1, "", "assign_host_module"], [64, 2, 1, "", "assign_optimized_module"], [64, 2, 1, "", "assign_pass_configs"], [64, 3, 1, "", "device_mod"], [64, 3, 1, "", "host_mod"], [64, 3, 1, "", "lib"], [64, 3, 1, "", "pass_configs"], [64, 3, 1, "", "target"], [64, 2, 1, "", "wrap"]], "tilelang.jit.kernel": [[66, 1, 1, "", "JITKernel"]], "tilelang.jit.kernel.JITKernel": [[66, 3, 1, "id0", "adapter"], [66, 3, 1, "id1", "artifact"], [66, 2, 1, "", "export_library"], [66, 2, 1, "", "from_database"], [66, 2, 1, "", "from_tilelang_function"], [66, 2, 1, "", "get_host_source"], [66, 2, 1, "", "get_kernel_source"], [66, 2, 1, "", "get_profiler"], [66, 5, 1, "", "host_source"], [66, 5, 1, "", "kernel_source"], [66, 5, 1, "", "out_idx"], [66, 5, 1, "", "params"], [66, 2, 1, "", "run_once"], [66, 3, 1, "id2", "torch_function"]], "tilelang.language": [[68, 0, 0, "-", "allocate"], [67, 4, 1, "", "annotate_layout"], [69, 0, 0, "-", "builtin"], [70, 0, 0, "-", "copy"], [71, 0, 0, "-", "customize"], [72, 0, 0, "-", "fill"], [73, 0, 0, "-", "frame"], [74, 0, 0, "-", "gemm"], [67, 4, 1, "", "import_source"], [75, 0, 0, "-", "kernel"], [76, 0, 0, "-", "memscope"], [77, 0, 0, "-", "parallel"], [78, 0, 0, "-", "pipeline"], [79, 0, 0, "-", "print"], [80, 0, 0, "-", "proxy"], [81, 0, 0, "-", "reduce"], [67, 4, 1, "", "symbolic"], [82, 0, 0, "-", "tir"], [67, 4, 1, "", "use_swizzle"]], "tilelang.language.allocate": [[68, 4, 1, "", "alloc_fragment"], [68, 4, 1, "", "alloc_local"], [68, 4, 1, "", "alloc_shared"], [68, 4, 1, "", "alloc_var"]], "tilelang.language.builtin": [[69, 4, 1, "", "CreateListofMBarrierOp"], [69, 4, 1, "", "CreateTMADescriptorOp"], [69, 4, 1, "", "FenceProxyAsyncOp"], [69, 4, 1, "", "GetMBarrierOp"], [69, 4, 1, "", "MBarrierExpectTX"], [69, 4, 1, "", "MBarrierWaitParity"], [69, 4, 1, "", "NoSetMaxNReg"], [69, 4, 1, "", "SetMaxNReg"], [69, 4, 1, "", "TMALoadOp"], [69, 4, 1, "", "TMAStoreArrive"], [69, 4, 1, "", "TMAStoreWait"], [69, 4, 1, "", "WaitWgmma"]], "tilelang.language.copy": [[70, 4, 1, "", "buffer_load_to_tile_region"], [70, 4, 1, "", "buffer_region_to_tile_region"], [70, 4, 1, "", "buffer_to_tile_region"], [70, 4, 1, "", "c2d_im2col"], [70, 4, 1, "", "copy"], [70, 4, 1, "", "region"]], "tilelang.language.customize": [[71, 4, 1, "", "atomic_add"], [71, 4, 1, "", "atomic_addx2"], [71, 4, 1, "", "clamp"], [71, 4, 1, "", "dp4a"], [71, 4, 1, "", "reshape"], [71, 4, 1, "", "view"]], "tilelang.language.fill": [[72, 4, 1, "", "clear"], [72, 4, 1, "", "fill"]], "tilelang.language.frame": [[73, 1, 1, "", "FrameStack"], [73, 1, 1, "", "LetFrame"], [73, 4, 1, "", "get_let_value"], [73, 4, 1, "", "has_let_value"]], "tilelang.language.frame.FrameStack": [[73, 2, 1, "", "get_value"], [73, 2, 1, "", "has_value"], [73, 2, 1, "", "pop"], [73, 2, 1, "", "push"], [73, 2, 1, "", "top"]], "tilelang.language.frame.LetFrame": [[73, 2, 1, "", "Current"], [73, 2, 1, "", "get_value"], [73, 2, 1, "", "has_value"]], "tilelang.language.gemm": [[74, 4, 1, "", "gemm"]], "tilelang.language.kernel": [[75, 1, 1, "", "FrameStack"], [75, 4, 1, "", "Kernel"], [75, 1, 1, "", "KernelLaunchFrame"], [75, 4, 1, "", "get_block_binding"], [75, 4, 1, "", "get_block_bindings"], [75, 4, 1, "", "get_thread_binding"], [75, 4, 1, "", "get_thread_bindings"]], "tilelang.language.kernel.FrameStack": [[75, 2, 1, "", "pop"], [75, 2, 1, "", "push"], [75, 2, 1, "", "top"]], "tilelang.language.kernel.KernelLaunchFrame": [[75, 2, 1, "", "Current"], [75, 5, 1, "", "blocks"], [75, 2, 1, "", "get_block_binding"], [75, 2, 1, "", "get_block_bindings"], [75, 2, 1, "", "get_block_extent"], [75, 2, 1, "", "get_num_threads"], [75, 2, 1, "", "get_thread_binding"], [75, 2, 1, "", "get_thread_bindings"], [75, 2, 1, "", "get_thread_extent"], [75, 5, 1, "", "num_threads"], [75, 5, 1, "", "threads"]], "tilelang.language.parallel": [[77, 4, 1, "", "Parallel"]], "tilelang.language.pipeline": [[78, 4, 1, "", "Pipelined"]], "tilelang.language.print": [[79, 4, 1, "", "print"]], "tilelang.language.proxy": [[80, 1, 1, "", "BaseTensorProxy"], [80, 1, 1, "", "BufferProxy"], [80, 1, 1, "", "FragmentBufferProxy"], [80, 1, 1, "", "LocalBufferProxy"], [80, 1, 1, "", "SharedBufferProxy"], [80, 1, 1, "", "TensorProxy"], [80, 4, 1, "", "make_tensor"], [80, 4, 1, "", "ptr"]], "tilelang.language.proxy.BaseTensorProxy": [[80, 3, 1, "", "default_align"], [80, 3, 1, "", "default_offset_factor"], [80, 3, 1, "", "default_scope"], [80, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.BufferProxy": [[80, 2, 1, "", "from_ptr"]], "tilelang.language.proxy.FragmentBufferProxy": [[80, 3, 1, "", "default_scope"]], "tilelang.language.proxy.LocalBufferProxy": [[80, 3, 1, "", "default_scope"]], "tilelang.language.proxy.SharedBufferProxy": [[80, 3, 1, "", "default_scope"]], "tilelang.language.reduce": [[81, 4, 1, "", "reduce"], [81, 4, 1, "", "reduce_abssum"], [81, 4, 1, "", "reduce_max"], [81, 4, 1, "", "reduce_min"], [81, 4, 1, "", "reduce_sum"]], "tilelang.language.tir": [[83, 0, 0, "-", "entry"], [84, 0, 0, "-", "ir"], [85, 0, 0, "-", "op"]], "tilelang.language.tir.entry": [[83, 4, 1, "", "macro"], [83, 4, 1, "", "prim_func"]], "tilelang.language.tir.ir": [[84, 4, 1, "", "grid"], [84, 4, 1, "", "parallel"], [84, 4, 1, "", "serial"], [84, 4, 1, "", "thread_binding"], [84, 4, 1, "", "unroll"], [84, 4, 1, "", "vectorized"]], "tilelang.language.tir.op": [[85, 4, 1, "", "TVMBackendAllocWorkspace"], [85, 4, 1, "", "TVMBackendFreeWorkspace"], [85, 4, 1, "", "abs"], [85, 4, 1, "", "acos"], [85, 4, 1, "", "acosh"], [85, 4, 1, "", "address_of"], [85, 4, 1, "", "all"], [85, 4, 1, "", "any"], [85, 4, 1, "", "anylist_getitem"], [85, 4, 1, "", "anylist_resetitem"], [85, 4, 1, "", "anylist_setitem_call_cpacked"], [85, 4, 1, "", "anylist_setitem_call_packed"], [85, 4, 1, "", "asin"], [85, 4, 1, "", "asinh"], [85, 4, 1, "", "assume"], [85, 4, 1, "", "atan"], [85, 4, 1, "", "atan2"], [85, 4, 1, "", "atanh"], [85, 4, 1, "", "bitwise_and"], [85, 4, 1, "", "bitwise_not"], [85, 4, 1, "", "bitwise_or"], [85, 4, 1, "", "bitwise_xor"], [85, 4, 1, "", "call_cpacked"], [85, 4, 1, "", "call_cpacked_lowered"], [85, 4, 1, "", "call_extern"], [85, 4, 1, "", "call_intrin"], [85, 4, 1, "", "call_llvm_intrin"], [85, 4, 1, "", "call_llvm_pure_intrin"], [85, 4, 1, "", "call_packed"], [85, 4, 1, "", "call_packed_lowered"], [85, 4, 1, "", "call_pure_extern"], [85, 4, 1, "", "call_tir"], [85, 4, 1, "", "ceil"], [85, 4, 1, "", "ceildiv"], [85, 4, 1, "", "clz"], [85, 4, 1, "", "comm_reducer"], [85, 4, 1, "", "copysign"], [85, 4, 1, "", "cos"], [85, 4, 1, "", "cosh"], [85, 4, 1, "", "create_barriers"], [85, 4, 1, "", "div"], [85, 4, 1, "", "end_profile_intrinsic"], [85, 4, 1, "", "erf"], [85, 4, 1, "", "exp"], [85, 4, 1, "", "exp10"], [85, 4, 1, "", "exp2"], [85, 4, 1, "", "floor"], [85, 4, 1, "", "floordiv"], [85, 4, 1, "", "floormod"], [85, 4, 1, "", "fmod"], [85, 4, 1, "", "hypot"], [85, 4, 1, "", "if_then_else"], [85, 4, 1, "", "indexdiv"], [85, 4, 1, "", "indexmod"], [85, 4, 1, "", "infinity"], [85, 4, 1, "", "isfinite"], [85, 4, 1, "", "isinf"], [85, 4, 1, "", "isnan"], [85, 4, 1, "", "isnullptr"], [85, 4, 1, "", "ldexp"], [85, 4, 1, "", "likely"], [85, 4, 1, "", "log"], [85, 4, 1, "", "log10"], [85, 4, 1, "", "log1p"], [85, 4, 1, "", "log2"], [85, 4, 1, "", "lookup_param"], [85, 4, 1, "", "max_value"], [85, 4, 1, "", "min_value"], [85, 4, 1, "", "mma_fill"], [85, 4, 1, "", "mma_store"], [85, 4, 1, "", "nearbyint"], [85, 4, 1, "", "nextafter"], [85, 4, 1, "", "popcount"], [85, 4, 1, "", "pow"], [85, 4, 1, "", "power"], [85, 4, 1, "", "ptx_arrive_barrier"], [85, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [85, 4, 1, "", "ptx_commit_group"], [85, 4, 1, "", "ptx_cp_async"], [85, 4, 1, "", "ptx_cp_async_barrier"], [85, 4, 1, "", "ptx_cp_async_bulk"], [85, 4, 1, "", "ptx_init_barrier_thread_count"], [85, 4, 1, "", "ptx_ldmatrix"], [85, 4, 1, "", "ptx_mma"], [85, 4, 1, "", "ptx_mma_sp"], [85, 4, 1, "", "ptx_wait_barrier"], [85, 4, 1, "", "ptx_wait_group"], [85, 4, 1, "", "q_multiply_shift"], [85, 4, 1, "", "q_multiply_shift_per_axis"], [85, 4, 1, "", "reinterpret"], [85, 4, 1, "", "ret"], [85, 4, 1, "", "round"], [85, 4, 1, "", "rsqrt"], [85, 4, 1, "", "shift_left"], [85, 4, 1, "", "shift_right"], [85, 4, 1, "", "sigmoid"], [85, 4, 1, "", "sin"], [85, 4, 1, "", "sinh"], [85, 4, 1, "", "sqrt"], [85, 4, 1, "", "start_profile_intrinsic"], [85, 4, 1, "", "tan"], [85, 4, 1, "", "tanh"], [85, 4, 1, "", "trace"], [85, 4, 1, "", "trunc"], [85, 4, 1, "", "truncdiv"], [85, 4, 1, "", "truncmod"], [85, 4, 1, "", "tvm_access_ptr"], [85, 4, 1, "", "tvm_bmma_sync"], [85, 4, 1, "", "tvm_check_return"], [85, 4, 1, "", "tvm_fill_fragment"], [85, 4, 1, "", "tvm_load_matrix_sync"], [85, 4, 1, "", "tvm_mfma"], [85, 4, 1, "", "tvm_mfma_store"], [85, 4, 1, "", "tvm_mma_sync"], [85, 4, 1, "", "tvm_rdna_wmma"], [85, 4, 1, "", "tvm_rdna_wmma_store"], [85, 4, 1, "", "tvm_stack_alloca"], [85, 4, 1, "", "tvm_stack_make_array"], [85, 4, 1, "", "tvm_stack_make_shape"], [85, 4, 1, "", "tvm_storage_sync"], [85, 4, 1, "", "tvm_store_matrix_sync"], [85, 4, 1, "", "tvm_struct_get"], [85, 4, 1, "", "tvm_struct_set"], [85, 4, 1, "", "tvm_thread_allreduce"], [85, 4, 1, "", "tvm_thread_invariant"], [85, 4, 1, "", "tvm_throw_last_error"], [85, 4, 1, "", "tvm_tuple"], [85, 4, 1, "", "tvm_warp_activemask"], [85, 4, 1, "", "tvm_warp_shuffle"], [85, 4, 1, "", "tvm_warp_shuffle_down"], [85, 4, 1, "", "tvm_warp_shuffle_up"], [85, 4, 1, "", "type_annotation"], [85, 4, 1, "", "undef"], [85, 4, 1, "", "vectorcombine"], [85, 4, 1, "", "vectorhigh"], [85, 4, 1, "", "vectorlow"], [85, 4, 1, "", "vscale"]], "tilelang.layout": [[87, 0, 0, "-", "fragment"], [88, 0, 0, "-", "layout"], [89, 0, 0, "-", "swizzle"]], "tilelang.layout.fragment": [[87, 1, 1, "", "Fragment"], [87, 4, 1, "", "make_swizzled_layout"]], "tilelang.layout.fragment.Fragment": [[87, 2, 1, "", "condense_rep_var"], [87, 2, 1, "", "get_thread_size"], [87, 2, 1, "", "map_forward_thread"], [87, 2, 1, "", "repeat"], [87, 2, 1, "", "replicate"], [87, 5, 1, "", "thread"]], "tilelang.layout.layout": [[88, 1, 1, "", "Layout"]], "tilelang.layout.layout.Layout": [[88, 2, 1, "", "get_forward_vars"], [88, 2, 1, "", "get_input_shape"], [88, 2, 1, "", "get_output_shape"], [88, 5, 1, "", "index"], [88, 2, 1, "", "inverse"], [88, 2, 1, "", "map_forward_index"]], "tilelang.layout.swizzle": [[89, 4, 1, "", "make_swizzled_layout"]], "tilelang.math": [[90, 4, 1, "", "cdiv"], [90, 4, 1, "", "next_power_of_2"]], "tilelang.primitives": [[92, 0, 0, "-", "gemm"]], "tilelang.primitives.gemm": [[93, 0, 0, "-", "base"], [92, 4, 1, "", "gemm"], [94, 0, 0, "-", "gemm_mma"]], "tilelang.primitives.gemm.base": [[93, 1, 1, "", "GemmBaseParams"], [93, 1, 1, "", "GemmWarpPolicy"]], "tilelang.primitives.gemm.base.GemmBaseParams": [[93, 3, 1, "", "A"], [93, 3, 1, "", "B"], [93, 3, 1, "", "C"], [93, 3, 1, "", "block_col_warps"], [93, 3, 1, "", "block_row_warps"], [93, 3, 1, "", "chunk"], [93, 5, 1, "", "class_attributes"], [93, 2, 1, "", "get_warp_size"], [93, 2, 1, "", "infer_block_partition"], [93, 3, 1, "", "k_pack"], [93, 2, 1, "", "params_as_dict"], [93, 3, 1, "", "policy"], [93, 3, 1, "", "transpose_A"], [93, 3, 1, "", "transpose_B"], [93, 3, 1, "", "warp_col_tiles"], [93, 3, 1, "", "warp_row_tiles"]], "tilelang.primitives.gemm.base.GemmWarpPolicy": [[93, 3, 1, "", "FullCol"], [93, 3, 1, "", "FullRow"], [93, 3, 1, "", "Square"], [93, 2, 1, "", "compute_warp_partition"], [93, 2, 1, "", "from_warp_partition"], [93, 2, 1, "", "is_full_col"], [93, 2, 1, "", "is_full_row"], [93, 2, 1, "", "is_square"], [93, 2, 1, "", "to_prime_factors"]], "tilelang.primitives.gemm.gemm_mma": [[94, 1, 1, "", "GemmPrimitiveMMA"]], "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA": [[94, 5, 1, "", "accum_dtype"], [94, 2, 1, "", "gemm_rrr"], [94, 2, 1, "", "gemm_rsr"], [94, 2, 1, "", "gemm_srr"], [94, 2, 1, "", "gemm_ssr"], [94, 5, 1, "", "in_dtype"], [94, 2, 1, "", "invoke"]], "tilelang.profiler": [[95, 1, 1, "", "Profiler"], [96, 0, 0, "-", "bench"]], "tilelang.profiler.Profiler": [[95, 3, 1, "id0", "adapter"], [95, 2, 1, "", "assert_allclose"], [95, 2, 1, "", "assert_consistent"], [95, 2, 1, "", "determine_profiler"], [95, 2, 1, "", "do_bench"], [95, 5, 1, "", "func"], [95, 3, 1, "id1", "params"], [95, 3, 1, "id2", "result_idx"], [95, 2, 1, "", "run_once"], [95, 3, 1, "id3", "supply_type"], [95, 2, 1, "", "with_default_adapter"]], "tilelang.profiler.bench": [[96, 4, 1, "", "do_bench"]], "tilelang.testing": [[97, 4, 1, "", "main"], [97, 4, 1, "", "set_random_seed"]], "tilelang.tools": [[99, 0, 0, "-", "plot_layout"]], "tilelang.tools.plot_layout": [[99, 4, 1, "", "plot_layout"]], "tilelang.transform": [[100, 4, 1, "", "AnnotateDeviceRegions"], [100, 4, 1, "", "ClusterPlanning"], [100, 4, 1, "", "FrontendLegalize"], [100, 4, 1, "", "IfStmtBinding"], [100, 4, 1, "", "InjectFenceProxy"], [100, 4, 1, "", "InjectPTXAsyncCopy"], [100, 4, 1, "", "InjectSoftwarePipeline"], [100, 4, 1, "", "LayoutInference"], [100, 4, 1, "", "LegalizeSafeMemoryAccess"], [100, 4, 1, "", "LegalizeVectorizedLoop"], [100, 4, 1, "", "LowerDeviceStorageAccessInfo"], [100, 4, 1, "", "LowerHopperIntrin"], [100, 4, 1, "", "LowerTileOp"], [100, 4, 1, "", "MakePackedAPI"], [100, 4, 1, "", "MergeIfStmt"], [100, 4, 1, "", "MultiVersionBuffer"], [100, 4, 1, "", "PipelinePlanning"], [100, 4, 1, "", "RewriteWgmmaSync"], [100, 4, 1, "", "ThreadPartialSync"], [100, 4, 1, "", "ThreadSync"], [100, 4, 1, "", "VectorizeLoop"], [100, 4, 1, "", "WarpSpecialized"], [100, 4, 1, "", "WarpSpecializedPipeline"], [101, 0, 0, "-", "simplify"]], "tilelang.transform.simplify": [[101, 4, 1, "", "Simplify"], [101, 4, 1, "", "apply_simplify"], [101, 4, 1, "", "simplify_prim_func"]], "tilelang.utils": [[103, 0, 0, "-", "deprecated"], [104, 0, 0, "-", "language"], [105, 0, 0, "-", "target"], [106, 0, 0, "-", "tensor"]], "tilelang.utils.deprecated": [[103, 4, 1, "", "deprecated"]], "tilelang.utils.language": [[104, 4, 1, "", "array_reduce"], [104, 4, 1, "", "is_fragment"], [104, 4, 1, "", "is_global"], [104, 4, 1, "", "is_local"], [104, 4, 1, "", "is_shared"], [104, 4, 1, "", "is_shared_dynamic"], [104, 4, 1, "", "retrieve_func_from_module"]], "tilelang.utils.target": [[105, 4, 1, "", "check_cuda_availability"], [105, 4, 1, "", "check_hip_availability"], [105, 4, 1, "", "determine_target"]], "tilelang.utils.tensor": [[106, 1, 1, "", "TensorSupplyType"], [106, 4, 1, "", "adapt_torch2tvm"], [106, 4, 1, "", "get_tensor_supply"], [106, 4, 1, "", "map_torch_type"], [106, 4, 1, "", "torch_assert_close"]], "tilelang.utils.tensor.TensorSupplyType": [[106, 3, 1, "", "Auto"], [106, 3, 1, "", "Integer"], [106, 3, 1, "", "Normal"], [106, 3, 1, "", "One"], [106, 3, 1, "", "Randn"], [106, 3, 1, "", "Uniform"], [106, 3, 1, "", "Zero"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"python": 0, "api": [0, 117], "tilelang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 111], "packag": [1, 2, 3, 5, 7, 14, 18, 23, 26, 34, 36, 41, 47, 53, 54, 56, 58, 67, 82, 86, 90, 91, 92, 95, 97, 98, 100, 102], "subpackag": [1, 5, 14, 53, 54, 67, 91], "submodul": [1, 3, 5, 7, 14, 18, 23, 26, 34, 36, 41, 47, 53, 54, 56, 58, 67, 82, 86, 92, 95, 98, 100, 102, 115], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "content": [1, 2, 3, 5, 7, 14, 18, 23, 26, 34, 36, 41, 47, 53, 54, 56, 58, 67, 82, 86, 90, 91, 92, 95, 97, 98, 100, 102], "autotun": [2, 111], "cach": [3, 4], "kernel_cach": 4, "carver": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 123], "analysi": 6, "arch": [7, 8, 9, 10, 11], "arch_bas": 8, "cdna": 9, "cpu": 10, "cuda": [11, 108], "common_schedul": 12, "matmul_analysi": 13, "roller": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "bestfit": 15, "hint": 16, "node": 17, "polici": [18, 19, 20, 21], "common": [19, 24, 34, 35], "default": 20, "tensorcor": 21, "raster": 22, "shape_infer": [23, 24, 25], "tir": [25, 82, 83, 84, 85], "templat": [26, 27, 28, 29, 30, 31, 32], "base": [27, 55, 93, 114, 116], "elementwis": [28, 108], "flashattent": 29, "gemv": [30, 111], "general_reduc": 31, "matmul": 32, "util": [33, 52, 63, 102, 103, 104, 105, 106], "transform_kind": 35, "contrib": [36, 37, 38, 39, 40], "cc": 37, "dlpack": [38, 61], "hipcc": 39, "nvcc": 40, "engin": [41, 42, 43, 44, 45], "callback": [42, 124], "lower": 43, "param": 44, "phase": 45, "env": [46, 65], "intrins": [47, 48, 49, 50, 51, 52], "mfma_layout": 48, "mfma_macro_gener": 49, "mma_layout": 50, "mma_macro_gener": 51, "jit": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "adapt": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "ctype": [56, 57], "cython": [58, 59, 60], "cython_wrapp": 60, "libgen": 62, "wrapper": 64, "kernel": [66, 75, 120, 127, 128], "languag": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 104, 116, 117, 118, 119, 120, 124], "alloc": [68, 116], "builtin": 69, "copi": [70, 120], "custom": [71, 111], "fill": [72, 120], "frame": 73, "gemm": [74, 92, 93, 94, 120], "memscop": 76, "parallel": [77, 111, 120], "pipelin": [78, 120, 126], "print": [79, 124], "proxi": 80, "reduc": 81, "entri": 83, "ir": 84, "op": 85, "layout": [86, 87, 88, 89, 122], "fragment": 87, "swizzl": 89, "math": 90, "primit": [91, 92, 93, 94, 119, 127], "gemm_mma": 94, "profil": [95, 96], "bench": 96, "test": 97, "tool": [98, 99], "plot_layout": 99, "transform": [100, 101], "simplifi": 101, "deprec": 103, "target": 105, "tensor": 106, "convolut": 107, "oper": [108, 117], "add": 108, "how": 108, "compil": [108, 116, 123, 125], "dynam": 108, "shape": 108, "address": 108, "boundari": 108, "relat": 108, "issu": [108, 124], "comparison": [108, 112], "cute": 108, "conclus": [108, 111, 112, 124], "flash": [109, 110], "attent": [109, 110], "linear": 110, "gener": [111, 112, 113, 123, 124], "matrix": [111, 112, 113, 123, 124], "vector": 111, "multipl": [111, 112, 113, 123, 124], "triton": 111, "implement": [111, 123], "naiv": 111, "more": 111, "concurr": 111, "k": 111, "dimens": 111, "read": 111, "tvm_thread_allreduc": 111, "instead": 111, "atomicadd": 111, "benchmark": [111, 123], "tabl": [111, 114], "hopper": 111, "gpu": [111, 112], "tile": [112, 116, 117, 118, 119, 120, 124, 128], "librari": [112, 128], "why": 112, "anoth": 112, "dsl": 112, "exampl": [112, 123, 124], "basic": 112, "structur": 112, "kei": 112, "concept": 112, "other": 112, "perform": [112, 123, 127, 128], "differ": 112, "platform": 112, "further": 112, "resourc": 112, "dequant": 113, "tmac": 114, "look": 114, "up": 114, "mix": 114, "precis": 114, "comput": [114, 126], "instal": 115, "guid": 115, "pip": 115, "build": 115, "from": 115, "sourc": [115, 124], "method": 115, "1": [115, 123], "us": [115, 123], "your": 115, "own": 115, "tvm": 115, "2": [115, 123], "bundl": 115, "3": [115, 123], "provid": 115, "script": 115, "nightli": 115, "version": 115, "The": 116, "A": 116, "brief": 116, "introduct": 116, "program": [116, 124], "interfac": 116, "flow": 116, "model": 116, "declar": 116, "explicit": 116, "hardwar": 116, "memori": [116, 122], "welcom": 117, "get": 117, "start": 117, "tutori": 117, "deep": 117, "learn": 117, "refer": 117, "privaci": [117, 121], "ast": 118, "tilelibrari": 120, "t": [120, 124], "alloc_shar": 120, "alloc_frag": 120, "reduce_max": 120, "reduce_sum": 120, "clear": 120, "use_swizzl": 120, "annot": 122, "auto": 123, "tune": 123, "techniqu": 123, "optim": 123, "overview": [123, 124], "step": 123, "reserv": 123, "paramet": 123, "candid": 123, "configur": 123, "debug": 124, "correct": 124, "post": 124, "process": 124, "runtim": 124, "just": 125, "In": 125, "time": 125, "data": 126, "movement": 126, "write": [127, 128], "high": [127, 128], "thread": 127}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Python API": [[0, "python-api"]], "tilelang package": [[1, "tilelang-package"]], "Subpackages": [[1, "subpackages"], [5, "subpackages"], [14, "subpackages"], [53, "subpackages"], [54, "subpackages"], [67, "subpackages"], [91, "subpackages"]], "Submodules": [[1, "submodules"], [3, "submodules"], [5, "submodules"], [7, "submodules"], [14, "submodules"], [18, "submodules"], [23, "submodules"], [26, "submodules"], [34, "submodules"], [36, "submodules"], [41, "submodules"], [47, "submodules"], [53, "submodules"], [54, "submodules"], [56, "submodules"], [58, "submodules"], [67, "submodules"], [82, "submodules"], [86, "submodules"], [92, "submodules"], [95, "submodules"], [98, "submodules"], [100, "submodules"], [102, "submodules"]], "Module contents": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [5, "module-tilelang.carver"], [7, "module-tilelang.carver.arch"], [14, "module-tilelang.carver.roller"], [18, "module-tilelang.carver.roller.policy"], [23, "module-tilelang.carver.roller.shape_inference"], [26, "module-tilelang.carver.template"], [34, "module-tilelang.common"], [36, "module-tilelang.contrib"], [41, "module-tilelang.engine"], [47, "module-tilelang.intrinsics"], [53, "module-tilelang.jit"], [54, "module-tilelang.jit.adapter"], [56, "module-tilelang.jit.adapter.ctypes"], [58, "module-tilelang.jit.adapter.cython"], [67, "module-tilelang.language"], [82, "module-tilelang.language.tir"], [86, "module-tilelang.layout"], [90, "module-tilelang.math"], [91, "module-tilelang.primitives"], [92, "module-tilelang.primitives.gemm"], [95, "module-tilelang.profiler"], [97, "module-tilelang.testing"], [98, "module-tilelang.tools"], [100, "module-tilelang.transform"], [102, "module-tilelang.utils"]], "tilelang.autotuner package": [[2, "tilelang-autotuner-package"]], "tilelang.cache package": [[3, "tilelang-cache-package"]], "tilelang.cache.kernel_cache module": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver package": [[5, "tilelang-carver-package"]], "tilelang.carver.analysis module": [[6, "module-tilelang.carver.analysis"]], "tilelang.carver.arch package": [[7, "tilelang-carver-arch-package"]], "tilelang.carver.arch.arch_base module": [[8, "module-tilelang.carver.arch.arch_base"]], "tilelang.carver.arch.cdna module": [[9, "module-tilelang.carver.arch.cdna"]], "tilelang.carver.arch.cpu module": [[10, "module-tilelang.carver.arch.cpu"]], "tilelang.carver.arch.cuda module": [[11, "module-tilelang.carver.arch.cuda"]], "tilelang.carver.common_schedules module": [[12, "module-tilelang.carver.common_schedules"]], "tilelang.carver.matmul_analysis module": [[13, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller package": [[14, "tilelang-carver-roller-package"]], "tilelang.carver.roller.bestfit module": [[15, "module-tilelang.carver.roller.bestfit"]], "tilelang.carver.roller.hint module": [[16, "module-tilelang.carver.roller.hint"]], "tilelang.carver.roller.node module": [[17, "module-tilelang.carver.roller.node"]], "tilelang.carver.roller.policy package": [[18, "tilelang-carver-roller-policy-package"]], "tilelang.carver.roller.policy.common module": [[19, "module-tilelang.carver.roller.policy.common"]], "tilelang.carver.roller.policy.default module": [[20, "module-tilelang.carver.roller.policy.default"]], "tilelang.carver.roller.policy.tensorcore module": [[21, "module-tilelang.carver.roller.policy.tensorcore"]], "tilelang.carver.roller.rasterization module": [[22, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference package": [[23, "tilelang-carver-roller-shape-inference-package"]], "tilelang.carver.roller.shape_inference.common module": [[24, "module-tilelang.carver.roller.shape_inference.common"]], "tilelang.carver.roller.shape_inference.tir module": [[25, "module-tilelang.carver.roller.shape_inference.tir"]], "tilelang.carver.template package": [[26, "tilelang-carver-template-package"]], "tilelang.carver.template.base module": [[27, "module-tilelang.carver.template.base"]], "tilelang.carver.template.elementwise module": [[28, "module-tilelang.carver.template.elementwise"]], "tilelang.carver.template.flashattention module": [[29, "module-tilelang.carver.template.flashattention"]], "tilelang.carver.template.gemv module": [[30, "module-tilelang.carver.template.gemv"]], "tilelang.carver.template.general_reduce module": [[31, "module-tilelang.carver.template.general_reduce"]], "tilelang.carver.template.matmul module": [[32, "module-tilelang.carver.template.matmul"]], "tilelang.carver.utils module": [[33, "module-tilelang.carver.utils"]], "tilelang.common package": [[34, "tilelang-common-package"]], "tilelang.common.transform_kind module": [[35, "module-tilelang.common.transform_kind"]], "tilelang.contrib package": [[36, "tilelang-contrib-package"]], "tilelang.contrib.cc module": [[37, "module-tilelang.contrib.cc"]], "tilelang.contrib.dlpack module": [[38, "module-tilelang.contrib.dlpack"]], "tilelang.contrib.hipcc module": [[39, "module-tilelang.contrib.hipcc"]], "tilelang.contrib.nvcc module": [[40, "module-tilelang.contrib.nvcc"]], "tilelang.engine package": [[41, "tilelang-engine-package"]], "tilelang.engine.callback module": [[42, "module-tilelang.engine.callback"]], "tilelang.engine.lower module": [[43, "module-tilelang.engine.lower"]], "tilelang.engine.param module": [[44, "module-tilelang.engine.param"]], "tilelang.engine.phase module": [[45, "module-tilelang.engine.phase"]], "tilelang.env module": [[46, "module-tilelang.env"]], "tilelang.intrinsics package": [[47, "tilelang-intrinsics-package"]], "tilelang.intrinsics.mfma_layout module": [[48, "module-tilelang.intrinsics.mfma_layout"]], "tilelang.intrinsics.mfma_macro_generator module": [[49, "module-tilelang.intrinsics.mfma_macro_generator"]], "tilelang.intrinsics.mma_layout module": [[50, "module-tilelang.intrinsics.mma_layout"]], "tilelang.intrinsics.mma_macro_generator module": [[51, "module-tilelang.intrinsics.mma_macro_generator"]], "tilelang.intrinsics.utils module": [[52, "module-tilelang.intrinsics.utils"]], "tilelang.jit package": [[53, "tilelang-jit-package"]], "tilelang.jit.adapter package": [[54, "tilelang-jit-adapter-package"]], "tilelang.jit.adapter.base module": [[55, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes package": [[56, "tilelang-jit-adapter-ctypes-package"]], "tilelang.jit.adapter.ctypes.adapter module": [[57, "module-tilelang.jit.adapter.ctypes.adapter"]], "tilelang.jit.adapter.cython package": [[58, "tilelang-jit-adapter-cython-package"]], "tilelang.jit.adapter.cython.adapter module": [[59, "module-tilelang.jit.adapter.cython.adapter"]], "tilelang.jit.adapter.cython.cython_wrapper module": [[60, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "tilelang.jit.adapter.dlpack module": [[61, "module-tilelang.jit.adapter.dlpack"]], "tilelang.jit.adapter.libgen module": [[62, "module-tilelang.jit.adapter.libgen"]], "tilelang.jit.adapter.utils module": [[63, "module-tilelang.jit.adapter.utils"]], "tilelang.jit.adapter.wrapper module": [[64, "module-tilelang.jit.adapter.wrapper"]], "tilelang.jit.env module": [[65, "module-tilelang.jit.env"]], "tilelang.jit.kernel module": [[66, "module-tilelang.jit.kernel"]], "tilelang.language package": [[67, "tilelang-language-package"]], "tilelang.language.allocate module": [[68, "module-tilelang.language.allocate"]], "tilelang.language.builtin module": [[69, "module-tilelang.language.builtin"]], "tilelang.language.copy module": [[70, "module-tilelang.language.copy"]], "tilelang.language.customize module": [[71, "module-tilelang.language.customize"]], "tilelang.language.fill module": [[72, "module-tilelang.language.fill"]], "tilelang.language.frame module": [[73, "module-tilelang.language.frame"]], "tilelang.language.gemm module": [[74, "module-tilelang.language.gemm"]], "tilelang.language.kernel module": [[75, "module-tilelang.language.kernel"]], "tilelang.language.memscope module": [[76, "module-tilelang.language.memscope"]], "tilelang.language.parallel module": [[77, "module-tilelang.language.parallel"]], "tilelang.language.pipeline module": [[78, "module-tilelang.language.pipeline"]], "tilelang.language.print module": [[79, "module-tilelang.language.print"]], "tilelang.language.proxy module": [[80, "module-tilelang.language.proxy"]], "tilelang.language.reduce module": [[81, "module-tilelang.language.reduce"]], "tilelang.language.tir package": [[82, "tilelang-language-tir-package"]], "tilelang.language.tir.entry module": [[83, "module-tilelang.language.tir.entry"]], "tilelang.language.tir.ir module": [[84, "module-tilelang.language.tir.ir"]], "tilelang.language.tir.op module": [[85, "module-tilelang.language.tir.op"]], "tilelang.layout package": [[86, "tilelang-layout-package"]], "tilelang.layout.fragment module": [[87, "module-tilelang.layout.fragment"]], "tilelang.layout.layout module": [[88, "module-tilelang.layout.layout"]], "tilelang.layout.swizzle module": [[89, "module-tilelang.layout.swizzle"]], "tilelang.math package": [[90, "tilelang-math-package"]], "tilelang.primitives package": [[91, "tilelang-primitives-package"]], "tilelang.primitives.gemm package": [[92, "tilelang-primitives-gemm-package"]], "tilelang.primitives.gemm.base module": [[93, "module-tilelang.primitives.gemm.base"]], "tilelang.primitives.gemm.gemm_mma module": [[94, "module-tilelang.primitives.gemm.gemm_mma"]], "tilelang.profiler package": [[95, "tilelang-profiler-package"]], "tilelang.profiler.bench module": [[96, "module-tilelang.profiler.bench"]], "tilelang.testing package": [[97, "tilelang-testing-package"]], "tilelang.tools package": [[98, "tilelang-tools-package"]], "tilelang.tools.plot_layout module": [[99, "module-tilelang.tools.plot_layout"]], "tilelang.transform package": [[100, "tilelang-transform-package"]], "tilelang.transform.simplify module": [[101, "module-tilelang.transform.simplify"]], "tilelang.utils package": [[102, "tilelang-utils-package"]], "tilelang.utils.deprecated module": [[103, "module-tilelang.utils.deprecated"]], "tilelang.utils.language module": [[104, "module-tilelang.utils.language"]], "tilelang.utils.target module": [[105, "module-tilelang.utils.target"]], "tilelang.utils.tensor module": [[106, "module-tilelang.utils.tensor"]], "Convolution": [[107, "convolution"]], "ElementWise Operators": [[108, "elementwise-operators"]], "Elementwise add in TileLang": [[108, "elementwise-add-in-tilelang"]], "How to compile operators with dynamic shapes?": [[108, "how-to-compile-operators-with-dynamic-shapes"]], "How TileLang addresses boundary-related issues.": [[108, "how-tilelang-addresses-boundary-related-issues"]], "Comparison of TileLang, CUDA, and CuTe": [[108, "comparison-of-tilelang-cuda-and-cute"]], "Conclusion": [[108, "conclusion"], [111, "conclusion"], [112, "conclusion"], [124, "conclusion"]], "Flash Attention": [[109, "flash-attention"]], "Flash Linear Attention": [[110, "flash-linear-attention"]], "General Matrix-Vector Multiplication (GEMV)": [[111, "general-matrix-vector-multiplication-gemv"]], "Triton implementation": [[111, "triton-implementation"]], "Naive Implementation in TileLang": [[111, "naive-implementation-in-tilelang"]], "More concurrency": [[111, "more-concurrency"]], "Customizing Parallelism in K Dimension": [[111, "customizing-parallelism-in-k-dimension"]], "Vectorized Reads": [[111, "vectorized-reads"]], "tvm_thread_allreduce Instead of atomicAdd": [[111, "tvm-thread-allreduce-instead-of-atomicadd"]], "Autotune": [[111, "autotune"]], "Benchmark Table on Hopper GPU": [[111, "benchmark-table-on-hopper-gpu"]], "General Matrix-Matrix Multiplication with Tile Library": [[112, "general-matrix-matrix-multiplication-with-tile-library"]], "Why Another GPU DSL?": [[112, "why-another-gpu-dsl"]], "Matrix Multiplication Example": [[112, "matrix-multiplication-example"], [123, "matrix-multiplication-example"], [124, "matrix-multiplication-example"]], "Basic Structure": [[112, "basic-structure"]], "Key Concepts": [[112, "key-concepts"]], "Comparison with Other DSLs": [[112, "comparison-with-other-dsls"]], "Performance on Different Platforms": [[112, "performance-on-different-platforms"]], "Further Resources": [[112, "further-resources"]], "General Matrix-Matrix Multiplication with Dequantization": [[113, "general-matrix-matrix-multiplication-with-dequantization"]], "TMAC: Look Up Table Based Mixed Precision Computing": [[114, "tmac-look-up-table-based-mixed-precision-computing"]], "Installation Guide": [[115, "installation-guide"]], "Installing with pip": [[115, "installing-with-pip"]], "Building from Source": [[115, "building-from-source"]], "Method 1: Install from Source (Using Your Own TVM Installation)": [[115, "method-1-install-from-source-using-your-own-tvm-installation"]], "Method 2: Install from Source (Using the Bundled TVM Submodule)": [[115, "method-2-install-from-source-using-the-bundled-tvm-submodule"]], "Method 3: Install Using the Provided Script": [[115, "method-3-install-using-the-provided-script"]], "Install with Nightly Version": [[115, "install-with-nightly-version"]], "The Tile Language: A Brief Introduction": [[116, "the-tile-language-a-brief-introduction"]], "Programming Interface": [[116, "programming-interface"]], "Programming Interfaces": [[116, "programming-interfaces"]], "Compilation Flow": [[116, "compilation-flow"]], "Tile-based Programming Model": [[116, "tile-based-programming-model"]], "Tile declarations": [[116, "tile-declarations"]], "Explicit Hardware Memory Allocation": [[116, "explicit-hardware-memory-allocation"]], "\ud83d\udc4b Welcome to Tile Language": [[117, "welcome-to-tile-language"]], "GET STARTED": [[117, null]], "TUTORIALS": [[117, null]], "DEEP LEARNING OPERATORS": [[117, null]], "LANGUAGE REFERENCE": [[117, null]], "API Reference": [[117, null]], "Privacy": [[117, null], [121, "privacy"]], "Tile Language AST": [[118, "tile-language-ast"]], "Tile Language: Primitives": [[119, "tile-language-primitives"]], "Tile Language: TileLibrary": [[120, "tile-language-tilelibrary"]], "T.Kernel": [[120, "t-kernel"]], "T.alloc_shared": [[120, "t-alloc-shared"]], "T.alloc_fragment": [[120, "t-alloc-fragment"]], "T.copy": [[120, "t-copy"]], "T.gemm": [[120, "t-gemm"]], "T.reduce_max T.reduce_sum": [[120, "t-reduce-max-t-reduce-sum"]], "T.Parallel": [[120, "t-parallel"]], "T.Pipelined": [[120, "t-pipelined"]], "T.clear T.fill": [[120, "t-clear-t-fill"]], "T.use_swizzle": [[120, "t-use-swizzle"]], "Annotate Memory Layout": [[122, "annotate-memory-layout"]], "Auto-Tuning Techniques for Performance Optimization": [[123, "auto-tuning-techniques-for-performance-optimization"]], "Overview": [[123, "overview"], [124, "overview"]], "Step 1: Implement with Reserved Parameters": [[123, "step-1-implement-with-reserved-parameters"]], "Step 2: Generate Candidate Configurations": [[123, "step-2-generate-candidate-configurations"]], "Step 3: Compile and Benchmark": [[123, "step-3-compile-and-benchmark"]], "Using Carver to Auto-Generate Candidate Configurations": [[123, "using-carver-to-auto-generate-candidate-configurations"]], "Debugging Tile Language Programs": [[124, "debugging-tile-language-programs"]], "Debugging Generation Issues": [[124, "debugging-generation-issues"]], "Debugging Correctness Issues": [[124, "debugging-correctness-issues"]], "Post-Processing Callbacks for Generated Source": [[124, "post-processing-callbacks-for-generated-source"]], "Runtime Debug Prints with T.print": [[124, "runtime-debug-prints-with-t-print"]], "Just In Time Compilation": [[125, "just-in-time-compilation"]], "Pipelining Computation and Data Movement": [[126, "pipelining-computation-and-data-movement"]], "Writing High-Performance Kernels with Thread Primitives": [[127, "writing-high-performance-kernels-with-thread-primitives"]], "Writing High-Performance Kernels with the Tile Library": [[128, "writing-high-performance-kernels-with-the-tile-library"]]}, "indexentries": {"tqdmlogginghandler (class in tilelang)": [[1, "tilelang.TqdmLoggingHandler"]], "emit() (tilelang.tqdmlogginghandler method)": [[1, "tilelang.TqdmLoggingHandler.emit"]], "module": [[1, "module-tilelang"], [2, "module-tilelang.autotuner"], [3, "module-tilelang.cache"], [4, "module-tilelang.cache.kernel_cache"], [5, "module-tilelang.carver"], [6, "module-tilelang.carver.analysis"], [7, "module-tilelang.carver.arch"], [8, "module-tilelang.carver.arch.arch_base"], [9, "module-tilelang.carver.arch.cdna"], [10, "module-tilelang.carver.arch.cpu"], [11, "module-tilelang.carver.arch.cuda"], [12, "module-tilelang.carver.common_schedules"], [13, "module-tilelang.carver.matmul_analysis"], [14, "module-tilelang.carver.roller"], [15, "module-tilelang.carver.roller.bestfit"], [16, "module-tilelang.carver.roller.hint"], [17, "module-tilelang.carver.roller.node"], [18, "module-tilelang.carver.roller.policy"], [19, "module-tilelang.carver.roller.policy.common"], [20, "module-tilelang.carver.roller.policy.default"], [21, "module-tilelang.carver.roller.policy.tensorcore"], [22, "module-tilelang.carver.roller.rasterization"], [23, "module-tilelang.carver.roller.shape_inference"], [24, "module-tilelang.carver.roller.shape_inference.common"], [25, "module-tilelang.carver.roller.shape_inference.tir"], [26, "module-tilelang.carver.template"], [27, "module-tilelang.carver.template.base"], [28, "module-tilelang.carver.template.elementwise"], [29, "module-tilelang.carver.template.flashattention"], [30, "module-tilelang.carver.template.gemv"], [31, "module-tilelang.carver.template.general_reduce"], [32, "module-tilelang.carver.template.matmul"], [33, "module-tilelang.carver.utils"], [34, "module-tilelang.common"], [35, "module-tilelang.common.transform_kind"], [36, "module-tilelang.contrib"], [37, "module-tilelang.contrib.cc"], [38, "module-tilelang.contrib.dlpack"], [39, "module-tilelang.contrib.hipcc"], [40, "module-tilelang.contrib.nvcc"], [41, "module-tilelang.engine"], [42, "module-tilelang.engine.callback"], [43, "module-tilelang.engine.lower"], [44, "module-tilelang.engine.param"], [45, "module-tilelang.engine.phase"], [46, "module-tilelang.env"], [47, "module-tilelang.intrinsics"], [48, "module-tilelang.intrinsics.mfma_layout"], [49, "module-tilelang.intrinsics.mfma_macro_generator"], [50, "module-tilelang.intrinsics.mma_layout"], [51, "module-tilelang.intrinsics.mma_macro_generator"], [52, "module-tilelang.intrinsics.utils"], [53, "module-tilelang.jit"], [54, "module-tilelang.jit.adapter"], [55, "module-tilelang.jit.adapter.base"], [56, "module-tilelang.jit.adapter.ctypes"], [57, "module-tilelang.jit.adapter.ctypes.adapter"], [58, "module-tilelang.jit.adapter.cython"], [59, "module-tilelang.jit.adapter.cython.adapter"], [60, "module-tilelang.jit.adapter.cython.cython_wrapper"], [61, "module-tilelang.jit.adapter.dlpack"], [62, "module-tilelang.jit.adapter.libgen"], [63, "module-tilelang.jit.adapter.utils"], [64, "module-tilelang.jit.adapter.wrapper"], [65, "module-tilelang.jit.env"], [66, "module-tilelang.jit.kernel"], [67, "module-tilelang.language"], [68, "module-tilelang.language.allocate"], [69, "module-tilelang.language.builtin"], [70, "module-tilelang.language.copy"], [71, "module-tilelang.language.customize"], [72, "module-tilelang.language.fill"], [73, "module-tilelang.language.frame"], [74, "module-tilelang.language.gemm"], [75, "module-tilelang.language.kernel"], [76, "module-tilelang.language.memscope"], [77, "module-tilelang.language.parallel"], [78, "module-tilelang.language.pipeline"], [79, "module-tilelang.language.print"], [80, "module-tilelang.language.proxy"], [81, "module-tilelang.language.reduce"], [82, "module-tilelang.language.tir"], [83, "module-tilelang.language.tir.entry"], [84, "module-tilelang.language.tir.ir"], [85, "module-tilelang.language.tir.op"], [86, "module-tilelang.layout"], [87, "module-tilelang.layout.fragment"], [88, "module-tilelang.layout.layout"], [89, "module-tilelang.layout.swizzle"], [90, "module-tilelang.math"], [91, "module-tilelang.primitives"], [92, "module-tilelang.primitives.gemm"], [93, "module-tilelang.primitives.gemm.base"], [94, "module-tilelang.primitives.gemm.gemm_mma"], [95, "module-tilelang.profiler"], [96, "module-tilelang.profiler.bench"], [97, "module-tilelang.testing"], [98, "module-tilelang.tools"], [99, "module-tilelang.tools.plot_layout"], [100, "module-tilelang.transform"], [101, "module-tilelang.transform.simplify"], [102, "module-tilelang.utils"], [103, "module-tilelang.utils.deprecated"], [104, "module-tilelang.utils.language"], [105, "module-tilelang.utils.target"], [106, "module-tilelang.utils.tensor"]], "set_log_level() (in module tilelang)": [[1, "tilelang.set_log_level"]], "tilelang": [[1, "module-tilelang"]], "autotuner (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutoTuner"]], "autotuneresult (class in tilelang.autotuner)": [[2, "tilelang.autotuner.AutotuneResult"]], "jitcontext (class in tilelang.autotuner)": [[2, "tilelang.autotuner.JITContext"]], "atol (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.atol"]], "autotune() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.autotune"]], "config (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.config"]], "from_kernel() (tilelang.autotuner.autotuner class method)": [[2, "tilelang.autotuner.AutoTuner.from_kernel"]], "func (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.func"]], "jit() (in module tilelang.autotuner)": [[2, "tilelang.autotuner.jit"]], "kernel (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.kernel"]], "latency (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.latency"]], "libcode (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.libcode"]], "max_mismatched_ratio (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.max_mismatched_ratio"]], "out_idx (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.out_idx"]], "profiler (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.profiler"]], "ref_latency (tilelang.autotuner.autotuneresult attribute)": [[2, "tilelang.autotuner.AutotuneResult.ref_latency"]], "ref_prog (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.ref_prog"]], "rtol (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.rtol"]], "run() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.run"]], "set_compile_args() (tilelang.autotuner.autotuner method)": [[2, "tilelang.autotuner.AutoTuner.set_compile_args"]], "skip_check (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.skip_check"]], "supply_type (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.supply_type"]], "target (tilelang.autotuner.jitcontext attribute)": [[2, "tilelang.autotuner.JITContext.target"]], "tilelang.autotuner": [[2, "module-tilelang.autotuner"]], "cached() (in module tilelang.cache)": [[3, "tilelang.cache.cached"]], "clear_cache() (in module tilelang.cache)": [[3, "tilelang.cache.clear_cache"]], "tilelang.cache": [[3, "module-tilelang.cache"]], "kernelcache (class in tilelang.cache.kernel_cache)": [[4, "tilelang.cache.kernel_cache.KernelCache"]], "cached() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.cached"]], "clear_cache() (tilelang.cache.kernel_cache.kernelcache method)": [[4, "tilelang.cache.kernel_cache.KernelCache.clear_cache"]], "tilelang.cache.kernel_cache": [[4, "module-tilelang.cache.kernel_cache"]], "tilelang.carver": [[5, "module-tilelang.carver"]], "blockinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.BlockInfo"]], "iterinfo (class in tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.IterInfo"]], "block_rv (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.block_rv"]], "check_func_with_dynamic() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.check_func_with_dynamic"]], "collect_block_iter_vars_used_in_access_region() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_block_iter_vars_used_in_access_region"]], "collect_vars_used_in_prim_expr() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.collect_vars_used_in_prim_expr"]], "detect_dominant_read() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.detect_dominant_read"]], "dom (tilelang.carver.analysis.iterinfo property)": [[6, "tilelang.carver.analysis.IterInfo.dom"]], "dom() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom"]], "dom_kind() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.dom_kind"]], "find_var_from_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.find_var_from_func"]], "get_coalesced_veclen() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_coalesced_veclen"]], "get_max_shared_memory_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_shared_memory_per_block"]], "get_max_threads_per_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_max_threads_per_block"]], "get_reduction_blocks() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_reduction_blocks"]], "get_root_block() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.get_root_block"]], "is_broadcast_epilogue() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.is_broadcast_epilogue"]], "is_elementwise() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_elementwise"]], "is_gemm() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemm"]], "is_gemv() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_gemv"]], "is_injective() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_injective"]], "is_reduction() (tilelang.carver.analysis.blockinfo method)": [[6, "tilelang.carver.analysis.BlockInfo.is_reduction"]], "iters (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.iters"]], "kind (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.kind"]], "loop_rv (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.loop_rv"]], "name (tilelang.carver.analysis.blockinfo attribute)": [[6, "tilelang.carver.analysis.BlockInfo.name"]], "normalize_prim_func() (in module tilelang.carver.analysis)": [[6, "tilelang.carver.analysis.normalize_prim_func"]], "tilelang.carver.analysis": [[6, "module-tilelang.carver.analysis"]], "var (tilelang.carver.analysis.iterinfo attribute)": [[6, "tilelang.carver.analysis.IterInfo.var"]], "auto_infer_current_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.auto_infer_current_arch"]], "get_arch() (in module tilelang.carver.arch)": [[7, "tilelang.carver.arch.get_arch"]], "tilelang.carver.arch": [[7, "module-tilelang.carver.arch"]], "tiledevice (class in tilelang.carver.arch.arch_base)": [[8, "tilelang.carver.arch.arch_base.TileDevice"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.arch_base.tiledevice method)": [[8, "tilelang.carver.arch.arch_base.TileDevice.get_avaliable_tensorintrin_shapes"]], "tilelang.carver.arch.arch_base": [[8, "module-tilelang.carver.arch.arch_base"]], "cdna (class in tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.CDNA"]], "is_cdna_arch() (in module tilelang.carver.arch.cdna)": [[9, "tilelang.carver.arch.cdna.is_cdna_arch"]], "tilelang.carver.arch.cdna": [[9, "module-tilelang.carver.arch.cdna"]], "cpu (class in tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.CPU"]], "is_cpu_arch() (in module tilelang.carver.arch.cpu)": [[10, "tilelang.carver.arch.cpu.is_cpu_arch"]], "tilelang.carver.arch.cpu": [[10, "module-tilelang.carver.arch.cpu"]], "cuda (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.CUDA"]], "tensorinstruction (class in tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.TensorInstruction"]], "check_sm_version() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.check_sm_version"]], "get_avaliable_tensorintrin_shapes() (tilelang.carver.arch.cuda.cuda method)": [[11, "tilelang.carver.arch.cuda.CUDA.get_avaliable_tensorintrin_shapes"]], "has_mma_support() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.has_mma_support"]], "is_ada_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ada_arch"]], "is_ampere_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_ampere_arch"]], "is_cuda_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_cuda_arch"]], "is_hopper_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_hopper_arch"]], "is_tensorcore_supported_precision() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_tensorcore_supported_precision"]], "is_volta_arch() (in module tilelang.carver.arch.cuda)": [[11, "tilelang.carver.arch.cuda.is_volta_arch"]], "tilelang.carver.arch.cuda": [[11, "module-tilelang.carver.arch.cuda"]], "get_block() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.get_block"]], "get_output_blocks() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.get_output_blocks"]], "tilelang.carver.common_schedules": [[12, "module-tilelang.carver.common_schedules"]], "try_inline() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.try_inline"]], "try_inline_contiguous_spatial() (in module tilelang.carver.common_schedules)": [[12, "tilelang.carver.common_schedules.try_inline_contiguous_spatial"]], "iterkind (class in tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.IterKind"]], "itertrait (class in tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.IterTrait"]], "auto_inline_consumer_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_consumer_chain"]], "auto_inline_consumers() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_consumers"]], "auto_inline_producers() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.auto_inline_producers"]], "collect_vars_from_expr() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.collect_vars_from_expr"]], "detect_iter_traits() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.detect_iter_traits"]], "extent (tilelang.carver.matmul_analysis.itertrait attribute)": [[13, "tilelang.carver.matmul_analysis.IterTrait.extent"]], "find_arg_idx_from_buffer_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_arg_idx_from_buffer_chain"]], "find_first_similar_buffer() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_first_similar_buffer"]], "find_first_similar_region() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_first_similar_region"]], "find_last_producer_from_buffer() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.find_last_producer_from_buffer"]], "get_dequantize_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_dequantize_block"]], "get_in_out_dtypes() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_in_out_dtypes"]], "get_index_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_index_map"]], "get_ladder_stage3_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_ladder_stage3_map"]], "get_propagate_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_propagate_map"]], "get_tensorized_func_and_tags() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.get_tensorized_func_and_tags"]], "inline_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.inline_transpose_block"]], "is_identity_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_identity_block"]], "is_identity_or_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_identity_or_transpose_block"]], "is_transpose_block() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.is_transpose_block"]], "kiter_i (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_I"]], "kiter_j (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_J"]], "kiter_k (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_K"]], "kiter_s (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_S"]], "kiter_t (tilelang.carver.matmul_analysis.iterkind attribute)": [[13, "tilelang.carver.matmul_analysis.IterKind.kIter_T"]], "kind (tilelang.carver.matmul_analysis.itertrait attribute)": [[13, "tilelang.carver.matmul_analysis.IterTrait.kind"]], "layout_propagate_chain() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.layout_propagate_chain"]], "make_iter_fusion_index_map() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.make_iter_fusion_index_map"]], "normalize_to_matmul() (in module tilelang.carver.matmul_analysis)": [[13, "tilelang.carver.matmul_analysis.normalize_to_matmul"]], "tilelang.carver.matmul_analysis": [[13, "module-tilelang.carver.matmul_analysis"]], "tilelang.carver.roller": [[14, "module-tilelang.carver.roller"]], "bestfit (class in tilelang.carver.roller.bestfit)": [[15, "tilelang.carver.roller.bestfit.BestFit"]], "block (class in tilelang.carver.roller.bestfit)": [[15, "tilelang.carver.roller.bestfit.Block"]], "free() (tilelang.carver.roller.bestfit.bestfit method)": [[15, "tilelang.carver.roller.bestfit.BestFit.free"]], "malloc() (tilelang.carver.roller.bestfit.bestfit method)": [[15, "tilelang.carver.roller.bestfit.BestFit.malloc"]], "merge() (tilelang.carver.roller.bestfit.block method)": [[15, "tilelang.carver.roller.bestfit.Block.merge"]], "size() (tilelang.carver.roller.bestfit.block method)": [[15, "tilelang.carver.roller.bestfit.Block.size"]], "tilelang.carver.roller.bestfit": [[15, "module-tilelang.carver.roller.bestfit"]], "hint (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.Hint"]], "intrininfo (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.IntrinInfo"]], "stride (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.Stride"]], "tensorcoreextraconfig (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.TensorCoreExtraConfig"]], "tiledict (class in tilelang.carver.roller.hint)": [[16, "tilelang.carver.roller.hint.TileDict"]], "ax (tilelang.carver.roller.hint.stride property)": [[16, "tilelang.carver.roller.hint.Stride.ax"]], "complete_config() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.complete_config"]], "compute_elements_from_shape() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.compute_elements_from_shape"]], "compute_strides_from_shape() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.compute_strides_from_shape"]], "from_dict() (tilelang.carver.roller.hint.hint class method)": [[16, "tilelang.carver.roller.hint.Hint.from_dict"]], "get_rstep() (tilelang.carver.roller.hint.tiledict method)": [[16, "tilelang.carver.roller.hint.TileDict.get_rstep"]], "get_tile() (tilelang.carver.roller.hint.tiledict method)": [[16, "tilelang.carver.roller.hint.TileDict.get_tile"]], "inter_transform_a (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_a"]], "inter_transform_b (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.inter_transform_b"]], "is_input_8bit() (tilelang.carver.roller.hint.intrininfo method)": [[16, "tilelang.carver.roller.hint.IntrinInfo.is_input_8bit"]], "is_valid() (tilelang.carver.roller.hint.stride method)": [[16, "tilelang.carver.roller.hint.Stride.is_valid"]], "raxis_order (tilelang.carver.roller.hint.hint property)": [[16, "tilelang.carver.roller.hint.Hint.raxis_order"]], "smooth_a (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.smooth_a"]], "smooth_b (tilelang.carver.roller.hint.intrininfo property)": [[16, "tilelang.carver.roller.hint.IntrinInfo.smooth_b"]], "step (tilelang.carver.roller.hint.hint property)": [[16, "tilelang.carver.roller.hint.Hint.step"]], "stride (tilelang.carver.roller.hint.stride property)": [[16, "tilelang.carver.roller.hint.Stride.stride"]], "tensorcore_legalization() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.tensorcore_legalization"]], "tilelang.carver.roller.hint": [[16, "module-tilelang.carver.roller.hint"]], "to_dict() (tilelang.carver.roller.hint.hint method)": [[16, "tilelang.carver.roller.hint.Hint.to_dict"]], "blockanalyzer (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.BlockAnalyzer"]], "edge (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.Edge"]], "node (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.Node"]], "outputnode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.OutputNode"]], "placeholdernode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.PlaceHolderNode"]], "primfuncnode (class in tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.PrimFuncNode"]], "add_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.add_tag"]], "dst_id (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.dst_id"]], "dst_node (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.dst_node"]], "extent_wrapper() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.extent_wrapper"]], "find_topo_sort() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.find_topo_sort"]], "find_topo_sort_priority() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.find_topo_sort_priority"]], "footprint() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.footprint"]], "get_block_info() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_block_info"]], "get_block_name() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_block_name"]], "get_buffer_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_buffer_dtype"]], "get_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_buffers"]], "get_consumer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_consumer_blocks"]], "get_dtype() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_dtype"]], "get_input_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_input_buffers"]], "get_input_buffers() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_input_buffers"]], "get_ir() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_ir"]], "get_ir() (tilelang.carver.roller.node.outputnode method)": [[17, "tilelang.carver.roller.node.OutputNode.get_ir"]], "get_ir() (tilelang.carver.roller.node.placeholdernode method)": [[17, "tilelang.carver.roller.node.PlaceHolderNode.get_ir"]], "get_opt_shape() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_opt_shape"]], "get_output_buffers() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_output_buffers"]], "get_producer_blocks() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_producer_blocks"]], "get_reduce_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_reduce_axis"]], "get_reduce_inputs_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_reduce_inputs_dtype"]], "get_shape() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_shape"]], "get_space_dim() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.get_space_dim"]], "get_spatial_axis() (tilelang.carver.roller.node.blockanalyzer method)": [[17, "tilelang.carver.roller.node.BlockAnalyzer.get_spatial_axis"]], "get_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.get_tag"]], "infer_tensorcore_axis() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.infer_tensorcore_axis"]], "inputs (tilelang.carver.roller.node.node property)": [[17, "tilelang.carver.roller.node.Node.inputs"]], "is_output() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.is_output"]], "is_output() (tilelang.carver.roller.node.outputnode method)": [[17, "tilelang.carver.roller.node.OutputNode.is_output"]], "is_placeholder() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.is_placeholder"]], "is_placeholder() (tilelang.carver.roller.node.placeholdernode method)": [[17, "tilelang.carver.roller.node.PlaceHolderNode.is_placeholder"]], "num_outputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.num_outputs"]], "outputs (tilelang.carver.roller.node.node property)": [[17, "tilelang.carver.roller.node.Node.outputs"]], "pre_order_traverse() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.pre_order_traverse"]], "propagate() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate"]], "propagate_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs"]], "propagate_inputs_on_reduction() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_inputs_on_reduction"]], "propagate_outputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_outputs"]], "propagate_reduction_inputs() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.propagate_reduction_inputs"]], "set_dtype() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_dtype"]], "set_dtype() (tilelang.carver.roller.node.primfuncnode method)": [[17, "tilelang.carver.roller.node.PrimFuncNode.set_dtype"]], "set_inputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_inputs"]], "set_outputs() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_outputs"]], "set_shape() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_shape"]], "set_tag() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.set_tag"]], "src_id (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.src_id"]], "src_node (tilelang.carver.roller.node.edge attribute)": [[17, "tilelang.carver.roller.node.Edge.src_node"]], "tilelang.carver.roller.node": [[17, "module-tilelang.carver.roller.node"]], "topo_order() (in module tilelang.carver.roller.node)": [[17, "tilelang.carver.roller.node.topo_order"]], "update_tags() (tilelang.carver.roller.node.node method)": [[17, "tilelang.carver.roller.node.Node.update_tags"]], "tilelang.carver.roller.policy": [[18, "module-tilelang.carver.roller.policy"]], "coalesced_factor() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.coalesced_factor"]], "coalesced_tensor_shape() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.coalesced_tensor_shape"]], "factorize() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.factorize"]], "get_all_factors() (in module tilelang.carver.roller.policy.common)": [[19, "tilelang.carver.roller.policy.common.get_all_factors"]], "tilelang.carver.roller.policy.common": [[19, "module-tilelang.carver.roller.policy.common"]], "defaultpolicy (class in tilelang.carver.roller.policy.default)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy"]], "arch (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.arch"]], "assign_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.assign_block_size"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_node_stride_map"]], "compute_tile_dict() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_tile_dict"]], "compute_workload_per_item() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.compute_workload_per_item"]], "dfs_smem_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.dfs_smem_tile"]], "emit_config() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.emit_config"]], "from_output_nodes() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.from_output_nodes"]], "from_prim_func() (tilelang.carver.roller.policy.default.defaultpolicy class method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.from_prim_func"]], "func (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.func"]], "get_base_tile() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_base_tile"]], "get_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_block_size"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.infer_node_smem_usage"]], "nodes (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.nodes"]], "plan_rasterization() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.plan_rasterization"]], "recommend_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.recommend_block_size"]], "score_block_size() (tilelang.carver.roller.policy.default.defaultpolicy method)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.score_block_size"]], "tags (tilelang.carver.roller.policy.default.defaultpolicy attribute)": [[20, "tilelang.carver.roller.policy.default.DefaultPolicy.tags"]], "tilelang.carver.roller.policy.default": [[20, "module-tilelang.carver.roller.policy.default"]], "tensorcorepolicy (class in tilelang.carver.roller.policy.tensorcore)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy"]], "block_reduction_depth (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.block_reduction_depth"]], "check_tile_shape_isvalid() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.check_tile_shape_isvalid"]], "compute_node_stride_map() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.compute_node_stride_map"]], "get_node_reduce_step_candidates() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.get_node_reduce_step_candidates"]], "infer_node_smem_usage() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.infer_node_smem_usage"]], "pipeline_stage (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.pipeline_stage"]], "plan_rasterization() (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy method)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.plan_rasterization"]], "tilelang.carver.roller.policy.tensorcore": [[21, "module-tilelang.carver.roller.policy.tensorcore"]], "use_async_copy (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.use_async_copy"]], "wmma_k (tilelang.carver.roller.policy.tensorcore.tensorcorepolicy attribute)": [[21, "tilelang.carver.roller.policy.tensorcore.TensorCorePolicy.wmma_k"]], "norasterization (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.NoRasterization"]], "rasterization (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization"]], "rasterization2dcolumn (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn"]], "rasterization2drow (class in tilelang.carver.roller.rasterization)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DRow"]], "get_code() (tilelang.carver.roller.rasterization.norasterization method)": [[22, "tilelang.carver.roller.rasterization.NoRasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization method)": [[22, "tilelang.carver.roller.rasterization.Rasterization.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_code"]], "get_code() (tilelang.carver.roller.rasterization.rasterization2drow method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DRow.get_code"]], "get_device_function() (tilelang.carver.roller.rasterization.rasterization2dcolumn method)": [[22, "tilelang.carver.roller.rasterization.Rasterization2DColumn.get_device_function"]], "panel_width (tilelang.carver.roller.rasterization.rasterization property)": [[22, "tilelang.carver.roller.rasterization.Rasterization.panel_width"]], "panel_width_ (tilelang.carver.roller.rasterization.rasterization attribute)": [[22, "tilelang.carver.roller.rasterization.Rasterization.panel_width_"]], "tilelang.carver.roller.rasterization": [[22, "module-tilelang.carver.roller.rasterization"]], "tilelang.carver.roller.shape_inference": [[23, "module-tilelang.carver.roller.shape_inference"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.common)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.common)": [[24, "tilelang.carver.roller.shape_inference.common.Statement"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference.get_input_exprs"]], "infer() (tilelang.carver.roller.shape_inference.common.inputshapeinference method)": [[24, "tilelang.carver.roller.shape_inference.common.InputShapeInference.infer"]], "tilelang.carver.roller.shape_inference.common": [[24, "module-tilelang.carver.roller.shape_inference.common"]], "dependencyanalysis (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis"]], "inputshapeinference (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference"]], "statement (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.Statement"]], "tensordepnode (class in tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode"]], "add_next() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_next"]], "add_prev() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.add_prev"]], "analyze() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.analyze"]], "construct_dependency_target() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.construct_dependency_target"]], "deduplicate() (tilelang.carver.roller.shape_inference.tir.tensordepnode method)": [[25, "tilelang.carver.roller.shape_inference.tir.TensorDepNode.deduplicate"]], "find_path_from_source() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.find_path_from_source"]], "get_analyzer_by_tir() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.get_analyzer_by_tir"]], "get_input_exprs() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.get_input_exprs"]], "get_or_create_node() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.get_or_create_node"]], "infer() (tilelang.carver.roller.shape_inference.tir.inputshapeinference method)": [[25, "tilelang.carver.roller.shape_inference.tir.InputShapeInference.infer"]], "make_reverse() (tilelang.carver.roller.shape_inference.tir.statement method)": [[25, "tilelang.carver.roller.shape_inference.tir.Statement.make_reverse"]], "print_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.print_dependencies"]], "region_exist_in_list() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.region_exist_in_list"]], "tilelang.carver.roller.shape_inference.tir": [[25, "module-tilelang.carver.roller.shape_inference.tir"]], "traverse_dependencies() (tilelang.carver.roller.shape_inference.tir.dependencyanalysis method)": [[25, "tilelang.carver.roller.shape_inference.tir.DependencyAnalysis.traverse_dependencies"]], "walk_indice() (in module tilelang.carver.roller.shape_inference.tir)": [[25, "tilelang.carver.roller.shape_inference.tir.walk_indice"]], "tilelang.carver.template": [[26, "module-tilelang.carver.template"]], "basetemplate (class in tilelang.carver.template.base)": [[27, "tilelang.carver.template.base.BaseTemplate"]], "arch (tilelang.carver.template.base.basetemplate property)": [[27, "tilelang.carver.template.base.BaseTemplate.arch"]], "equivalent_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.equivalent_function"]], "get_hardware_aware_configs() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.get_hardware_aware_configs"]], "has_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.has_arch"]], "initialize_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.initialize_function"]], "is_ampere_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_ampere_arch"]], "is_cdna_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_cdna_arch"]], "is_volta_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.is_volta_arch"]], "output_nodes (tilelang.carver.template.base.basetemplate property)": [[27, "tilelang.carver.template.base.BaseTemplate.output_nodes"]], "recommend_hints() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.recommend_hints"]], "set_function() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.set_function"]], "set_output_nodes() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.set_output_nodes"]], "tilelang.carver.template.base": [[27, "module-tilelang.carver.template.base"]], "with_arch() (tilelang.carver.template.base.basetemplate method)": [[27, "tilelang.carver.template.base.BaseTemplate.with_arch"]], "elementwisetemplate (class in tilelang.carver.template.elementwise)": [[28, "tilelang.carver.template.elementwise.ElementwiseTemplate"]], "class_attributes (tilelang.carver.template.elementwise.elementwisetemplate property)": [[28, "tilelang.carver.template.elementwise.ElementwiseTemplate.class_attributes"]], "dtype (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[28, "id0"], [28, "tilelang.carver.template.elementwise.ElementwiseTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[28, "tilelang.carver.template.elementwise.ElementwiseTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[28, "tilelang.carver.template.elementwise.ElementwiseTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.elementwise.elementwisetemplate method)": [[28, "tilelang.carver.template.elementwise.ElementwiseTemplate.params_as_dict"]], "shape (tilelang.carver.template.elementwise.elementwisetemplate attribute)": [[28, "id1"], [28, "tilelang.carver.template.elementwise.ElementwiseTemplate.shape"]], "tilelang.carver.template.elementwise": [[28, "module-tilelang.carver.template.elementwise"]], "flashattentiontemplate (class in tilelang.carver.template.flashattention)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate"]], "accum_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.accum_dtype"]], "batch_size (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.batch_size"]], "class_attributes (tilelang.carver.template.flashattention.flashattentiontemplate property)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.get_hardware_aware_configs"]], "head_dim (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.head_dim"]], "in_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.initialize_function"]], "is_causal (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.is_causal"]], "num_heads (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.num_heads"]], "out_dtype (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.flashattention.flashattentiontemplate method)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.params_as_dict"]], "seq_kv_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_kv_length"]], "seq_length (tilelang.carver.template.flashattention.flashattentiontemplate attribute)": [[29, "tilelang.carver.template.flashattention.FlashAttentionTemplate.seq_length"]], "tilelang.carver.template.flashattention": [[29, "module-tilelang.carver.template.flashattention"]], "gemvtemplate (class in tilelang.carver.template.gemv)": [[30, "tilelang.carver.template.gemv.GEMVTemplate"]], "k (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.K"]], "n (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.N"]], "accum_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.gemv.gemvtemplate property)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.gemv.gemvtemplate method)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.gemv.gemvtemplate method)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.gemv.gemvtemplate method)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.params_as_dict"]], "tilelang.carver.template.gemv": [[30, "module-tilelang.carver.template.gemv"]], "trans_b (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.trans_B"]], "with_bias (tilelang.carver.template.gemv.gemvtemplate attribute)": [[30, "tilelang.carver.template.gemv.GEMVTemplate.with_bias"]], "generalreductiontemplate (class in tilelang.carver.template.general_reduce)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate"]], "class_attributes (tilelang.carver.template.general_reduce.generalreductiontemplate property)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.class_attributes"]], "dtype (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.dtype"]], "get_hardware_aware_configs() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.get_hardware_aware_configs"]], "initialize_function() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.initialize_function"]], "params_as_dict() (tilelang.carver.template.general_reduce.generalreductiontemplate method)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.params_as_dict"]], "shape (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.shape"]], "structure (tilelang.carver.template.general_reduce.generalreductiontemplate attribute)": [[31, "tilelang.carver.template.general_reduce.GeneralReductionTemplate.structure"]], "tilelang.carver.template.general_reduce": [[31, "module-tilelang.carver.template.general_reduce"]], "k (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id0"], [32, "tilelang.carver.template.matmul.MatmulTemplate.K"]], "m (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id1"], [32, "tilelang.carver.template.matmul.MatmulTemplate.M"]], "matmultemplate (class in tilelang.carver.template.matmul)": [[32, "tilelang.carver.template.matmul.MatmulTemplate"]], "n (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id2"], [32, "tilelang.carver.template.matmul.MatmulTemplate.N"]], "accum_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id3"], [32, "tilelang.carver.template.matmul.MatmulTemplate.accum_dtype"]], "class_attributes (tilelang.carver.template.matmul.matmultemplate property)": [[32, "tilelang.carver.template.matmul.MatmulTemplate.class_attributes"]], "get_hardware_aware_configs() (tilelang.carver.template.matmul.matmultemplate method)": [[32, "tilelang.carver.template.matmul.MatmulTemplate.get_hardware_aware_configs"]], "in_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id4"], [32, "tilelang.carver.template.matmul.MatmulTemplate.in_dtype"]], "initialize_function() (tilelang.carver.template.matmul.matmultemplate method)": [[32, "tilelang.carver.template.matmul.MatmulTemplate.initialize_function"]], "out_dtype (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id5"], [32, "tilelang.carver.template.matmul.MatmulTemplate.out_dtype"]], "params_as_dict() (tilelang.carver.template.matmul.matmultemplate method)": [[32, "tilelang.carver.template.matmul.MatmulTemplate.params_as_dict"]], "tilelang.carver.template.matmul": [[32, "module-tilelang.carver.template.matmul"]], "trans_a (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id6"], [32, "tilelang.carver.template.matmul.MatmulTemplate.trans_A"]], "trans_b (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id7"], [32, "tilelang.carver.template.matmul.MatmulTemplate.trans_B"]], "with_bias (tilelang.carver.template.matmul.matmultemplate attribute)": [[32, "id8"], [32, "tilelang.carver.template.matmul.MatmulTemplate.with_bias"]], "get_rasterization_code() (in module tilelang.carver.utils)": [[33, "tilelang.carver.utils.get_rasterization_code"]], "get_roller_hints_from_func() (in module tilelang.carver.utils)": [[33, "tilelang.carver.utils.get_roller_hints_from_func"]], "get_roller_hints_from_output_nodes() (in module tilelang.carver.utils)": [[33, "tilelang.carver.utils.get_roller_hints_from_output_nodes"]], "retrieve_func_from_module() (in module tilelang.carver.utils)": [[33, "tilelang.carver.utils.retrieve_func_from_module"]], "tilelang.carver.utils": [[33, "module-tilelang.carver.utils"]], "tilelang.common": [[34, "module-tilelang.common"]], "interwarptransform (tilelang.common.transform_kind.transformkind attribute)": [[35, "tilelang.common.transform_kind.TransformKind.InterWarpTransform"]], "intrawarptransform (tilelang.common.transform_kind.transformkind attribute)": [[35, "tilelang.common.transform_kind.TransformKind.IntraWarpTransform"]], "ldmatrixtransform (tilelang.common.transform_kind.transformkind attribute)": [[35, "tilelang.common.transform_kind.TransformKind.LDMatrixTransform"]], "nontransform (tilelang.common.transform_kind.transformkind attribute)": [[35, "tilelang.common.transform_kind.TransformKind.NonTransform"]], "transformkind (class in tilelang.common.transform_kind)": [[35, "tilelang.common.transform_kind.TransformKind"]], "is_inter_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[35, "tilelang.common.transform_kind.TransformKind.is_inter_warp_transform"]], "is_intra_warp_transform() (tilelang.common.transform_kind.transformkind method)": [[35, "tilelang.common.transform_kind.TransformKind.is_intra_warp_transform"]], "is_ld_matrix_transform() (tilelang.common.transform_kind.transformkind method)": [[35, "tilelang.common.transform_kind.TransformKind.is_ld_matrix_transform"]], "is_non_transform() (tilelang.common.transform_kind.transformkind method)": [[35, "tilelang.common.transform_kind.TransformKind.is_non_transform"]], "tilelang.common.transform_kind": [[35, "module-tilelang.common.transform_kind"]], "tilelang.contrib": [[36, "module-tilelang.contrib"]], "create_executable() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.create_executable"]], "create_shared() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.create_shared"]], "create_staticlib() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.create_staticlib"]], "cross_compiler() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.cross_compiler"]], "get_cc() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.get_cc"]], "get_cplus_compiler() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.get_cplus_compiler"]], "get_global_symbol_section_map() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.get_global_symbol_section_map"]], "get_target_by_dump_machine() (in module tilelang.contrib.cc)": [[37, "tilelang.contrib.cc.get_target_by_dump_machine"]], "tilelang.contrib.cc": [[37, "module-tilelang.contrib.cc"]], "convert_func() (in module tilelang.contrib.dlpack)": [[38, "tilelang.contrib.dlpack.convert_func"]], "tilelang.contrib.dlpack": [[38, "module-tilelang.contrib.dlpack"]], "to_pytorch_func() (in module tilelang.contrib.dlpack)": [[38, "tilelang.contrib.dlpack.to_pytorch_func"]], "compile_hip() (in module tilelang.contrib.hipcc)": [[39, "tilelang.contrib.hipcc.compile_hip"]], "tilelang.contrib.hipcc": [[39, "module-tilelang.contrib.hipcc"]], "callback_libdevice_path() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.callback_libdevice_path"]], "compile_cuda() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.compile_cuda"]], "find_cuda_path() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.find_cuda_path"]], "get_cuda_version() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.get_cuda_version"]], "have_cudagraph() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.have_cudagraph"]], "have_fp16() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.have_fp16"]], "have_int8() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.have_int8"]], "have_tensorcore() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.have_tensorcore"]], "parse_compute_version() (in module tilelang.contrib.nvcc)": [[40, "tilelang.contrib.nvcc.parse_compute_version"]], "tilelang.contrib.nvcc": [[40, "module-tilelang.contrib.nvcc"]], "tilelang.engine": [[41, "module-tilelang.engine"]], "register_cuda_postproc() (in module tilelang.engine.callback)": [[42, "tilelang.engine.callback.register_cuda_postproc"]], "register_cuda_postproc_callback() (in module tilelang.engine.callback)": [[42, "tilelang.engine.callback.register_cuda_postproc_callback"]], "register_hip_postproc() (in module tilelang.engine.callback)": [[42, "tilelang.engine.callback.register_hip_postproc"]], "register_hip_postproc_callback() (in module tilelang.engine.callback)": [[42, "tilelang.engine.callback.register_hip_postproc_callback"]], "tilelang.engine.callback": [[42, "module-tilelang.engine.callback"]], "canon_target_host() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.canon_target_host"]], "device_codegen() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.device_codegen"]], "device_codegen_without_compile() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.device_codegen_without_compile"]], "extrac_params() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.extrac_params"]], "get_device_call() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.get_device_call"]], "get_host_call() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.get_host_call"]], "has_device_kernel_launch() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.has_device_kernel_launch"]], "host_codegen() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.host_codegen"]], "is_cpu_device_backend() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.is_cpu_device_backend"]], "is_device_call() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.is_device_call"]], "is_device_call_c_device() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.is_device_call_c_device"]], "lower() (in module tilelang.engine.lower)": [[43, "tilelang.engine.lower.lower"]], "tilelang.engine.lower": [[43, "module-tilelang.engine.lower"]], "compiledartifact (class in tilelang.engine.param)": [[44, "tilelang.engine.param.CompiledArtifact"]], "kernelparam (class in tilelang.engine.param)": [[44, "tilelang.engine.param.KernelParam"]], "device_mod (tilelang.engine.param.compiledartifact attribute)": [[44, "tilelang.engine.param.CompiledArtifact.device_mod"]], "dtype (tilelang.engine.param.kernelparam attribute)": [[44, "tilelang.engine.param.KernelParam.dtype"]], "from_buffer() (tilelang.engine.param.kernelparam class method)": [[44, "tilelang.engine.param.KernelParam.from_buffer"]], "from_var() (tilelang.engine.param.kernelparam class method)": [[44, "tilelang.engine.param.KernelParam.from_var"]], "host_mod (tilelang.engine.param.compiledartifact attribute)": [[44, "tilelang.engine.param.CompiledArtifact.host_mod"]], "is_float8() (tilelang.engine.param.kernelparam method)": [[44, "tilelang.engine.param.KernelParam.is_float8"]], "is_scalar() (tilelang.engine.param.kernelparam method)": [[44, "tilelang.engine.param.KernelParam.is_scalar"]], "is_unsigned() (tilelang.engine.param.kernelparam method)": [[44, "tilelang.engine.param.KernelParam.is_unsigned"]], "kernel_source (tilelang.engine.param.compiledartifact attribute)": [[44, "tilelang.engine.param.CompiledArtifact.kernel_source"]], "params (tilelang.engine.param.compiledartifact attribute)": [[44, "tilelang.engine.param.CompiledArtifact.params"]], "rt_mod (tilelang.engine.param.compiledartifact attribute)": [[44, "tilelang.engine.param.CompiledArtifact.rt_mod"]], "shape (tilelang.engine.param.kernelparam attribute)": [[44, "tilelang.engine.param.KernelParam.shape"]], "tilelang.engine.param": [[44, "module-tilelang.engine.param"]], "lowerandlegalize() (in module tilelang.engine.phase)": [[45, "tilelang.engine.phase.LowerAndLegalize"]], "optimizefortarget() (in module tilelang.engine.phase)": [[45, "tilelang.engine.phase.OptimizeForTarget"]], "tilelang.engine.phase": [[45, "module-tilelang.engine.phase"]], "disable_cache() (in module tilelang.env)": [[46, "tilelang.env.disable_cache"]], "enable_cache() (in module tilelang.env)": [[46, "tilelang.env.enable_cache"]], "is_cache_enabled() (in module tilelang.env)": [[46, "tilelang.env.is_cache_enabled"]], "tilelang.env": [[46, "module-tilelang.env"]], "tilelang.intrinsics": [[47, "module-tilelang.intrinsics"]], "make_mfma_swizzle_layout() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.make_mfma_swizzle_layout"]], "shared_16x16_to_ldmatrix_64x4_layout() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x16_to_ldmatrix_64x4_layout"]], "shared_16x16_to_local_64x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_A"]], "shared_16x16_to_local_64x4_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_B"]], "shared_16x16_to_local_64x4_layout_c() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x16_to_local_64x4_layout_C"]], "shared_16x32_to_local_64x8_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_A"]], "shared_16x32_to_local_64x8_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x32_to_local_64x8_layout_B"]], "shared_16x4_to_local_64x1_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_16x4_to_local_64x1_layout_A"]], "shared_4x16_to_local_64x1_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.shared_4x16_to_local_64x1_layout_B"]], "thread_id_shared_access_64x1_to_16x4_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_16x4_layout_A"]], "thread_id_shared_access_64x1_to_4x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x1_to_4x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_A"]], "thread_id_shared_access_64x4_to_16x16_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_B"]], "thread_id_shared_access_64x4_to_16x16_layout_c_m_n() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_m_n"]], "thread_id_shared_access_64x4_to_16x16_layout_c_n_m() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x4_to_16x16_layout_C_n_m"]], "thread_id_shared_access_64x8_to_16x32_layout_a() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_A"]], "thread_id_shared_access_64x8_to_16x32_layout_b() (in module tilelang.intrinsics.mfma_layout)": [[48, "tilelang.intrinsics.mfma_layout.thread_id_shared_access_64x8_to_16x32_layout_B"]], "tilelang.intrinsics.mfma_layout": [[48, "module-tilelang.intrinsics.mfma_layout"]], "m_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.M_DIM"]], "matrixcoreintrinemitter (class in tilelang.intrinsics.mfma_macro_generator)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter"]], "n_dim (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.N_DIM"]], "warp_size (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.extract_thread_binding"]], "get_ldmatrix_index_map() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.get_ldmatrix_index_map"]], "is_m_first (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.is_m_first"]], "k_pack (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter attribute)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.k_pack"]], "ldmatrix_a() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.ldmatrix_b"]], "mfma() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.mfma"]], "stmatrix() (tilelang.intrinsics.mfma_macro_generator.matrixcoreintrinemitter method)": [[49, "tilelang.intrinsics.mfma_macro_generator.MatrixCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mfma_macro_generator": [[49, "module-tilelang.intrinsics.mfma_macro_generator"]], "get_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.get_swizzle_layout"]], "ldmatrix_16x32_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_a"]], "ldmatrix_16x32_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_16x32_to_shared_16x32_layout_b"]], "ldmatrix_32x16_to_shared_16x32_layout_a() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_a"]], "ldmatrix_32x16_to_shared_16x32_layout_b() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_32x16_to_shared_16x32_layout_b"]], "ldmatrix_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_32x8_to_shared_16x16_layout"]], "ldmatrix_trans_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.ldmatrix_trans_32x8_to_shared_16x16_layout"]], "make_mma_swizzle_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.make_mma_swizzle_layout"]], "mma_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.mma_32x8_to_shared_16x16_layout"]], "mma_store_32x8_to_shared_16x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.mma_store_32x8_to_shared_16x16_layout"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout"]], "shared_16x16_to_mma_32x8_layout_rs() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_rs"]], "shared_16x16_to_mma_32x8_layout_sr() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_sr"]], "shared_16x16_to_mma_32x8_layout_trans() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_layout_trans"]], "shared_16x16_to_mma_32x8_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x16_to_mma_32x8_smoothlayout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_layout"]], "shared_16x32_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_16x32_to_mma_32x16_smoothlayout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_smoothlayout() (in module tilelang.intrinsics.mma_layout)": [[50, "tilelang.intrinsics.mma_layout.shared_32x16_to_mma_32x16_smoothlayout"]], "tilelang.intrinsics.mma_layout": [[50, "module-tilelang.intrinsics.mma_layout"]], "int4tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[51, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter"]], "int4tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[51, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform"]], "m_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.M_DIM"]], "n_dim (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.N_DIM"]], "tensorcoreintrinemitter (class in tilelang.intrinsics.mma_macro_generator)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter"]], "tensorcoreintrinemitterwithladdertransform (class in tilelang.intrinsics.mma_macro_generator)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform"]], "warp_size (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.WARP_SIZE"]], "dtype_abbrv (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.dtype_abbrv"]], "extract_thread_binding() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.extract_thread_binding"]], "get_store_index_map() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.get_store_index_map"]], "is_m_first (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter attribute)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.is_m_first"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_a"]], "ldmatrix_a() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_a"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.ldmatrix_b"]], "ldmatrix_b() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.ldmatrix_b"]], "make_mma_load_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_load_layout"]], "make_mma_store_layout() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.make_mma_store_layout"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.int4tensorcoreintrinemitterwithladdertransform method)": [[51, "tilelang.intrinsics.mma_macro_generator.INT4TensorCoreIntrinEmitterWithLadderTransform.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.mma"]], "mma() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitterwithladdertransform method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitterWithLadderTransform.mma"]], "stmatrix() (tilelang.intrinsics.mma_macro_generator.tensorcoreintrinemitter method)": [[51, "tilelang.intrinsics.mma_macro_generator.TensorCoreIntrinEmitter.stmatrix"]], "tilelang.intrinsics.mma_macro_generator": [[51, "module-tilelang.intrinsics.mma_macro_generator"]], "get_ldmatrix_offset() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.get_ldmatrix_offset"]], "get_mma_micro_size() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.get_mma_micro_size"]], "index_to_coordinates() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.index_to_coordinates"]], "mfma_store_index_map() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.mfma_store_index_map"]], "mma_store_index_map() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.mma_store_index_map"]], "shared_16x16_to_mma_32x8_layout() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.shared_16x16_to_mma_32x8_layout"]], "shared_16x32_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.shared_16x32_to_mma_32x16_layout"]], "shared_32x16_to_mma_32x16_layout() (in module tilelang.intrinsics.utils)": [[52, "tilelang.intrinsics.utils.shared_32x16_to_mma_32x16_layout"]], "tilelang.intrinsics.utils": [[52, "module-tilelang.intrinsics.utils"]], "compile() (in module tilelang.jit)": [[53, "tilelang.jit.compile"]], "jit() (in module tilelang.jit)": [[53, "tilelang.jit.jit"]], "tilelang.jit": [[53, "module-tilelang.jit"]], "tilelang.jit.adapter": [[54, "module-tilelang.jit.adapter"]], "basekerneladapter (class in tilelang.jit.adapter.base)": [[55, "tilelang.jit.adapter.base.BaseKernelAdapter"]], "func (tilelang.jit.adapter.base.basekerneladapter attribute)": [[55, "tilelang.jit.adapter.base.BaseKernelAdapter.func"]], "get_kernel_source() (tilelang.jit.adapter.base.basekerneladapter method)": [[55, "tilelang.jit.adapter.base.BaseKernelAdapter.get_kernel_source"]], "tilelang.jit.adapter.base": [[55, "module-tilelang.jit.adapter.base"]], "tilelang.jit.adapter.ctypes": [[56, "module-tilelang.jit.adapter.ctypes"]], "ctypeskerneladapter (class in tilelang.jit.adapter.ctypes.adapter)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter"]], "dynamic_symbolic_map (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter class method)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.from_database"]], "get_kernel_source() (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter method)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.libpath"]], "param_dtypes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_dtypes"]], "param_shapes (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.param_shapes"]], "pass_configs (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.prim_func"]], "srcpath (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter property)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.srcpath"]], "target (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.target"]], "tilelang.jit.adapter.ctypes.adapter": [[57, "module-tilelang.jit.adapter.ctypes.adapter"]], "wrapped_source (tilelang.jit.adapter.ctypes.adapter.ctypeskerneladapter attribute)": [[57, "tilelang.jit.adapter.ctypes.adapter.CtypesKernelAdapter.wrapped_source"]], "tilelang.jit.adapter.cython": [[58, "module-tilelang.jit.adapter.cython"]], "cythonkerneladapter (class in tilelang.jit.adapter.cython.adapter)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter"]], "buffer_device_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_device_map"]], "buffer_dtype_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.buffer_dtype_map"]], "dynamic_symbolic_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.dynamic_symbolic_map"]], "from_database() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter class method)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.from_database"]], "get_cache_dir() (in module tilelang.jit.adapter.cython.adapter)": [[59, "tilelang.jit.adapter.cython.adapter.get_cache_dir"]], "get_cached_lib() (in module tilelang.jit.adapter.cython.adapter)": [[59, "tilelang.jit.adapter.cython.adapter.get_cached_lib"]], "get_cython_compiler() (in module tilelang.jit.adapter.cython.adapter)": [[59, "tilelang.jit.adapter.cython.adapter.get_cython_compiler"]], "get_kernel_source() (tilelang.jit.adapter.cython.adapter.cythonkerneladapter method)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.get_kernel_source"]], "ir_module (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ir_module"]], "is_dynamic (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.is_dynamic"]], "kernel_global_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.kernel_global_source"]], "lib (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib"]], "lib_code (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.lib_code"]], "libpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.libpath"]], "pass_configs (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.pass_configs"]], "prim_func (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.prim_func"]], "ptr_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.ptr_map"]], "srcpath (tilelang.jit.adapter.cython.adapter.cythonkerneladapter property)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.srcpath"]], "static_shape_map (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.static_shape_map"]], "target (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.target"]], "tilelang.jit.adapter.cython.adapter": [[59, "module-tilelang.jit.adapter.cython.adapter"]], "wrapped_source (tilelang.jit.adapter.cython.adapter.cythonkerneladapter attribute)": [[59, "tilelang.jit.adapter.cython.adapter.CythonKernelAdapter.wrapped_source"]], "cythonkernelwrapper (class in tilelang.jit.adapter.cython.cython_wrapper)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper"]], "forward() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.forward"]], "set_buffer_device_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_device_map"]], "set_buffer_dtype_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_buffer_dtype_map"]], "set_dynamic_symbolic_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_dynamic_symbolic_map"]], "set_ptr_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_ptr_map"]], "set_static_shape_map() (tilelang.jit.adapter.cython.cython_wrapper.cythonkernelwrapper method)": [[60, "tilelang.jit.adapter.cython.cython_wrapper.CythonKernelWrapper.set_static_shape_map"]], "tilelang.jit.adapter.cython.cython_wrapper": [[60, "module-tilelang.jit.adapter.cython.cython_wrapper"]], "torchdlpackkerneladapter (class in tilelang.jit.adapter.dlpack)": [[61, "tilelang.jit.adapter.dlpack.TorchDLPackKernelAdapter"]], "tilelang.jit.adapter.dlpack": [[61, "module-tilelang.jit.adapter.dlpack"]], "librarygenerator (class in tilelang.jit.adapter.libgen)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator"]], "compile_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.compile_lib"]], "get_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.get_lib_path"]], "get_source_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.get_source_path"]], "lib_code (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.lib_code"]], "libpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.libpath"]], "load_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.load_lib"]], "remove_lib() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.remove_lib"]], "set_lib_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.set_lib_path"]], "set_src_path() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.set_src_path"]], "srcpath (tilelang.jit.adapter.libgen.librarygenerator attribute)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.srcpath"]], "tilelang.jit.adapter.libgen": [[62, "module-tilelang.jit.adapter.libgen"]], "update_lib_code() (tilelang.jit.adapter.libgen.librarygenerator method)": [[62, "tilelang.jit.adapter.libgen.LibraryGenerator.update_lib_code"]], "get_annotated_mod() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.get_annotated_mod"]], "is_cpu_target() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.is_cpu_target"]], "is_cuda_target() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.is_cuda_target"]], "is_hip_target() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.is_hip_target"]], "match_declare_kernel() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.match_declare_kernel"]], "match_declare_kernel_cpu() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.match_declare_kernel_cpu"]], "match_global_kernel() (in module tilelang.jit.adapter.utils)": [[63, "tilelang.jit.adapter.utils.match_global_kernel"]], "tilelang.jit.adapter.utils": [[63, "module-tilelang.jit.adapter.utils"]], "basewrapper (class in tilelang.jit.adapter.wrapper)": [[64, "tilelang.jit.adapter.wrapper.BaseWrapper"]], "call_prefix (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.CALL_PREFIX"]], "init_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.INIT_FUNC"]], "tlcpusourcewrapper (class in tilelang.jit.adapter.wrapper)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper"]], "tlcudasourcewrapper (class in tilelang.jit.adapter.wrapper)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper"]], "tlhipsourcewrapper (class in tilelang.jit.adapter.wrapper)": [[64, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper"]], "tlwrapper (class in tilelang.jit.adapter.wrapper)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper"]], "assign_device_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.assign_device_module"]], "assign_host_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.assign_host_module"]], "assign_optimized_module() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.assign_optimized_module"]], "assign_pass_configs() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.assign_pass_configs"]], "backend (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.backend"]], "backend (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.backend"]], "create_call_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.create_call_func"]], "create_dispatch_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.create_dispatch_func"]], "device_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.device_mod"]], "device_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.device_mod"]], "generate_tma_descriptor_args() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.generate_tma_descriptor_args"]], "get_cpu_init_func() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_cpu_init_func"]], "get_cuda_init_func() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_cuda_init_func"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.get_dynamic_symbolic_set"]], "get_dynamic_symbolic_set() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.get_dynamic_symbolic_set"]], "get_hip_init_func() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_hip_init_func"]], "get_stream_type() (tilelang.jit.adapter.wrapper.tlhipsourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLHIPSourceWrapper.get_stream_type"]], "host_mod (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.host_mod"]], "host_mod (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.host_mod"]], "is_tma_descriptor_arg() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.is_tma_descriptor_arg"]], "lib (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.lib"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.parse_source_information"]], "parse_source_information() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.parse_source_information"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcpusourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlcudasourcewrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.pass_configs"]], "pass_configs (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.pass_configs"]], "prim_func (tilelang.jit.adapter.wrapper.tlcpusourcewrapper property)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.prim_func"]], "prim_func (tilelang.jit.adapter.wrapper.tlcudasourcewrapper property)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.prim_func"]], "target (tilelang.jit.adapter.wrapper.tlwrapper attribute)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.target"]], "tilelang.jit.adapter.wrapper": [[64, "module-tilelang.jit.adapter.wrapper"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcpusourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCPUSourceWrapper.update_lib_code"]], "update_lib_code() (tilelang.jit.adapter.wrapper.tlcudasourcewrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLCUDASourceWrapper.update_lib_code"]], "wrap() (tilelang.jit.adapter.wrapper.basewrapper method)": [[64, "tilelang.jit.adapter.wrapper.BaseWrapper.wrap"]], "wrap() (tilelang.jit.adapter.wrapper.tlwrapper method)": [[64, "tilelang.jit.adapter.wrapper.TLWrapper.wrap"]], "tilelang.jit.env": [[65, "module-tilelang.jit.env"]], "jitkernel (class in tilelang.jit.kernel)": [[66, "tilelang.jit.kernel.JITKernel"]], "adapter (tilelang.jit.kernel.jitkernel attribute)": [[66, "id0"], [66, "tilelang.jit.kernel.JITKernel.adapter"]], "artifact (tilelang.jit.kernel.jitkernel attribute)": [[66, "id1"], [66, "tilelang.jit.kernel.JITKernel.artifact"]], "export_library() (tilelang.jit.kernel.jitkernel method)": [[66, "tilelang.jit.kernel.JITKernel.export_library"]], "from_database() (tilelang.jit.kernel.jitkernel class method)": [[66, "tilelang.jit.kernel.JITKernel.from_database"]], "from_tilelang_function() (tilelang.jit.kernel.jitkernel class method)": [[66, "tilelang.jit.kernel.JITKernel.from_tilelang_function"]], "get_host_source() (tilelang.jit.kernel.jitkernel method)": [[66, "tilelang.jit.kernel.JITKernel.get_host_source"]], "get_kernel_source() (tilelang.jit.kernel.jitkernel method)": [[66, "tilelang.jit.kernel.JITKernel.get_kernel_source"]], "get_profiler() (tilelang.jit.kernel.jitkernel method)": [[66, "tilelang.jit.kernel.JITKernel.get_profiler"]], "host_source (tilelang.jit.kernel.jitkernel property)": [[66, "tilelang.jit.kernel.JITKernel.host_source"]], "kernel_source (tilelang.jit.kernel.jitkernel property)": [[66, "tilelang.jit.kernel.JITKernel.kernel_source"]], "out_idx (tilelang.jit.kernel.jitkernel property)": [[66, "tilelang.jit.kernel.JITKernel.out_idx"]], "params (tilelang.jit.kernel.jitkernel property)": [[66, "tilelang.jit.kernel.JITKernel.params"]], "run_once() (tilelang.jit.kernel.jitkernel method)": [[66, "tilelang.jit.kernel.JITKernel.run_once"]], "tilelang.jit.kernel": [[66, "module-tilelang.jit.kernel"]], "torch_function (tilelang.jit.kernel.jitkernel attribute)": [[66, "id2"], [66, "tilelang.jit.kernel.JITKernel.torch_function"]], "annotate_layout() (in module tilelang.language)": [[67, "tilelang.language.annotate_layout"]], "import_source() (in module tilelang.language)": [[67, "tilelang.language.import_source"]], "symbolic() (in module tilelang.language)": [[67, "tilelang.language.symbolic"]], "tilelang.language": [[67, "module-tilelang.language"]], "use_swizzle() (in module tilelang.language)": [[67, "tilelang.language.use_swizzle"]], "alloc_fragment() (in module tilelang.language.allocate)": [[68, "tilelang.language.allocate.alloc_fragment"]], "alloc_local() (in module tilelang.language.allocate)": [[68, "tilelang.language.allocate.alloc_local"]], "alloc_shared() (in module tilelang.language.allocate)": [[68, "tilelang.language.allocate.alloc_shared"]], "alloc_var() (in module tilelang.language.allocate)": [[68, "tilelang.language.allocate.alloc_var"]], "tilelang.language.allocate": [[68, "module-tilelang.language.allocate"]], "createlistofmbarrierop() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.CreateListofMBarrierOp"]], "createtmadescriptorop() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.CreateTMADescriptorOp"]], "fenceproxyasyncop() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.FenceProxyAsyncOp"]], "getmbarrierop() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.GetMBarrierOp"]], "mbarrierexpecttx() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.MBarrierExpectTX"]], "mbarrierwaitparity() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.MBarrierWaitParity"]], "nosetmaxnreg() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.NoSetMaxNReg"]], "setmaxnreg() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.SetMaxNReg"]], "tmaloadop() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.TMALoadOp"]], "tmastorearrive() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.TMAStoreArrive"]], "tmastorewait() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.TMAStoreWait"]], "waitwgmma() (in module tilelang.language.builtin)": [[69, "tilelang.language.builtin.WaitWgmma"]], "tilelang.language.builtin": [[69, "module-tilelang.language.builtin"]], "buffer_load_to_tile_region() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.buffer_load_to_tile_region"]], "buffer_region_to_tile_region() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.buffer_region_to_tile_region"]], "buffer_to_tile_region() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.buffer_to_tile_region"]], "c2d_im2col() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.c2d_im2col"]], "copy() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.copy"]], "region() (in module tilelang.language.copy)": [[70, "tilelang.language.copy.region"]], "tilelang.language.copy": [[70, "module-tilelang.language.copy"]], "atomic_add() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.atomic_add"]], "atomic_addx2() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.atomic_addx2"]], "clamp() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.clamp"]], "dp4a() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.dp4a"]], "reshape() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.reshape"]], "tilelang.language.customize": [[71, "module-tilelang.language.customize"]], "view() (in module tilelang.language.customize)": [[71, "tilelang.language.customize.view"]], "clear() (in module tilelang.language.fill)": [[72, "tilelang.language.fill.clear"]], "fill() (in module tilelang.language.fill)": [[72, "tilelang.language.fill.fill"]], "tilelang.language.fill": [[72, "module-tilelang.language.fill"]], "current() (tilelang.language.frame.letframe class method)": [[73, "tilelang.language.frame.LetFrame.Current"]], "framestack (class in tilelang.language.frame)": [[73, "tilelang.language.frame.FrameStack"]], "letframe (class in tilelang.language.frame)": [[73, "tilelang.language.frame.LetFrame"]], "get_let_value() (in module tilelang.language.frame)": [[73, "tilelang.language.frame.get_let_value"]], "get_value() (tilelang.language.frame.framestack method)": [[73, "tilelang.language.frame.FrameStack.get_value"]], "get_value() (tilelang.language.frame.letframe static method)": [[73, "tilelang.language.frame.LetFrame.get_value"]], "has_let_value() (in module tilelang.language.frame)": [[73, "tilelang.language.frame.has_let_value"]], "has_value() (tilelang.language.frame.framestack method)": [[73, "tilelang.language.frame.FrameStack.has_value"]], "has_value() (tilelang.language.frame.letframe static method)": [[73, "tilelang.language.frame.LetFrame.has_value"]], "pop() (tilelang.language.frame.framestack method)": [[73, "tilelang.language.frame.FrameStack.pop"]], "push() (tilelang.language.frame.framestack method)": [[73, "tilelang.language.frame.FrameStack.push"]], "tilelang.language.frame": [[73, "module-tilelang.language.frame"]], "top() (tilelang.language.frame.framestack method)": [[73, "tilelang.language.frame.FrameStack.top"]], "gemm() (in module tilelang.language.gemm)": [[74, "tilelang.language.gemm.gemm"]], "tilelang.language.gemm": [[74, "module-tilelang.language.gemm"]], "current() (tilelang.language.kernel.kernellaunchframe class method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.Current"]], "framestack (class in tilelang.language.kernel)": [[75, "tilelang.language.kernel.FrameStack"]], "kernel() (in module tilelang.language.kernel)": [[75, "tilelang.language.kernel.Kernel"]], "kernellaunchframe (class in tilelang.language.kernel)": [[75, "tilelang.language.kernel.KernelLaunchFrame"]], "blocks (tilelang.language.kernel.kernellaunchframe property)": [[75, "tilelang.language.kernel.KernelLaunchFrame.blocks"]], "get_block_binding() (in module tilelang.language.kernel)": [[75, "tilelang.language.kernel.get_block_binding"]], "get_block_binding() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_block_binding"]], "get_block_bindings() (in module tilelang.language.kernel)": [[75, "tilelang.language.kernel.get_block_bindings"]], "get_block_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_block_bindings"]], "get_block_extent() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_block_extent"]], "get_num_threads() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_num_threads"]], "get_thread_binding() (in module tilelang.language.kernel)": [[75, "tilelang.language.kernel.get_thread_binding"]], "get_thread_binding() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_thread_binding"]], "get_thread_bindings() (in module tilelang.language.kernel)": [[75, "tilelang.language.kernel.get_thread_bindings"]], "get_thread_bindings() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_thread_bindings"]], "get_thread_extent() (tilelang.language.kernel.kernellaunchframe method)": [[75, "tilelang.language.kernel.KernelLaunchFrame.get_thread_extent"]], "num_threads (tilelang.language.kernel.kernellaunchframe property)": [[75, "tilelang.language.kernel.KernelLaunchFrame.num_threads"]], "pop() (tilelang.language.kernel.framestack method)": [[75, "tilelang.language.kernel.FrameStack.pop"]], "push() (tilelang.language.kernel.framestack method)": [[75, "tilelang.language.kernel.FrameStack.push"]], "threads (tilelang.language.kernel.kernellaunchframe property)": [[75, "tilelang.language.kernel.KernelLaunchFrame.threads"]], "tilelang.language.kernel": [[75, "module-tilelang.language.kernel"]], "top() (tilelang.language.kernel.framestack method)": [[75, "tilelang.language.kernel.FrameStack.top"]], "tilelang.language.memscope": [[76, "module-tilelang.language.memscope"]], "parallel() (in module tilelang.language.parallel)": [[77, "tilelang.language.parallel.Parallel"]], "tilelang.language.parallel": [[77, "module-tilelang.language.parallel"]], "pipelined() (in module tilelang.language.pipeline)": [[78, "tilelang.language.pipeline.Pipelined"]], "tilelang.language.pipeline": [[78, "module-tilelang.language.pipeline"]], "print() (in module tilelang.language.print)": [[79, "tilelang.language.print.print"]], "tilelang.language.print": [[79, "module-tilelang.language.print"]], "basetensorproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.BaseTensorProxy"]], "bufferproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.BufferProxy"]], "fragmentbufferproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.FragmentBufferProxy"]], "localbufferproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.LocalBufferProxy"]], "sharedbufferproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.SharedBufferProxy"]], "tensorproxy (class in tilelang.language.proxy)": [[80, "tilelang.language.proxy.TensorProxy"]], "default_align (tilelang.language.proxy.basetensorproxy attribute)": [[80, "tilelang.language.proxy.BaseTensorProxy.default_align"]], "default_offset_factor (tilelang.language.proxy.basetensorproxy attribute)": [[80, "tilelang.language.proxy.BaseTensorProxy.default_offset_factor"]], "default_scope (tilelang.language.proxy.basetensorproxy attribute)": [[80, "tilelang.language.proxy.BaseTensorProxy.default_scope"]], "default_scope (tilelang.language.proxy.fragmentbufferproxy attribute)": [[80, "tilelang.language.proxy.FragmentBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.localbufferproxy attribute)": [[80, "tilelang.language.proxy.LocalBufferProxy.default_scope"]], "default_scope (tilelang.language.proxy.sharedbufferproxy attribute)": [[80, "tilelang.language.proxy.SharedBufferProxy.default_scope"]], "from_ptr() (tilelang.language.proxy.basetensorproxy method)": [[80, "tilelang.language.proxy.BaseTensorProxy.from_ptr"]], "from_ptr() (tilelang.language.proxy.bufferproxy method)": [[80, "tilelang.language.proxy.BufferProxy.from_ptr"]], "make_tensor() (in module tilelang.language.proxy)": [[80, "tilelang.language.proxy.make_tensor"]], "ptr() (in module tilelang.language.proxy)": [[80, "tilelang.language.proxy.ptr"]], "tilelang.language.proxy": [[80, "module-tilelang.language.proxy"]], "reduce() (in module tilelang.language.reduce)": [[81, "tilelang.language.reduce.reduce"]], "reduce_abssum() (in module tilelang.language.reduce)": [[81, "tilelang.language.reduce.reduce_abssum"]], "reduce_max() (in module tilelang.language.reduce)": [[81, "tilelang.language.reduce.reduce_max"]], "reduce_min() (in module tilelang.language.reduce)": [[81, "tilelang.language.reduce.reduce_min"]], "reduce_sum() (in module tilelang.language.reduce)": [[81, "tilelang.language.reduce.reduce_sum"]], "tilelang.language.reduce": [[81, "module-tilelang.language.reduce"]], "tilelang.language.tir": [[82, "module-tilelang.language.tir"]], "macro() (in module tilelang.language.tir.entry)": [[83, "tilelang.language.tir.entry.macro"]], "prim_func() (in module tilelang.language.tir.entry)": [[83, "tilelang.language.tir.entry.prim_func"]], "tilelang.language.tir.entry": [[83, "module-tilelang.language.tir.entry"]], "grid() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.grid"]], "parallel() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.parallel"]], "serial() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.serial"]], "thread_binding() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.thread_binding"]], "tilelang.language.tir.ir": [[84, "module-tilelang.language.tir.ir"]], "unroll() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.unroll"]], "vectorized() (in module tilelang.language.tir.ir)": [[84, "tilelang.language.tir.ir.vectorized"]], "tvmbackendallocworkspace() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.TVMBackendFreeWorkspace"]], "abs() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.abs"]], "acos() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.acos"]], "acosh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.acosh"]], "address_of() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.address_of"]], "all() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.all"]], "any() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.any"]], "anylist_getitem() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.anylist_getitem"]], "anylist_resetitem() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.anylist_resetitem"]], "anylist_setitem_call_cpacked() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.anylist_setitem_call_cpacked"]], "anylist_setitem_call_packed() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.anylist_setitem_call_packed"]], "asin() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.asin"]], "asinh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.asinh"]], "assume() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.assume"]], "atan() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.atan"]], "atan2() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.atan2"]], "atanh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.atanh"]], "bitwise_and() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.bitwise_and"]], "bitwise_not() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.bitwise_not"]], "bitwise_or() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.bitwise_or"]], "bitwise_xor() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.bitwise_xor"]], "call_cpacked() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_cpacked"]], "call_cpacked_lowered() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_cpacked_lowered"]], "call_extern() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_extern"]], "call_intrin() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_intrin"]], "call_llvm_intrin() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_llvm_pure_intrin"]], "call_packed() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_packed"]], "call_packed_lowered() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_packed_lowered"]], "call_pure_extern() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_pure_extern"]], "call_tir() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.call_tir"]], "ceil() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ceil"]], "ceildiv() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ceildiv"]], "clz() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.clz"]], "comm_reducer() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.comm_reducer"]], "copysign() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.copysign"]], "cos() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.cos"]], "cosh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.cosh"]], "create_barriers() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.create_barriers"]], "div() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.div"]], "end_profile_intrinsic() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.end_profile_intrinsic"]], "erf() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.erf"]], "exp() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.exp"]], "exp10() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.exp10"]], "exp2() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.exp2"]], "floor() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.floor"]], "floordiv() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.floordiv"]], "floormod() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.floormod"]], "fmod() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.fmod"]], "hypot() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.hypot"]], "if_then_else() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.if_then_else"]], "indexdiv() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.indexdiv"]], "indexmod() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.indexmod"]], "infinity() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.infinity"]], "isfinite() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.isfinite"]], "isinf() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.isinf"]], "isnan() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.isnan"]], "isnullptr() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.isnullptr"]], "ldexp() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ldexp"]], "likely() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.likely"]], "log() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.log"]], "log10() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.log10"]], "log1p() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.log1p"]], "log2() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.log2"]], "lookup_param() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.lookup_param"]], "max_value() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.max_value"]], "min_value() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.min_value"]], "mma_fill() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.mma_fill"]], "mma_store() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.mma_store"]], "nearbyint() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.nearbyint"]], "nextafter() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.nextafter"]], "popcount() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.popcount"]], "pow() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.pow"]], "power() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.power"]], "ptx_arrive_barrier() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_commit_group"]], "ptx_cp_async() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_ldmatrix"]], "ptx_mma() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_mma"]], "ptx_mma_sp() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_mma_sp"]], "ptx_wait_barrier() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_wait_barrier"]], "ptx_wait_group() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ptx_wait_group"]], "q_multiply_shift() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.q_multiply_shift_per_axis"]], "reinterpret() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.reinterpret"]], "ret() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.ret"]], "round() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.round"]], "rsqrt() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.rsqrt"]], "shift_left() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.shift_left"]], "shift_right() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.shift_right"]], "sigmoid() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.sigmoid"]], "sin() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.sin"]], "sinh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.sinh"]], "sqrt() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.sqrt"]], "start_profile_intrinsic() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.start_profile_intrinsic"]], "tan() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tan"]], "tanh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tanh"]], "tilelang.language.tir.op": [[85, "module-tilelang.language.tir.op"]], "trace() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.trace"]], "trunc() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.trunc"]], "truncdiv() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.truncdiv"]], "truncmod() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.truncmod"]], "tvm_access_ptr() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_access_ptr"]], "tvm_bmma_sync() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_bmma_sync"]], "tvm_check_return() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_check_return"]], "tvm_fill_fragment() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_load_matrix_sync"]], "tvm_mfma() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_mfma"]], "tvm_mfma_store() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_mfma_store"]], "tvm_mma_sync() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_mma_sync"]], "tvm_rdna_wmma() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_rdna_wmma"]], "tvm_rdna_wmma_store() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_rdna_wmma_store"]], "tvm_stack_alloca() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_stack_make_shape"]], "tvm_storage_sync() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_storage_sync"]], "tvm_store_matrix_sync() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_struct_get"]], "tvm_struct_set() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_struct_set"]], "tvm_thread_allreduce() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_thread_allreduce"]], "tvm_thread_invariant() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_thread_invariant"]], "tvm_throw_last_error() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_throw_last_error"]], "tvm_tuple() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_tuple"]], "tvm_warp_activemask() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_warp_activemask"]], "tvm_warp_shuffle() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_warp_shuffle"]], "tvm_warp_shuffle_down() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_warp_shuffle_down"]], "tvm_warp_shuffle_up() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.tvm_warp_shuffle_up"]], "type_annotation() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.type_annotation"]], "undef() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.undef"]], "vectorcombine() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.vectorcombine"]], "vectorhigh() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.vectorhigh"]], "vectorlow() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.vectorlow"]], "vscale() (in module tilelang.language.tir.op)": [[85, "tilelang.language.tir.op.vscale"]], "tilelang.layout": [[86, "module-tilelang.layout"]], "fragment (class in tilelang.layout.fragment)": [[87, "tilelang.layout.fragment.Fragment"]], "condense_rep_var() (tilelang.layout.fragment.fragment method)": [[87, "tilelang.layout.fragment.Fragment.condense_rep_var"]], "get_thread_size() (tilelang.layout.fragment.fragment method)": [[87, "tilelang.layout.fragment.Fragment.get_thread_size"]], "make_swizzled_layout() (in module tilelang.layout.fragment)": [[87, "tilelang.layout.fragment.make_swizzled_layout"]], "map_forward_thread() (tilelang.layout.fragment.fragment method)": [[87, "tilelang.layout.fragment.Fragment.map_forward_thread"]], "repeat() (tilelang.layout.fragment.fragment method)": [[87, "tilelang.layout.fragment.Fragment.repeat"]], "replicate() (tilelang.layout.fragment.fragment method)": [[87, "tilelang.layout.fragment.Fragment.replicate"]], "thread (tilelang.layout.fragment.fragment property)": [[87, "tilelang.layout.fragment.Fragment.thread"]], "tilelang.layout.fragment": [[87, "module-tilelang.layout.fragment"]], "layout (class in tilelang.layout.layout)": [[88, "tilelang.layout.layout.Layout"]], "get_forward_vars() (tilelang.layout.layout.layout method)": [[88, "tilelang.layout.layout.Layout.get_forward_vars"]], "get_input_shape() (tilelang.layout.layout.layout method)": [[88, "tilelang.layout.layout.Layout.get_input_shape"]], "get_output_shape() (tilelang.layout.layout.layout method)": [[88, "tilelang.layout.layout.Layout.get_output_shape"]], "index (tilelang.layout.layout.layout property)": [[88, "tilelang.layout.layout.Layout.index"]], "inverse() (tilelang.layout.layout.layout method)": [[88, "tilelang.layout.layout.Layout.inverse"]], "map_forward_index() (tilelang.layout.layout.layout method)": [[88, "tilelang.layout.layout.Layout.map_forward_index"]], "tilelang.layout.layout": [[88, "module-tilelang.layout.layout"]], "make_swizzled_layout() (in module tilelang.layout.swizzle)": [[89, "tilelang.layout.swizzle.make_swizzled_layout"]], "tilelang.layout.swizzle": [[89, "module-tilelang.layout.swizzle"]], "cdiv() (in module tilelang.math)": [[90, "tilelang.math.cdiv"]], "next_power_of_2() (in module tilelang.math)": [[90, "tilelang.math.next_power_of_2"]], "tilelang.math": [[90, "module-tilelang.math"]], "tilelang.primitives": [[91, "module-tilelang.primitives"]], "gemm() (in module tilelang.primitives.gemm)": [[92, "tilelang.primitives.gemm.gemm"]], "tilelang.primitives.gemm": [[92, "module-tilelang.primitives.gemm"]], "a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.A"]], "b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.B"]], "c (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.C"]], "fullcol (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullCol"]], "fullrow (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.FullRow"]], "gemmbaseparams (class in tilelang.primitives.gemm.base)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams"]], "gemmwarppolicy (class in tilelang.primitives.gemm.base)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy"]], "square (tilelang.primitives.gemm.base.gemmwarppolicy attribute)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.Square"]], "block_col_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.block_col_warps"]], "block_row_warps (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.block_row_warps"]], "chunk (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.chunk"]], "class_attributes (tilelang.primitives.gemm.base.gemmbaseparams property)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.class_attributes"]], "compute_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.compute_warp_partition"]], "from_warp_partition() (tilelang.primitives.gemm.base.gemmwarppolicy class method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.from_warp_partition"]], "get_warp_size() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.get_warp_size"]], "infer_block_partition() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.infer_block_partition"]], "is_full_col() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_col"]], "is_full_row() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_full_row"]], "is_square() (tilelang.primitives.gemm.base.gemmwarppolicy method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.is_square"]], "k_pack (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.k_pack"]], "params_as_dict() (tilelang.primitives.gemm.base.gemmbaseparams method)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.params_as_dict"]], "policy (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.policy"]], "tilelang.primitives.gemm.base": [[93, "module-tilelang.primitives.gemm.base"]], "to_prime_factors() (tilelang.primitives.gemm.base.gemmwarppolicy static method)": [[93, "tilelang.primitives.gemm.base.GemmWarpPolicy.to_prime_factors"]], "transpose_a (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_A"]], "transpose_b (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.transpose_B"]], "warp_col_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.warp_col_tiles"]], "warp_row_tiles (tilelang.primitives.gemm.base.gemmbaseparams attribute)": [[93, "tilelang.primitives.gemm.base.GemmBaseParams.warp_row_tiles"]], "gemmprimitivemma (class in tilelang.primitives.gemm.gemm_mma)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA"]], "accum_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.accum_dtype"]], "gemm_rrr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rrr"]], "gemm_rsr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_rsr"]], "gemm_srr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_srr"]], "gemm_ssr() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.gemm_ssr"]], "in_dtype (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma property)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.in_dtype"]], "invoke() (tilelang.primitives.gemm.gemm_mma.gemmprimitivemma method)": [[94, "tilelang.primitives.gemm.gemm_mma.GemmPrimitiveMMA.invoke"]], "tilelang.primitives.gemm.gemm_mma": [[94, "module-tilelang.primitives.gemm.gemm_mma"]], "profiler (class in tilelang.profiler)": [[95, "tilelang.profiler.Profiler"]], "adapter (tilelang.profiler.profiler attribute)": [[95, "id0"], [95, "tilelang.profiler.Profiler.adapter"]], "assert_allclose() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.assert_allclose"]], "assert_consistent() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.assert_consistent"]], "determine_profiler() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.determine_profiler"]], "do_bench() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.do_bench"]], "func (tilelang.profiler.profiler property)": [[95, "tilelang.profiler.Profiler.func"]], "params (tilelang.profiler.profiler attribute)": [[95, "id1"], [95, "tilelang.profiler.Profiler.params"]], "result_idx (tilelang.profiler.profiler attribute)": [[95, "id2"], [95, "tilelang.profiler.Profiler.result_idx"]], "run_once() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.run_once"]], "supply_type (tilelang.profiler.profiler attribute)": [[95, "id3"], [95, "tilelang.profiler.Profiler.supply_type"]], "tilelang.profiler": [[95, "module-tilelang.profiler"]], "with_default_adapter() (tilelang.profiler.profiler method)": [[95, "tilelang.profiler.Profiler.with_default_adapter"]], "do_bench() (in module tilelang.profiler.bench)": [[96, "tilelang.profiler.bench.do_bench"]], "tilelang.profiler.bench": [[96, "module-tilelang.profiler.bench"]], "main() (in module tilelang.testing)": [[97, "tilelang.testing.main"]], "set_random_seed() (in module tilelang.testing)": [[97, "tilelang.testing.set_random_seed"]], "tilelang.testing": [[97, "module-tilelang.testing"]], "tilelang.tools": [[98, "module-tilelang.tools"]], "plot_layout() (in module tilelang.tools.plot_layout)": [[99, "tilelang.tools.plot_layout.plot_layout"]], "tilelang.tools.plot_layout": [[99, "module-tilelang.tools.plot_layout"]], "annotatedeviceregions() (in module tilelang.transform)": [[100, "tilelang.transform.AnnotateDeviceRegions"]], "clusterplanning() (in module tilelang.transform)": [[100, "tilelang.transform.ClusterPlanning"]], "frontendlegalize() (in module tilelang.transform)": [[100, "tilelang.transform.FrontendLegalize"]], "ifstmtbinding() (in module tilelang.transform)": [[100, "tilelang.transform.IfStmtBinding"]], "injectfenceproxy() (in module tilelang.transform)": [[100, "tilelang.transform.InjectFenceProxy"]], "injectptxasynccopy() (in module tilelang.transform)": [[100, "tilelang.transform.InjectPTXAsyncCopy"]], "injectsoftwarepipeline() (in module tilelang.transform)": [[100, "tilelang.transform.InjectSoftwarePipeline"]], "layoutinference() (in module tilelang.transform)": [[100, "tilelang.transform.LayoutInference"]], "legalizesafememoryaccess() (in module tilelang.transform)": [[100, "tilelang.transform.LegalizeSafeMemoryAccess"]], "legalizevectorizedloop() (in module tilelang.transform)": [[100, "tilelang.transform.LegalizeVectorizedLoop"]], "lowerdevicestorageaccessinfo() (in module tilelang.transform)": [[100, "tilelang.transform.LowerDeviceStorageAccessInfo"]], "lowerhopperintrin() (in module tilelang.transform)": [[100, "tilelang.transform.LowerHopperIntrin"]], "lowertileop() (in module tilelang.transform)": [[100, "tilelang.transform.LowerTileOp"]], "makepackedapi() (in module tilelang.transform)": [[100, "tilelang.transform.MakePackedAPI"]], "mergeifstmt() (in module tilelang.transform)": [[100, "tilelang.transform.MergeIfStmt"]], "multiversionbuffer() (in module tilelang.transform)": [[100, "tilelang.transform.MultiVersionBuffer"]], "pipelineplanning() (in module tilelang.transform)": [[100, "tilelang.transform.PipelinePlanning"]], "rewritewgmmasync() (in module tilelang.transform)": [[100, "tilelang.transform.RewriteWgmmaSync"]], "threadpartialsync() (in module tilelang.transform)": [[100, "tilelang.transform.ThreadPartialSync"]], "threadsync() (in module tilelang.transform)": [[100, "tilelang.transform.ThreadSync"]], "vectorizeloop() (in module tilelang.transform)": [[100, "tilelang.transform.VectorizeLoop"]], "warpspecialized() (in module tilelang.transform)": [[100, "tilelang.transform.WarpSpecialized"]], "warpspecializedpipeline() (in module tilelang.transform)": [[100, "tilelang.transform.WarpSpecializedPipeline"]], "tilelang.transform": [[100, "module-tilelang.transform"]], "simplify() (in module tilelang.transform.simplify)": [[101, "tilelang.transform.simplify.Simplify"]], "apply_simplify() (in module tilelang.transform.simplify)": [[101, "tilelang.transform.simplify.apply_simplify"]], "simplify_prim_func() (in module tilelang.transform.simplify)": [[101, "tilelang.transform.simplify.simplify_prim_func"]], "tilelang.transform.simplify": [[101, "module-tilelang.transform.simplify"]], "tilelang.utils": [[102, "module-tilelang.utils"]], "deprecated() (in module tilelang.utils.deprecated)": [[103, "tilelang.utils.deprecated.deprecated"]], "tilelang.utils.deprecated": [[103, "module-tilelang.utils.deprecated"]], "array_reduce() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.array_reduce"]], "is_fragment() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.is_fragment"]], "is_global() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.is_global"]], "is_local() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.is_local"]], "is_shared() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.is_shared"]], "is_shared_dynamic() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.is_shared_dynamic"]], "retrieve_func_from_module() (in module tilelang.utils.language)": [[104, "tilelang.utils.language.retrieve_func_from_module"]], "tilelang.utils.language": [[104, "module-tilelang.utils.language"]], "check_cuda_availability() (in module tilelang.utils.target)": [[105, "tilelang.utils.target.check_cuda_availability"]], "check_hip_availability() (in module tilelang.utils.target)": [[105, "tilelang.utils.target.check_hip_availability"]], "determine_target() (in module tilelang.utils.target)": [[105, "tilelang.utils.target.determine_target"]], "tilelang.utils.target": [[105, "module-tilelang.utils.target"]], "auto (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Auto"]], "integer (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Integer"]], "normal (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Normal"]], "one (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.One"]], "randn (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Randn"]], "tensorsupplytype (class in tilelang.utils.tensor)": [[106, "tilelang.utils.tensor.TensorSupplyType"]], "uniform (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Uniform"]], "zero (tilelang.utils.tensor.tensorsupplytype attribute)": [[106, "tilelang.utils.tensor.TensorSupplyType.Zero"]], "adapt_torch2tvm() (in module tilelang.utils.tensor)": [[106, "tilelang.utils.tensor.adapt_torch2tvm"]], "get_tensor_supply() (in module tilelang.utils.tensor)": [[106, "tilelang.utils.tensor.get_tensor_supply"]], "map_torch_type() (in module tilelang.utils.tensor)": [[106, "tilelang.utils.tensor.map_torch_type"]], "tilelang.utils.tensor": [[106, "module-tilelang.utils.tensor"]], "torch_assert_close() (in module tilelang.utils.tensor)": [[106, "tilelang.utils.tensor.torch_assert_close"]]}})